"use strict";
var___95__prelude = do_import("StandardPrelude", gracecode_StandardPrelude);
function gracecode_objectdraw() {
  setModuleName("objectdraw");
  this.definitionModule = "objectdraw";
  this.definitionLine = 0;
  var var_prelude = var___95__prelude;
  this.outer = var_prelude;
  var reader_objectdraw_outer0 = function() {
    return this.outer;
  };
  this.methods["outer"] = reader_objectdraw_outer0;
  setLineNumber(6);    // compilenode import
  // Import of dom as dom
  if (typeof gracecode_dom == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module dom'));
  var var_dom = do_import("dom", gracecode_dom);
  var func1 = function(argcv) {    // method dom
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    setModuleName("objectdraw");
    // dom is a simple accessor - elide try ... catch
    return var_dom;
  };
  func1.paramCounts = [0];
  this.methods["dom"] = func1;
  func1.definitionLine = 6;
  func1.definitionModule = "objectdraw";
  func1.debug = "import";
  func1.confidential = true;
  setModuleName("objectdraw");
  setLineNumber(7);    // compilenode import
  // Import of math as math
  if (typeof gracecode_math == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module math'));
  var var_math = do_import("math", gracecode_math);
  var func2 = function(argcv) {    // method math
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    setModuleName("objectdraw");
    // math is a simple accessor - elide try ... catch
    return var_math;
  };
  func2.paramCounts = [0];
  this.methods["math"] = func2;
  func2.definitionLine = 7;
  func2.definitionModule = "objectdraw";
  func2.debug = "import";
  func2.confidential = true;
  setModuleName("objectdraw");
  setLineNumber(2);    // compilenode identifier
  // call case 6: other requests
  var call4 = callmethodChecked(var___95__prelude, "methods$object(1)", [0, 1], this);
  this.superobj = call4;
  if (call4.data) this.data = call4.data;
  if (call4.hasOwnProperty('_value'))
      this._value = call4._value;
  setLineNumber(16);    // compilenode method
  var func5 = function(argcv) {    // method randomNumberFrom(_)to(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_m = arguments[curarg];
    curarg++;
    var var_n = arguments[curarg];
    curarg++;
    // Start argument checking
    curarg = 1;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in randomNumberFrom (arg list 1), which corresponds to parameter m, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in to (arg list 2), which corresponds to parameter n, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    // End argument checking
    setModuleName("objectdraw");
    setLineNumber(17);    // compilenode member
    // call case 6: other requests
    var call8 = callmethodChecked(var_math, "random", []);
    var diff12 = callmethodChecked(var_n, "-(1)", [1], var_m);
    var prod14 = callmethodChecked(diff12, "*(1)", [1], call8);
    var opresult16 = callmethodChecked(prod14, "+(1)", [1], var_m);
    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult16)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("result of method randomNumberFrom(_)to(_) does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    return opresult16;
  };
  func5.paramTypes = [];
  func5.paramTypes.push([type_Number, "m"]);
  func5.paramTypes.push([type_Number, "n"]);
  func5.paramCounts = [1, 1];
  this.methods["randomNumberFrom(1)to(1)"] = func5;
  func5.definitionLine = 16;
  func5.definitionModule = "objectdraw";
  setLineNumber(21);    // compilenode method
  var func17 = function(argcv) {    // method randomIntFrom(_)to(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_m = arguments[curarg];
    curarg++;
    var var_n = arguments[curarg];
    curarg++;
    // Start argument checking
    curarg = 1;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in randomIntFrom (arg list 1), which corresponds to parameter m, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in to (arg list 2), which corresponds to parameter n, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    // End argument checking
    setModuleName("objectdraw");
    setLineNumber(22);    // compilenode identifier
    var diff22 = callmethodChecked(var_n, "-(1)", [1], var_m);
    var opresult24 = callmethodChecked(diff22, "+(1)", [1], new GraceNum(1));
    // call case 6: other requests
    // call case 6: other requests
    var call28 = callmethodChecked(var_math, "random", []);
    var diff33 = callmethodChecked(var_n, "-(1)", [1], var_m);
    var opresult35 = callmethodChecked(diff33, "+(1)", [1], new GraceNum(1));
    var prod37 = callmethodChecked(opresult35, "*(1)", [1], call28);
    var call38 = callmethodChecked(prod37, "truncated", []);
    var modulus40 = callmethodChecked(call38, "%(1)", [1], opresult24);
    var opresult42 = callmethodChecked(modulus40, "+(1)", [1], var_m);
    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult42)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("result of method randomIntFrom(_)to(_) does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    return opresult42;
  };
  func17.paramTypes = [];
  func17.paramTypes.push([type_Number, "m"]);
  func17.paramTypes.push([type_Number, "n"]);
  func17.paramCounts = [1, 1];
  this.methods["randomIntFrom(1)to(1)"] = func17;
  func17.definitionLine = 21;
  func17.definitionModule = "objectdraw";
  setLineNumber(503);    // compilenode method
  var func43 = function(argcv) {    // method eventSource(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_source__39__ = arguments[curarg];
    curarg++;
    // Start argument checking
    curarg = 1;
    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in eventSource (arg list 1), which corresponds to parameter source', does not have " + 
                callmethod(var_Component, "asString", [0])._value + "."));
    curarg++;
    // End argument checking
    setModuleName("objectdraw");
    var obj44 = Grace_allocObject(GraceObject, "eventSource(_)");
    obj44.definitionModule = "objectdraw";
    obj44.definitionLine = 503;
    obj44.outer = this;
    var reader_objectdraw_outer45 = function() {
      return this.outer;
    };
    obj44.methods["outer"] = reader_objectdraw_outer45;
    var obj_init_44 = function() {
      var origSuperDepth = superDepth;
      superDepth = obj44;
      var func46 = function(argcv) {    // method asString
        var returnTarget = invocationCount;
        invocationCount++;
        var curarg = 1;
        setModuleName("objectdraw");
        setLineNumber(509);    // compilenode string
        var string47 = new GraceString("");
        // call case 4: self request
        onSelf = true;
        var call50 = callmethodChecked(this, "source", []);
        var string52 = new GraceString("Event on ");
        var opresult54 = callmethodChecked(string52, "++(1)", [1], call50);
        var opresult56 = callmethodChecked(opresult54, "++(1)", [1], string47);
        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult56)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("result of method asString does not have " + 
                    callmethod(var_String, "asString", [0])._value + "."));
        return opresult56;
      };
      func46.paramCounts = [0];
      obj44.methods["asString"] = func46;
      func46.definitionLine = 508;
      func46.definitionModule = "objectdraw";
      setLineNumber(506);    // compilenode identifier
      obj44.data["source"] = var_source__39__;
      var reader_objectdraw_source57 = function() {
        return this.data["source"];
      };
      reader_objectdraw_source57.def = true;
      obj44.methods["source"] = reader_objectdraw_source57;
      if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], var_source__39__)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("value of def 'source' is not of type Component"));
      superDepth = origSuperDepth;
    };
    obj_init_44.apply(obj44, []);
    setLineNumber(503);    // return value
    if (!Grace_isTrue(callmethod(var_Event, "match(1)", [1], obj44)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("result of method eventSource(_) does not have " + 
                callmethod(var_Event, "asString", [0])._value + "."));
    return obj44;
  };
  func43.paramTypes = [];
  func43.paramTypes.push([]);
  func43.paramCounts = [1];
  this.methods["eventSource(1)"] = func43;
  func43.definitionLine = 503;
  func43.definitionModule = "objectdraw";
    var func58 = function(argcv) {    // method eventSource(_)$object(_)
      var curarg = 1;
      var var_source__39__ = arguments[curarg];
      curarg++;
      var inheritingObject = arguments[curarg++];
      // Start argument processing
      curarg = 1;
      if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("argument 1 in eventSource (arg list 1), which corresponds to parameter source', does not have " + 
                  callmethod(var_Component, "asString", [0])._value + "."));
      curarg++;
      // End argument processing
      setModuleName("objectdraw");
      var returnTarget = invocationCount;
      invocationCount++;
      var obj59 = Grace_allocObject(GraceObject, "eventSource(1)");
      obj59.definitionModule = "objectdraw";
      obj59.definitionLine = 503;
      var inho59 = inheritingObject;
      while (inho59.superobj) inho59 = inho59.superobj;
      inho59.superobj = obj59;
      obj59.data = inheritingObject.data;
      if (inheritingObject.hasOwnProperty('_value'))
        obj59._value = inheritingObject._value;
      obj59.outer = this;
      var reader_objectdraw_outer60 = function() {
        return this.outer;
      };
      obj59.methods["outer"] = reader_objectdraw_outer60;
      var obj_init_59 = function() {
        var origSuperDepth = superDepth;
        superDepth = obj59;
        var func61 = function(argcv) {    // method asString
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          setModuleName("objectdraw");
          setLineNumber(509);    // compilenode string
          var string62 = new GraceString("");
          // call case 4: self request
          onSelf = true;
          var call65 = callmethodChecked(this, "source", []);
          var string67 = new GraceString("Event on ");
          var opresult69 = callmethodChecked(string67, "++(1)", [1], call65);
          var opresult71 = callmethodChecked(opresult69, "++(1)", [1], string62);
          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult71)))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("result of method asString does not have " + 
                      callmethod(var_String, "asString", [0])._value + "."));
          return opresult71;
        };
        func61.paramCounts = [0];
        obj59.methods["asString"] = func61;
        func61.definitionLine = 508;
        func61.definitionModule = "objectdraw";
        setLineNumber(506);    // compilenode identifier
        obj59.data["source"] = var_source__39__;
        var reader_objectdraw_source72 = function() {
          return this.data["source"];
        };
        reader_objectdraw_source72.def = true;
        obj59.methods["source"] = reader_objectdraw_source72;
        if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], var_source__39__)))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("value of def 'source' is not of type Component"));
        superDepth = origSuperDepth;
      };
      obj_init_59.apply(inheritingObject, []);
      return obj59;
      };
      func58.paramTypes = [];
      func58.paramTypes.push([]);
      this.methods["eventSource(1)$object(1)"] = func58;
    setLineNumber(513);    // compilenode method
    var func73 = function(argcv) {    // method mouseEventSource(_)event(_)
      var returnTarget = invocationCount;
      invocationCount++;
      var curarg = 1;
      var var_source__39__ = arguments[curarg];
      curarg++;
      var var_event__39__ = arguments[curarg];
      curarg++;
      // Start argument checking
      curarg = 1;
      if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("argument 1 in mouseEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                  callmethod(var_Component, "asString", [0])._value + "."));
      curarg++;
      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                  callmethod(var_Foreign, "asString", [0])._value + "."));
      curarg++;
      // End argument checking
      setModuleName("objectdraw");
      var obj74 = Grace_allocObject(null, "mouseEventSource(_)event(_)");
      obj74.definitionModule = "objectdraw";
      obj74.definitionLine = 513;
      obj74.outer = this;
      var reader_objectdraw_outer75 = function() {
        return this.outer;
      };
      obj74.methods["outer"] = reader_objectdraw_outer75;
      var obj_init_74 = function() {
        var origSuperDepth = superDepth;
        superDepth = obj74;
        var func76 = function(argcv) {    // method asString
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          setModuleName("objectdraw");
          setLineNumber(522);    // compilenode string
          var string77 = new GraceString("");
          // call case 4: self request
          onSelf = true;
          var call80 = callmethodChecked(this, "at", []);
          var string82 = new GraceString(" at ");
          // call case 4: self request
          onSelf = true;
          var call85 = callmethodChecked(this, "source", []);
          var string87 = new GraceString("Mouse event on ");
          var opresult89 = callmethodChecked(string87, "++(1)", [1], call85);
          var opresult91 = callmethodChecked(opresult89, "++(1)", [1], string82);
          var opresult93 = callmethodChecked(opresult91, "++(1)", [1], call80);
          var opresult95 = callmethodChecked(opresult93, "++(1)", [1], string77);
          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult95)))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("result of method asString does not have " + 
                      callmethod(var_String, "asString", [0])._value + "."));
          return opresult95;
        };
        func76.paramCounts = [0];
        obj74.methods["asString"] = func76;
        func76.definitionLine = 521;
        func76.definitionModule = "objectdraw";
        setLineNumber(516);    // compilenode identifier
        // call case 6: other requests
        setLineNumber(0);    // compilenode member
        // call case 3: self.outer request
        var call98 = callmethodChecked(superDepth, "outer", [0]);
        onSelf = true;
        var call99 = callmethodChecked(call98, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
        obj74.superobj = call99;
        if (call99.data) obj74.data = call99.data;
        if (call99.hasOwnProperty('_value'))
            obj74._value = call99._value;
        setLineNumber(518);    // compilenode member
        // call case 6: other requests
        // call case 6: other requests
        // call case 4: self request
        onSelf = true;
        var call103 = callmethodChecked(this, "source", []);
        var call104 = callmethodChecked(call103, "element", []);
        var call105 = callmethodChecked(call104, "offsetTop", []);
        // call case 6: other requests
        var call108 = callmethodChecked(var_event__39__, "pageY", []);
        var diff110 = callmethodChecked(call108, "-(1)", [1], call105);
        setLineNumber(517);    // compilenode member
        // call case 6: other requests
        // call case 6: other requests
        // call case 4: self request
        onSelf = true;
        var call115 = callmethodChecked(this, "source", []);
        var call116 = callmethodChecked(call115, "element", []);
        var call117 = callmethodChecked(call116, "offsetLeft", []);
        // call case 6: other requests
        var call120 = callmethodChecked(var_event__39__, "pageX", []);
        var diff122 = callmethodChecked(call120, "-(1)", [1], call117);
        var opresult124 = callmethodChecked(diff122, "@(1)", [1], diff110);
        obj74.data["at"] = opresult124;
        var reader_objectdraw_at125 = function() {
          return this.data["at"];
        };
        reader_objectdraw_at125.def = true;
        obj74.methods["at"] = reader_objectdraw_at125;
        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult124)))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("value of def 'at' is not of type Point"));
        superDepth = origSuperDepth;
      };
      obj_init_74.apply(obj74, []);
      setLineNumber(513);    // return value
      if (!Grace_isTrue(callmethod(var_MouseEvent, "match(1)", [1], obj74)))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("result of method mouseEventSource(_)event(_) does not have " + 
                  callmethod(var_MouseEvent, "asString", [0])._value + "."));
      return obj74;
    };
    func73.paramTypes = [];
    func73.paramTypes.push([]);
    func73.paramTypes.push([]);
    func73.paramCounts = [1, 1];
    this.methods["mouseEventSource(1)event(1)"] = func73;
    func73.definitionLine = 513;
    func73.definitionModule = "objectdraw";
      var func126 = function(argcv) {    // method mouseEventSource(_)event(_)$object(_)
        var curarg = 1;
        var var_source__39__ = arguments[curarg];
        curarg++;
        var var_event__39__ = arguments[curarg];
        curarg++;
        var inheritingObject = arguments[curarg++];
        // Start argument processing
        curarg = 1;
        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in mouseEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                    callmethod(var_Component, "asString", [0])._value + "."));
        curarg++;
        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                    callmethod(var_Foreign, "asString", [0])._value + "."));
        curarg++;
        // End argument processing
        setModuleName("objectdraw");
        var returnTarget = invocationCount;
        invocationCount++;
        var obj127 = Grace_allocObject(null, "mouseEventSource(1)event(1)");
        obj127.definitionModule = "objectdraw";
        obj127.definitionLine = 513;
        var inho127 = inheritingObject;
        while (inho127.superobj) inho127 = inho127.superobj;
        inho127.superobj = obj127;
        obj127.data = inheritingObject.data;
        if (inheritingObject.hasOwnProperty('_value'))
          obj127._value = inheritingObject._value;
        obj127.outer = this;
        var reader_objectdraw_outer128 = function() {
          return this.outer;
        };
        obj127.methods["outer"] = reader_objectdraw_outer128;
        var obj_init_127 = function() {
          var origSuperDepth = superDepth;
          superDepth = obj127;
          var func129 = function(argcv) {    // method asString
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            setModuleName("objectdraw");
            setLineNumber(522);    // compilenode string
            var string130 = new GraceString("");
            // call case 4: self request
            onSelf = true;
            var call133 = callmethodChecked(this, "at", []);
            var string135 = new GraceString(" at ");
            // call case 4: self request
            onSelf = true;
            var call138 = callmethodChecked(this, "source", []);
            var string140 = new GraceString("Mouse event on ");
            var opresult142 = callmethodChecked(string140, "++(1)", [1], call138);
            var opresult144 = callmethodChecked(opresult142, "++(1)", [1], string135);
            var opresult146 = callmethodChecked(opresult144, "++(1)", [1], call133);
            var opresult148 = callmethodChecked(opresult146, "++(1)", [1], string130);
            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult148)))
                throw new GraceExceptionPacket(TypeErrorObject,
                    new GraceString("result of method asString does not have " + 
                        callmethod(var_String, "asString", [0])._value + "."));
            return opresult148;
          };
          func129.paramCounts = [0];
          obj127.methods["asString"] = func129;
          func129.definitionLine = 521;
          func129.definitionModule = "objectdraw";
          setLineNumber(516);    // compilenode identifier
          // call case 6: other requests
          setLineNumber(0);    // compilenode member
          // call case 3: self.outer request
          var call151 = callmethodChecked(superDepth, "outer", [0]);
          onSelf = true;
          var call152 = callmethodChecked(call151, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
          obj127.superobj = call152;
          if (call152.data) obj127.data = call152.data;
          if (call152.hasOwnProperty('_value'))
              obj127._value = call152._value;
          setLineNumber(518);    // compilenode member
          // call case 6: other requests
          // call case 6: other requests
          // call case 4: self request
          onSelf = true;
          var call156 = callmethodChecked(this, "source", []);
          var call157 = callmethodChecked(call156, "element", []);
          var call158 = callmethodChecked(call157, "offsetTop", []);
          // call case 6: other requests
          var call161 = callmethodChecked(var_event__39__, "pageY", []);
          var diff163 = callmethodChecked(call161, "-(1)", [1], call158);
          setLineNumber(517);    // compilenode member
          // call case 6: other requests
          // call case 6: other requests
          // call case 4: self request
          onSelf = true;
          var call168 = callmethodChecked(this, "source", []);
          var call169 = callmethodChecked(call168, "element", []);
          var call170 = callmethodChecked(call169, "offsetLeft", []);
          // call case 6: other requests
          var call173 = callmethodChecked(var_event__39__, "pageX", []);
          var diff175 = callmethodChecked(call173, "-(1)", [1], call170);
          var opresult177 = callmethodChecked(diff175, "@(1)", [1], diff163);
          obj127.data["at"] = opresult177;
          var reader_objectdraw_at178 = function() {
            return this.data["at"];
          };
          reader_objectdraw_at178.def = true;
          obj127.methods["at"] = reader_objectdraw_at178;
          if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult177)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("value of def 'at' is not of type Point"));
          superDepth = origSuperDepth;
        };
        obj_init_127.apply(inheritingObject, []);
        return obj127;
        };
        func126.paramTypes = [];
        func126.paramTypes.push([]);
        func126.paramTypes.push([]);
        this.methods["mouseEventSource(1)event(1)$object(1)"] = func126;
      setLineNumber(526);    // compilenode method
      var func179 = function(argcv) {    // method keyEventSource(_)event(_)
        var returnTarget = invocationCount;
        invocationCount++;
        var curarg = 1;
        var var_source__39__ = arguments[curarg];
        curarg++;
        var var_event__39__ = arguments[curarg];
        curarg++;
        // Start argument checking
        curarg = 1;
        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                    callmethod(var_Component, "asString", [0])._value + "."));
        curarg++;
        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                    callmethod(var_Foreign, "asString", [0])._value + "."));
        curarg++;
        // End argument checking
        setModuleName("objectdraw");
        var obj180 = Grace_allocObject(null, "keyEventSource(_)event(_)");
        obj180.definitionModule = "objectdraw";
        obj180.definitionLine = 526;
        obj180.outer = this;
        var reader_objectdraw_outer181 = function() {
          return this.outer;
        };
        obj180.methods["outer"] = reader_objectdraw_outer181;
        var obj_init_180 = function() {
          var origSuperDepth = superDepth;
          superDepth = obj180;
          var func182 = function(argcv) {    // method asString
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            setModuleName("objectdraw");
            setLineNumber(534);    // compilenode string
            var string183 = new GraceString("");
            // call case 4: self request
            onSelf = true;
            var call186 = callmethodChecked(this, "code", []);
            var string188 = new GraceString(" for key-code ");
            // call case 4: self request
            onSelf = true;
            var call191 = callmethodChecked(this, "source", []);
            var string193 = new GraceString("Event on ");
            var opresult195 = callmethodChecked(string193, "++(1)", [1], call191);
            var opresult197 = callmethodChecked(opresult195, "++(1)", [1], string188);
            var opresult199 = callmethodChecked(opresult197, "++(1)", [1], call186);
            var opresult201 = callmethodChecked(opresult199, "++(1)", [1], string183);
            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult201)))
                throw new GraceExceptionPacket(TypeErrorObject,
                    new GraceString("result of method asString does not have " + 
                        callmethod(var_String, "asString", [0])._value + "."));
            return opresult201;
          };
          func182.paramCounts = [0];
          obj180.methods["asString"] = func182;
          func182.definitionLine = 533;
          func182.definitionModule = "objectdraw";
          setLineNumber(528);    // compilenode identifier
          // call case 6: other requests
          setLineNumber(0);    // compilenode member
          // call case 3: self.outer request
          var call204 = callmethodChecked(superDepth, "outer", [0]);
          onSelf = true;
          var call205 = callmethodChecked(call204, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
          obj180.superobj = call205;
          if (call205.data) obj180.data = call205.data;
          if (call205.hasOwnProperty('_value'))
              obj180._value = call205._value;
          setLineNumber(529);    // compilenode member
          // call case 6: other requests
          var call207 = callmethodChecked(var_event__39__, "which", []);
          obj180.data["code"] = call207;
          var reader_objectdraw_code208 = function() {
            return this.data["code"];
          };
          reader_objectdraw_code208.def = true;
          obj180.methods["code"] = reader_objectdraw_code208;
          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call207)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("value of def 'code' is not of type Number"));
          superDepth = origSuperDepth;
        };
        obj_init_180.apply(obj180, []);
        setLineNumber(526);    // return value
        if (!Grace_isTrue(callmethod(var_KeyEvent, "match(1)", [1], obj180)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("result of method keyEventSource(_)event(_) does not have " + 
                    callmethod(var_KeyEvent, "asString", [0])._value + "."));
        return obj180;
      };
      func179.paramTypes = [];
      func179.paramTypes.push([]);
      func179.paramTypes.push([]);
      func179.paramCounts = [1, 1];
      this.methods["keyEventSource(1)event(1)"] = func179;
      func179.definitionLine = 526;
      func179.definitionModule = "objectdraw";
        var func209 = function(argcv) {    // method keyEventSource(_)event(_)$object(_)
          var curarg = 1;
          var var_source__39__ = arguments[curarg];
          curarg++;
          var var_event__39__ = arguments[curarg];
          curarg++;
          var inheritingObject = arguments[curarg++];
          // Start argument processing
          curarg = 1;
          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                      callmethod(var_Component, "asString", [0])._value + "."));
          curarg++;
          if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                      callmethod(var_Foreign, "asString", [0])._value + "."));
          curarg++;
          // End argument processing
          setModuleName("objectdraw");
          var returnTarget = invocationCount;
          invocationCount++;
          var obj210 = Grace_allocObject(null, "keyEventSource(1)event(1)");
          obj210.definitionModule = "objectdraw";
          obj210.definitionLine = 526;
          var inho210 = inheritingObject;
          while (inho210.superobj) inho210 = inho210.superobj;
          inho210.superobj = obj210;
          obj210.data = inheritingObject.data;
          if (inheritingObject.hasOwnProperty('_value'))
            obj210._value = inheritingObject._value;
          obj210.outer = this;
          var reader_objectdraw_outer211 = function() {
            return this.outer;
          };
          obj210.methods["outer"] = reader_objectdraw_outer211;
          var obj_init_210 = function() {
            var origSuperDepth = superDepth;
            superDepth = obj210;
            var func212 = function(argcv) {    // method asString
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("objectdraw");
              setLineNumber(534);    // compilenode string
              var string213 = new GraceString("");
              // call case 4: self request
              onSelf = true;
              var call216 = callmethodChecked(this, "code", []);
              var string218 = new GraceString(" for key-code ");
              // call case 4: self request
              onSelf = true;
              var call221 = callmethodChecked(this, "source", []);
              var string223 = new GraceString("Event on ");
              var opresult225 = callmethodChecked(string223, "++(1)", [1], call221);
              var opresult227 = callmethodChecked(opresult225, "++(1)", [1], string218);
              var opresult229 = callmethodChecked(opresult227, "++(1)", [1], call216);
              var opresult231 = callmethodChecked(opresult229, "++(1)", [1], string213);
              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult231)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method asString does not have " + 
                          callmethod(var_String, "asString", [0])._value + "."));
              return opresult231;
            };
            func212.paramCounts = [0];
            obj210.methods["asString"] = func212;
            func212.definitionLine = 533;
            func212.definitionModule = "objectdraw";
            setLineNumber(528);    // compilenode identifier
            // call case 6: other requests
            setLineNumber(0);    // compilenode member
            // call case 3: self.outer request
            var call234 = callmethodChecked(superDepth, "outer", [0]);
            onSelf = true;
            var call235 = callmethodChecked(call234, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
            obj210.superobj = call235;
            if (call235.data) obj210.data = call235.data;
            if (call235.hasOwnProperty('_value'))
                obj210._value = call235._value;
            setLineNumber(529);    // compilenode member
            // call case 6: other requests
            var call237 = callmethodChecked(var_event__39__, "which", []);
            obj210.data["code"] = call237;
            var reader_objectdraw_code238 = function() {
              return this.data["code"];
            };
            reader_objectdraw_code238.def = true;
            obj210.methods["code"] = reader_objectdraw_code238;
            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call237)))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("value of def 'code' is not of type Number"));
            superDepth = origSuperDepth;
          };
          obj_init_210.apply(inheritingObject, []);
          return obj210;
          };
          func209.paramTypes = [];
          func209.paramTypes.push([]);
          func209.paramTypes.push([]);
          this.methods["keyEventSource(1)event(1)$object(1)"] = func209;
        setLineNumber(558);    // compilenode method
        var func239 = function(argcv) {    // method componentFromElement(_)
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          var var_element__39__ = arguments[curarg];
          curarg++;
          setModuleName("objectdraw");
          var obj240 = Grace_allocObject(GraceObject, "componentFromElement(_)");
          obj240.definitionModule = "objectdraw";
          obj240.definitionLine = 558;
          obj240.outer = this;
          var reader_objectdraw_outer241 = function() {
            return this.outer;
          };
          obj240.methods["outer"] = reader_objectdraw_outer241;
          var obj_init_240 = function() {
            var origSuperDepth = superDepth;
            superDepth = obj240;
            var func242 = function(argcv) {    // method width
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("objectdraw");
              setLineNumber(563);    // compilenode member
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call245 = callmethodChecked(this, "element", []);
              var call246 = callmethodChecked(call245, "width", []);
              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call246)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method width does not have " + 
                          callmethod(var_Number, "asString", [0])._value + "."));
              return call246;
            };
            func242.paramCounts = [0];
            obj240.methods["width"] = func242;
            func242.definitionLine = 562;
            func242.definitionModule = "objectdraw";
            var func247 = function(argcv) {    // method height
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("objectdraw");
              setLineNumber(568);    // compilenode member
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call250 = callmethodChecked(this, "element", []);
              var call251 = callmethodChecked(call250, "height", []);
              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call251)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method height does not have " + 
                          callmethod(var_Number, "asString", [0])._value + "."));
              return call251;
            };
            func247.paramCounts = [0];
            obj240.methods["height"] = func247;
            func247.definitionLine = 567;
            func247.definitionModule = "objectdraw";
            var func252 = function(argcv) {    // method size
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("objectdraw");
              setLineNumber(573);    // compilenode string
              var string253 = new GraceString("");
              // call case 4: self request
              onSelf = true;
              var call256 = callmethodChecked(this, "element", []);
              var string258 = new GraceString("component is ");
              var opresult260 = callmethodChecked(string258, "++(1)", [1], call256);
              var opresult262 = callmethodChecked(opresult260, "++(1)", [1], string253);
              var call263 = Grace_print(opresult262);
              setLineNumber(574);    // compilenode member
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call266 = callmethodChecked(this, "element", []);
              var call267 = callmethodChecked(call266, "height", []);
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call271 = callmethodChecked(this, "element", []);
              var call272 = callmethodChecked(call271, "width", []);
              var opresult274 = callmethodChecked(call272, "@(1)", [1], call267);
              if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult274)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method size does not have " + 
                          callmethod(var_Point, "asString", [0])._value + "."));
              return opresult274;
            };
            func252.paramCounts = [0];
            obj240.methods["size"] = func252;
            func252.definitionLine = 572;
            func252.definitionModule = "objectdraw";
            var func275 = function(argcv) {    // method on(_)do(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_event__39__ = arguments[curarg];
              curarg++;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(578);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in on (arg list 1), which corresponds to parameter event', does not have " + 
                          callmethod(var_String, "asString", [0])._value + "."));
              curarg++;
              setLineNumber(579);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in do (arg list 2), which corresponds to parameter f, does not have " + 
                          callmethod(var_Procedure, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(580);    // compilenode identifier
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call278 = callmethodChecked(this, "element", []);
              var call279 = callmethodChecked(call278, "addEventListener(2)", [2], var_event__39__, var_f);
              setLineNumber(581);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method on(_)do(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return var_done;
            };
            func275.paramTypes = [];
            func275.paramTypes.push([type_String, "event'"]);
            func275.paramTypes.push([]);
            func275.confidential = true;
            func275.paramCounts = [1, 1];
            obj240.methods["on(1)do(1)"] = func275;
            func275.definitionLine = 578;
            func275.definitionModule = "objectdraw";
            var func280 = function(argcv) {    // method on(_)withPointDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_kind = arguments[curarg];
              curarg++;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(584);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                          callmethod(var_String, "asString", [0])._value + "."));
              curarg++;
              setLineNumber(585);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in withPointDo (arg list 2), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(587);    // compilenode block
              var block282 = new GraceBlock(this, 587, 1);
              setLineNumber(1);    // compilenode identifier
              block282.real = function(var_event__39__) {
                setLineNumber(588);    // compilenode identifier
                // call case 6: other requests
                // call case 3: self.outer request
                var call286 = callmethodChecked(superDepth, "outer", [0]);
                onSelf = true;
                var call287 = callmethodChecked(call286, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                // call case 6: other requests
                var call288 = callmethodChecked(var_f, "apply(1)", [1], call287);
                return call288;
              };
              // call case 4: self request
              onSelf = true;
              var call289 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block282);
              setLineNumber(587);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call289)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method on(_)withPointDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call289;
            };
            func280.paramTypes = [];
            func280.paramTypes.push([type_String, "kind"]);
            func280.paramTypes.push([]);
            func280.confidential = true;
            func280.paramCounts = [1, 1];
            obj240.methods["on(1)withPointDo(1)"] = func280;
            func280.definitionLine = 584;
            func280.definitionModule = "objectdraw";
            var func290 = function(argcv) {    // method onMouseClickDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(592);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseClickDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(594);    // compilenode vardec
              var var_lastDown;
              setLineNumber(596);    // compilenode string
              var string292 = new GraceString("mousedown");
              var block293 = new GraceBlock(this, 596, 1);
              setLineNumber(0);    // compilenode string
              var string296 = new GraceString("event'");
              // call case 6: other requests
              // call case 5: prelude request
              var call298 = callmethodChecked(var_prelude, "VariablePattern", []);
              var call299 = callmethodChecked(call298, "new(1)", [1], string296);
              setLineNumber(596);    // compilenode identifier
              // call case 6: other requests
              setLineNumber(0);    // compilenode member
              // call case 5: prelude request
              var call301 = callmethodChecked(var_prelude, "AndPattern", []);
              var call302 = callmethodChecked(call301, "new(2)", [2], call299, var_Foreign);
              block293.pattern = call302;
              setLineNumber(596);    // compilenode identifier
              block293.paramTypes = [var_Foreign];
              block293.real = function(var_event__39__) {
                setLineNumber(597);    // compilenode member
                // call case 6: other requests
                var call304 = callmethodChecked(var_event__39__, "timeStamp", []);
                var_lastDown = call304;
                return GraceDone;
              };
              // call case 4: self request
              onSelf = true;
              var call305 = callmethodChecked(this, "on(1)do(1)", [1, 1], string292, block293);
              setLineNumber(600);    // compilenode string
              var string307 = new GraceString("click");
              var block308 = new GraceBlock(this, 600, 1);
              setLineNumber(0);    // compilenode string
              var string311 = new GraceString("event'");
              // call case 6: other requests
              // call case 5: prelude request
              var call313 = callmethodChecked(var_prelude, "VariablePattern", []);
              var call314 = callmethodChecked(call313, "new(1)", [1], string311);
              setLineNumber(600);    // compilenode identifier
              // call case 6: other requests
              setLineNumber(0);    // compilenode member
              // call case 5: prelude request
              var call316 = callmethodChecked(var_prelude, "AndPattern", []);
              var call317 = callmethodChecked(call316, "new(2)", [2], call314, var_Foreign);
              block308.pattern = call317;
              setLineNumber(600);    // compilenode identifier
              block308.paramTypes = [var_Foreign];
              block308.real = function(var_event__39__) {
                var if318 = GraceDone;
                setLineNumber(601);    // compilenode member
                // call case 6: other requests
                var call322 = callmethodChecked(var_event__39__, "timeStamp", []);
                var diff324 = callmethodChecked(call322, "-(1)", [1], var_lastDown);
                var opresult326 = callmethodChecked(diff324, "\u2264(1)", [1], var_maxClickTime);
                if (Grace_isTrue(opresult326)) {
                  setLineNumber(602);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call330 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call331 = callmethodChecked(call330, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call332 = callmethodChecked(var_f, "apply(1)", [1], call331);
                  if318 = call332;
                }
                return if318;
              };
              // call case 4: self request
              onSelf = true;
              var call333 = callmethodChecked(this, "on(1)do(1)", [1, 1], string307, block308);
              setLineNumber(600);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call333)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseClickDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call333;
            };
            func290.paramTypes = [];
            func290.paramTypes.push([]);
            func290.paramCounts = [1];
            obj240.methods["onMouseClickDo(1)"] = func290;
            func290.definitionLine = 592;
            func290.definitionModule = "objectdraw";
            var func334 = function(argcv) {    // method onMousePressDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(608);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMousePressDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(609);    // compilenode string
              var string336 = new GraceString("mousedown");
              // call case 4: self request
              onSelf = true;
              var call337 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string336, var_f);
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call337)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMousePressDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call337;
            };
            func334.paramTypes = [];
            func334.paramTypes.push([]);
            func334.paramCounts = [1];
            obj240.methods["onMousePressDo(1)"] = func334;
            func334.definitionLine = 608;
            func334.definitionModule = "objectdraw";
            var func338 = function(argcv) {    // method onMouseReleaseDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(613);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(614);    // compilenode string
              var string340 = new GraceString("mouseup");
              // call case 4: self request
              onSelf = true;
              var call341 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string340, var_f);
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call341)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseReleaseDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call341;
            };
            func338.paramTypes = [];
            func338.paramTypes.push([]);
            func338.paramCounts = [1];
            obj240.methods["onMouseReleaseDo(1)"] = func338;
            func338.definitionLine = 613;
            func338.definitionModule = "objectdraw";
            var func342 = function(argcv) {    // method onMouseMoveDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(618);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseMoveDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(619);    // compilenode string
              var string344 = new GraceString("mousemove");
              var block345 = new GraceBlock(this, 619, 1);
              setLineNumber(1);    // compilenode identifier
              block345.real = function(var_event__39__) {
                var if346 = GraceDone;
                var if347 = GraceDone;
                setLineNumber(620);    // compilenode string
                var string349 = new GraceString("buttons");
                // call case 6: other requests
                var call350 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string349);
                if (Grace_isTrue(call350)) {
                  setLineNumber(621);    // compilenode member
                  // call case 6: other requests
                  var call353 = callmethodChecked(var_event__39__, "buttons", []);
                  var opresult355 = callmethodChecked(call353, "==(1)", [1], new GraceNum(0));
                  if347 = opresult355;
                } else {
                  setLineNumber(623);    // compilenode member
                  // call case 6: other requests
                  var call358 = callmethodChecked(var_event__39__, "which", []);
                  var opresult360 = callmethodChecked(call358, "==(1)", [1], new GraceNum(0));
                  if347 = opresult360;
                }
                if (Grace_isTrue(if347)) {
                  setLineNumber(625);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call364 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call365 = callmethodChecked(call364, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call366 = callmethodChecked(var_f, "apply(1)", [1], call365);
                  if346 = call366;
                }
                return if346;
              };
              // call case 4: self request
              onSelf = true;
              var call367 = callmethodChecked(this, "on(1)do(1)", [1, 1], string344, block345);
              setLineNumber(619);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call367)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseMoveDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call367;
            };
            func342.paramTypes = [];
            func342.paramTypes.push([]);
            func342.paramCounts = [1];
            obj240.methods["onMouseMoveDo(1)"] = func342;
            func342.definitionLine = 618;
            func342.definitionModule = "objectdraw";
            var func368 = function(argcv) {    // method onMouseDragDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(631);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseDragDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(632);    // compilenode string
              var string370 = new GraceString("mousemove");
              var block371 = new GraceBlock(this, 632, 1);
              setLineNumber(1);    // compilenode identifier
              block371.real = function(var_event__39__) {
                var if372 = GraceDone;
                var if373 = GraceDone;
                setLineNumber(633);    // compilenode string
                var string375 = new GraceString("buttons");
                // call case 6: other requests
                var call376 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string375);
                if (Grace_isTrue(call376)) {
                  setLineNumber(634);    // compilenode member
                  // call case 6: other requests
                  var call379 = callmethodChecked(var_event__39__, "buttons", []);
                  var opresult381 = callmethodChecked(call379, "==(1)", [1], new GraceNum(1));
                  if373 = opresult381;
                } else {
                  setLineNumber(636);    // compilenode member
                  // call case 6: other requests
                  var call384 = callmethodChecked(var_event__39__, "which", []);
                  var opresult386 = callmethodChecked(call384, "==(1)", [1], new GraceNum(1));
                  if373 = opresult386;
                }
                if (Grace_isTrue(if373)) {
                  setLineNumber(638);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call390 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call391 = callmethodChecked(call390, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call392 = callmethodChecked(var_f, "apply(1)", [1], call391);
                  if372 = call392;
                }
                return if372;
              };
              // call case 4: self request
              onSelf = true;
              var call393 = callmethodChecked(this, "on(1)do(1)", [1, 1], string370, block371);
              setLineNumber(632);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call393)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseDragDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call393;
            };
            func368.paramTypes = [];
            func368.paramTypes.push([]);
            func368.paramCounts = [1];
            obj240.methods["onMouseDragDo(1)"] = func368;
            func368.definitionLine = 631;
            func368.definitionModule = "objectdraw";
            var func394 = function(argcv) {    // method onMouseEnterDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(644);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(645);    // compilenode string
              var string396 = new GraceString("mouseover");
              var block397 = new GraceBlock(this, 645, 1);
              setLineNumber(1);    // compilenode identifier
              block397.real = function(var_event__39__) {
                setLineNumber(646);    // compilenode member
                // call case 6: other requests
                var call399 = callmethodChecked(var_event__39__, "relatedTarget", []);
                var var_from = call399;
                var if400 = GraceDone;
                setLineNumber(647);    // compilenode block
                var block401 = new GraceBlock(this, 647, 0);
                block401.real = function() {
                  // call case 6: other requests
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call405 = callmethodChecked(this, "element", []);
                  var call406 = callmethodChecked(call405, "contains(1)", [1], var_from);
                  var call407 = callmethodChecked(call406, "prefix!", [0]);
                  return call407;
                };
                // call case 6: other requests
                var call411 = callmethodChecked(var_dom, "noObject", []);
                var opresult413 = callmethodChecked(call411, "==(1)", [1], var_from);
                var opresult415 = callmethodChecked(opresult413, "||(1)", [1], block401);
                if (Grace_isTrue(opresult415)) {
                  setLineNumber(648);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call419 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call420 = callmethodChecked(call419, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call421 = callmethodChecked(var_f, "apply(1)", [1], call420);
                  if400 = call421;
                }
                return if400;
              };
              // call case 4: self request
              onSelf = true;
              var call422 = callmethodChecked(this, "on(1)do(1)", [1, 1], string396, block397);
              setLineNumber(645);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call422)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseEnterDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call422;
            };
            func394.paramTypes = [];
            func394.paramTypes.push([]);
            func394.paramCounts = [1];
            obj240.methods["onMouseEnterDo(1)"] = func394;
            func394.definitionLine = 644;
            func394.definitionModule = "objectdraw";
            var func423 = function(argcv) {    // method onMouseExitDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(654);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              setLineNumber(655);    // compilenode string
              var string425 = new GraceString("mouseout");
              var block426 = new GraceBlock(this, 655, 1);
              setLineNumber(1);    // compilenode identifier
              block426.real = function(var_event__39__) {
                setLineNumber(656);    // compilenode member
                // call case 6: other requests
                var call428 = callmethodChecked(var_event__39__, "relatedTarget", []);
                var var_to = call428;
                var if429 = GraceDone;
                setLineNumber(658);    // compilenode block
                var block430 = new GraceBlock(this, 658, 0);
                block430.real = function() {
                  // call case 6: other requests
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call434 = callmethodChecked(this, "element", []);
                  var call435 = callmethodChecked(call434, "contains(1)", [1], var_to);
                  var call436 = callmethodChecked(call435, "prefix!", [0]);
                  return call436;
                };
                // call case 6: other requests
                var call440 = callmethodChecked(var_dom, "noObject", []);
                var opresult442 = callmethodChecked(call440, "==(1)", [1], var_to);
                var opresult444 = callmethodChecked(opresult442, "||(1)", [1], block430);
                if (Grace_isTrue(opresult444)) {
                  setLineNumber(659);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call448 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call449 = callmethodChecked(call448, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call450 = callmethodChecked(var_f, "apply(1)", [1], call449);
                  if429 = call450;
                }
                return if429;
              };
              // call case 4: self request
              onSelf = true;
              var call451 = callmethodChecked(this, "on(1)do(1)", [1, 1], string425, block426);
              setLineNumber(655);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call451)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseExitDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call451;
            };
            func423.paramTypes = [];
            func423.paramTypes.push([]);
            func423.paramCounts = [1];
            obj240.methods["onMouseExitDo(1)"] = func423;
            func423.definitionLine = 654;
            func423.definitionModule = "objectdraw";
            var func452 = function(argcv) {    // method keyEventSource(_)event(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_source__39__ = arguments[curarg];
              curarg++;
              var var_event__39__ = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(664);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                          callmethod(var_Component, "asString", [0])._value + "."));
              curarg++;
              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                          callmethod(var_Foreign, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("objectdraw");
              var obj453 = Grace_allocObject(null, "componentFromElement(_).keyEventSource(_)event(_)");
              obj453.definitionModule = "objectdraw";
              obj453.definitionLine = 664;
              obj453.outer = this;
              var reader_objectdraw_outer454 = function() {
                return this.outer;
              };
              obj453.methods["outer"] = reader_objectdraw_outer454;
              var obj_init_453 = function() {
                var origSuperDepth = superDepth;
                superDepth = obj453;
                var func455 = function(argcv) {    // method asString
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("objectdraw");
                  setLineNumber(672);    // compilenode string
                  var string456 = new GraceString("");
                  // call case 4: self request
                  onSelf = true;
                  var call459 = callmethodChecked(this, "code", []);
                  var string461 = new GraceString(" for key-code ");
                  // call case 4: self request
                  onSelf = true;
                  var call464 = callmethodChecked(this, "source", []);
                  var string466 = new GraceString("Event on ");
                  var opresult468 = callmethodChecked(string466, "++(1)", [1], call464);
                  var opresult470 = callmethodChecked(opresult468, "++(1)", [1], string461);
                  var opresult472 = callmethodChecked(opresult470, "++(1)", [1], call459);
                  var opresult474 = callmethodChecked(opresult472, "++(1)", [1], string456);
                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult474)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method asString does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  return opresult474;
                };
                func455.paramCounts = [0];
                obj453.methods["asString"] = func455;
                func455.definitionLine = 671;
                func455.definitionModule = "objectdraw";
                setLineNumber(666);    // compilenode identifier
                // call case 6: other requests
                setLineNumber(0);    // compilenode member
                // call case 6: other requests
                // call case 3: self.outer request
                var call478 = callmethodChecked(superDepth, "outer", [0]);
                var call479 = callmethodChecked(call478, "outer", []);
                onSelf = true;
                var call480 = callmethodChecked(call479, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                obj453.superobj = call480;
                if (call480.data) obj453.data = call480.data;
                if (call480.hasOwnProperty('_value'))
                    obj453._value = call480._value;
                setLineNumber(667);    // compilenode member
                // call case 6: other requests
                var call482 = callmethodChecked(var_event__39__, "which", []);
                obj453.data["code"] = call482;
                var reader_objectdraw_code483 = function() {
                  return this.data["code"];
                };
                reader_objectdraw_code483.def = true;
                obj453.methods["code"] = reader_objectdraw_code483;
                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call482)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("value of def 'code' is not of type Number"));
                superDepth = origSuperDepth;
              };
              obj_init_453.apply(obj453, []);
              setLineNumber(664);    // return value
              if (!Grace_isTrue(callmethod(var_KeyEvent, "match(1)", [1], obj453)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method keyEventSource(_)event(_) does not have " + 
                          callmethod(var_KeyEvent, "asString", [0])._value + "."));
              return obj453;
            };
            func452.paramTypes = [];
            func452.paramTypes.push([]);
            func452.paramTypes.push([]);
            func452.paramCounts = [1, 1];
            obj240.methods["keyEventSource(1)event(1)"] = func452;
            func452.definitionLine = 664;
            func452.definitionModule = "objectdraw";
              var func484 = function(argcv) {    // method keyEventSource(_)event(_)$object(_)
                var curarg = 1;
                var var_source__39__ = arguments[curarg];
                curarg++;
                var var_event__39__ = arguments[curarg];
                curarg++;
                var inheritingObject = arguments[curarg++];
                // Start argument processing
                curarg = 1;
                if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                            callmethod(var_Component, "asString", [0])._value + "."));
                curarg++;
                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                            callmethod(var_Foreign, "asString", [0])._value + "."));
                curarg++;
                // End argument processing
                setModuleName("objectdraw");
                var returnTarget = invocationCount;
                invocationCount++;
                var obj485 = Grace_allocObject(null, "keyEventSource(1)event(1)");
                obj485.definitionModule = "objectdraw";
                obj485.definitionLine = 664;
                var inho485 = inheritingObject;
                while (inho485.superobj) inho485 = inho485.superobj;
                inho485.superobj = obj485;
                obj485.data = inheritingObject.data;
                if (inheritingObject.hasOwnProperty('_value'))
                  obj485._value = inheritingObject._value;
                obj485.outer = this;
                var reader_objectdraw_outer486 = function() {
                  return this.outer;
                };
                obj485.methods["outer"] = reader_objectdraw_outer486;
                var obj_init_485 = function() {
                  var origSuperDepth = superDepth;
                  superDepth = obj485;
                  var func487 = function(argcv) {    // method asString
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    setModuleName("objectdraw");
                    setLineNumber(672);    // compilenode string
                    var string488 = new GraceString("");
                    // call case 4: self request
                    onSelf = true;
                    var call491 = callmethodChecked(this, "code", []);
                    var string493 = new GraceString(" for key-code ");
                    // call case 4: self request
                    onSelf = true;
                    var call496 = callmethodChecked(this, "source", []);
                    var string498 = new GraceString("Event on ");
                    var opresult500 = callmethodChecked(string498, "++(1)", [1], call496);
                    var opresult502 = callmethodChecked(opresult500, "++(1)", [1], string493);
                    var opresult504 = callmethodChecked(opresult502, "++(1)", [1], call491);
                    var opresult506 = callmethodChecked(opresult504, "++(1)", [1], string488);
                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult506)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method asString does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    return opresult506;
                  };
                  func487.paramCounts = [0];
                  obj485.methods["asString"] = func487;
                  func487.definitionLine = 671;
                  func487.definitionModule = "objectdraw";
                  setLineNumber(666);    // compilenode identifier
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call510 = callmethodChecked(superDepth, "outer", [0]);
                  var call511 = callmethodChecked(call510, "outer", []);
                  onSelf = true;
                  var call512 = callmethodChecked(call511, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                  obj485.superobj = call512;
                  if (call512.data) obj485.data = call512.data;
                  if (call512.hasOwnProperty('_value'))
                      obj485._value = call512._value;
                  setLineNumber(667);    // compilenode member
                  // call case 6: other requests
                  var call514 = callmethodChecked(var_event__39__, "which", []);
                  obj485.data["code"] = call514;
                  var reader_objectdraw_code515 = function() {
                    return this.data["code"];
                  };
                  reader_objectdraw_code515.def = true;
                  obj485.methods["code"] = reader_objectdraw_code515;
                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call514)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("value of def 'code' is not of type Number"));
                  superDepth = origSuperDepth;
                };
                obj_init_485.apply(inheritingObject, []);
                return obj485;
                };
                func484.paramTypes = [];
                func484.paramTypes.push([]);
                func484.paramTypes.push([]);
                obj240.methods["keyEventSource(1)event(1)$object(1)"] = func484;
              var func516 = function(argcv) {    // method on(_)withKeyDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_kind = arguments[curarg];
                curarg++;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(678);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                            callmethod(var_String, "asString", [0])._value + "."));
                curarg++;
                setLineNumber(679);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in withKeyDo (arg list 2), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("objectdraw");
                setLineNumber(680);    // compilenode block
                var block518 = new GraceBlock(this, 680, 1);
                setLineNumber(1);    // compilenode identifier
                block518.real = function(var_event__39__) {
                  setLineNumber(681);    // compilenode identifier
                  // call case 4: self request
                  onSelf = true;
                  var call521 = callmethodChecked(this, "keyEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call522 = callmethodChecked(var_f, "apply(1)", [1], call521);
                  return call522;
                };
                // call case 4: self request
                onSelf = true;
                var call523 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block518);
                setLineNumber(680);    // return value
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call523)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method on(_)withKeyDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call523;
              };
              func516.paramTypes = [];
              func516.paramTypes.push([type_String, "kind"]);
              func516.paramTypes.push([]);
              func516.confidential = true;
              func516.paramCounts = [1, 1];
              obj240.methods["on(1)withKeyDo(1)"] = func516;
              func516.definitionLine = 678;
              func516.definitionModule = "objectdraw";
              var func524 = function(argcv) {    // method onKeyPressDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(686);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in onKeyPressDo (arg list 1), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("objectdraw");
                setLineNumber(687);    // compilenode string
                var string526 = new GraceString("keydown");
                // call case 4: self request
                onSelf = true;
                var call527 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string526, var_f);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call527)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method onKeyPressDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call527;
              };
              func524.paramTypes = [];
              func524.paramTypes.push([]);
              func524.paramCounts = [1];
              obj240.methods["onKeyPressDo(1)"] = func524;
              func524.definitionLine = 686;
              func524.definitionModule = "objectdraw";
              var func528 = function(argcv) {    // method onKeyReleaseDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(691);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in onKeyReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("objectdraw");
                setLineNumber(692);    // compilenode string
                var string530 = new GraceString("keyup");
                // call case 4: self request
                onSelf = true;
                var call531 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string530, var_f);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call531)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method onKeyReleaseDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call531;
              };
              func528.paramTypes = [];
              func528.paramTypes.push([]);
              func528.paramCounts = [1];
              obj240.methods["onKeyReleaseDo(1)"] = func528;
              func528.definitionLine = 691;
              func528.definitionModule = "objectdraw";
              var func532 = function(argcv) {    // method onKeyTypeDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(696);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in onKeyTypeDo (arg list 1), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("objectdraw");
                setLineNumber(697);    // compilenode string
                var string534 = new GraceString("keypress");
                // call case 4: self request
                onSelf = true;
                var call535 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string534, var_f);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call535)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method onKeyTypeDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call535;
              };
              func532.paramTypes = [];
              func532.paramTypes.push([]);
              func532.paramCounts = [1];
              obj240.methods["onKeyTypeDo(1)"] = func532;
              func532.definitionLine = 696;
              func532.definitionModule = "objectdraw";
              var func536 = function(argcv) {    // method isFlexible
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                setModuleName("objectdraw");
                setLineNumber(702);    // compilenode member
                // call case 6: other requests
                // call case 6: other requests
                // call case 6: other requests
                // call case 4: self request
                onSelf = true;
                var call542 = callmethodChecked(this, "element", []);
                var call543 = callmethodChecked(call542, "style", []);
                var call544 = callmethodChecked(call543, "flexGrow", []);
                var call545 = callmethodChecked(call544, "asNumber", []);
                var opresult547 = callmethodChecked(call545, ">(1)", [1], new GraceNum(0));
                if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult547)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method isFlexible does not have " + 
                            callmethod(var_Boolean, "asString", [0])._value + "."));
                return opresult547;
              };
              func536.paramCounts = [0];
              obj240.methods["isFlexible"] = func536;
              func536.definitionLine = 701;
              func536.definitionModule = "objectdraw";
              var func548 = function(argcv) {    // method flexible:=(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_value = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(706);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in flexible:= (arg list 1), which corresponds to parameter value, does not have " + 
                            callmethod(var_Boolean, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("objectdraw");
                var if550 = GraceDone;
                setLineNumber(707);    // compilenode identifier
                if (Grace_isTrue(var_value)) {
                  setLineNumber(708);    // compilenode num
                  if550 = new GraceNum(1);
                } else {
                  setLineNumber(710);    // compilenode num
                  if550 = new GraceNum(0);
                }
                // call case 6: other requests
                setLineNumber(707);    // compilenode member
                // call case 6: other requests
                // call case 4: self request
                onSelf = true;
                var call553 = callmethodChecked(this, "element", []);
                var call554 = callmethodChecked(call553, "style", []);
                var call555 = callmethodChecked(call554, "flexGrow:=(1)", [1], if550);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call555)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method flexible:=(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call555;
              };
              func548.paramTypes = [];
              func548.paramTypes.push([type_Boolean, "value"]);
              func548.paramCounts = [1];
              obj240.methods["flexible:=(1)"] = func548;
              func548.definitionLine = 706;
              func548.definitionModule = "objectdraw";
              var func556 = function(argcv) {    // method asString
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                setModuleName("objectdraw");
                setLineNumber(716);    // compilenode string
                var string557 = new GraceString("a component");
                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string557)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method asString does not have " + 
                            callmethod(var_String, "asString", [0])._value + "."));
                return string557;
              };
              func556.paramCounts = [0];
              obj240.methods["asString"] = func556;
              func556.definitionLine = 715;
              func556.definitionModule = "objectdraw";
              setLineNumber(559);    // compilenode identifier
              obj240.data["element"] = var_element__39__;
              var reader_objectdraw_element558 = function() {
                return this.data["element"];
              };
              reader_objectdraw_element558.def = true;
              obj240.methods["element"] = reader_objectdraw_element558;
              superDepth = origSuperDepth;
            };
            obj_init_240.apply(obj240, []);
            setLineNumber(558);    // return value
            if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], obj240)))
                throw new GraceExceptionPacket(TypeErrorObject,
                    new GraceString("result of method componentFromElement(_) does not have " + 
                        callmethod(var_Component, "asString", [0])._value + "."));
            return obj240;
          };
          func239.paramCounts = [1];
          this.methods["componentFromElement(1)"] = func239;
          func239.definitionLine = 558;
          func239.definitionModule = "objectdraw";
            var func559 = function(argcv) {    // method componentFromElement(_)$object(_)
              var curarg = 1;
              var var_element__39__ = arguments[curarg];
              curarg++;
              var inheritingObject = arguments[curarg++];
              // Start argument processing
              curarg = 1;
              curarg++;
              // End argument processing
              setModuleName("objectdraw");
              var returnTarget = invocationCount;
              invocationCount++;
              var obj560 = Grace_allocObject(GraceObject, "componentFromElement(1)");
              obj560.definitionModule = "objectdraw";
              obj560.definitionLine = 558;
              var inho560 = inheritingObject;
              while (inho560.superobj) inho560 = inho560.superobj;
              inho560.superobj = obj560;
              obj560.data = inheritingObject.data;
              if (inheritingObject.hasOwnProperty('_value'))
                obj560._value = inheritingObject._value;
              obj560.outer = this;
              var reader_objectdraw_outer561 = function() {
                return this.outer;
              };
              obj560.methods["outer"] = reader_objectdraw_outer561;
              var obj_init_560 = function() {
                var origSuperDepth = superDepth;
                superDepth = obj560;
                var func562 = function(argcv) {    // method width
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("objectdraw");
                  setLineNumber(563);    // compilenode member
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call565 = callmethodChecked(this, "element", []);
                  var call566 = callmethodChecked(call565, "width", []);
                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call566)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method width does not have " + 
                              callmethod(var_Number, "asString", [0])._value + "."));
                  return call566;
                };
                func562.paramCounts = [0];
                obj560.methods["width"] = func562;
                func562.definitionLine = 562;
                func562.definitionModule = "objectdraw";
                var func567 = function(argcv) {    // method height
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("objectdraw");
                  setLineNumber(568);    // compilenode member
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call570 = callmethodChecked(this, "element", []);
                  var call571 = callmethodChecked(call570, "height", []);
                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call571)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method height does not have " + 
                              callmethod(var_Number, "asString", [0])._value + "."));
                  return call571;
                };
                func567.paramCounts = [0];
                obj560.methods["height"] = func567;
                func567.definitionLine = 567;
                func567.definitionModule = "objectdraw";
                var func572 = function(argcv) {    // method size
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("objectdraw");
                  setLineNumber(573);    // compilenode string
                  var string573 = new GraceString("");
                  // call case 4: self request
                  onSelf = true;
                  var call576 = callmethodChecked(this, "element", []);
                  var string578 = new GraceString("component is ");
                  var opresult580 = callmethodChecked(string578, "++(1)", [1], call576);
                  var opresult582 = callmethodChecked(opresult580, "++(1)", [1], string573);
                  var call583 = Grace_print(opresult582);
                  setLineNumber(574);    // compilenode member
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call586 = callmethodChecked(this, "element", []);
                  var call587 = callmethodChecked(call586, "height", []);
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call591 = callmethodChecked(this, "element", []);
                  var call592 = callmethodChecked(call591, "width", []);
                  var opresult594 = callmethodChecked(call592, "@(1)", [1], call587);
                  if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult594)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method size does not have " + 
                              callmethod(var_Point, "asString", [0])._value + "."));
                  return opresult594;
                };
                func572.paramCounts = [0];
                obj560.methods["size"] = func572;
                func572.definitionLine = 572;
                func572.definitionModule = "objectdraw";
                var func595 = function(argcv) {    // method on(_)do(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_event__39__ = arguments[curarg];
                  curarg++;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(578);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in on (arg list 1), which corresponds to parameter event', does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  setLineNumber(579);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in do (arg list 2), which corresponds to parameter f, does not have " + 
                              callmethod(var_Procedure, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(580);    // compilenode identifier
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call598 = callmethodChecked(this, "element", []);
                  var call599 = callmethodChecked(call598, "addEventListener(2)", [2], var_event__39__, var_f);
                  setLineNumber(581);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method on(_)do(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return var_done;
                };
                func595.paramTypes = [];
                func595.paramTypes.push([type_String, "event'"]);
                func595.paramTypes.push([]);
                func595.confidential = true;
                func595.paramCounts = [1, 1];
                obj560.methods["on(1)do(1)"] = func595;
                func595.definitionLine = 578;
                func595.definitionModule = "objectdraw";
                var func600 = function(argcv) {    // method on(_)withPointDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_kind = arguments[curarg];
                  curarg++;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(584);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  setLineNumber(585);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in withPointDo (arg list 2), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(587);    // compilenode block
                  var block602 = new GraceBlock(this, 587, 1);
                  setLineNumber(1);    // compilenode identifier
                  block602.real = function(var_event__39__) {
                    setLineNumber(588);    // compilenode identifier
                    // call case 6: other requests
                    // call case 3: self.outer request
                    var call606 = callmethodChecked(superDepth, "outer", [0]);
                    onSelf = true;
                    var call607 = callmethodChecked(call606, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                    // call case 6: other requests
                    var call608 = callmethodChecked(var_f, "apply(1)", [1], call607);
                    return call608;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call609 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block602);
                  setLineNumber(587);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call609)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method on(_)withPointDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call609;
                };
                func600.paramTypes = [];
                func600.paramTypes.push([type_String, "kind"]);
                func600.paramTypes.push([]);
                func600.confidential = true;
                func600.paramCounts = [1, 1];
                obj560.methods["on(1)withPointDo(1)"] = func600;
                func600.definitionLine = 584;
                func600.definitionModule = "objectdraw";
                var func610 = function(argcv) {    // method onMouseClickDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(592);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseClickDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(594);    // compilenode vardec
                  var var_lastDown;
                  setLineNumber(596);    // compilenode string
                  var string612 = new GraceString("mousedown");
                  var block613 = new GraceBlock(this, 596, 1);
                  setLineNumber(0);    // compilenode string
                  var string616 = new GraceString("event'");
                  // call case 6: other requests
                  // call case 5: prelude request
                  var call618 = callmethodChecked(var_prelude, "VariablePattern", []);
                  var call619 = callmethodChecked(call618, "new(1)", [1], string616);
                  setLineNumber(596);    // compilenode identifier
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 5: prelude request
                  var call621 = callmethodChecked(var_prelude, "AndPattern", []);
                  var call622 = callmethodChecked(call621, "new(2)", [2], call619, var_Foreign);
                  block613.pattern = call622;
                  setLineNumber(596);    // compilenode identifier
                  block613.paramTypes = [var_Foreign];
                  block613.real = function(var_event__39__) {
                    setLineNumber(597);    // compilenode member
                    // call case 6: other requests
                    var call624 = callmethodChecked(var_event__39__, "timeStamp", []);
                    var_lastDown = call624;
                    return GraceDone;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call625 = callmethodChecked(this, "on(1)do(1)", [1, 1], string612, block613);
                  setLineNumber(600);    // compilenode string
                  var string627 = new GraceString("click");
                  var block628 = new GraceBlock(this, 600, 1);
                  setLineNumber(0);    // compilenode string
                  var string631 = new GraceString("event'");
                  // call case 6: other requests
                  // call case 5: prelude request
                  var call633 = callmethodChecked(var_prelude, "VariablePattern", []);
                  var call634 = callmethodChecked(call633, "new(1)", [1], string631);
                  setLineNumber(600);    // compilenode identifier
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 5: prelude request
                  var call636 = callmethodChecked(var_prelude, "AndPattern", []);
                  var call637 = callmethodChecked(call636, "new(2)", [2], call634, var_Foreign);
                  block628.pattern = call637;
                  setLineNumber(600);    // compilenode identifier
                  block628.paramTypes = [var_Foreign];
                  block628.real = function(var_event__39__) {
                    var if638 = GraceDone;
                    setLineNumber(601);    // compilenode member
                    // call case 6: other requests
                    var call642 = callmethodChecked(var_event__39__, "timeStamp", []);
                    var diff644 = callmethodChecked(call642, "-(1)", [1], var_lastDown);
                    var opresult646 = callmethodChecked(diff644, "\u2264(1)", [1], var_maxClickTime);
                    if (Grace_isTrue(opresult646)) {
                      setLineNumber(602);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call650 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call651 = callmethodChecked(call650, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call652 = callmethodChecked(var_f, "apply(1)", [1], call651);
                      if638 = call652;
                    }
                    return if638;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call653 = callmethodChecked(this, "on(1)do(1)", [1, 1], string627, block628);
                  setLineNumber(600);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call653)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseClickDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call653;
                };
                func610.paramTypes = [];
                func610.paramTypes.push([]);
                func610.paramCounts = [1];
                obj560.methods["onMouseClickDo(1)"] = func610;
                func610.definitionLine = 592;
                func610.definitionModule = "objectdraw";
                var func654 = function(argcv) {    // method onMousePressDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(608);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMousePressDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(609);    // compilenode string
                  var string656 = new GraceString("mousedown");
                  // call case 4: self request
                  onSelf = true;
                  var call657 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string656, var_f);
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call657)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMousePressDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call657;
                };
                func654.paramTypes = [];
                func654.paramTypes.push([]);
                func654.paramCounts = [1];
                obj560.methods["onMousePressDo(1)"] = func654;
                func654.definitionLine = 608;
                func654.definitionModule = "objectdraw";
                var func658 = function(argcv) {    // method onMouseReleaseDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(613);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(614);    // compilenode string
                  var string660 = new GraceString("mouseup");
                  // call case 4: self request
                  onSelf = true;
                  var call661 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string660, var_f);
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call661)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseReleaseDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call661;
                };
                func658.paramTypes = [];
                func658.paramTypes.push([]);
                func658.paramCounts = [1];
                obj560.methods["onMouseReleaseDo(1)"] = func658;
                func658.definitionLine = 613;
                func658.definitionModule = "objectdraw";
                var func662 = function(argcv) {    // method onMouseMoveDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(618);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseMoveDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(619);    // compilenode string
                  var string664 = new GraceString("mousemove");
                  var block665 = new GraceBlock(this, 619, 1);
                  setLineNumber(1);    // compilenode identifier
                  block665.real = function(var_event__39__) {
                    var if666 = GraceDone;
                    var if667 = GraceDone;
                    setLineNumber(620);    // compilenode string
                    var string669 = new GraceString("buttons");
                    // call case 6: other requests
                    var call670 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string669);
                    if (Grace_isTrue(call670)) {
                      setLineNumber(621);    // compilenode member
                      // call case 6: other requests
                      var call673 = callmethodChecked(var_event__39__, "buttons", []);
                      var opresult675 = callmethodChecked(call673, "==(1)", [1], new GraceNum(0));
                      if667 = opresult675;
                    } else {
                      setLineNumber(623);    // compilenode member
                      // call case 6: other requests
                      var call678 = callmethodChecked(var_event__39__, "which", []);
                      var opresult680 = callmethodChecked(call678, "==(1)", [1], new GraceNum(0));
                      if667 = opresult680;
                    }
                    if (Grace_isTrue(if667)) {
                      setLineNumber(625);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call684 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call685 = callmethodChecked(call684, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call686 = callmethodChecked(var_f, "apply(1)", [1], call685);
                      if666 = call686;
                    }
                    return if666;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call687 = callmethodChecked(this, "on(1)do(1)", [1, 1], string664, block665);
                  setLineNumber(619);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call687)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseMoveDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call687;
                };
                func662.paramTypes = [];
                func662.paramTypes.push([]);
                func662.paramCounts = [1];
                obj560.methods["onMouseMoveDo(1)"] = func662;
                func662.definitionLine = 618;
                func662.definitionModule = "objectdraw";
                var func688 = function(argcv) {    // method onMouseDragDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(631);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseDragDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(632);    // compilenode string
                  var string690 = new GraceString("mousemove");
                  var block691 = new GraceBlock(this, 632, 1);
                  setLineNumber(1);    // compilenode identifier
                  block691.real = function(var_event__39__) {
                    var if692 = GraceDone;
                    var if693 = GraceDone;
                    setLineNumber(633);    // compilenode string
                    var string695 = new GraceString("buttons");
                    // call case 6: other requests
                    var call696 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string695);
                    if (Grace_isTrue(call696)) {
                      setLineNumber(634);    // compilenode member
                      // call case 6: other requests
                      var call699 = callmethodChecked(var_event__39__, "buttons", []);
                      var opresult701 = callmethodChecked(call699, "==(1)", [1], new GraceNum(1));
                      if693 = opresult701;
                    } else {
                      setLineNumber(636);    // compilenode member
                      // call case 6: other requests
                      var call704 = callmethodChecked(var_event__39__, "which", []);
                      var opresult706 = callmethodChecked(call704, "==(1)", [1], new GraceNum(1));
                      if693 = opresult706;
                    }
                    if (Grace_isTrue(if693)) {
                      setLineNumber(638);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call710 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call711 = callmethodChecked(call710, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call712 = callmethodChecked(var_f, "apply(1)", [1], call711);
                      if692 = call712;
                    }
                    return if692;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call713 = callmethodChecked(this, "on(1)do(1)", [1, 1], string690, block691);
                  setLineNumber(632);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call713)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseDragDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call713;
                };
                func688.paramTypes = [];
                func688.paramTypes.push([]);
                func688.paramCounts = [1];
                obj560.methods["onMouseDragDo(1)"] = func688;
                func688.definitionLine = 631;
                func688.definitionModule = "objectdraw";
                var func714 = function(argcv) {    // method onMouseEnterDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(644);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(645);    // compilenode string
                  var string716 = new GraceString("mouseover");
                  var block717 = new GraceBlock(this, 645, 1);
                  setLineNumber(1);    // compilenode identifier
                  block717.real = function(var_event__39__) {
                    setLineNumber(646);    // compilenode member
                    // call case 6: other requests
                    var call719 = callmethodChecked(var_event__39__, "relatedTarget", []);
                    var var_from = call719;
                    var if720 = GraceDone;
                    setLineNumber(647);    // compilenode block
                    var block721 = new GraceBlock(this, 647, 0);
                    block721.real = function() {
                      // call case 6: other requests
                      // call case 6: other requests
                      // call case 4: self request
                      onSelf = true;
                      var call725 = callmethodChecked(this, "element", []);
                      var call726 = callmethodChecked(call725, "contains(1)", [1], var_from);
                      var call727 = callmethodChecked(call726, "prefix!", [0]);
                      return call727;
                    };
                    // call case 6: other requests
                    var call731 = callmethodChecked(var_dom, "noObject", []);
                    var opresult733 = callmethodChecked(call731, "==(1)", [1], var_from);
                    var opresult735 = callmethodChecked(opresult733, "||(1)", [1], block721);
                    if (Grace_isTrue(opresult735)) {
                      setLineNumber(648);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call739 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call740 = callmethodChecked(call739, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call741 = callmethodChecked(var_f, "apply(1)", [1], call740);
                      if720 = call741;
                    }
                    return if720;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call742 = callmethodChecked(this, "on(1)do(1)", [1, 1], string716, block717);
                  setLineNumber(645);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call742)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseEnterDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call742;
                };
                func714.paramTypes = [];
                func714.paramTypes.push([]);
                func714.paramCounts = [1];
                obj560.methods["onMouseEnterDo(1)"] = func714;
                func714.definitionLine = 644;
                func714.definitionModule = "objectdraw";
                var func743 = function(argcv) {    // method onMouseExitDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(654);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  setLineNumber(655);    // compilenode string
                  var string745 = new GraceString("mouseout");
                  var block746 = new GraceBlock(this, 655, 1);
                  setLineNumber(1);    // compilenode identifier
                  block746.real = function(var_event__39__) {
                    setLineNumber(656);    // compilenode member
                    // call case 6: other requests
                    var call748 = callmethodChecked(var_event__39__, "relatedTarget", []);
                    var var_to = call748;
                    var if749 = GraceDone;
                    setLineNumber(658);    // compilenode block
                    var block750 = new GraceBlock(this, 658, 0);
                    block750.real = function() {
                      // call case 6: other requests
                      // call case 6: other requests
                      // call case 4: self request
                      onSelf = true;
                      var call754 = callmethodChecked(this, "element", []);
                      var call755 = callmethodChecked(call754, "contains(1)", [1], var_to);
                      var call756 = callmethodChecked(call755, "prefix!", [0]);
                      return call756;
                    };
                    // call case 6: other requests
                    var call760 = callmethodChecked(var_dom, "noObject", []);
                    var opresult762 = callmethodChecked(call760, "==(1)", [1], var_to);
                    var opresult764 = callmethodChecked(opresult762, "||(1)", [1], block750);
                    if (Grace_isTrue(opresult764)) {
                      setLineNumber(659);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call768 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call769 = callmethodChecked(call768, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call770 = callmethodChecked(var_f, "apply(1)", [1], call769);
                      if749 = call770;
                    }
                    return if749;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call771 = callmethodChecked(this, "on(1)do(1)", [1, 1], string745, block746);
                  setLineNumber(655);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call771)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseExitDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call771;
                };
                func743.paramTypes = [];
                func743.paramTypes.push([]);
                func743.paramCounts = [1];
                obj560.methods["onMouseExitDo(1)"] = func743;
                func743.definitionLine = 654;
                func743.definitionModule = "objectdraw";
                var func772 = function(argcv) {    // method keyEventSource(_)event(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_source__39__ = arguments[curarg];
                  curarg++;
                  var var_event__39__ = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(664);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                              callmethod(var_Component, "asString", [0])._value + "."));
                  curarg++;
                  if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                              callmethod(var_Foreign, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  var obj773 = Grace_allocObject(null, "keyEventSource(1)event(1)");
                  obj773.definitionModule = "objectdraw";
                  obj773.definitionLine = 664;
                  obj773.outer = this;
                  var reader_objectdraw_outer774 = function() {
                    return this.outer;
                  };
                  obj773.methods["outer"] = reader_objectdraw_outer774;
                  var obj_init_773 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj773;
                    var func775 = function(argcv) {    // method asString
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var curarg = 1;
                      setModuleName("objectdraw");
                      setLineNumber(672);    // compilenode string
                      var string776 = new GraceString("");
                      // call case 4: self request
                      onSelf = true;
                      var call779 = callmethodChecked(this, "code", []);
                      var string781 = new GraceString(" for key-code ");
                      // call case 4: self request
                      onSelf = true;
                      var call784 = callmethodChecked(this, "source", []);
                      var string786 = new GraceString("Event on ");
                      var opresult788 = callmethodChecked(string786, "++(1)", [1], call784);
                      var opresult790 = callmethodChecked(opresult788, "++(1)", [1], string781);
                      var opresult792 = callmethodChecked(opresult790, "++(1)", [1], call779);
                      var opresult794 = callmethodChecked(opresult792, "++(1)", [1], string776);
                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult794)))
                          throw new GraceExceptionPacket(TypeErrorObject,
                              new GraceString("result of method asString does not have " + 
                                  callmethod(var_String, "asString", [0])._value + "."));
                      return opresult794;
                    };
                    func775.paramCounts = [0];
                    obj773.methods["asString"] = func775;
                    func775.definitionLine = 671;
                    func775.definitionModule = "objectdraw";
                    setLineNumber(666);    // compilenode identifier
                    // call case 6: other requests
                    setLineNumber(0);    // compilenode member
                    // call case 6: other requests
                    // call case 3: self.outer request
                    var call798 = callmethodChecked(superDepth, "outer", [0]);
                    var call799 = callmethodChecked(call798, "outer", []);
                    onSelf = true;
                    var call800 = callmethodChecked(call799, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                    obj773.superobj = call800;
                    if (call800.data) obj773.data = call800.data;
                    if (call800.hasOwnProperty('_value'))
                        obj773._value = call800._value;
                    setLineNumber(667);    // compilenode member
                    // call case 6: other requests
                    var call802 = callmethodChecked(var_event__39__, "which", []);
                    obj773.data["code"] = call802;
                    var reader_objectdraw_code803 = function() {
                      return this.data["code"];
                    };
                    reader_objectdraw_code803.def = true;
                    obj773.methods["code"] = reader_objectdraw_code803;
                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call802)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("value of def 'code' is not of type Number"));
                    superDepth = origSuperDepth;
                  };
                  obj_init_773.apply(obj773, []);
                  setLineNumber(664);    // return value
                  if (!Grace_isTrue(callmethod(var_KeyEvent, "match(1)", [1], obj773)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method keyEventSource(_)event(_) does not have " + 
                              callmethod(var_KeyEvent, "asString", [0])._value + "."));
                  return obj773;
                };
                func772.paramTypes = [];
                func772.paramTypes.push([]);
                func772.paramTypes.push([]);
                func772.paramCounts = [1, 1];
                obj560.methods["keyEventSource(1)event(1)"] = func772;
                func772.definitionLine = 664;
                func772.definitionModule = "objectdraw";
                  var func804 = function(argcv) {    // method keyEventSource(_)event(_)$object(_)
                    var curarg = 1;
                    var var_source__39__ = arguments[curarg];
                    curarg++;
                    var var_event__39__ = arguments[curarg];
                    curarg++;
                    var inheritingObject = arguments[curarg++];
                    // Start argument processing
                    curarg = 1;
                    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                                callmethod(var_Component, "asString", [0])._value + "."));
                    curarg++;
                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                                callmethod(var_Foreign, "asString", [0])._value + "."));
                    curarg++;
                    // End argument processing
                    setModuleName("objectdraw");
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var obj805 = Grace_allocObject(null, "keyEventSource(1)event(1)");
                    obj805.definitionModule = "objectdraw";
                    obj805.definitionLine = 664;
                    var inho805 = inheritingObject;
                    while (inho805.superobj) inho805 = inho805.superobj;
                    inho805.superobj = obj805;
                    obj805.data = inheritingObject.data;
                    if (inheritingObject.hasOwnProperty('_value'))
                      obj805._value = inheritingObject._value;
                    obj805.outer = this;
                    var reader_objectdraw_outer806 = function() {
                      return this.outer;
                    };
                    obj805.methods["outer"] = reader_objectdraw_outer806;
                    var obj_init_805 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj805;
                      var func807 = function(argcv) {    // method asString
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(672);    // compilenode string
                        var string808 = new GraceString("");
                        // call case 4: self request
                        onSelf = true;
                        var call811 = callmethodChecked(this, "code", []);
                        var string813 = new GraceString(" for key-code ");
                        // call case 4: self request
                        onSelf = true;
                        var call816 = callmethodChecked(this, "source", []);
                        var string818 = new GraceString("Event on ");
                        var opresult820 = callmethodChecked(string818, "++(1)", [1], call816);
                        var opresult822 = callmethodChecked(opresult820, "++(1)", [1], string813);
                        var opresult824 = callmethodChecked(opresult822, "++(1)", [1], call811);
                        var opresult826 = callmethodChecked(opresult824, "++(1)", [1], string808);
                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult826)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method asString does not have " + 
                                    callmethod(var_String, "asString", [0])._value + "."));
                        return opresult826;
                      };
                      func807.paramCounts = [0];
                      obj805.methods["asString"] = func807;
                      func807.definitionLine = 671;
                      func807.definitionModule = "objectdraw";
                      setLineNumber(666);    // compilenode identifier
                      // call case 6: other requests
                      setLineNumber(0);    // compilenode member
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call830 = callmethodChecked(superDepth, "outer", [0]);
                      var call831 = callmethodChecked(call830, "outer", []);
                      onSelf = true;
                      var call832 = callmethodChecked(call831, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                      obj805.superobj = call832;
                      if (call832.data) obj805.data = call832.data;
                      if (call832.hasOwnProperty('_value'))
                          obj805._value = call832._value;
                      setLineNumber(667);    // compilenode member
                      // call case 6: other requests
                      var call834 = callmethodChecked(var_event__39__, "which", []);
                      obj805.data["code"] = call834;
                      var reader_objectdraw_code835 = function() {
                        return this.data["code"];
                      };
                      reader_objectdraw_code835.def = true;
                      obj805.methods["code"] = reader_objectdraw_code835;
                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call834)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("value of def 'code' is not of type Number"));
                      superDepth = origSuperDepth;
                    };
                    obj_init_805.apply(inheritingObject, []);
                    return obj805;
                    };
                    func804.paramTypes = [];
                    func804.paramTypes.push([]);
                    func804.paramTypes.push([]);
                    obj560.methods["keyEventSource(1)event(1)$object(1)"] = func804;
                  var func836 = function(argcv) {    // method on(_)withKeyDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_kind = arguments[curarg];
                    curarg++;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(678);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    curarg++;
                    setLineNumber(679);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in withKeyDo (arg list 2), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("objectdraw");
                    setLineNumber(680);    // compilenode block
                    var block838 = new GraceBlock(this, 680, 1);
                    setLineNumber(1);    // compilenode identifier
                    block838.real = function(var_event__39__) {
                      setLineNumber(681);    // compilenode identifier
                      // call case 4: self request
                      onSelf = true;
                      var call841 = callmethodChecked(this, "keyEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call842 = callmethodChecked(var_f, "apply(1)", [1], call841);
                      return call842;
                    };
                    // call case 4: self request
                    onSelf = true;
                    var call843 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block838);
                    setLineNumber(680);    // return value
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call843)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method on(_)withKeyDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call843;
                  };
                  func836.paramTypes = [];
                  func836.paramTypes.push([type_String, "kind"]);
                  func836.paramTypes.push([]);
                  func836.confidential = true;
                  func836.paramCounts = [1, 1];
                  obj560.methods["on(1)withKeyDo(1)"] = func836;
                  func836.definitionLine = 678;
                  func836.definitionModule = "objectdraw";
                  var func844 = function(argcv) {    // method onKeyPressDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(686);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in onKeyPressDo (arg list 1), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("objectdraw");
                    setLineNumber(687);    // compilenode string
                    var string846 = new GraceString("keydown");
                    // call case 4: self request
                    onSelf = true;
                    var call847 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string846, var_f);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call847)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method onKeyPressDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call847;
                  };
                  func844.paramTypes = [];
                  func844.paramTypes.push([]);
                  func844.paramCounts = [1];
                  obj560.methods["onKeyPressDo(1)"] = func844;
                  func844.definitionLine = 686;
                  func844.definitionModule = "objectdraw";
                  var func848 = function(argcv) {    // method onKeyReleaseDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(691);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in onKeyReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("objectdraw");
                    setLineNumber(692);    // compilenode string
                    var string850 = new GraceString("keyup");
                    // call case 4: self request
                    onSelf = true;
                    var call851 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string850, var_f);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call851)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method onKeyReleaseDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call851;
                  };
                  func848.paramTypes = [];
                  func848.paramTypes.push([]);
                  func848.paramCounts = [1];
                  obj560.methods["onKeyReleaseDo(1)"] = func848;
                  func848.definitionLine = 691;
                  func848.definitionModule = "objectdraw";
                  var func852 = function(argcv) {    // method onKeyTypeDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(696);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in onKeyTypeDo (arg list 1), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("objectdraw");
                    setLineNumber(697);    // compilenode string
                    var string854 = new GraceString("keypress");
                    // call case 4: self request
                    onSelf = true;
                    var call855 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string854, var_f);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call855)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method onKeyTypeDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call855;
                  };
                  func852.paramTypes = [];
                  func852.paramTypes.push([]);
                  func852.paramCounts = [1];
                  obj560.methods["onKeyTypeDo(1)"] = func852;
                  func852.definitionLine = 696;
                  func852.definitionModule = "objectdraw";
                  var func856 = function(argcv) {    // method isFlexible
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    setModuleName("objectdraw");
                    setLineNumber(702);    // compilenode member
                    // call case 6: other requests
                    // call case 6: other requests
                    // call case 6: other requests
                    // call case 4: self request
                    onSelf = true;
                    var call862 = callmethodChecked(this, "element", []);
                    var call863 = callmethodChecked(call862, "style", []);
                    var call864 = callmethodChecked(call863, "flexGrow", []);
                    var call865 = callmethodChecked(call864, "asNumber", []);
                    var opresult867 = callmethodChecked(call865, ">(1)", [1], new GraceNum(0));
                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult867)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method isFlexible does not have " + 
                                callmethod(var_Boolean, "asString", [0])._value + "."));
                    return opresult867;
                  };
                  func856.paramCounts = [0];
                  obj560.methods["isFlexible"] = func856;
                  func856.definitionLine = 701;
                  func856.definitionModule = "objectdraw";
                  var func868 = function(argcv) {    // method flexible:=(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_value = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(706);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in flexible:= (arg list 1), which corresponds to parameter value, does not have " + 
                                callmethod(var_Boolean, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("objectdraw");
                    var if870 = GraceDone;
                    setLineNumber(707);    // compilenode identifier
                    if (Grace_isTrue(var_value)) {
                      setLineNumber(708);    // compilenode num
                      if870 = new GraceNum(1);
                    } else {
                      setLineNumber(710);    // compilenode num
                      if870 = new GraceNum(0);
                    }
                    // call case 6: other requests
                    setLineNumber(707);    // compilenode member
                    // call case 6: other requests
                    // call case 4: self request
                    onSelf = true;
                    var call873 = callmethodChecked(this, "element", []);
                    var call874 = callmethodChecked(call873, "style", []);
                    var call875 = callmethodChecked(call874, "flexGrow:=(1)", [1], if870);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call875)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method flexible:=(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call875;
                  };
                  func868.paramTypes = [];
                  func868.paramTypes.push([type_Boolean, "value"]);
                  func868.paramCounts = [1];
                  obj560.methods["flexible:=(1)"] = func868;
                  func868.definitionLine = 706;
                  func868.definitionModule = "objectdraw";
                  var func876 = function(argcv) {    // method asString
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    setModuleName("objectdraw");
                    setLineNumber(716);    // compilenode string
                    var string877 = new GraceString("a component");
                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string877)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method asString does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    return string877;
                  };
                  func876.paramCounts = [0];
                  obj560.methods["asString"] = func876;
                  func876.definitionLine = 715;
                  func876.definitionModule = "objectdraw";
                  setLineNumber(559);    // compilenode identifier
                  obj560.data["element"] = var_element__39__;
                  var reader_objectdraw_element878 = function() {
                    return this.data["element"];
                  };
                  reader_objectdraw_element878.def = true;
                  obj560.methods["element"] = reader_objectdraw_element878;
                  superDepth = origSuperDepth;
                };
                obj_init_560.apply(inheritingObject, []);
                return obj560;
                };
                this.methods["componentFromElement(1)$object(1)"] = func559;
              setLineNumber(720);    // compilenode method
              var func879 = function(argcv) {    // method componentOfElementType(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_tagName = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in componentOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                            callmethod(var_String, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("objectdraw");
                var obj880 = Grace_allocObject(null, "componentOfElementType(_)");
                obj880.definitionModule = "objectdraw";
                obj880.definitionLine = 720;
                obj880.outer = this;
                var reader_objectdraw_outer881 = function() {
                  return this.outer;
                };
                obj880.methods["outer"] = reader_objectdraw_outer881;
                var obj_init_880 = function() {
                  var origSuperDepth = superDepth;
                  superDepth = obj880;
                  setLineNumber(723);    // compilenode identifier
                  // call case 6: other requests
                  var call884 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 3: self.outer request
                  var call886 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call887 = callmethodChecked(call886, "componentFromElement(1)$object(1)", [1, 1], call884, this);
                  obj880.superobj = call887;
                  if (call887.data) obj880.data = call887.data;
                  if (call887.hasOwnProperty('_value'))
                      obj880._value = call887._value;
                  superDepth = origSuperDepth;
                };
                obj_init_880.apply(obj880, []);
                setLineNumber(720);    // return value
                if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], obj880)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method componentOfElementType(_) does not have " + 
                            callmethod(var_Component, "asString", [0])._value + "."));
                return obj880;
              };
              func879.paramTypes = [];
              func879.paramTypes.push([type_String, "tagName"]);
              func879.paramCounts = [1];
              this.methods["componentOfElementType(1)"] = func879;
              func879.definitionLine = 720;
              func879.definitionModule = "objectdraw";
                var func888 = function(argcv) {    // method componentOfElementType(_)$object(_)
                  var curarg = 1;
                  var var_tagName = arguments[curarg];
                  curarg++;
                  var inheritingObject = arguments[curarg++];
                  // Start argument processing
                  curarg = 1;
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in componentOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  // End argument processing
                  setModuleName("objectdraw");
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var obj889 = Grace_allocObject(null, "componentOfElementType(1)");
                  obj889.definitionModule = "objectdraw";
                  obj889.definitionLine = 720;
                  var inho889 = inheritingObject;
                  while (inho889.superobj) inho889 = inho889.superobj;
                  inho889.superobj = obj889;
                  obj889.data = inheritingObject.data;
                  if (inheritingObject.hasOwnProperty('_value'))
                    obj889._value = inheritingObject._value;
                  obj889.outer = this;
                  var reader_objectdraw_outer890 = function() {
                    return this.outer;
                  };
                  obj889.methods["outer"] = reader_objectdraw_outer890;
                  var obj_init_889 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj889;
                    setLineNumber(723);    // compilenode identifier
                    // call case 6: other requests
                    var call893 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                    // call case 6: other requests
                    setLineNumber(0);    // compilenode member
                    // call case 3: self.outer request
                    var call895 = callmethodChecked(superDepth, "outer", [0]);
                    onSelf = true;
                    var call896 = callmethodChecked(call895, "componentFromElement(1)$object(1)", [1, 1], call893, this);
                    obj889.superobj = call896;
                    if (call896.data) obj889.data = call896.data;
                    if (call896.hasOwnProperty('_value'))
                        obj889._value = call896._value;
                    superDepth = origSuperDepth;
                  };
                  obj_init_889.apply(inheritingObject, []);
                  return obj889;
                  };
                  func888.paramTypes = [];
                  func888.paramTypes.push([type_String, "tagName"]);
                  this.methods["componentOfElementType(1)$object(1)"] = func888;
                setLineNumber(728);    // compilenode method
                var func897 = function(argcv) {    // method containerOfElementType(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_tagName = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in containerOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("objectdraw");
                  var obj898 = Grace_allocObject(null, "containerOfElementType(_)");
                  obj898.definitionModule = "objectdraw";
                  obj898.definitionLine = 728;
                  obj898.outer = this;
                  var reader_objectdraw_outer899 = function() {
                    return this.outer;
                  };
                  obj898.methods["outer"] = reader_objectdraw_outer899;
                  var obj_init_898 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj898;
                    setLineNumber(729);    // compilenode identifier
                    // call case 6: other requests
                    var call902 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                    // call case 6: other requests
                    setLineNumber(0);    // compilenode member
                    // call case 3: self.outer request
                    var call904 = callmethodChecked(superDepth, "outer", [0]);
                    onSelf = true;
                    var call905 = callmethodChecked(call904, "containerFromElement(1)$object(1)", [1, 1], call902, this);
                    obj898.superobj = call905;
                    if (call905.data) obj898.data = call905.data;
                    if (call905.hasOwnProperty('_value'))
                        obj898._value = call905._value;
                    superDepth = origSuperDepth;
                  };
                  obj_init_898.apply(obj898, []);
                  setLineNumber(728);    // return value
                  if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], obj898)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method containerOfElementType(_) does not have " + 
                              callmethod(var_Component, "asString", [0])._value + "."));
                  return obj898;
                };
                func897.paramTypes = [];
                func897.paramTypes.push([type_String, "tagName"]);
                func897.paramCounts = [1];
                this.methods["containerOfElementType(1)"] = func897;
                func897.definitionLine = 728;
                func897.definitionModule = "objectdraw";
                  var func906 = function(argcv) {    // method containerOfElementType(_)$object(_)
                    var curarg = 1;
                    var var_tagName = arguments[curarg];
                    curarg++;
                    var inheritingObject = arguments[curarg++];
                    // Start argument processing
                    curarg = 1;
                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in containerOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    curarg++;
                    // End argument processing
                    setModuleName("objectdraw");
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var obj907 = Grace_allocObject(null, "containerOfElementType(1)");
                    obj907.definitionModule = "objectdraw";
                    obj907.definitionLine = 728;
                    var inho907 = inheritingObject;
                    while (inho907.superobj) inho907 = inho907.superobj;
                    inho907.superobj = obj907;
                    obj907.data = inheritingObject.data;
                    if (inheritingObject.hasOwnProperty('_value'))
                      obj907._value = inheritingObject._value;
                    obj907.outer = this;
                    var reader_objectdraw_outer908 = function() {
                      return this.outer;
                    };
                    obj907.methods["outer"] = reader_objectdraw_outer908;
                    var obj_init_907 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj907;
                      setLineNumber(729);    // compilenode identifier
                      // call case 6: other requests
                      var call911 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                      // call case 6: other requests
                      setLineNumber(0);    // compilenode member
                      // call case 3: self.outer request
                      var call913 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call914 = callmethodChecked(call913, "containerFromElement(1)$object(1)", [1, 1], call911, this);
                      obj907.superobj = call914;
                      if (call914.data) obj907.data = call914.data;
                      if (call914.hasOwnProperty('_value'))
                          obj907._value = call914._value;
                      superDepth = origSuperDepth;
                    };
                    obj_init_907.apply(inheritingObject, []);
                    return obj907;
                    };
                    func906.paramTypes = [];
                    func906.paramTypes.push([type_String, "tagName"]);
                    this.methods["containerOfElementType(1)$object(1)"] = func906;
                  setLineNumber(733);    // compilenode method
                  var func915 = function(argcv) {    // method containerFromElement(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_element__39__ = arguments[curarg];
                    curarg++;
                    setModuleName("objectdraw");
                    var obj916 = Grace_allocObject(null, "containerFromElement(_)");
                    obj916.definitionModule = "objectdraw";
                    obj916.definitionLine = 733;
                    obj916.outer = this;
                    var reader_objectdraw_outer917 = function() {
                      return this.outer;
                    };
                    obj916.methods["outer"] = reader_objectdraw_outer917;
                    var obj_init_916 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj916;
                      var func918 = function(argcv) {    // method size
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(740);    // compilenode member
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call921 = callmethodChecked(this, "children", []);
                        var call922 = callmethodChecked(call921, "size", []);
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call922)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method size does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        return call922;
                      };
                      func918.paramCounts = [0];
                      obj916.methods["size"] = func918;
                      func918.definitionLine = 739;
                      func918.definitionModule = "objectdraw";
                      var func923 = function(argcv) {    // method isEmpty
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(745);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call926 = callmethodChecked(this, "size", []);
                        var opresult928 = callmethodChecked(call926, "==(1)", [1], new GraceNum(0));
                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult928)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method isEmpty does not have " + 
                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                        return opresult928;
                      };
                      func923.paramCounts = [0];
                      obj916.methods["isEmpty"] = func923;
                      func923.definitionLine = 744;
                      func923.definitionModule = "objectdraw";
                      var func929 = function(argcv) {    // method at(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_index = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(749);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        var if930 = GraceDone;
                        setLineNumber(750);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call932 = callmethodChecked(this, "size", []);
                        var opresult935 = callmethodChecked(var_index, ">(1)", [1], call932);
                        var opresult939 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                        var opresult941 = callmethodChecked(opresult939, "||(1)", [1], opresult935);
                        if (Grace_isTrue(opresult941)) {
                          setLineNumber(751);    // compilenode identifier
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call946 = callmethodChecked(superDepth, "outer", [0]);
                          onSelf = true;
                          var call947 = callmethodChecked(call946, "collections", []);
                          var call948 = callmethodChecked(call947, "BoundsError", []);
                          var call949 = callmethodChecked(call948, "raiseForIndex(1)", [1], var_index);
                          if930 = call949;
                        }
                        setLineNumber(754);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call952 = callmethodChecked(this, "children", []);
                        var call953 = callmethodChecked(call952, "at(1)", [1], var_index);
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], call953)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method at(_) does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        return call953;
                      };
                      func929.paramTypes = [];
                      func929.paramTypes.push([type_Number, "index"]);
                      func929.paramCounts = [1];
                      obj916.methods["at(1)"] = func929;
                      func929.definitionLine = 749;
                      func929.definitionModule = "objectdraw";
                      var func954 = function(argcv) {    // method at(_)put(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_index = arguments[curarg];
                        curarg++;
                        var var_aComponent = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(758);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in put (arg list 2), which corresponds to parameter aComponent, does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        var if955 = GraceDone;
                        setLineNumber(759);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call958 = callmethodChecked(this, "size", []);
                        var opresult960 = callmethodChecked(call958, "+(1)", [1], new GraceNum(1));
                        var opresult963 = callmethodChecked(var_index, ">(1)", [1], opresult960);
                        var opresult967 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                        var opresult969 = callmethodChecked(opresult967, "||(1)", [1], opresult963);
                        if (Grace_isTrue(opresult969)) {
                          setLineNumber(760);    // compilenode identifier
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call973 = callmethodChecked(superDepth, "outer", [0]);
                          onSelf = true;
                          var call974 = callmethodChecked(call973, "BoundsError", []);
                          var call975 = callmethodChecked(call974, "raiseForIndex(1)", [1], var_index);
                          if955 = call975;
                        }
                        var if976 = GraceDone;
                        setLineNumber(763);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call979 = callmethodChecked(this, "size", []);
                        var opresult981 = callmethodChecked(call979, "+(1)", [1], new GraceNum(1));
                        var opresult984 = callmethodChecked(var_index, "==(1)", [1], opresult981);
                        if (Grace_isTrue(opresult984)) {
                          setLineNumber(764);    // compilenode member
                          // call case 6: other requests
                          var call987 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call989 = callmethodChecked(this, "element", []);
                          var call990 = callmethodChecked(call989, "appendChild(1)", [1], call987);
                          if976 = call990;
                        } else {
                          setLineNumber(766);    // compilenode member
                          // call case 6: other requests
                          var call993 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call997 = callmethodChecked(this, "children", []);
                          var call998 = callmethodChecked(call997, "at(1)", [1], var_index);
                          var call999 = callmethodChecked(call998, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1001 = callmethodChecked(this, "element", []);
                          var call1002 = callmethodChecked(call1001, "insertBefore(2)", [2], call993, call999);
                          if976 = call1002;
                        }
                        setLineNumber(769);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1005 = callmethodChecked(this, "children", []);
                        var call1006 = callmethodChecked(call1005, "at(1)put(1)", [1, 1], var_index, var_aComponent);
                        setLineNumber(771);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method at(_)put(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return var_done;
                      };
                      func954.paramTypes = [];
                      func954.paramTypes.push([type_Number, "index"]);
                      func954.paramTypes.push([]);
                      func954.paramCounts = [1, 1];
                      obj916.methods["at(1)put(1)"] = func954;
                      func954.definitionLine = 758;
                      func954.definitionModule = "objectdraw";
                      var func1007 = function(argcv) {    // method append(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_aComponent = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(775);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        setLineNumber(776);    // compilenode member
                        // call case 6: other requests
                        var call1010 = callmethodChecked(var_aComponent, "element", []);
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1012 = callmethodChecked(this, "element", []);
                        var call1013 = callmethodChecked(call1012, "appendChild(1)", [1], call1010);
                        setLineNumber(778);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1016 = callmethodChecked(this, "children", []);
                        var call1017 = callmethodChecked(call1016, "push(1)", [1], var_aComponent);
                        setLineNumber(780);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method append(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return var_done;
                      };
                      func1007.paramTypes = [];
                      func1007.paramTypes.push([]);
                      func1007.paramCounts = [1];
                      obj916.methods["append(1)"] = func1007;
                      func1007.definitionLine = 775;
                      func1007.definitionModule = "objectdraw";
                      var func1018 = function(argcv) {    // method prepend(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_aComponent = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(784);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        var if1019 = GraceDone;
                        setLineNumber(785);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1021 = callmethodChecked(this, "isEmpty", []);
                        if (Grace_isTrue(call1021)) {
                          setLineNumber(786);    // compilenode member
                          // call case 6: other requests
                          var call1024 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1026 = callmethodChecked(this, "element", []);
                          var call1027 = callmethodChecked(call1026, "appendChild(1)", [1], call1024);
                          if1019 = call1027;
                        } else {
                          setLineNumber(788);    // compilenode member
                          // call case 6: other requests
                          var call1030 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1033 = callmethodChecked(this, "element", []);
                          var call1034 = callmethodChecked(call1033, "firstChild", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1036 = callmethodChecked(this, "element", []);
                          var call1037 = callmethodChecked(call1036, "insertBefore(2)", [2], call1030, call1034);
                          if1019 = call1037;
                        }
                        setLineNumber(791);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1040 = callmethodChecked(this, "children", []);
                        var call1041 = callmethodChecked(call1040, "unshift(1)", [1], var_aComponent);
                        setLineNumber(793);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method prepend(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return var_done;
                      };
                      func1018.paramTypes = [];
                      func1018.paramTypes.push([]);
                      func1018.paramCounts = [1];
                      obj916.methods["prepend(1)"] = func1018;
                      func1018.definitionLine = 784;
                      func1018.definitionModule = "objectdraw";
                      var func1042 = function(argcv) {    // method do(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_f = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(797);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in do (arg list 1), which corresponds to parameter f, does not have " + 
                                    callmethod(var_Procedure, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        setLineNumber(798);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1045 = callmethodChecked(this, "children", []);
                        var block1046 = new GraceBlock(this, 798, 1);
                        setLineNumber(0);    // compilenode string
                        var string1049 = new GraceString("aComponent");
                        // call case 6: other requests
                        // call case 5: prelude request
                        var call1051 = callmethodChecked(var_prelude, "VariablePattern", []);
                        var call1052 = callmethodChecked(call1051, "new(1)", [1], string1049);
                        setLineNumber(798);    // compilenode identifier
                        // call case 6: other requests
                        setLineNumber(0);    // compilenode member
                        // call case 5: prelude request
                        var call1054 = callmethodChecked(var_prelude, "AndPattern", []);
                        var call1055 = callmethodChecked(call1054, "new(2)", [2], call1052, var_Component);
                        block1046.pattern = call1055;
                        setLineNumber(798);    // compilenode identifier
                        block1046.paramTypes = [var_Component];
                        block1046.real = function(var_aComponent) {
                          setLineNumber(799);    // compilenode identifier
                          // call case 6: other requests
                          var call1057 = callmethodChecked(var_f, "apply(1)", [1], var_aComponent);
                          return call1057;
                        };
                        // call case 5: prelude request
                        var call1058 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1045, block1046);
                        setLineNumber(798);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1058)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method do(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1058;
                      };
                      func1042.paramCounts = [1];
                      obj916.methods["do(1)"] = func1042;
                      func1042.definitionLine = 797;
                      func1042.definitionModule = "objectdraw";
                      var func1059 = function(argcv) {    // method fold(_)startingWith(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_f = arguments[curarg];
                        curarg++;
                        var var_initial = arguments[curarg];
                        curarg++;
                        // Start type arguments
                        var var_T = var_Unknown;
                        if (argcv.length == 3) {
                          if (argcv[2] !== 1) {
                            throw new GraceExceptionPacket(ProgrammingErrorObject, 
                                new GraceString("wrong number of type arguments for fold(_)startingWith(_)"));
                          }
                          var_T = arguments[curarg++];
                        }
                        // End type arguments
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(805);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Function2, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in fold (arg list 1), which corresponds to parameter f, does not have " + 
                                    callmethod(var_Function2, "asString", [0])._value + "."));
                        curarg++;
                        setLineNumber(806);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_T, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in startingWith (arg list 2), which corresponds to parameter initial, does not have " + 
                                    callmethod(var_T, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        setLineNumber(807);    // compilenode identifier
                        var var_value = var_initial;
                        if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                          throw new GraceExceptionPacket(TypeErrorObject,
                              new GraceString("initial value of var 'value' is not of type T"));
                        setLineNumber(809);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1062 = callmethodChecked(this, "children", []);
                        var block1063 = new GraceBlock(this, 809, 1);
                        setLineNumber(0);    // compilenode string
                        var string1066 = new GraceString("aComponent");
                        // call case 6: other requests
                        // call case 5: prelude request
                        var call1068 = callmethodChecked(var_prelude, "VariablePattern", []);
                        var call1069 = callmethodChecked(call1068, "new(1)", [1], string1066);
                        setLineNumber(809);    // compilenode identifier
                        // call case 6: other requests
                        setLineNumber(0);    // compilenode member
                        // call case 5: prelude request
                        var call1071 = callmethodChecked(var_prelude, "AndPattern", []);
                        var call1072 = callmethodChecked(call1071, "new(2)", [2], call1069, var_Component);
                        block1063.pattern = call1072;
                        setLineNumber(809);    // compilenode identifier
                        block1063.paramTypes = [var_Component];
                        block1063.real = function(var_aComponent) {
                          setLineNumber(810);    // compilenode identifier
                          // call case 6: other requests
                          var call1074 = callmethodChecked(var_f, "apply(2)", [2], var_value, var_aComponent);
                          var_value = call1074;
                          return GraceDone;
                        };
                        // call case 5: prelude request
                        var call1075 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1062, block1063);
                        setLineNumber(813);    // return value
                        if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method fold(_)startingWith(_) does not have " + 
                                    callmethod(var_T, "asString", [0])._value + "."));
                        return var_value;
                      };
                      func1059.paramTypes = [];
                      func1059.paramTypes.push([]);
                      func1059.paramTypes.push([]);
                      func1059.paramCounts = [1, 1];
                      obj916.methods["fold(1)startingWith(1)"] = func1059;
                      func1059.definitionLine = 805;
                      func1059.definitionModule = "objectdraw";
                      var func1076 = function(argcv) {    // method flex
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(818);    // compilenode string
                        var string1078 = new GraceString("inline-flex");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1081 = callmethodChecked(this, "element", []);
                        var call1082 = callmethodChecked(call1081, "style", []);
                        var call1083 = callmethodChecked(call1082, "display:=(1)", [1], string1078);
                        setLineNumber(819);    // compilenode string
                        var string1085 = new GraceString("center");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1088 = callmethodChecked(this, "element", []);
                        var call1089 = callmethodChecked(call1088, "style", []);
                        var call1090 = callmethodChecked(call1089, "justifyContent:=(1)", [1], string1085);
                        setLineNumber(820);    // compilenode string
                        var string1092 = new GraceString("row wrap");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1095 = callmethodChecked(this, "element", []);
                        var call1096 = callmethodChecked(call1095, "style", []);
                        var call1097 = callmethodChecked(call1096, "flexFlow:=(1)", [1], string1092);
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1097)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method flex does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1097;
                      };
                      func1076.confidential = true;
                      func1076.paramCounts = [0];
                      obj916.methods["flex"] = func1076;
                      func1076.definitionLine = 817;
                      func1076.definitionModule = "objectdraw";
                      var func1098 = function(argcv) {    // method arrangeHorizontal
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(825);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1100 = callmethodChecked(this, "flex", []);
                        setLineNumber(826);    // compilenode string
                        var string1102 = new GraceString("row");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1105 = callmethodChecked(this, "element", []);
                        var call1106 = callmethodChecked(call1105, "style", []);
                        var call1107 = callmethodChecked(call1106, "flexDirection:=(1)", [1], string1102);
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1107)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method arrangeHorizontal does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1107;
                      };
                      func1098.paramCounts = [0];
                      obj916.methods["arrangeHorizontal"] = func1098;
                      func1098.definitionLine = 824;
                      func1098.definitionModule = "objectdraw";
                      var func1108 = function(argcv) {    // method arrangeVertical
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(831);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1110 = callmethodChecked(this, "flex", []);
                        setLineNumber(832);    // compilenode string
                        var string1112 = new GraceString("column");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1115 = callmethodChecked(this, "element", []);
                        var call1116 = callmethodChecked(call1115, "style", []);
                        var call1117 = callmethodChecked(call1116, "flexDirection:=(1)", [1], string1112);
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1117)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method arrangeVertical does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1117;
                      };
                      func1108.paramCounts = [0];
                      obj916.methods["arrangeVertical"] = func1108;
                      func1108.definitionLine = 830;
                      func1108.definitionModule = "objectdraw";
                      var func1118 = function(argcv) {    // method asString
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("objectdraw");
                        setLineNumber(837);    // compilenode string
                        var string1119 = new GraceString(" children");
                        // call case 4: self request
                        onSelf = true;
                        var call1122 = callmethodChecked(this, "size", []);
                        var string1124 = new GraceString("container: with ");
                        var opresult1126 = callmethodChecked(string1124, "++(1)", [1], call1122);
                        var opresult1128 = callmethodChecked(opresult1126, "++(1)", [1], string1119);
                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1128)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method asString does not have " + 
                                    callmethod(var_String, "asString", [0])._value + "."));
                        return opresult1128;
                      };
                      func1118.paramCounts = [0];
                      obj916.methods["asString"] = func1118;
                      func1118.definitionLine = 836;
                      func1118.definitionModule = "objectdraw";
                      setLineNumber(734);    // compilenode identifier
                      // call case 6: other requests
                      setLineNumber(0);    // compilenode member
                      // call case 3: self.outer request
                      var call1131 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call1132 = callmethodChecked(call1131, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                      obj916.superobj = call1132;
                      if (call1132.data) obj916.data = call1132.data;
                      if (call1132.hasOwnProperty('_value'))
                          obj916._value = call1132._value;
                      setLineNumber(736);    // compilenode array
                      var array1133 = new PrimitiveGraceList([]);
                      obj916.data["children"] = array1133;
                      var reader_objectdraw_children1134 = function() {
                        return this.data["children"];
                      };
                      reader_objectdraw_children1134.def = true;
                      reader_objectdraw_children1134.confidential = true;
                      obj916.methods["children"] = reader_objectdraw_children1134;
                      superDepth = origSuperDepth;
                    };
                    obj_init_916.apply(obj916, []);
                    setLineNumber(733);    // return value
                    if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], obj916)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method containerFromElement(_) does not have " + 
                                callmethod(var_Container, "asString", [0])._value + "."));
                    return obj916;
                  };
                  func915.paramCounts = [1];
                  this.methods["containerFromElement(1)"] = func915;
                  func915.definitionLine = 733;
                  func915.definitionModule = "objectdraw";
                    var func1135 = function(argcv) {    // method containerFromElement(_)$object(_)
                      var curarg = 1;
                      var var_element__39__ = arguments[curarg];
                      curarg++;
                      var inheritingObject = arguments[curarg++];
                      // Start argument processing
                      curarg = 1;
                      curarg++;
                      // End argument processing
                      setModuleName("objectdraw");
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var obj1136 = Grace_allocObject(null, "containerFromElement(1)");
                      obj1136.definitionModule = "objectdraw";
                      obj1136.definitionLine = 733;
                      var inho1136 = inheritingObject;
                      while (inho1136.superobj) inho1136 = inho1136.superobj;
                      inho1136.superobj = obj1136;
                      obj1136.data = inheritingObject.data;
                      if (inheritingObject.hasOwnProperty('_value'))
                        obj1136._value = inheritingObject._value;
                      obj1136.outer = this;
                      var reader_objectdraw_outer1137 = function() {
                        return this.outer;
                      };
                      obj1136.methods["outer"] = reader_objectdraw_outer1137;
                      var obj_init_1136 = function() {
                        var origSuperDepth = superDepth;
                        superDepth = obj1136;
                        var func1138 = function(argcv) {    // method size
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("objectdraw");
                          setLineNumber(740);    // compilenode member
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1141 = callmethodChecked(this, "children", []);
                          var call1142 = callmethodChecked(call1141, "size", []);
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call1142)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method size does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          return call1142;
                        };
                        func1138.paramCounts = [0];
                        obj1136.methods["size"] = func1138;
                        func1138.definitionLine = 739;
                        func1138.definitionModule = "objectdraw";
                        var func1143 = function(argcv) {    // method isEmpty
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("objectdraw");
                          setLineNumber(745);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1146 = callmethodChecked(this, "size", []);
                          var opresult1148 = callmethodChecked(call1146, "==(1)", [1], new GraceNum(0));
                          if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult1148)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method isEmpty does not have " + 
                                      callmethod(var_Boolean, "asString", [0])._value + "."));
                          return opresult1148;
                        };
                        func1143.paramCounts = [0];
                        obj1136.methods["isEmpty"] = func1143;
                        func1143.definitionLine = 744;
                        func1143.definitionModule = "objectdraw";
                        var func1149 = function(argcv) {    // method at(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_index = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(749);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("objectdraw");
                          var if1150 = GraceDone;
                          setLineNumber(750);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1152 = callmethodChecked(this, "size", []);
                          var opresult1155 = callmethodChecked(var_index, ">(1)", [1], call1152);
                          var opresult1159 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                          var opresult1161 = callmethodChecked(opresult1159, "||(1)", [1], opresult1155);
                          if (Grace_isTrue(opresult1161)) {
                            setLineNumber(751);    // compilenode identifier
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 3: self.outer request
                            var call1166 = callmethodChecked(superDepth, "outer", [0]);
                            onSelf = true;
                            var call1167 = callmethodChecked(call1166, "collections", []);
                            var call1168 = callmethodChecked(call1167, "BoundsError", []);
                            var call1169 = callmethodChecked(call1168, "raiseForIndex(1)", [1], var_index);
                            if1150 = call1169;
                          }
                          setLineNumber(754);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1172 = callmethodChecked(this, "children", []);
                          var call1173 = callmethodChecked(call1172, "at(1)", [1], var_index);
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], call1173)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method at(_) does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          return call1173;
                        };
                        func1149.paramTypes = [];
                        func1149.paramTypes.push([type_Number, "index"]);
                        func1149.paramCounts = [1];
                        obj1136.methods["at(1)"] = func1149;
                        func1149.definitionLine = 749;
                        func1149.definitionModule = "objectdraw";
                        var func1174 = function(argcv) {    // method at(_)put(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_index = arguments[curarg];
                          curarg++;
                          var var_aComponent = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(758);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in put (arg list 2), which corresponds to parameter aComponent, does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("objectdraw");
                          var if1175 = GraceDone;
                          setLineNumber(759);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1178 = callmethodChecked(this, "size", []);
                          var opresult1180 = callmethodChecked(call1178, "+(1)", [1], new GraceNum(1));
                          var opresult1183 = callmethodChecked(var_index, ">(1)", [1], opresult1180);
                          var opresult1187 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                          var opresult1189 = callmethodChecked(opresult1187, "||(1)", [1], opresult1183);
                          if (Grace_isTrue(opresult1189)) {
                            setLineNumber(760);    // compilenode identifier
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 3: self.outer request
                            var call1193 = callmethodChecked(superDepth, "outer", [0]);
                            onSelf = true;
                            var call1194 = callmethodChecked(call1193, "BoundsError", []);
                            var call1195 = callmethodChecked(call1194, "raiseForIndex(1)", [1], var_index);
                            if1175 = call1195;
                          }
                          var if1196 = GraceDone;
                          setLineNumber(763);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1199 = callmethodChecked(this, "size", []);
                          var opresult1201 = callmethodChecked(call1199, "+(1)", [1], new GraceNum(1));
                          var opresult1204 = callmethodChecked(var_index, "==(1)", [1], opresult1201);
                          if (Grace_isTrue(opresult1204)) {
                            setLineNumber(764);    // compilenode member
                            // call case 6: other requests
                            var call1207 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1209 = callmethodChecked(this, "element", []);
                            var call1210 = callmethodChecked(call1209, "appendChild(1)", [1], call1207);
                            if1196 = call1210;
                          } else {
                            setLineNumber(766);    // compilenode member
                            // call case 6: other requests
                            var call1213 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1217 = callmethodChecked(this, "children", []);
                            var call1218 = callmethodChecked(call1217, "at(1)", [1], var_index);
                            var call1219 = callmethodChecked(call1218, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1221 = callmethodChecked(this, "element", []);
                            var call1222 = callmethodChecked(call1221, "insertBefore(2)", [2], call1213, call1219);
                            if1196 = call1222;
                          }
                          setLineNumber(769);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1225 = callmethodChecked(this, "children", []);
                          var call1226 = callmethodChecked(call1225, "at(1)put(1)", [1, 1], var_index, var_aComponent);
                          setLineNumber(771);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method at(_)put(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return var_done;
                        };
                        func1174.paramTypes = [];
                        func1174.paramTypes.push([type_Number, "index"]);
                        func1174.paramTypes.push([]);
                        func1174.paramCounts = [1, 1];
                        obj1136.methods["at(1)put(1)"] = func1174;
                        func1174.definitionLine = 758;
                        func1174.definitionModule = "objectdraw";
                        var func1227 = function(argcv) {    // method append(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_aComponent = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(775);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("objectdraw");
                          setLineNumber(776);    // compilenode member
                          // call case 6: other requests
                          var call1230 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1232 = callmethodChecked(this, "element", []);
                          var call1233 = callmethodChecked(call1232, "appendChild(1)", [1], call1230);
                          setLineNumber(778);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1236 = callmethodChecked(this, "children", []);
                          var call1237 = callmethodChecked(call1236, "push(1)", [1], var_aComponent);
                          setLineNumber(780);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method append(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return var_done;
                        };
                        func1227.paramTypes = [];
                        func1227.paramTypes.push([]);
                        func1227.paramCounts = [1];
                        obj1136.methods["append(1)"] = func1227;
                        func1227.definitionLine = 775;
                        func1227.definitionModule = "objectdraw";
                        var func1238 = function(argcv) {    // method prepend(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_aComponent = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(784);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("objectdraw");
                          var if1239 = GraceDone;
                          setLineNumber(785);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1241 = callmethodChecked(this, "isEmpty", []);
                          if (Grace_isTrue(call1241)) {
                            setLineNumber(786);    // compilenode member
                            // call case 6: other requests
                            var call1244 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1246 = callmethodChecked(this, "element", []);
                            var call1247 = callmethodChecked(call1246, "appendChild(1)", [1], call1244);
                            if1239 = call1247;
                          } else {
                            setLineNumber(788);    // compilenode member
                            // call case 6: other requests
                            var call1250 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1253 = callmethodChecked(this, "element", []);
                            var call1254 = callmethodChecked(call1253, "firstChild", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1256 = callmethodChecked(this, "element", []);
                            var call1257 = callmethodChecked(call1256, "insertBefore(2)", [2], call1250, call1254);
                            if1239 = call1257;
                          }
                          setLineNumber(791);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1260 = callmethodChecked(this, "children", []);
                          var call1261 = callmethodChecked(call1260, "unshift(1)", [1], var_aComponent);
                          setLineNumber(793);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method prepend(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return var_done;
                        };
                        func1238.paramTypes = [];
                        func1238.paramTypes.push([]);
                        func1238.paramCounts = [1];
                        obj1136.methods["prepend(1)"] = func1238;
                        func1238.definitionLine = 784;
                        func1238.definitionModule = "objectdraw";
                        var func1262 = function(argcv) {    // method do(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_f = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(797);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in do (arg list 1), which corresponds to parameter f, does not have " + 
                                      callmethod(var_Procedure, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("objectdraw");
                          setLineNumber(798);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1265 = callmethodChecked(this, "children", []);
                          var block1266 = new GraceBlock(this, 798, 1);
                          setLineNumber(0);    // compilenode string
                          var string1269 = new GraceString("aComponent");
                          // call case 6: other requests
                          // call case 5: prelude request
                          var call1271 = callmethodChecked(var_prelude, "VariablePattern", []);
                          var call1272 = callmethodChecked(call1271, "new(1)", [1], string1269);
                          setLineNumber(798);    // compilenode identifier
                          // call case 6: other requests
                          setLineNumber(0);    // compilenode member
                          // call case 5: prelude request
                          var call1274 = callmethodChecked(var_prelude, "AndPattern", []);
                          var call1275 = callmethodChecked(call1274, "new(2)", [2], call1272, var_Component);
                          block1266.pattern = call1275;
                          setLineNumber(798);    // compilenode identifier
                          block1266.paramTypes = [var_Component];
                          block1266.real = function(var_aComponent) {
                            setLineNumber(799);    // compilenode identifier
                            // call case 6: other requests
                            var call1277 = callmethodChecked(var_f, "apply(1)", [1], var_aComponent);
                            return call1277;
                          };
                          // call case 5: prelude request
                          var call1278 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1265, block1266);
                          setLineNumber(798);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1278)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method do(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1278;
                        };
                        func1262.paramCounts = [1];
                        obj1136.methods["do(1)"] = func1262;
                        func1262.definitionLine = 797;
                        func1262.definitionModule = "objectdraw";
                        var func1279 = function(argcv) {    // method fold(_)startingWith(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_f = arguments[curarg];
                          curarg++;
                          var var_initial = arguments[curarg];
                          curarg++;
                          // Start type arguments
                          var var_T = var_Unknown;
                          if (argcv.length == 3) {
                            if (argcv[2] !== 1) {
                              throw new GraceExceptionPacket(ProgrammingErrorObject, 
                                  new GraceString("wrong number of type arguments for fold(_)startingWith(_)"));
                            }
                            var_T = arguments[curarg++];
                          }
                          // End type arguments
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(805);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Function2, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in fold (arg list 1), which corresponds to parameter f, does not have " + 
                                      callmethod(var_Function2, "asString", [0])._value + "."));
                          curarg++;
                          setLineNumber(806);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_T, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in startingWith (arg list 2), which corresponds to parameter initial, does not have " + 
                                      callmethod(var_T, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("objectdraw");
                          setLineNumber(807);    // compilenode identifier
                          var var_value = var_initial;
                          if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("initial value of var 'value' is not of type T"));
                          setLineNumber(809);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1282 = callmethodChecked(this, "children", []);
                          var block1283 = new GraceBlock(this, 809, 1);
                          setLineNumber(0);    // compilenode string
                          var string1286 = new GraceString("aComponent");
                          // call case 6: other requests
                          // call case 5: prelude request
                          var call1288 = callmethodChecked(var_prelude, "VariablePattern", []);
                          var call1289 = callmethodChecked(call1288, "new(1)", [1], string1286);
                          setLineNumber(809);    // compilenode identifier
                          // call case 6: other requests
                          setLineNumber(0);    // compilenode member
                          // call case 5: prelude request
                          var call1291 = callmethodChecked(var_prelude, "AndPattern", []);
                          var call1292 = callmethodChecked(call1291, "new(2)", [2], call1289, var_Component);
                          block1283.pattern = call1292;
                          setLineNumber(809);    // compilenode identifier
                          block1283.paramTypes = [var_Component];
                          block1283.real = function(var_aComponent) {
                            setLineNumber(810);    // compilenode identifier
                            // call case 6: other requests
                            var call1294 = callmethodChecked(var_f, "apply(2)", [2], var_value, var_aComponent);
                            var_value = call1294;
                            return GraceDone;
                          };
                          // call case 5: prelude request
                          var call1295 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1282, block1283);
                          setLineNumber(813);    // return value
                          if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method fold(_)startingWith(_) does not have " + 
                                      callmethod(var_T, "asString", [0])._value + "."));
                          return var_value;
                        };
                        func1279.paramTypes = [];
                        func1279.paramTypes.push([]);
                        func1279.paramTypes.push([]);
                        func1279.paramCounts = [1, 1];
                        obj1136.methods["fold(1)startingWith(1)"] = func1279;
                        func1279.definitionLine = 805;
                        func1279.definitionModule = "objectdraw";
                        var func1296 = function(argcv) {    // method flex
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("objectdraw");
                          setLineNumber(818);    // compilenode string
                          var string1298 = new GraceString("inline-flex");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1301 = callmethodChecked(this, "element", []);
                          var call1302 = callmethodChecked(call1301, "style", []);
                          var call1303 = callmethodChecked(call1302, "display:=(1)", [1], string1298);
                          setLineNumber(819);    // compilenode string
                          var string1305 = new GraceString("center");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1308 = callmethodChecked(this, "element", []);
                          var call1309 = callmethodChecked(call1308, "style", []);
                          var call1310 = callmethodChecked(call1309, "justifyContent:=(1)", [1], string1305);
                          setLineNumber(820);    // compilenode string
                          var string1312 = new GraceString("row wrap");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1315 = callmethodChecked(this, "element", []);
                          var call1316 = callmethodChecked(call1315, "style", []);
                          var call1317 = callmethodChecked(call1316, "flexFlow:=(1)", [1], string1312);
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1317)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method flex does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1317;
                        };
                        func1296.confidential = true;
                        func1296.paramCounts = [0];
                        obj1136.methods["flex"] = func1296;
                        func1296.definitionLine = 817;
                        func1296.definitionModule = "objectdraw";
                        var func1318 = function(argcv) {    // method arrangeHorizontal
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("objectdraw");
                          setLineNumber(825);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1320 = callmethodChecked(this, "flex", []);
                          setLineNumber(826);    // compilenode string
                          var string1322 = new GraceString("row");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1325 = callmethodChecked(this, "element", []);
                          var call1326 = callmethodChecked(call1325, "style", []);
                          var call1327 = callmethodChecked(call1326, "flexDirection:=(1)", [1], string1322);
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1327)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method arrangeHorizontal does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1327;
                        };
                        func1318.paramCounts = [0];
                        obj1136.methods["arrangeHorizontal"] = func1318;
                        func1318.definitionLine = 824;
                        func1318.definitionModule = "objectdraw";
                        var func1328 = function(argcv) {    // method arrangeVertical
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("objectdraw");
                          setLineNumber(831);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1330 = callmethodChecked(this, "flex", []);
                          setLineNumber(832);    // compilenode string
                          var string1332 = new GraceString("column");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1335 = callmethodChecked(this, "element", []);
                          var call1336 = callmethodChecked(call1335, "style", []);
                          var call1337 = callmethodChecked(call1336, "flexDirection:=(1)", [1], string1332);
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1337)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method arrangeVertical does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1337;
                        };
                        func1328.paramCounts = [0];
                        obj1136.methods["arrangeVertical"] = func1328;
                        func1328.definitionLine = 830;
                        func1328.definitionModule = "objectdraw";
                        var func1338 = function(argcv) {    // method asString
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("objectdraw");
                          setLineNumber(837);    // compilenode string
                          var string1339 = new GraceString(" children");
                          // call case 4: self request
                          onSelf = true;
                          var call1342 = callmethodChecked(this, "size", []);
                          var string1344 = new GraceString("container: with ");
                          var opresult1346 = callmethodChecked(string1344, "++(1)", [1], call1342);
                          var opresult1348 = callmethodChecked(opresult1346, "++(1)", [1], string1339);
                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1348)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method asString does not have " + 
                                      callmethod(var_String, "asString", [0])._value + "."));
                          return opresult1348;
                        };
                        func1338.paramCounts = [0];
                        obj1136.methods["asString"] = func1338;
                        func1338.definitionLine = 836;
                        func1338.definitionModule = "objectdraw";
                        setLineNumber(734);    // compilenode identifier
                        // call case 6: other requests
                        setLineNumber(0);    // compilenode member
                        // call case 3: self.outer request
                        var call1351 = callmethodChecked(superDepth, "outer", [0]);
                        onSelf = true;
                        var call1352 = callmethodChecked(call1351, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                        obj1136.superobj = call1352;
                        if (call1352.data) obj1136.data = call1352.data;
                        if (call1352.hasOwnProperty('_value'))
                            obj1136._value = call1352._value;
                        setLineNumber(736);    // compilenode array
                        var array1353 = new PrimitiveGraceList([]);
                        obj1136.data["children"] = array1353;
                        var reader_objectdraw_children1354 = function() {
                          return this.data["children"];
                        };
                        reader_objectdraw_children1354.def = true;
                        reader_objectdraw_children1354.confidential = true;
                        obj1136.methods["children"] = reader_objectdraw_children1354;
                        superDepth = origSuperDepth;
                      };
                      obj_init_1136.apply(inheritingObject, []);
                      return obj1136;
                      };
                      this.methods["containerFromElement(1)$object(1)"] = func1135;
                    setLineNumber(842);    // compilenode method
                    var func1355 = function(argcv) {    // method emptyContainer
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var curarg = 1;
                      setModuleName("objectdraw");
                      var obj1356 = Grace_allocObject(null, "emptyContainer");
                      obj1356.definitionModule = "objectdraw";
                      obj1356.definitionLine = 842;
                      obj1356.outer = this;
                      var reader_objectdraw_outer1357 = function() {
                        return this.outer;
                      };
                      obj1356.methods["outer"] = reader_objectdraw_outer1357;
                      var obj_init_1356 = function() {
                        var origSuperDepth = superDepth;
                        superDepth = obj1356;
                        setLineNumber(843);    // compilenode string
                        var string1359 = new GraceString("div");
                        setLineNumber(0);    // compilenode identifier
                        // call case 6: other requests
                        // call case 3: self.outer request
                        var call1361 = callmethodChecked(superDepth, "outer", [0]);
                        onSelf = true;
                        var call1362 = callmethodChecked(call1361, "containerOfElementType(1)$object(1)", [1, 1], string1359, this);
                        obj1356.superobj = call1362;
                        if (call1362.data) obj1356.data = call1362.data;
                        if (call1362.hasOwnProperty('_value'))
                            obj1356._value = call1362._value;
                        setLineNumber(845);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1364 = callmethodChecked(this, "arrangeHorizontal", []);
                        superDepth = origSuperDepth;
                      };
                      obj_init_1356.apply(obj1356, []);
                      setLineNumber(842);    // return value
                      if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], obj1356)))
                          throw new GraceExceptionPacket(TypeErrorObject,
                              new GraceString("result of method emptyContainer does not have " + 
                                  callmethod(var_Container, "asString", [0])._value + "."));
                      return obj1356;
                    };
                    func1355.paramCounts = [0];
                    this.methods["emptyContainer"] = func1355;
                    func1355.definitionLine = 842;
                    func1355.definitionModule = "objectdraw";
                      var func1365 = function(argcv) {    // method emptyContainer$object(_)
                        var curarg = 1;
                        var inheritingObject = arguments[curarg++];
                        // Start argument processing
                        curarg = 1;
                        // End argument processing
                        setModuleName("objectdraw");
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var obj1366 = Grace_allocObject(null, "emptyContainer");
                        obj1366.definitionModule = "objectdraw";
                        obj1366.definitionLine = 842;
                        var inho1366 = inheritingObject;
                        while (inho1366.superobj) inho1366 = inho1366.superobj;
                        inho1366.superobj = obj1366;
                        obj1366.data = inheritingObject.data;
                        if (inheritingObject.hasOwnProperty('_value'))
                          obj1366._value = inheritingObject._value;
                        obj1366.outer = this;
                        var reader_objectdraw_outer1367 = function() {
                          return this.outer;
                        };
                        obj1366.methods["outer"] = reader_objectdraw_outer1367;
                        var obj_init_1366 = function() {
                          var origSuperDepth = superDepth;
                          superDepth = obj1366;
                          setLineNumber(843);    // compilenode string
                          var string1369 = new GraceString("div");
                          setLineNumber(0);    // compilenode identifier
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call1371 = callmethodChecked(superDepth, "outer", [0]);
                          onSelf = true;
                          var call1372 = callmethodChecked(call1371, "containerOfElementType(1)$object(1)", [1, 1], string1369, this);
                          obj1366.superobj = call1372;
                          if (call1372.data) obj1366.data = call1372.data;
                          if (call1372.hasOwnProperty('_value'))
                              obj1366._value = call1372._value;
                          setLineNumber(845);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1374 = callmethodChecked(this, "arrangeHorizontal", []);
                          superDepth = origSuperDepth;
                        };
                        obj_init_1366.apply(inheritingObject, []);
                        return obj1366;
                        };
                        this.methods["emptyContainer$object(1)"] = func1365;
                      setLineNumber(849);    // compilenode method
                      var func1375 = function(argcv) {    // method containerSize(_,_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_width__39__ = arguments[curarg];
                        curarg++;
                        var var_height__39__ = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in containerSize (arg list 1), which corresponds to parameter width', does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 2 in containerSize (arg list 1), which corresponds to parameter height', does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("objectdraw");
                        var obj1376 = Grace_allocObject(null, "containerSize(_,_)");
                        obj1376.definitionModule = "objectdraw";
                        obj1376.definitionLine = 849;
                        obj1376.outer = this;
                        var reader_objectdraw_outer1377 = function() {
                          return this.outer;
                        };
                        obj1376.methods["outer"] = reader_objectdraw_outer1377;
                        var obj_init_1376 = function() {
                          var origSuperDepth = superDepth;
                          superDepth = obj1376;
                          setLineNumber(850);    // compilenode identifier
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call1380 = callmethodChecked(superDepth, "outer", [0]);
                          var call1381 = callmethodChecked(call1380, "emptyContainer$object(1)", [0, 1], this);
                          obj1376.superobj = call1381;
                          if (call1381.data) obj1376.data = call1381.data;
                          if (call1381.hasOwnProperty('_value'))
                              obj1376._value = call1381._value;
                          setLineNumber(852);    // compilenode string
                          var string1383 = new GraceString("px");
                          var string1386 = new GraceString("");
                          var opresult1388 = callmethodChecked(string1386, "++(1)", [1], var_width__39__);
                          var opresult1390 = callmethodChecked(opresult1388, "++(1)", [1], string1383);
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1393 = callmethodChecked(this, "element", []);
                          var call1394 = callmethodChecked(call1393, "style", []);
                          var call1395 = callmethodChecked(call1394, "width:=(1)", [1], opresult1390);
                          setLineNumber(853);    // compilenode string
                          var string1397 = new GraceString("px");
                          var string1400 = new GraceString("");
                          var opresult1402 = callmethodChecked(string1400, "++(1)", [1], var_height__39__);
                          var opresult1404 = callmethodChecked(opresult1402, "++(1)", [1], string1397);
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1407 = callmethodChecked(this, "element", []);
                          var call1408 = callmethodChecked(call1407, "style", []);
                          var call1409 = callmethodChecked(call1408, "height:=(1)", [1], opresult1404);
                          setLineNumber(854);    // compilenode string
                          var string1411 = new GraceString("auto");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1414 = callmethodChecked(this, "element", []);
                          var call1415 = callmethodChecked(call1414, "style", []);
                          var call1416 = callmethodChecked(call1415, "overflow:=(1)", [1], string1411);
                          superDepth = origSuperDepth;
                        };
                        obj_init_1376.apply(obj1376, []);
                        setLineNumber(849);    // return value
                        if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], obj1376)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method containerSize(_,_) does not have " + 
                                    callmethod(var_Container, "asString", [0])._value + "."));
                        return obj1376;
                      };
                      func1375.paramTypes = [];
                      func1375.paramTypes.push([type_Number, "width'"]);
                      func1375.paramTypes.push([type_Number, "height'"]);
                      func1375.paramCounts = [2];
                      this.methods["containerSize(2)"] = func1375;
                      func1375.definitionLine = 849;
                      func1375.definitionModule = "objectdraw";
                        var func1417 = function(argcv) {    // method containerSize(_,_)$object(_)
                          var curarg = 1;
                          var var_width__39__ = arguments[curarg];
                          curarg++;
                          var var_height__39__ = arguments[curarg];
                          curarg++;
                          var inheritingObject = arguments[curarg++];
                          // Start argument processing
                          curarg = 1;
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in containerSize (arg list 1), which corresponds to parameter width', does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 2 in containerSize (arg list 1), which corresponds to parameter height', does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          // End argument processing
                          setModuleName("objectdraw");
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var obj1418 = Grace_allocObject(null, "containerSize(2)");
                          obj1418.definitionModule = "objectdraw";
                          obj1418.definitionLine = 849;
                          var inho1418 = inheritingObject;
                          while (inho1418.superobj) inho1418 = inho1418.superobj;
                          inho1418.superobj = obj1418;
                          obj1418.data = inheritingObject.data;
                          if (inheritingObject.hasOwnProperty('_value'))
                            obj1418._value = inheritingObject._value;
                          obj1418.outer = this;
                          var reader_objectdraw_outer1419 = function() {
                            return this.outer;
                          };
                          obj1418.methods["outer"] = reader_objectdraw_outer1419;
                          var obj_init_1418 = function() {
                            var origSuperDepth = superDepth;
                            superDepth = obj1418;
                            setLineNumber(850);    // compilenode identifier
                            // call case 6: other requests
                            // call case 3: self.outer request
                            var call1422 = callmethodChecked(superDepth, "outer", [0]);
                            var call1423 = callmethodChecked(call1422, "emptyContainer$object(1)", [0, 1], this);
                            obj1418.superobj = call1423;
                            if (call1423.data) obj1418.data = call1423.data;
                            if (call1423.hasOwnProperty('_value'))
                                obj1418._value = call1423._value;
                            setLineNumber(852);    // compilenode string
                            var string1425 = new GraceString("px");
                            var string1428 = new GraceString("");
                            var opresult1430 = callmethodChecked(string1428, "++(1)", [1], var_width__39__);
                            var opresult1432 = callmethodChecked(opresult1430, "++(1)", [1], string1425);
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1435 = callmethodChecked(this, "element", []);
                            var call1436 = callmethodChecked(call1435, "style", []);
                            var call1437 = callmethodChecked(call1436, "width:=(1)", [1], opresult1432);
                            setLineNumber(853);    // compilenode string
                            var string1439 = new GraceString("px");
                            var string1442 = new GraceString("");
                            var opresult1444 = callmethodChecked(string1442, "++(1)", [1], var_height__39__);
                            var opresult1446 = callmethodChecked(opresult1444, "++(1)", [1], string1439);
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1449 = callmethodChecked(this, "element", []);
                            var call1450 = callmethodChecked(call1449, "style", []);
                            var call1451 = callmethodChecked(call1450, "height:=(1)", [1], opresult1446);
                            setLineNumber(854);    // compilenode string
                            var string1453 = new GraceString("auto");
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1456 = callmethodChecked(this, "element", []);
                            var call1457 = callmethodChecked(call1456, "style", []);
                            var call1458 = callmethodChecked(call1457, "overflow:=(1)", [1], string1453);
                            superDepth = origSuperDepth;
                          };
                          obj_init_1418.apply(inheritingObject, []);
                          return obj1418;
                          };
                          func1417.paramTypes = [];
                          func1417.paramTypes.push([type_Number, "width'"]);
                          func1417.paramTypes.push([type_Number, "height'"]);
                          this.methods["containerSize(2)$object(1)"] = func1417;
                        setLineNumber(859);    // compilenode method
                        var func1459 = function(argcv) {    // method inputFromElement(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_element__39__ = arguments[curarg];
                          curarg++;
                          setModuleName("objectdraw");
                          var obj1460 = Grace_allocObject(null, "inputFromElement(_)");
                          obj1460.definitionModule = "objectdraw";
                          obj1460.definitionLine = 859;
                          obj1460.outer = this;
                          var reader_objectdraw_outer1461 = function() {
                            return this.outer;
                          };
                          obj1460.methods["outer"] = reader_objectdraw_outer1461;
                          var obj_init_1460 = function() {
                            var origSuperDepth = superDepth;
                            superDepth = obj1460;
                            var func1462 = function(argcv) {    // method onFocusDo(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_f = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              setLineNumber(863);    // compilenode identifier
                              if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in onFocusDo (arg list 1), which corresponds to parameter f, does not have " + 
                                          callmethod(var_Response, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("objectdraw");
                              setLineNumber(864);    // compilenode string
                              var string1464 = new GraceString("focus");
                              var block1465 = new GraceBlock(this, 864, 1);
                              setLineNumber(1);    // compilenode identifier
                              block1465.real = function(var___95____95__21) {
                                setLineNumber(865);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1469 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1470 = callmethodChecked(call1469, "eventSource(1)", [1], this);
                                // call case 6: other requests
                                var call1471 = callmethodChecked(var_f, "apply(1)", [1], call1470);
                                return call1471;
                              };
                              // call case 6: other requests
                              setLineNumber(864);    // compilenode member
                              // call case 4: self request
                              onSelf = true;
                              var call1473 = callmethodChecked(this, "element", []);
                              var call1474 = callmethodChecked(call1473, "addEventListener(2)", [2], string1464, block1465);
                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1474)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method onFocusDo(_) does not have " + 
                                          callmethod(var_Done, "asString", [0])._value + "."));
                              return call1474;
                            };
                            func1462.paramTypes = [];
                            func1462.paramTypes.push([]);
                            func1462.paramCounts = [1];
                            obj1460.methods["onFocusDo(1)"] = func1462;
                            func1462.definitionLine = 863;
                            func1462.definitionModule = "objectdraw";
                            var func1475 = function(argcv) {    // method onBlurDo(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_f = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              setLineNumber(870);    // compilenode identifier
                              if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in onBlurDo (arg list 1), which corresponds to parameter f, does not have " + 
                                          callmethod(var_Response, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("objectdraw");
                              setLineNumber(871);    // compilenode string
                              var string1477 = new GraceString("blur");
                              var block1478 = new GraceBlock(this, 871, 1);
                              setLineNumber(1);    // compilenode identifier
                              block1478.real = function(var___95____95__22) {
                                setLineNumber(872);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1482 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1483 = callmethodChecked(call1482, "eventSource(1)", [1], this);
                                // call case 6: other requests
                                var call1484 = callmethodChecked(var_f, "apply(1)", [1], call1483);
                                return call1484;
                              };
                              // call case 6: other requests
                              setLineNumber(871);    // compilenode member
                              // call case 4: self request
                              onSelf = true;
                              var call1486 = callmethodChecked(this, "element", []);
                              var call1487 = callmethodChecked(call1486, "addEventListener(2)", [2], string1477, block1478);
                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1487)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method onBlurDo(_) does not have " + 
                                          callmethod(var_Done, "asString", [0])._value + "."));
                              return call1487;
                            };
                            func1475.paramTypes = [];
                            func1475.paramTypes.push([]);
                            func1475.paramCounts = [1];
                            obj1460.methods["onBlurDo(1)"] = func1475;
                            func1475.definitionLine = 870;
                            func1475.definitionModule = "objectdraw";
                            var func1488 = function(argcv) {    // method onChangeDo(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_f = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              setLineNumber(877);    // compilenode identifier
                              if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in onChangeDo (arg list 1), which corresponds to parameter f, does not have " + 
                                          callmethod(var_Response, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("objectdraw");
                              setLineNumber(878);    // compilenode string
                              var string1490 = new GraceString("change");
                              var block1491 = new GraceBlock(this, 878, 1);
                              setLineNumber(1);    // compilenode identifier
                              block1491.real = function(var___95____95__23) {
                                setLineNumber(879);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1495 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1496 = callmethodChecked(call1495, "eventSource(1)", [1], this);
                                // call case 6: other requests
                                var call1497 = callmethodChecked(var_f, "apply(1)", [1], call1496);
                                return call1497;
                              };
                              // call case 6: other requests
                              setLineNumber(878);    // compilenode member
                              // call case 4: self request
                              onSelf = true;
                              var call1499 = callmethodChecked(this, "element", []);
                              var call1500 = callmethodChecked(call1499, "addEventListener(2)", [2], string1490, block1491);
                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1500)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method onChangeDo(_) does not have " + 
                                          callmethod(var_Done, "asString", [0])._value + "."));
                              return call1500;
                            };
                            func1488.paramTypes = [];
                            func1488.paramTypes.push([]);
                            func1488.paramCounts = [1];
                            obj1460.methods["onChangeDo(1)"] = func1488;
                            func1488.definitionLine = 877;
                            func1488.definitionModule = "objectdraw";
                            var func1501 = function(argcv) {    // method asString
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              setModuleName("objectdraw");
                              setLineNumber(885);    // compilenode string
                              var string1502 = new GraceString("an input");
                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string1502)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method asString does not have " + 
                                          callmethod(var_String, "asString", [0])._value + "."));
                              return string1502;
                            };
                            func1501.paramCounts = [0];
                            obj1460.methods["asString"] = func1501;
                            func1501.definitionLine = 884;
                            func1501.definitionModule = "objectdraw";
                            setLineNumber(860);    // compilenode identifier
                            // call case 6: other requests
                            setLineNumber(0);    // compilenode member
                            // call case 3: self.outer request
                            var call1505 = callmethodChecked(superDepth, "outer", [0]);
                            onSelf = true;
                            var call1506 = callmethodChecked(call1505, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                            obj1460.superobj = call1506;
                            if (call1506.data) obj1460.data = call1506.data;
                            if (call1506.hasOwnProperty('_value'))
                                obj1460._value = call1506._value;
                            superDepth = origSuperDepth;
                          };
                          obj_init_1460.apply(obj1460, []);
                          setLineNumber(859);    // return value
                          if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1460)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method inputFromElement(_) does not have " + 
                                      callmethod(var_Input, "asString", [0])._value + "."));
                          return obj1460;
                        };
                        func1459.paramCounts = [1];
                        this.methods["inputFromElement(1)"] = func1459;
                        func1459.definitionLine = 859;
                        func1459.definitionModule = "objectdraw";
                          var func1507 = function(argcv) {    // method inputFromElement(_)$object(_)
                            var curarg = 1;
                            var var_element__39__ = arguments[curarg];
                            curarg++;
                            var inheritingObject = arguments[curarg++];
                            // Start argument processing
                            curarg = 1;
                            curarg++;
                            // End argument processing
                            setModuleName("objectdraw");
                            var returnTarget = invocationCount;
                            invocationCount++;
                            var obj1508 = Grace_allocObject(null, "inputFromElement(1)");
                            obj1508.definitionModule = "objectdraw";
                            obj1508.definitionLine = 859;
                            var inho1508 = inheritingObject;
                            while (inho1508.superobj) inho1508 = inho1508.superobj;
                            inho1508.superobj = obj1508;
                            obj1508.data = inheritingObject.data;
                            if (inheritingObject.hasOwnProperty('_value'))
                              obj1508._value = inheritingObject._value;
                            obj1508.outer = this;
                            var reader_objectdraw_outer1509 = function() {
                              return this.outer;
                            };
                            obj1508.methods["outer"] = reader_objectdraw_outer1509;
                            var obj_init_1508 = function() {
                              var origSuperDepth = superDepth;
                              superDepth = obj1508;
                              var func1510 = function(argcv) {    // method onFocusDo(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_f = arguments[curarg];
                                curarg++;
                                // Start argument checking
                                curarg = 1;
                                setLineNumber(863);    // compilenode identifier
                                if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in onFocusDo (arg list 1), which corresponds to parameter f, does not have " + 
                                            callmethod(var_Response, "asString", [0])._value + "."));
                                curarg++;
                                // End argument checking
                                setModuleName("objectdraw");
                                setLineNumber(864);    // compilenode string
                                var string1512 = new GraceString("focus");
                                var block1513 = new GraceBlock(this, 864, 1);
                                setLineNumber(1);    // compilenode identifier
                                block1513.real = function(var___95____95__21) {
                                  setLineNumber(865);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1517 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1518 = callmethodChecked(call1517, "eventSource(1)", [1], this);
                                  // call case 6: other requests
                                  var call1519 = callmethodChecked(var_f, "apply(1)", [1], call1518);
                                  return call1519;
                                };
                                // call case 6: other requests
                                setLineNumber(864);    // compilenode member
                                // call case 4: self request
                                onSelf = true;
                                var call1521 = callmethodChecked(this, "element", []);
                                var call1522 = callmethodChecked(call1521, "addEventListener(2)", [2], string1512, block1513);
                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1522)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method onFocusDo(_) does not have " + 
                                            callmethod(var_Done, "asString", [0])._value + "."));
                                return call1522;
                              };
                              func1510.paramTypes = [];
                              func1510.paramTypes.push([]);
                              func1510.paramCounts = [1];
                              obj1508.methods["onFocusDo(1)"] = func1510;
                              func1510.definitionLine = 863;
                              func1510.definitionModule = "objectdraw";
                              var func1523 = function(argcv) {    // method onBlurDo(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_f = arguments[curarg];
                                curarg++;
                                // Start argument checking
                                curarg = 1;
                                setLineNumber(870);    // compilenode identifier
                                if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in onBlurDo (arg list 1), which corresponds to parameter f, does not have " + 
                                            callmethod(var_Response, "asString", [0])._value + "."));
                                curarg++;
                                // End argument checking
                                setModuleName("objectdraw");
                                setLineNumber(871);    // compilenode string
                                var string1525 = new GraceString("blur");
                                var block1526 = new GraceBlock(this, 871, 1);
                                setLineNumber(1);    // compilenode identifier
                                block1526.real = function(var___95____95__22) {
                                  setLineNumber(872);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1530 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1531 = callmethodChecked(call1530, "eventSource(1)", [1], this);
                                  // call case 6: other requests
                                  var call1532 = callmethodChecked(var_f, "apply(1)", [1], call1531);
                                  return call1532;
                                };
                                // call case 6: other requests
                                setLineNumber(871);    // compilenode member
                                // call case 4: self request
                                onSelf = true;
                                var call1534 = callmethodChecked(this, "element", []);
                                var call1535 = callmethodChecked(call1534, "addEventListener(2)", [2], string1525, block1526);
                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1535)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method onBlurDo(_) does not have " + 
                                            callmethod(var_Done, "asString", [0])._value + "."));
                                return call1535;
                              };
                              func1523.paramTypes = [];
                              func1523.paramTypes.push([]);
                              func1523.paramCounts = [1];
                              obj1508.methods["onBlurDo(1)"] = func1523;
                              func1523.definitionLine = 870;
                              func1523.definitionModule = "objectdraw";
                              var func1536 = function(argcv) {    // method onChangeDo(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_f = arguments[curarg];
                                curarg++;
                                // Start argument checking
                                curarg = 1;
                                setLineNumber(877);    // compilenode identifier
                                if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in onChangeDo (arg list 1), which corresponds to parameter f, does not have " + 
                                            callmethod(var_Response, "asString", [0])._value + "."));
                                curarg++;
                                // End argument checking
                                setModuleName("objectdraw");
                                setLineNumber(878);    // compilenode string
                                var string1538 = new GraceString("change");
                                var block1539 = new GraceBlock(this, 878, 1);
                                setLineNumber(1);    // compilenode identifier
                                block1539.real = function(var___95____95__23) {
                                  setLineNumber(879);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1543 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1544 = callmethodChecked(call1543, "eventSource(1)", [1], this);
                                  // call case 6: other requests
                                  var call1545 = callmethodChecked(var_f, "apply(1)", [1], call1544);
                                  return call1545;
                                };
                                // call case 6: other requests
                                setLineNumber(878);    // compilenode member
                                // call case 4: self request
                                onSelf = true;
                                var call1547 = callmethodChecked(this, "element", []);
                                var call1548 = callmethodChecked(call1547, "addEventListener(2)", [2], string1538, block1539);
                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1548)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method onChangeDo(_) does not have " + 
                                            callmethod(var_Done, "asString", [0])._value + "."));
                                return call1548;
                              };
                              func1536.paramTypes = [];
                              func1536.paramTypes.push([]);
                              func1536.paramCounts = [1];
                              obj1508.methods["onChangeDo(1)"] = func1536;
                              func1536.definitionLine = 877;
                              func1536.definitionModule = "objectdraw";
                              var func1549 = function(argcv) {    // method asString
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                setModuleName("objectdraw");
                                setLineNumber(885);    // compilenode string
                                var string1550 = new GraceString("an input");
                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string1550)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method asString does not have " + 
                                            callmethod(var_String, "asString", [0])._value + "."));
                                return string1550;
                              };
                              func1549.paramCounts = [0];
                              obj1508.methods["asString"] = func1549;
                              func1549.definitionLine = 884;
                              func1549.definitionModule = "objectdraw";
                              setLineNumber(860);    // compilenode identifier
                              // call case 6: other requests
                              setLineNumber(0);    // compilenode member
                              // call case 3: self.outer request
                              var call1553 = callmethodChecked(superDepth, "outer", [0]);
                              onSelf = true;
                              var call1554 = callmethodChecked(call1553, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                              obj1508.superobj = call1554;
                              if (call1554.data) obj1508.data = call1554.data;
                              if (call1554.hasOwnProperty('_value'))
                                  obj1508._value = call1554._value;
                              superDepth = origSuperDepth;
                            };
                            obj_init_1508.apply(inheritingObject, []);
                            return obj1508;
                            };
                            this.methods["inputFromElement(1)$object(1)"] = func1507;
                          setLineNumber(890);    // compilenode method
                          var func1555 = function(argcv) {    // method inputOfElementType(_)
                            var returnTarget = invocationCount;
                            invocationCount++;
                            var curarg = 1;
                            var var_elementType = arguments[curarg];
                            curarg++;
                            // Start argument checking
                            curarg = 1;
                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                throw new GraceExceptionPacket(TypeErrorObject,
                                    new GraceString("argument 1 in inputOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                        callmethod(var_String, "asString", [0])._value + "."));
                            curarg++;
                            // End argument checking
                            setModuleName("objectdraw");
                            var obj1556 = Grace_allocObject(null, "inputOfElementType(_)");
                            obj1556.definitionModule = "objectdraw";
                            obj1556.definitionLine = 890;
                            obj1556.outer = this;
                            var reader_objectdraw_outer1557 = function() {
                              return this.outer;
                            };
                            obj1556.methods["outer"] = reader_objectdraw_outer1557;
                            var obj_init_1556 = function() {
                              var origSuperDepth = superDepth;
                              superDepth = obj1556;
                              setLineNumber(891);    // compilenode identifier
                              // call case 6: other requests
                              var call1560 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                              // call case 6: other requests
                              setLineNumber(0);    // compilenode member
                              // call case 3: self.outer request
                              var call1562 = callmethodChecked(superDepth, "outer", [0]);
                              onSelf = true;
                              var call1563 = callmethodChecked(call1562, "inputFromElement(1)$object(1)", [1, 1], call1560, this);
                              obj1556.superobj = call1563;
                              if (call1563.data) obj1556.data = call1563.data;
                              if (call1563.hasOwnProperty('_value'))
                                  obj1556._value = call1563._value;
                              superDepth = origSuperDepth;
                            };
                            obj_init_1556.apply(obj1556, []);
                            setLineNumber(890);    // return value
                            if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1556)))
                                throw new GraceExceptionPacket(TypeErrorObject,
                                    new GraceString("result of method inputOfElementType(_) does not have " + 
                                        callmethod(var_Input, "asString", [0])._value + "."));
                            return obj1556;
                          };
                          func1555.paramTypes = [];
                          func1555.paramTypes.push([type_String, "elementType"]);
                          func1555.paramCounts = [1];
                          this.methods["inputOfElementType(1)"] = func1555;
                          func1555.definitionLine = 890;
                          func1555.definitionModule = "objectdraw";
                            var func1564 = function(argcv) {    // method inputOfElementType(_)$object(_)
                              var curarg = 1;
                              var var_elementType = arguments[curarg];
                              curarg++;
                              var inheritingObject = arguments[curarg++];
                              // Start argument processing
                              curarg = 1;
                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in inputOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                          callmethod(var_String, "asString", [0])._value + "."));
                              curarg++;
                              // End argument processing
                              setModuleName("objectdraw");
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var obj1565 = Grace_allocObject(null, "inputOfElementType(1)");
                              obj1565.definitionModule = "objectdraw";
                              obj1565.definitionLine = 890;
                              var inho1565 = inheritingObject;
                              while (inho1565.superobj) inho1565 = inho1565.superobj;
                              inho1565.superobj = obj1565;
                              obj1565.data = inheritingObject.data;
                              if (inheritingObject.hasOwnProperty('_value'))
                                obj1565._value = inheritingObject._value;
                              obj1565.outer = this;
                              var reader_objectdraw_outer1566 = function() {
                                return this.outer;
                              };
                              obj1565.methods["outer"] = reader_objectdraw_outer1566;
                              var obj_init_1565 = function() {
                                var origSuperDepth = superDepth;
                                superDepth = obj1565;
                                setLineNumber(891);    // compilenode identifier
                                // call case 6: other requests
                                var call1569 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                                // call case 6: other requests
                                setLineNumber(0);    // compilenode member
                                // call case 3: self.outer request
                                var call1571 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1572 = callmethodChecked(call1571, "inputFromElement(1)$object(1)", [1, 1], call1569, this);
                                obj1565.superobj = call1572;
                                if (call1572.data) obj1565.data = call1572.data;
                                if (call1572.hasOwnProperty('_value'))
                                    obj1565._value = call1572._value;
                                superDepth = origSuperDepth;
                              };
                              obj_init_1565.apply(inheritingObject, []);
                              return obj1565;
                              };
                              func1564.paramTypes = [];
                              func1564.paramTypes.push([type_String, "elementType"]);
                              this.methods["inputOfElementType(1)$object(1)"] = func1564;
                            setLineNumber(895);    // compilenode method
                            var func1573 = function(argcv) {    // method inputOfType(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_inputType = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in inputOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                          callmethod(var_String, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("objectdraw");
                              var obj1574 = Grace_allocObject(null, "inputOfType(_)");
                              obj1574.definitionModule = "objectdraw";
                              obj1574.definitionLine = 895;
                              obj1574.outer = this;
                              var reader_objectdraw_outer1575 = function() {
                                return this.outer;
                              };
                              obj1574.methods["outer"] = reader_objectdraw_outer1575;
                              var obj_init_1574 = function() {
                                var origSuperDepth = superDepth;
                                superDepth = obj1574;
                                setLineNumber(896);    // compilenode string
                                var string1577 = new GraceString("input");
                                setLineNumber(0);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1579 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1580 = callmethodChecked(call1579, "inputOfElementType(1)$object(1)", [1, 1], string1577, this);
                                obj1574.superobj = call1580;
                                if (call1580.data) obj1574.data = call1580.data;
                                if (call1580.hasOwnProperty('_value'))
                                    obj1574._value = call1580._value;
                                setLineNumber(898);    // compilenode string
                                var string1582 = new GraceString("type");
                                // call case 6: other requests
                                // call case 4: self request
                                onSelf = true;
                                var call1584 = callmethodChecked(this, "element", []);
                                var call1585 = callmethodChecked(call1584, "setAttribute(2)", [2], string1582, var_inputType);
                                superDepth = origSuperDepth;
                              };
                              obj_init_1574.apply(obj1574, []);
                              setLineNumber(895);    // return value
                              if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1574)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method inputOfType(_) does not have " + 
                                          callmethod(var_Input, "asString", [0])._value + "."));
                              return obj1574;
                            };
                            func1573.paramTypes = [];
                            func1573.paramTypes.push([type_String, "inputType"]);
                            func1573.paramCounts = [1];
                            this.methods["inputOfType(1)"] = func1573;
                            func1573.definitionLine = 895;
                            func1573.definitionModule = "objectdraw";
                              var func1586 = function(argcv) {    // method inputOfType(_)$object(_)
                                var curarg = 1;
                                var var_inputType = arguments[curarg];
                                curarg++;
                                var inheritingObject = arguments[curarg++];
                                // Start argument processing
                                curarg = 1;
                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in inputOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                            callmethod(var_String, "asString", [0])._value + "."));
                                curarg++;
                                // End argument processing
                                setModuleName("objectdraw");
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var obj1587 = Grace_allocObject(null, "inputOfType(1)");
                                obj1587.definitionModule = "objectdraw";
                                obj1587.definitionLine = 895;
                                var inho1587 = inheritingObject;
                                while (inho1587.superobj) inho1587 = inho1587.superobj;
                                inho1587.superobj = obj1587;
                                obj1587.data = inheritingObject.data;
                                if (inheritingObject.hasOwnProperty('_value'))
                                  obj1587._value = inheritingObject._value;
                                obj1587.outer = this;
                                var reader_objectdraw_outer1588 = function() {
                                  return this.outer;
                                };
                                obj1587.methods["outer"] = reader_objectdraw_outer1588;
                                var obj_init_1587 = function() {
                                  var origSuperDepth = superDepth;
                                  superDepth = obj1587;
                                  setLineNumber(896);    // compilenode string
                                  var string1590 = new GraceString("input");
                                  setLineNumber(0);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1592 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1593 = callmethodChecked(call1592, "inputOfElementType(1)$object(1)", [1, 1], string1590, this);
                                  obj1587.superobj = call1593;
                                  if (call1593.data) obj1587.data = call1593.data;
                                  if (call1593.hasOwnProperty('_value'))
                                      obj1587._value = call1593._value;
                                  setLineNumber(898);    // compilenode string
                                  var string1595 = new GraceString("type");
                                  // call case 6: other requests
                                  // call case 4: self request
                                  onSelf = true;
                                  var call1597 = callmethodChecked(this, "element", []);
                                  var call1598 = callmethodChecked(call1597, "setAttribute(2)", [2], string1595, var_inputType);
                                  superDepth = origSuperDepth;
                                };
                                obj_init_1587.apply(inheritingObject, []);
                                return obj1587;
                                };
                                func1586.paramTypes = [];
                                func1586.paramTypes.push([type_String, "inputType"]);
                                this.methods["inputOfType(1)$object(1)"] = func1586;
                              setLineNumber(902);    // compilenode method
                              var func1599 = function(argcv) {    // method labeledWidgetFromElement(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_element__39__ = arguments[curarg];
                                curarg++;
                                setModuleName("objectdraw");
                                var obj1600 = Grace_allocObject(null, "labeledWidgetFromElement(_)");
                                obj1600.definitionModule = "objectdraw";
                                obj1600.definitionLine = 902;
                                obj1600.outer = this;
                                var reader_objectdraw_outer1601 = function() {
                                  return this.outer;
                                };
                                obj1600.methods["outer"] = reader_objectdraw_outer1601;
                                var obj_init_1600 = function() {
                                  var origSuperDepth = superDepth;
                                  superDepth = obj1600;
                                  var func1602 = function(argcv) {    // method labelElement
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    setModuleName("objectdraw");
                                    setLineNumber(910);    // compilenode member
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1604 = callmethodChecked(this, "element", []);
                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call1604)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method labelElement does not have " + 
                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                    return call1604;
                                  };
                                  func1602.confidential = true;
                                  func1602.paramCounts = [0];
                                  obj1600.methods["labelElement"] = func1602;
                                  func1602.definitionLine = 909;
                                  func1602.definitionModule = "objectdraw";
                                  var func1605 = function(argcv) {    // method label
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    setModuleName("objectdraw");
                                    setLineNumber(915);    // compilenode member
                                    // call case 6: other requests
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1608 = callmethodChecked(this, "labelElement", []);
                                    var call1609 = callmethodChecked(call1608, "textContent", []);
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1609)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method label does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    return call1609;
                                  };
                                  func1605.paramCounts = [0];
                                  obj1600.methods["label"] = func1605;
                                  func1605.definitionLine = 913;
                                  func1605.definitionModule = "objectdraw";
                                  var func1610 = function(argcv) {    // method label:=(_)
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    var var_value = arguments[curarg];
                                    curarg++;
                                    // Start argument checking
                                    curarg = 1;
                                    setLineNumber(918);    // compilenode identifier
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    // End argument checking
                                    setModuleName("objectdraw");
                                    setLineNumber(920);    // compilenode identifier
                                    // call case 6: other requests
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1613 = callmethodChecked(this, "labelElement", []);
                                    var call1614 = callmethodChecked(call1613, "textContent:=(1)", [1], var_value);
                                    setLineNumber(921);    // return value
                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method label:=(_) does not have " + 
                                                callmethod(var_Done, "asString", [0])._value + "."));
                                    return var_done;
                                  };
                                  func1610.paramTypes = [];
                                  func1610.paramTypes.push([type_String, "value"]);
                                  func1610.paramCounts = [1];
                                  obj1600.methods["label:=(1)"] = func1610;
                                  func1610.definitionLine = 918;
                                  func1610.definitionModule = "objectdraw";
                                  var func1615 = function(argcv) {    // method asString
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    setModuleName("objectdraw");
                                    setLineNumber(926);    // compilenode string
                                    var string1616 = new GraceString("");
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1619 = callmethodChecked(this, "label", []);
                                    var string1621 = new GraceString("an input labeled: ");
                                    var opresult1623 = callmethodChecked(string1621, "++(1)", [1], call1619);
                                    var opresult1625 = callmethodChecked(opresult1623, "++(1)", [1], string1616);
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1625)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method asString does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    return opresult1625;
                                  };
                                  func1615.paramCounts = [0];
                                  obj1600.methods["asString"] = func1615;
                                  func1615.definitionLine = 924;
                                  func1615.definitionModule = "objectdraw";
                                  setLineNumber(905);    // compilenode identifier
                                  // call case 6: other requests
                                  setLineNumber(0);    // compilenode member
                                  // call case 3: self.outer request
                                  var call1628 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1629 = callmethodChecked(call1628, "inputFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                                  obj1600.superobj = call1629;
                                  if (call1629.data) obj1600.data = call1629.data;
                                  if (call1629.hasOwnProperty('_value'))
                                      obj1600._value = call1629._value;
                                  obj1600.data["labeler"] = undefined;
                                  var reader_objectdraw_labeler1630 = function() {
                                    return this.data["labeler"];
                                  };
                                  obj1600.methods["labeler"] = reader_objectdraw_labeler1630;
                                  obj1600.data["labeler"] = undefined;
                                  var writer_objectdraw_labeler1630 = function(argcv, o) {
                                    this.data["labeler"] = o;
                                    return GraceDone;
                                  };
                                  obj1600.methods["labeler:=(1)"] = writer_objectdraw_labeler1630;
                                  reader_objectdraw_labeler1630.confidential = true;
                                  writer_objectdraw_labeler1630.confidential = true;
                                  obj1600.mutable = true;
                                  superDepth = origSuperDepth;
                                };
                                obj_init_1600.apply(obj1600, []);
                                setLineNumber(902);    // return value
                                if (!Grace_isTrue(callmethod(var_Labeled, "match(1)", [1], obj1600)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method labeledWidgetFromElement(_) does not have " + 
                                            callmethod(var_Labeled, "asString", [0])._value + "."));
                                return obj1600;
                              };
                              func1599.paramCounts = [1];
                              this.methods["labeledWidgetFromElement(1)"] = func1599;
                              func1599.definitionLine = 902;
                              func1599.definitionModule = "objectdraw";
                                var func1631 = function(argcv) {    // method labeledWidgetFromElement(_)$object(_)
                                  var curarg = 1;
                                  var var_element__39__ = arguments[curarg];
                                  curarg++;
                                  var inheritingObject = arguments[curarg++];
                                  // Start argument processing
                                  curarg = 1;
                                  curarg++;
                                  // End argument processing
                                  setModuleName("objectdraw");
                                  var returnTarget = invocationCount;
                                  invocationCount++;
                                  var obj1632 = Grace_allocObject(null, "labeledWidgetFromElement(1)");
                                  obj1632.definitionModule = "objectdraw";
                                  obj1632.definitionLine = 902;
                                  var inho1632 = inheritingObject;
                                  while (inho1632.superobj) inho1632 = inho1632.superobj;
                                  inho1632.superobj = obj1632;
                                  obj1632.data = inheritingObject.data;
                                  if (inheritingObject.hasOwnProperty('_value'))
                                    obj1632._value = inheritingObject._value;
                                  obj1632.outer = this;
                                  var reader_objectdraw_outer1633 = function() {
                                    return this.outer;
                                  };
                                  obj1632.methods["outer"] = reader_objectdraw_outer1633;
                                  var obj_init_1632 = function() {
                                    var origSuperDepth = superDepth;
                                    superDepth = obj1632;
                                    var func1634 = function(argcv) {    // method labelElement
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      setModuleName("objectdraw");
                                      setLineNumber(910);    // compilenode member
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1636 = callmethodChecked(this, "element", []);
                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call1636)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method labelElement does not have " + 
                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                      return call1636;
                                    };
                                    func1634.confidential = true;
                                    func1634.paramCounts = [0];
                                    obj1632.methods["labelElement"] = func1634;
                                    func1634.definitionLine = 909;
                                    func1634.definitionModule = "objectdraw";
                                    var func1637 = function(argcv) {    // method label
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      setModuleName("objectdraw");
                                      setLineNumber(915);    // compilenode member
                                      // call case 6: other requests
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1640 = callmethodChecked(this, "labelElement", []);
                                      var call1641 = callmethodChecked(call1640, "textContent", []);
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1641)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method label does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      return call1641;
                                    };
                                    func1637.paramCounts = [0];
                                    obj1632.methods["label"] = func1637;
                                    func1637.definitionLine = 913;
                                    func1637.definitionModule = "objectdraw";
                                    var func1642 = function(argcv) {    // method label:=(_)
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      var var_value = arguments[curarg];
                                      curarg++;
                                      // Start argument checking
                                      curarg = 1;
                                      setLineNumber(918);    // compilenode identifier
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      // End argument checking
                                      setModuleName("objectdraw");
                                      setLineNumber(920);    // compilenode identifier
                                      // call case 6: other requests
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1645 = callmethodChecked(this, "labelElement", []);
                                      var call1646 = callmethodChecked(call1645, "textContent:=(1)", [1], var_value);
                                      setLineNumber(921);    // return value
                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method label:=(_) does not have " + 
                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                      return var_done;
                                    };
                                    func1642.paramTypes = [];
                                    func1642.paramTypes.push([type_String, "value"]);
                                    func1642.paramCounts = [1];
                                    obj1632.methods["label:=(1)"] = func1642;
                                    func1642.definitionLine = 918;
                                    func1642.definitionModule = "objectdraw";
                                    var func1647 = function(argcv) {    // method asString
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      setModuleName("objectdraw");
                                      setLineNumber(926);    // compilenode string
                                      var string1648 = new GraceString("");
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1651 = callmethodChecked(this, "label", []);
                                      var string1653 = new GraceString("an input labeled: ");
                                      var opresult1655 = callmethodChecked(string1653, "++(1)", [1], call1651);
                                      var opresult1657 = callmethodChecked(opresult1655, "++(1)", [1], string1648);
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1657)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method asString does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      return opresult1657;
                                    };
                                    func1647.paramCounts = [0];
                                    obj1632.methods["asString"] = func1647;
                                    func1647.definitionLine = 924;
                                    func1647.definitionModule = "objectdraw";
                                    setLineNumber(905);    // compilenode identifier
                                    // call case 6: other requests
                                    setLineNumber(0);    // compilenode member
                                    // call case 3: self.outer request
                                    var call1660 = callmethodChecked(superDepth, "outer", [0]);
                                    onSelf = true;
                                    var call1661 = callmethodChecked(call1660, "inputFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                                    obj1632.superobj = call1661;
                                    if (call1661.data) obj1632.data = call1661.data;
                                    if (call1661.hasOwnProperty('_value'))
                                        obj1632._value = call1661._value;
                                    obj1632.data["labeler"] = undefined;
                                    var reader_objectdraw_labeler1662 = function() {
                                      return this.data["labeler"];
                                    };
                                    obj1632.methods["labeler"] = reader_objectdraw_labeler1662;
                                    obj1632.data["labeler"] = undefined;
                                    var writer_objectdraw_labeler1662 = function(argcv, o) {
                                      this.data["labeler"] = o;
                                      return GraceDone;
                                    };
                                    obj1632.methods["labeler:=(1)"] = writer_objectdraw_labeler1662;
                                    reader_objectdraw_labeler1662.confidential = true;
                                    writer_objectdraw_labeler1662.confidential = true;
                                    obj1632.mutable = true;
                                    superDepth = origSuperDepth;
                                  };
                                  obj_init_1632.apply(inheritingObject, []);
                                  return obj1632;
                                  };
                                  this.methods["labeledWidgetFromElement(1)$object(1)"] = func1631;
                                setLineNumber(930);    // compilenode method
                                var func1663 = function(argcv) {    // method labeledWidgetOfElementType(_)
                                  var returnTarget = invocationCount;
                                  invocationCount++;
                                  var curarg = 1;
                                  var var_elementType = arguments[curarg];
                                  curarg++;
                                  // Start argument checking
                                  curarg = 1;
                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                      throw new GraceExceptionPacket(TypeErrorObject,
                                          new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                              callmethod(var_String, "asString", [0])._value + "."));
                                  curarg++;
                                  // End argument checking
                                  setModuleName("objectdraw");
                                  var obj1664 = Grace_allocObject(null, "labeledWidgetOfElementType(_)");
                                  obj1664.definitionModule = "objectdraw";
                                  obj1664.definitionLine = 930;
                                  obj1664.outer = this;
                                  var reader_objectdraw_outer1665 = function() {
                                    return this.outer;
                                  };
                                  obj1664.methods["outer"] = reader_objectdraw_outer1665;
                                  var obj_init_1664 = function() {
                                    var origSuperDepth = superDepth;
                                    superDepth = obj1664;
                                    setLineNumber(933);    // compilenode identifier
                                    // call case 6: other requests
                                    var call1668 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                                    // call case 6: other requests
                                    setLineNumber(0);    // compilenode member
                                    // call case 3: self.outer request
                                    var call1670 = callmethodChecked(superDepth, "outer", [0]);
                                    onSelf = true;
                                    var call1671 = callmethodChecked(call1670, "labeledWidgetFromElement(1)$object(1)", [1, 1], call1668, this);
                                    obj1664.superobj = call1671;
                                    if (call1671.data) obj1664.data = call1671.data;
                                    if (call1671.hasOwnProperty('_value'))
                                        obj1664._value = call1671._value;
                                    superDepth = origSuperDepth;
                                  };
                                  obj_init_1664.apply(obj1664, []);
                                  setLineNumber(930);    // return value
                                  if (!Grace_isTrue(callmethod(var_Labeled, "match(1)", [1], obj1664)))
                                      throw new GraceExceptionPacket(TypeErrorObject,
                                          new GraceString("result of method labeledWidgetOfElementType(_) does not have " + 
                                              callmethod(var_Labeled, "asString", [0])._value + "."));
                                  return obj1664;
                                };
                                func1663.paramTypes = [];
                                func1663.paramTypes.push([type_String, "elementType"]);
                                func1663.paramCounts = [1];
                                this.methods["labeledWidgetOfElementType(1)"] = func1663;
                                func1663.definitionLine = 930;
                                func1663.definitionModule = "objectdraw";
                                  var func1672 = function(argcv) {    // method labeledWidgetOfElementType(_)$object(_)
                                    var curarg = 1;
                                    var var_elementType = arguments[curarg];
                                    curarg++;
                                    var inheritingObject = arguments[curarg++];
                                    // Start argument processing
                                    curarg = 1;
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    // End argument processing
                                    setModuleName("objectdraw");
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var obj1673 = Grace_allocObject(null, "labeledWidgetOfElementType(1)");
                                    obj1673.definitionModule = "objectdraw";
                                    obj1673.definitionLine = 930;
                                    var inho1673 = inheritingObject;
                                    while (inho1673.superobj) inho1673 = inho1673.superobj;
                                    inho1673.superobj = obj1673;
                                    obj1673.data = inheritingObject.data;
                                    if (inheritingObject.hasOwnProperty('_value'))
                                      obj1673._value = inheritingObject._value;
                                    obj1673.outer = this;
                                    var reader_objectdraw_outer1674 = function() {
                                      return this.outer;
                                    };
                                    obj1673.methods["outer"] = reader_objectdraw_outer1674;
                                    var obj_init_1673 = function() {
                                      var origSuperDepth = superDepth;
                                      superDepth = obj1673;
                                      setLineNumber(933);    // compilenode identifier
                                      // call case 6: other requests
                                      var call1677 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                                      // call case 6: other requests
                                      setLineNumber(0);    // compilenode member
                                      // call case 3: self.outer request
                                      var call1679 = callmethodChecked(superDepth, "outer", [0]);
                                      onSelf = true;
                                      var call1680 = callmethodChecked(call1679, "labeledWidgetFromElement(1)$object(1)", [1, 1], call1677, this);
                                      obj1673.superobj = call1680;
                                      if (call1680.data) obj1673.data = call1680.data;
                                      if (call1680.hasOwnProperty('_value'))
                                          obj1673._value = call1680._value;
                                      superDepth = origSuperDepth;
                                    };
                                    obj_init_1673.apply(inheritingObject, []);
                                    return obj1673;
                                    };
                                    func1672.paramTypes = [];
                                    func1672.paramTypes.push([type_String, "elementType"]);
                                    this.methods["labeledWidgetOfElementType(1)$object(1)"] = func1672;
                                  setLineNumber(936);    // compilenode method
                                  var func1681 = function(argcv) {    // method labeledWidgetOfElementType(_)labeled(_)
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    var var_elementType = arguments[curarg];
                                    curarg++;
                                    var var_newLabel = arguments[curarg];
                                    curarg++;
                                    // Start argument checking
                                    curarg = 1;
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    setLineNumber(937);    // compilenode identifier
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter newLabel, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    // End argument checking
                                    setModuleName("objectdraw");
                                    setLineNumber(936);    // compilenode object
                                    var obj1682 = Grace_allocObject(null, "labeledWidgetOfElementType(_)labeled(_)");
                                    obj1682.definitionModule = "objectdraw";
                                    obj1682.definitionLine = 936;
                                    obj1682.outer = this;
                                    var reader_objectdraw_outer1683 = function() {
                                      return this.outer;
                                    };
                                    obj1682.methods["outer"] = reader_objectdraw_outer1683;
                                    var obj_init_1682 = function() {
                                      var origSuperDepth = superDepth;
                                      superDepth = obj1682;
                                      var func1684 = function(argcv) {    // method init
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var curarg = 1;
                                        setModuleName("objectdraw");
                                        setLineNumber(943);    // return value
                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("result of method init does not have " + 
                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                        return GraceDone;
                                      };
                                      func1684.confidential = true;
                                      func1684.paramCounts = [0];
                                      obj1682.methods["init"] = func1684;
                                      func1684.definitionLine = 943;
                                      func1684.definitionModule = "objectdraw";
                                      setLineNumber(940);    // compilenode identifier
                                      // call case 6: other requests
                                      setLineNumber(0);    // compilenode member
                                      // call case 3: self.outer request
                                      var call1687 = callmethodChecked(superDepth, "outer", [0]);
                                      onSelf = true;
                                      var call1688 = callmethodChecked(call1687, "labeledWidgetOfElementType(1)$object(1)", [1, 1], var_elementType, this);
                                      obj1682.superobj = call1688;
                                      if (call1688.data) obj1682.data = call1688.data;
                                      if (call1688.hasOwnProperty('_value'))
                                          obj1682._value = call1688._value;
                                      setLineNumber(944);    // compilenode member
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1690 = callmethodChecked(this, "init", []);
                                      setLineNumber(946);    // compilenode identifier
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1692 = callmethodChecked(this, "label:=(1)", [1], var_newLabel);
                                      superDepth = origSuperDepth;
                                    };
                                    obj_init_1682.apply(obj1682, []);
                                    setLineNumber(936);    // return value
                                    if (!Grace_isTrue(callmethod(var_Labeled, "match(1)", [1], obj1682)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method labeledWidgetOfElementType(_)labeled(_) does not have " + 
                                                callmethod(var_Labeled, "asString", [0])._value + "."));
                                    return obj1682;
                                  };
                                  func1681.paramTypes = [];
                                  func1681.paramTypes.push([type_String, "elementType"]);
                                  func1681.paramTypes.push([type_String, "newLabel"]);
                                  func1681.paramCounts = [1, 1];
                                  this.methods["labeledWidgetOfElementType(1)labeled(1)"] = func1681;
                                  func1681.definitionLine = 936;
                                  func1681.definitionModule = "objectdraw";
                                    var func1693 = function(argcv) {    // method labeledWidgetOfElementType(_)labeled(_)$object(_)
                                      var curarg = 1;
                                      var var_elementType = arguments[curarg];
                                      curarg++;
                                      var var_newLabel = arguments[curarg];
                                      curarg++;
                                      var inheritingObject = arguments[curarg++];
                                      // Start argument processing
                                      curarg = 1;
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      setLineNumber(937);    // compilenode identifier
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter newLabel, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      // End argument processing
                                      setModuleName("objectdraw");
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var obj1694 = Grace_allocObject(null, "labeledWidgetOfElementType(1)labeled(1)");
                                      obj1694.definitionModule = "objectdraw";
                                      obj1694.definitionLine = 936;
                                      var inho1694 = inheritingObject;
                                      while (inho1694.superobj) inho1694 = inho1694.superobj;
                                      inho1694.superobj = obj1694;
                                      obj1694.data = inheritingObject.data;
                                      if (inheritingObject.hasOwnProperty('_value'))
                                        obj1694._value = inheritingObject._value;
                                      obj1694.outer = this;
                                      var reader_objectdraw_outer1695 = function() {
                                        return this.outer;
                                      };
                                      obj1694.methods["outer"] = reader_objectdraw_outer1695;
                                      var obj_init_1694 = function() {
                                        var origSuperDepth = superDepth;
                                        superDepth = obj1694;
                                        var func1696 = function(argcv) {    // method init
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          setModuleName("objectdraw");
                                          setLineNumber(943);    // return value
                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method init does not have " + 
                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                          return GraceDone;
                                        };
                                        func1696.confidential = true;
                                        func1696.paramCounts = [0];
                                        obj1694.methods["init"] = func1696;
                                        func1696.definitionLine = 943;
                                        func1696.definitionModule = "objectdraw";
                                        setLineNumber(940);    // compilenode identifier
                                        // call case 6: other requests
                                        setLineNumber(0);    // compilenode member
                                        // call case 3: self.outer request
                                        var call1699 = callmethodChecked(superDepth, "outer", [0]);
                                        onSelf = true;
                                        var call1700 = callmethodChecked(call1699, "labeledWidgetOfElementType(1)$object(1)", [1, 1], var_elementType, this);
                                        obj1694.superobj = call1700;
                                        if (call1700.data) obj1694.data = call1700.data;
                                        if (call1700.hasOwnProperty('_value'))
                                            obj1694._value = call1700._value;
                                        setLineNumber(944);    // compilenode member
                                        // call case 4: self request
                                        onSelf = true;
                                        var call1702 = callmethodChecked(this, "init", []);
                                        setLineNumber(946);    // compilenode identifier
                                        // call case 4: self request
                                        onSelf = true;
                                        var call1704 = callmethodChecked(this, "label:=(1)", [1], var_newLabel);
                                        superDepth = origSuperDepth;
                                      };
                                      obj_init_1694.apply(inheritingObject, []);
                                      return obj1694;
                                      };
                                      func1693.paramTypes = [];
                                      func1693.paramTypes.push([type_String, "elementType"]);
                                      func1693.paramTypes.push([type_String, "newLabel"]);
                                      this.methods["labeledWidgetOfElementType(1)labeled(1)$object(1)"] = func1693;
                                    setLineNumber(949);    // compilenode method
                                    var func1705 = function(argcv) {    // method fieldOfType(_)labeled(_)
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      var var_inputType = arguments[curarg];
                                      curarg++;
                                      var var_label__39__ = arguments[curarg];
                                      curarg++;
                                      // Start argument checking
                                      curarg = 1;
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in fieldOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      // End argument checking
                                      setModuleName("objectdraw");
                                      var obj1706 = Grace_allocObject(null, "fieldOfType(_)labeled(_)");
                                      obj1706.definitionModule = "objectdraw";
                                      obj1706.definitionLine = 949;
                                      obj1706.outer = this;
                                      var reader_objectdraw_outer1707 = function() {
                                        return this.outer;
                                      };
                                      obj1706.methods["outer"] = reader_objectdraw_outer1707;
                                      var obj_init_1706 = function() {
                                        var origSuperDepth = superDepth;
                                        superDepth = obj1706;
                                        var func1708 = function(argcv) {    // method label
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          setModuleName("objectdraw");
                                          setLineNumber(956);    // compilenode member
                                          // call case 6: other requests
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1711 = callmethodChecked(this, "element", []);
                                          var call1712 = callmethodChecked(call1711, "placeholder", []);
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1712)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method label does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          return call1712;
                                        };
                                        func1708.paramCounts = [0];
                                        obj1706.methods["label"] = func1708;
                                        func1708.definitionLine = 955;
                                        func1708.definitionModule = "objectdraw";
                                        var func1713 = function(argcv) {    // method label:=(_)
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          var var_value = arguments[curarg];
                                          curarg++;
                                          // Start argument checking
                                          curarg = 1;
                                          setLineNumber(960);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          curarg++;
                                          // End argument checking
                                          setModuleName("objectdraw");
                                          setLineNumber(961);    // compilenode identifier
                                          // call case 6: other requests
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1716 = callmethodChecked(this, "element", []);
                                          var call1717 = callmethodChecked(call1716, "placeholder:=(1)", [1], var_value);
                                          setLineNumber(962);    // return value
                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method label:=(_) does not have " + 
                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                          return var_done;
                                        };
                                        func1713.paramTypes = [];
                                        func1713.paramTypes.push([type_String, "value"]);
                                        func1713.paramCounts = [1];
                                        obj1706.methods["label:=(1)"] = func1713;
                                        func1713.definitionLine = 960;
                                        func1713.definitionModule = "objectdraw";
                                        var func1718 = function(argcv) {    // method asString
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          setModuleName("objectdraw");
                                          setLineNumber(967);    // compilenode string
                                          var string1719 = new GraceString("");
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1722 = callmethodChecked(this, "label", []);
                                          var string1724 = new GraceString("a field labeled: ");
                                          var opresult1726 = callmethodChecked(string1724, "++(1)", [1], call1722);
                                          var opresult1728 = callmethodChecked(opresult1726, "++(1)", [1], string1719);
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1728)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method asString does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          return opresult1728;
                                        };
                                        func1718.paramCounts = [0];
                                        obj1706.methods["asString"] = func1718;
                                        func1718.definitionLine = 966;
                                        func1718.definitionModule = "objectdraw";
                                        setLineNumber(952);    // compilenode identifier
                                        // call case 6: other requests
                                        setLineNumber(0);    // compilenode member
                                        // call case 3: self.outer request
                                        var call1731 = callmethodChecked(superDepth, "outer", [0]);
                                        onSelf = true;
                                        var call1732 = callmethodChecked(call1731, "inputOfType(1)$object(1)", [1, 1], var_inputType, this);
                                        obj1706.superobj = call1732;
                                        if (call1732.data) obj1706.data = call1732.data;
                                        if (call1732.hasOwnProperty('_value'))
                                            obj1706._value = call1732._value;
                                        setLineNumber(970);    // compilenode identifier
                                        // call case 4: self request
                                        onSelf = true;
                                        var call1734 = callmethodChecked(this, "label:=(1)", [1], var_label__39__);
                                        superDepth = origSuperDepth;
                                      };
                                      obj_init_1706.apply(obj1706, []);
                                      setLineNumber(949);    // return value
                                      if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1706)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method fieldOfType(_)labeled(_) does not have " + 
                                                  callmethod(var_Input, "asString", [0])._value + "."));
                                      return obj1706;
                                    };
                                    func1705.paramTypes = [];
                                    func1705.paramTypes.push([type_String, "inputType"]);
                                    func1705.paramTypes.push([type_String, "label'"]);
                                    func1705.paramCounts = [1, 1];
                                    this.methods["fieldOfType(1)labeled(1)"] = func1705;
                                    func1705.definitionLine = 949;
                                    func1705.definitionModule = "objectdraw";
                                      var func1735 = function(argcv) {    // method fieldOfType(_)labeled(_)$object(_)
                                        var curarg = 1;
                                        var var_inputType = arguments[curarg];
                                        curarg++;
                                        var var_label__39__ = arguments[curarg];
                                        curarg++;
                                        var inheritingObject = arguments[curarg++];
                                        // Start argument processing
                                        curarg = 1;
                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in fieldOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                                    callmethod(var_String, "asString", [0])._value + "."));
                                        curarg++;
                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                    callmethod(var_String, "asString", [0])._value + "."));
                                        curarg++;
                                        // End argument processing
                                        setModuleName("objectdraw");
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var obj1736 = Grace_allocObject(null, "fieldOfType(1)labeled(1)");
                                        obj1736.definitionModule = "objectdraw";
                                        obj1736.definitionLine = 949;
                                        var inho1736 = inheritingObject;
                                        while (inho1736.superobj) inho1736 = inho1736.superobj;
                                        inho1736.superobj = obj1736;
                                        obj1736.data = inheritingObject.data;
                                        if (inheritingObject.hasOwnProperty('_value'))
                                          obj1736._value = inheritingObject._value;
                                        obj1736.outer = this;
                                        var reader_objectdraw_outer1737 = function() {
                                          return this.outer;
                                        };
                                        obj1736.methods["outer"] = reader_objectdraw_outer1737;
                                        var obj_init_1736 = function() {
                                          var origSuperDepth = superDepth;
                                          superDepth = obj1736;
                                          var func1738 = function(argcv) {    // method label
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            setModuleName("objectdraw");
                                            setLineNumber(956);    // compilenode member
                                            // call case 6: other requests
                                            // call case 4: self request
                                            onSelf = true;
                                            var call1741 = callmethodChecked(this, "element", []);
                                            var call1742 = callmethodChecked(call1741, "placeholder", []);
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1742)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method label does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            return call1742;
                                          };
                                          func1738.paramCounts = [0];
                                          obj1736.methods["label"] = func1738;
                                          func1738.definitionLine = 955;
                                          func1738.definitionModule = "objectdraw";
                                          var func1743 = function(argcv) {    // method label:=(_)
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            var var_value = arguments[curarg];
                                            curarg++;
                                            // Start argument checking
                                            curarg = 1;
                                            setLineNumber(960);    // compilenode identifier
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            curarg++;
                                            // End argument checking
                                            setModuleName("objectdraw");
                                            setLineNumber(961);    // compilenode identifier
                                            // call case 6: other requests
                                            // call case 4: self request
                                            onSelf = true;
                                            var call1746 = callmethodChecked(this, "element", []);
                                            var call1747 = callmethodChecked(call1746, "placeholder:=(1)", [1], var_value);
                                            setLineNumber(962);    // return value
                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method label:=(_) does not have " + 
                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                            return var_done;
                                          };
                                          func1743.paramTypes = [];
                                          func1743.paramTypes.push([type_String, "value"]);
                                          func1743.paramCounts = [1];
                                          obj1736.methods["label:=(1)"] = func1743;
                                          func1743.definitionLine = 960;
                                          func1743.definitionModule = "objectdraw";
                                          var func1748 = function(argcv) {    // method asString
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            setModuleName("objectdraw");
                                            setLineNumber(967);    // compilenode string
                                            var string1749 = new GraceString("");
                                            // call case 4: self request
                                            onSelf = true;
                                            var call1752 = callmethodChecked(this, "label", []);
                                            var string1754 = new GraceString("a field labeled: ");
                                            var opresult1756 = callmethodChecked(string1754, "++(1)", [1], call1752);
                                            var opresult1758 = callmethodChecked(opresult1756, "++(1)", [1], string1749);
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1758)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method asString does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            return opresult1758;
                                          };
                                          func1748.paramCounts = [0];
                                          obj1736.methods["asString"] = func1748;
                                          func1748.definitionLine = 966;
                                          func1748.definitionModule = "objectdraw";
                                          setLineNumber(952);    // compilenode identifier
                                          // call case 6: other requests
                                          setLineNumber(0);    // compilenode member
                                          // call case 3: self.outer request
                                          var call1761 = callmethodChecked(superDepth, "outer", [0]);
                                          onSelf = true;
                                          var call1762 = callmethodChecked(call1761, "inputOfType(1)$object(1)", [1, 1], var_inputType, this);
                                          obj1736.superobj = call1762;
                                          if (call1762.data) obj1736.data = call1762.data;
                                          if (call1762.hasOwnProperty('_value'))
                                              obj1736._value = call1762._value;
                                          setLineNumber(970);    // compilenode identifier
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1764 = callmethodChecked(this, "label:=(1)", [1], var_label__39__);
                                          superDepth = origSuperDepth;
                                        };
                                        obj_init_1736.apply(inheritingObject, []);
                                        return obj1736;
                                        };
                                        func1735.paramTypes = [];
                                        func1735.paramTypes.push([type_String, "inputType"]);
                                        func1735.paramTypes.push([type_String, "label'"]);
                                        this.methods["fieldOfType(1)labeled(1)$object(1)"] = func1735;
                                      setLineNumber(978);    // compilenode method
                                      var func1765 = function(argcv) {    // method eventLogKind(_)response(_)
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var curarg = 1;
                                        var var_kind__39__ = arguments[curarg];
                                        curarg++;
                                        var var_response__39__ = arguments[curarg];
                                        curarg++;
                                        // Start argument checking
                                        curarg = 1;
                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in eventLogKind (arg list 1), which corresponds to parameter kind', does not have " + 
                                                    callmethod(var_String, "asString", [0])._value + "."));
                                        curarg++;
                                        setLineNumber(979);    // compilenode identifier
                                        if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in response (arg list 2), which corresponds to parameter response', does not have " + 
                                                    callmethod(var_Procedure, "asString", [0])._value + "."));
                                        curarg++;
                                        // End argument checking
                                        setModuleName("objectdraw");
                                        setLineNumber(978);    // compilenode object
                                        var obj1766 = Grace_allocObject(GraceObject, "eventLogKind(_)response(_)");
                                        obj1766.definitionModule = "objectdraw";
                                        obj1766.definitionLine = 978;
                                        obj1766.outer = this;
                                        var reader_objectdraw_outer1767 = function() {
                                          return this.outer;
                                        };
                                        obj1766.methods["outer"] = reader_objectdraw_outer1767;
                                        var obj_init_1766 = function() {
                                          var origSuperDepth = superDepth;
                                          superDepth = obj1766;
                                          setLineNumber(980);    // compilenode identifier
                                          obj1766.data["kind"] = var_kind__39__;
                                          var reader_objectdraw_kind1768 = function() {
                                            return this.data["kind"];
                                          };
                                          reader_objectdraw_kind1768.def = true;
                                          obj1766.methods["kind"] = reader_objectdraw_kind1768;
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_kind__39__)))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("value of def 'kind' is not of type String"));
                                          setLineNumber(981);    // compilenode identifier
                                          obj1766.data["response"] = var_response__39__;
                                          var reader_objectdraw_response1769 = function() {
                                            return this.data["response"];
                                          };
                                          reader_objectdraw_response1769.def = true;
                                          obj1766.methods["response"] = reader_objectdraw_response1769;
                                          if (!Grace_isTrue(callmethod(var_Procedure, "match(1)", [1], var_response__39__)))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("value of def 'response' is not of type Procedure"));
                                          superDepth = origSuperDepth;
                                        };
                                        obj_init_1766.apply(obj1766, []);
                                        return obj1766;
                                      };
                                      func1765.paramTypes = [];
                                      func1765.paramTypes.push([type_String, "kind'"]);
                                      func1765.paramTypes.push([]);
                                      func1765.confidential = true;
                                      func1765.paramCounts = [1, 1];
                                      this.methods["eventLogKind(1)response(1)"] = func1765;
                                      func1765.definitionLine = 978;
                                      func1765.definitionModule = "objectdraw";
                                        var func1770 = function(argcv) {    // method eventLogKind(_)response(_)$object(_)
                                          var curarg = 1;
                                          var var_kind__39__ = arguments[curarg];
                                          curarg++;
                                          var var_response__39__ = arguments[curarg];
                                          curarg++;
                                          var inheritingObject = arguments[curarg++];
                                          // Start argument processing
                                          curarg = 1;
                                          setLineNumber(978);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in eventLogKind (arg list 1), which corresponds to parameter kind', does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          curarg++;
                                          setLineNumber(979);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in response (arg list 2), which corresponds to parameter response', does not have " + 
                                                      callmethod(var_Procedure, "asString", [0])._value + "."));
                                          curarg++;
                                          // End argument processing
                                          setModuleName("objectdraw");
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var obj1771 = Grace_allocObject(GraceObject, "eventLogKind(1)response(1)");
                                          obj1771.definitionModule = "objectdraw";
                                          obj1771.definitionLine = 978;
                                          var inho1771 = inheritingObject;
                                          while (inho1771.superobj) inho1771 = inho1771.superobj;
                                          inho1771.superobj = obj1771;
                                          obj1771.data = inheritingObject.data;
                                          if (inheritingObject.hasOwnProperty('_value'))
                                            obj1771._value = inheritingObject._value;
                                          obj1771.outer = this;
                                          var reader_objectdraw_outer1772 = function() {
                                            return this.outer;
                                          };
                                          obj1771.methods["outer"] = reader_objectdraw_outer1772;
                                          var obj_init_1771 = function() {
                                            var origSuperDepth = superDepth;
                                            superDepth = obj1771;
                                            setLineNumber(980);    // compilenode identifier
                                            obj1771.data["kind"] = var_kind__39__;
                                            var reader_objectdraw_kind1773 = function() {
                                              return this.data["kind"];
                                            };
                                            reader_objectdraw_kind1773.def = true;
                                            obj1771.methods["kind"] = reader_objectdraw_kind1773;
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_kind__39__)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("value of def 'kind' is not of type String"));
                                            setLineNumber(981);    // compilenode identifier
                                            obj1771.data["response"] = var_response__39__;
                                            var reader_objectdraw_response1774 = function() {
                                              return this.data["response"];
                                            };
                                            reader_objectdraw_response1774.def = true;
                                            obj1771.methods["response"] = reader_objectdraw_response1774;
                                            if (!Grace_isTrue(callmethod(var_Procedure, "match(1)", [1], var_response__39__)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("value of def 'response' is not of type Procedure"));
                                            superDepth = origSuperDepth;
                                          };
                                          obj_init_1771.apply(inheritingObject, []);
                                          return obj1771;
                                          };
                                          func1770.paramTypes = [];
                                          func1770.paramTypes.push([type_String, "kind'"]);
                                          func1770.paramTypes.push([]);
                                          func1770.confidential = true;
                                          this.methods["eventLogKind(1)response(1)$object(1)"] = func1770;
                                        setLineNumber(984);    // compilenode method
                                        var func1775 = function(argcv) {    // method applicationTitle(_)size(_)
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          var var_initialTitle = arguments[curarg];
                                          curarg++;
                                          var var_dimensions__39__ = arguments[curarg];
                                          curarg++;
                                          // Start argument checking
                                          curarg = 1;
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in applicationTitle (arg list 1), which corresponds to parameter initialTitle, does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          curarg++;
                                          setLineNumber(985);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                          curarg++;
                                          // End argument checking
                                          setModuleName("objectdraw");
                                          setLineNumber(984);    // compilenode object
                                          var obj1776 = Grace_allocObject(null, "applicationTitle(_)size(_)");
                                          obj1776.definitionModule = "objectdraw";
                                          obj1776.definitionLine = 984;
                                          obj1776.outer = this;
                                          var reader_objectdraw_outer1777 = function() {
                                            return this.outer;
                                          };
                                          obj1776.methods["outer"] = reader_objectdraw_outer1777;
                                          var obj_init_1776 = function() {
                                            var origSuperDepth = superDepth;
                                            superDepth = obj1776;
                                            var func1778 = function(argcv) {    // method element
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1779 = GraceDone;
                                              setLineNumber(1001);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1781 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1781)) {
                                                setLineNumber(1002);    // compilenode member
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1785 = callmethodChecked(this, "theWindow", []);
                                                var call1786 = callmethodChecked(call1785, "document", []);
                                                var call1787 = callmethodChecked(call1786, "body", []);
                                                if1779 = call1787;
                                              } else {
                                                setLineNumber(1004);    // compilenode member
                                                // call case 1: super request
                                                var call1789 = callmethodsuper(this, "element", []);
                                                if1779 = call1789;
                                              }
                                              setLineNumber(1001);    // return value
                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], if1779)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method element does not have " + 
                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                              return if1779;
                                            };
                                            func1778.paramCounts = [0];
                                            obj1776.methods["element"] = func1778;
                                            func1778.definitionLine = 1000;
                                            func1778.definitionModule = "objectdraw";
                                            var func1790 = function(argcv) {    // method arrangeHorizontal
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1791 = GraceDone;
                                              setLineNumber(1014);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1793 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1793)) {
                                                setLineNumber(1015);    // compilenode member
                                                // call case 1: super request
                                                var call1795 = callmethodsuper(this, "arrangeHorizontal", []);
                                                if1791 = call1795;
                                              } else {
                                                setLineNumber(1017);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1797 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceTrue);
                                                if1791 = call1797;
                                              }
                                              setLineNumber(1014);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1791)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method arrangeHorizontal does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1791;
                                            };
                                            func1790.paramCounts = [0];
                                            obj1776.methods["arrangeHorizontal"] = func1790;
                                            func1790.definitionLine = 1013;
                                            func1790.definitionModule = "objectdraw";
                                            var func1798 = function(argcv) {    // method arrangeVertical
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1799 = GraceDone;
                                              setLineNumber(1024);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1801 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1801)) {
                                                setLineNumber(1025);    // compilenode member
                                                // call case 1: super request
                                                var call1803 = callmethodsuper(this, "arrangeVertical", []);
                                                if1799 = call1803;
                                              } else {
                                                setLineNumber(1027);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1805 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceFalse);
                                                if1799 = call1805;
                                              }
                                              setLineNumber(1024);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1799)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method arrangeVertical does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1799;
                                            };
                                            func1798.paramCounts = [0];
                                            obj1776.methods["arrangeVertical"] = func1798;
                                            func1798.definitionLine = 1023;
                                            func1798.definitionModule = "objectdraw";
                                            var func1806 = function(argcv) {    // method on(_)do(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_kind = arguments[curarg];
                                              curarg++;
                                              var var_response = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1032);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              curarg++;
                                              setLineNumber(1033);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in do (arg list 2), which corresponds to parameter response, does not have " + 
                                                          callmethod(var_Procedure, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("objectdraw");
                                              var if1807 = GraceDone;
                                              setLineNumber(1034);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1809 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1809)) {
                                                setLineNumber(1035);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1812 = callmethodChecked(this, "theWindow", []);
                                                var call1813 = callmethodChecked(call1812, "addEventListener(2)", [2], var_kind, var_response);
                                                if1807 = call1813;
                                              } else {
                                                setLineNumber(1037);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call1817 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call1818 = callmethodChecked(call1817, "eventLogKind(1)response(1)", [1, 1], var_kind, var_response);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1820 = callmethodChecked(this, "events", []);
                                                var call1821 = callmethodChecked(call1820, "push(1)", [1], call1818);
                                                if1807 = call1821;
                                              }
                                              setLineNumber(1034);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1807)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method on(_)do(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1807;
                                            };
                                            func1806.paramTypes = [];
                                            func1806.paramTypes.push([type_String, "kind"]);
                                            func1806.paramTypes.push([]);
                                            func1806.confidential = true;
                                            func1806.paramCounts = [1, 1];
                                            obj1776.methods["on(1)do(1)"] = func1806;
                                            func1806.definitionLine = 1032;
                                            func1806.definitionModule = "objectdraw";
                                            var func1822 = function(argcv) {    // method windowTitle
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1823 = GraceDone;
                                              setLineNumber(1043);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1825 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1825)) {
                                                setLineNumber(1044);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1828 = callmethodChecked(this, "theWindow", []);
                                                var call1829 = callmethodChecked(call1828, "title", []);
                                                if1823 = call1829;
                                              } else {
                                                setLineNumber(1046);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1831 = callmethodChecked(this, "theTitle", []);
                                                if1823 = call1831;
                                              }
                                              setLineNumber(1043);    // return value
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if1823)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method windowTitle does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              return if1823;
                                            };
                                            func1822.paramCounts = [0];
                                            obj1776.methods["windowTitle"] = func1822;
                                            func1822.definitionLine = 1042;
                                            func1822.definitionModule = "objectdraw";
                                            var func1832 = function(argcv) {    // method windowTitle:=(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_value = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1051);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in windowTitle:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("objectdraw");
                                              var if1833 = GraceDone;
                                              setLineNumber(1052);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1835 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1835)) {
                                                setLineNumber(1053);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1838 = callmethodChecked(this, "theWindow", []);
                                                var call1839 = callmethodChecked(call1838, "title:=(1)", [1], var_value);
                                                if1833 = call1839;
                                              } else {
                                                setLineNumber(1055);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1841 = callmethodChecked(this, "theTitle:=(1)", [1], var_value);
                                                if1833 = call1841;
                                              }
                                              setLineNumber(1052);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1833)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method windowTitle:=(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1833;
                                            };
                                            func1832.paramTypes = [];
                                            func1832.paramTypes.push([type_String, "value"]);
                                            func1832.paramCounts = [1];
                                            obj1776.methods["windowTitle:=(1)"] = func1832;
                                            func1832.definitionLine = 1051;
                                            func1832.definitionModule = "objectdraw";
                                            var func1842 = function(argcv) {    // method width
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1843 = GraceDone;
                                              setLineNumber(1061);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1845 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1845)) {
                                                setLineNumber(1062);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1848 = callmethodChecked(this, "theWindow", []);
                                                var call1849 = callmethodChecked(call1848, "width", []);
                                                if1843 = call1849;
                                              } else {
                                                setLineNumber(1064);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1851 = callmethodChecked(this, "theWidth", []);
                                                if1843 = call1851;
                                              }
                                              setLineNumber(1061);    // return value
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if1843)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method width does not have " + 
                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                              return if1843;
                                            };
                                            func1842.paramCounts = [0];
                                            obj1776.methods["width"] = func1842;
                                            func1842.definitionLine = 1060;
                                            func1842.definitionModule = "objectdraw";
                                            var func1852 = function(argcv) {    // method height
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1853 = GraceDone;
                                              setLineNumber(1070);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1855 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1855)) {
                                                setLineNumber(1071);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1858 = callmethodChecked(this, "theWindow", []);
                                                var call1859 = callmethodChecked(call1858, "height", []);
                                                if1853 = call1859;
                                              } else {
                                                setLineNumber(1073);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1861 = callmethodChecked(this, "theHeight", []);
                                                if1853 = call1861;
                                              }
                                              setLineNumber(1070);    // return value
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if1853)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method height does not have " + 
                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                              return if1853;
                                            };
                                            func1852.paramCounts = [0];
                                            obj1776.methods["height"] = func1852;
                                            func1852.definitionLine = 1069;
                                            func1852.definitionModule = "objectdraw";
                                            var func1862 = function(argcv) {    // method onMouseEnterDo(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_f = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1083);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("objectdraw");
                                              setLineNumber(1084);    // compilenode string
                                              var string1864 = new GraceString("mouseover");
                                              var block1865 = new GraceBlock(this, 1084, 1);
                                              setLineNumber(1);    // compilenode identifier
                                              block1865.real = function(var_event__39__) {
                                                setLineNumber(1085);    // compilenode member
                                                // call case 6: other requests
                                                var call1867 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                var var_from = call1867;
                                                var if1868 = GraceDone;
                                                setLineNumber(1087);    // compilenode member
                                                // call case 6: other requests
                                                var call1871 = callmethodChecked(var_dom, "noObject", []);
                                                var opresult1873 = callmethodChecked(call1871, "==(1)", [1], var_from);
                                                if (Grace_isTrue(opresult1873)) {
                                                  setLineNumber(1088);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call1877 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call1878 = callmethodChecked(call1877, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                  // call case 6: other requests
                                                  var call1879 = callmethodChecked(var_f, "apply(1)", [1], call1878);
                                                  if1868 = call1879;
                                                }
                                                return if1868;
                                              };
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1880 = callmethodChecked(this, "on(1)do(1)", [1, 1], string1864, block1865);
                                              setLineNumber(1084);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1880)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method onMouseEnterDo(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return call1880;
                                            };
                                            func1862.paramTypes = [];
                                            func1862.paramTypes.push([]);
                                            func1862.paramCounts = [1];
                                            obj1776.methods["onMouseEnterDo(1)"] = func1862;
                                            func1862.definitionLine = 1083;
                                            func1862.definitionModule = "objectdraw";
                                            var func1881 = function(argcv) {    // method onMouseExitDo(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_f = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1094);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("objectdraw");
                                              setLineNumber(1095);    // compilenode string
                                              var string1883 = new GraceString("mouseout");
                                              var block1884 = new GraceBlock(this, 1095, 1);
                                              setLineNumber(1);    // compilenode identifier
                                              block1884.real = function(var_event__39__) {
                                                setLineNumber(1096);    // compilenode member
                                                // call case 6: other requests
                                                var call1886 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                var var_to = call1886;
                                                var if1887 = GraceDone;
                                                setLineNumber(1098);    // compilenode member
                                                // call case 6: other requests
                                                var call1890 = callmethodChecked(var_dom, "noObject", []);
                                                var opresult1892 = callmethodChecked(call1890, "==(1)", [1], var_to);
                                                if (Grace_isTrue(opresult1892)) {
                                                  setLineNumber(1099);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call1896 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call1897 = callmethodChecked(call1896, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                  // call case 6: other requests
                                                  var call1898 = callmethodChecked(var_f, "apply(1)", [1], call1897);
                                                  if1887 = call1898;
                                                }
                                                return if1887;
                                              };
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1899 = callmethodChecked(this, "on(1)do(1)", [1, 1], string1883, block1884);
                                              setLineNumber(1095);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1899)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method onMouseExitDo(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return call1899;
                                            };
                                            func1881.paramTypes = [];
                                            func1881.paramTypes.push([]);
                                            func1881.paramCounts = [1];
                                            obj1776.methods["onMouseExitDo(1)"] = func1881;
                                            func1881.definitionLine = 1094;
                                            func1881.definitionModule = "objectdraw";
                                            var func1900 = function(argcv) {    // method onMouse(_)do(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_kind = arguments[curarg];
                                              curarg++;
                                              var var_bl = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1105);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in onMouse (arg list 1), which corresponds to parameter kind, does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              curarg++;
                                              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in do (arg list 2), which corresponds to parameter bl, does not have " + 
                                                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("objectdraw");
                                              setLineNumber(1106);    // compilenode block
                                              var block1902 = new GraceBlock(this, 1106, 1);
                                              setLineNumber(1);    // compilenode identifier
                                              block1902.real = function(var_evt) {
                                                setLineNumber(1107);    // compilenode member
                                                // call case 6: other requests
                                                var call1905 = callmethodChecked(var_evt, "pageY", []);
                                                // call case 6: other requests
                                                var call1908 = callmethodChecked(var_evt, "pageX", []);
                                                var opresult1910 = callmethodChecked(call1908, "@(1)", [1], call1905);
                                                // call case 6: other requests
                                                var call1911 = callmethodChecked(var_bl, "apply(1)", [1], opresult1910);
                                                return call1911;
                                              };
                                              // call case 6: other requests
                                              setLineNumber(1106);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1913 = callmethodChecked(this, "theWindow", []);
                                              var call1914 = callmethodChecked(call1913, "addEventListener(2)", [2], var_kind, block1902);
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1914)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method onMouse(_)do(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return call1914;
                                            };
                                            func1900.paramTypes = [];
                                            func1900.paramTypes.push([type_String, "kind"]);
                                            func1900.paramTypes.push([]);
                                            func1900.confidential = true;
                                            func1900.paramCounts = [1, 1];
                                            obj1776.methods["onMouse(1)do(1)"] = func1900;
                                            func1900.definitionLine = 1105;
                                            func1900.definitionModule = "objectdraw";
                                            var func1915 = function(argcv) {    // method startApplication
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if1916 = GraceDone;
                                              setLineNumber(1113);    // compilenode call
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1919 = callmethodChecked(this, "isOpened", []);
                                              var call1920 = callmethodChecked(call1919, "prefix!", [0]);
                                              if (Grace_isTrue(call1920)) {
                                                setLineNumber(1114);    // compilenode string
                                                var string1923 = new GraceString("");
                                                var string1924 = new GraceString("");
                                                var string1925 = new GraceString("");
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1928 = callmethodChecked(this, "theHeight", []);
                                                var string1930 = new GraceString(",height=");
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1933 = callmethodChecked(this, "theWidth", []);
                                                var string1935 = new GraceString("width=");
                                                var opresult1937 = callmethodChecked(string1935, "++(1)", [1], call1933);
                                                var opresult1939 = callmethodChecked(opresult1937, "++(1)", [1], string1930);
                                                var opresult1941 = callmethodChecked(opresult1939, "++(1)", [1], call1928);
                                                var opresult1943 = callmethodChecked(opresult1941, "++(1)", [1], string1925);
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                var call1945 = callmethodChecked(var_dom, "window", []);
                                                var call1946 = callmethodChecked(call1945, "open(3)", [3], string1923, string1924, opresult1943);
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1947 = callmethodChecked(this, "theWindow:=(1)", [1], call1946);
                                                setLineNumber(1115);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1950 = callmethodChecked(this, "theTitle", []);
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1953 = callmethodChecked(this, "theWindow", []);
                                                var call1954 = callmethodChecked(call1953, "document", []);
                                                var call1955 = callmethodChecked(call1954, "title:=(1)", [1], call1950);
                                                setLineNumber(1116);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1958 = callmethodChecked(this, "element", []);
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1962 = callmethodChecked(this, "theWindow", []);
                                                var call1963 = callmethodChecked(call1962, "document", []);
                                                var call1964 = callmethodChecked(call1963, "body", []);
                                                var call1965 = callmethodChecked(call1964, "appendChild(1)", [1], call1958);
                                                var if1966 = GraceDone;
                                                setLineNumber(1118);    // compilenode member
                                                // call case 6: other requests
                                                var call1969 = callmethodChecked(var_dom, "window", []);
                                                var string1970 = new GraceString("graceRegisterWindow");
                                                // call case 6: other requests
                                                var call1971 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call1969, string1970);
                                                if (Grace_isTrue(call1971)) {
                                                  setLineNumber(1119);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call1974 = callmethodChecked(this, "theWindow", []);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call1976 = callmethodChecked(var_dom, "window", []);
                                                  var call1977 = callmethodChecked(call1976, "graceRegisterWindow(1)", [1], call1974);
                                                  if1966 = call1977;
                                                }
                                                setLineNumber(1122);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1979 = callmethodChecked(this, "isOpened:=(1)", [1], GraceTrue);
                                                setLineNumber(1124);    // compilenode string
                                                var string1981 = new GraceString("100%");
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1984 = callmethodChecked(this, "element", []);
                                                var call1985 = callmethodChecked(call1984, "style", []);
                                                var call1986 = callmethodChecked(call1985, "width:=(1)", [1], string1981);
                                                setLineNumber(1125);    // compilenode string
                                                var string1988 = new GraceString("0px");
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1991 = callmethodChecked(this, "element", []);
                                                var call1992 = callmethodChecked(call1991, "style", []);
                                                var call1993 = callmethodChecked(call1992, "margin:=(1)", [1], string1988);
                                                var if1994 = GraceDone;
                                                setLineNumber(1127);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1996 = callmethodChecked(this, "isHorizontal", []);
                                                if (Grace_isTrue(call1996)) {
                                                  setLineNumber(1128);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call1998 = callmethodChecked(this, "arrangeHorizontal", []);
                                                  if1994 = call1998;
                                                } else {
                                                  setLineNumber(1130);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2000 = callmethodChecked(this, "arrangeVertical", []);
                                                  if1994 = call2000;
                                                }
                                                setLineNumber(1133);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2003 = callmethodChecked(this, "events", []);
                                                var block2004 = new GraceBlock(this, 1133, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2004.real = function(var_anEvent) {
                                                  setLineNumber(1134);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2007 = callmethodChecked(var_anEvent, "kind", []);
                                                  // call case 6: other requests
                                                  var call2009 = callmethodChecked(var_anEvent, "response", []);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2010 = callmethodChecked(this, "on(1)do(1)", [1, 1], call2007, call2009);
                                                  return call2010;
                                                };
                                                // call case 5: prelude request
                                                var call2011 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2003, block2004);
                                                if1916 = call2011;
                                              }
                                              setLineNumber(1113);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1916)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method startApplication does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1916;
                                            };
                                            func1915.paramCounts = [0];
                                            obj1776.methods["startApplication"] = func1915;
                                            func1915.definitionLine = 1112;
                                            func1915.definitionModule = "objectdraw";
                                            var func2012 = function(argcv) {    // method stopApplication
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              var if2013 = GraceDone;
                                              setLineNumber(1141);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2015 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call2015)) {
                                                setLineNumber(1142);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2018 = callmethodChecked(this, "theWindow", []);
                                                var call2019 = callmethodChecked(call2018, "close", []);
                                                if2013 = call2019;
                                              }
                                              setLineNumber(1141);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2013)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method stopApplication does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if2013;
                                            };
                                            func2012.paramCounts = [0];
                                            obj1776.methods["stopApplication"] = func2012;
                                            func2012.definitionLine = 1140;
                                            func2012.definitionModule = "objectdraw";
                                            var func2020 = function(argcv) {    // method asString
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("objectdraw");
                                              setLineNumber(1148);    // compilenode string
                                              var string2021 = new GraceString("");
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2024 = callmethodChecked(this, "windowTitle", []);
                                              var string2026 = new GraceString("application titled ");
                                              var opresult2028 = callmethodChecked(string2026, "++(1)", [1], call2024);
                                              var opresult2030 = callmethodChecked(opresult2028, "++(1)", [1], string2021);
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2030)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method asString does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              return opresult2030;
                                            };
                                            func2020.paramCounts = [0];
                                            obj1776.methods["asString"] = func2020;
                                            func2020.definitionLine = 1147;
                                            func2020.definitionModule = "objectdraw";
                                            setLineNumber(989);    // compilenode member
                                            // call case 6: other requests
                                            var call2033 = callmethodChecked(var_document, "createDocumentFragment", []);
                                            // call case 6: other requests
                                            setLineNumber(0);    // compilenode member
                                            // call case 3: self.outer request
                                            var call2035 = callmethodChecked(superDepth, "outer", [0]);
                                            onSelf = true;
                                            var call2036 = callmethodChecked(call2035, "containerFromElement(1)$object(1)", [1, 1], call2033, this);
                                            obj1776.superobj = call2036;
                                            if (call2036.data) obj1776.data = call2036.data;
                                            if (call2036.hasOwnProperty('_value'))
                                                obj1776._value = call2036._value;
                                            setLineNumber(991);    // compilenode identifier
                                            obj1776.data["isOpened"] = GraceFalse;
                                            var reader_objectdraw_isOpened2037 = function() {
                                              return this.data["isOpened"];
                                            };
                                            obj1776.methods["isOpened"] = reader_objectdraw_isOpened2037;
                                            obj1776.data["isOpened"] = GraceFalse;
                                            var writer_objectdraw_isOpened2037 = function(argcv, o) {
                                              this.data["isOpened"] = o;
                                              return GraceDone;
                                            };
                                            obj1776.methods["isOpened:=(1)"] = writer_objectdraw_isOpened2037;
                                            reader_objectdraw_isOpened2037.confidential = true;
                                            writer_objectdraw_isOpened2037.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'isOpened' is not of type Boolean"));
                                            obj1776.mutable = true;
                                            obj1776.data["theWindow"] = undefined;
                                            var reader_objectdraw_theWindow2038 = function() {
                                              return this.data["theWindow"];
                                            };
                                            obj1776.methods["theWindow"] = reader_objectdraw_theWindow2038;
                                            obj1776.data["theWindow"] = undefined;
                                            var writer_objectdraw_theWindow2038 = function(argcv, o) {
                                              this.data["theWindow"] = o;
                                              return GraceDone;
                                            };
                                            obj1776.methods["theWindow:=(1)"] = writer_objectdraw_theWindow2038;
                                            reader_objectdraw_theWindow2038.confidential = true;
                                            writer_objectdraw_theWindow2038.confidential = true;
                                            obj1776.mutable = true;
                                            setLineNumber(994);    // compilenode identifier
                                            obj1776.data["theTitle"] = var_initialTitle;
                                            var reader_objectdraw_theTitle2039 = function() {
                                              return this.data["theTitle"];
                                            };
                                            obj1776.methods["theTitle"] = reader_objectdraw_theTitle2039;
                                            obj1776.data["theTitle"] = var_initialTitle;
                                            var writer_objectdraw_theTitle2039 = function(argcv, o) {
                                              this.data["theTitle"] = o;
                                              return GraceDone;
                                            };
                                            obj1776.methods["theTitle:=(1)"] = writer_objectdraw_theTitle2039;
                                            reader_objectdraw_theTitle2039.confidential = true;
                                            writer_objectdraw_theTitle2039.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_initialTitle)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'theTitle' is not of type String"));
                                            obj1776.mutable = true;
                                            setLineNumber(995);    // compilenode member
                                            // call case 6: other requests
                                            var call2041 = callmethodChecked(var_dimensions__39__, "x", []);
                                            obj1776.data["theWidth"] = call2041;
                                            var reader_objectdraw_theWidth2042 = function() {
                                              return this.data["theWidth"];
                                            };
                                            obj1776.methods["theWidth"] = reader_objectdraw_theWidth2042;
                                            obj1776.data["theWidth"] = call2041;
                                            var writer_objectdraw_theWidth2042 = function(argcv, o) {
                                              this.data["theWidth"] = o;
                                              return GraceDone;
                                            };
                                            obj1776.methods["theWidth:=(1)"] = writer_objectdraw_theWidth2042;
                                            reader_objectdraw_theWidth2042.confidential = true;
                                            writer_objectdraw_theWidth2042.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2041)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'theWidth' is not of type Number"));
                                            obj1776.mutable = true;
                                            setLineNumber(996);    // compilenode member
                                            // call case 6: other requests
                                            var call2044 = callmethodChecked(var_dimensions__39__, "y", []);
                                            obj1776.data["theHeight"] = call2044;
                                            var reader_objectdraw_theHeight2045 = function() {
                                              return this.data["theHeight"];
                                            };
                                            obj1776.methods["theHeight"] = reader_objectdraw_theHeight2045;
                                            obj1776.data["theHeight"] = call2044;
                                            var writer_objectdraw_theHeight2045 = function(argcv, o) {
                                              this.data["theHeight"] = o;
                                              return GraceDone;
                                            };
                                            obj1776.methods["theHeight:=(1)"] = writer_objectdraw_theHeight2045;
                                            reader_objectdraw_theHeight2045.confidential = true;
                                            writer_objectdraw_theHeight2045.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2044)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'theHeight' is not of type Number"));
                                            obj1776.mutable = true;
                                            setLineNumber(998);    // compilenode array
                                            var array2046 = new PrimitiveGraceList([]);
                                            obj1776.data["events"] = array2046;
                                            var reader_objectdraw_events2047 = function() {
                                              return this.data["events"];
                                            };
                                            reader_objectdraw_events2047.def = true;
                                            reader_objectdraw_events2047.confidential = true;
                                            obj1776.methods["events"] = reader_objectdraw_events2047;
                                            setLineNumber(1009);    // compilenode identifier
                                            obj1776.data["isHorizontal"] = GraceTrue;
                                            var reader_objectdraw_isHorizontal2048 = function() {
                                              return this.data["isHorizontal"];
                                            };
                                            obj1776.methods["isHorizontal"] = reader_objectdraw_isHorizontal2048;
                                            obj1776.data["isHorizontal"] = GraceTrue;
                                            var writer_objectdraw_isHorizontal2048 = function(argcv, o) {
                                              this.data["isHorizontal"] = o;
                                              return GraceDone;
                                            };
                                            obj1776.methods["isHorizontal:=(1)"] = writer_objectdraw_isHorizontal2048;
                                            reader_objectdraw_isHorizontal2048.confidential = true;
                                            writer_objectdraw_isHorizontal2048.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'isHorizontal' is not of type Boolean"));
                                            obj1776.mutable = true;
                                            superDepth = origSuperDepth;
                                          };
                                          obj_init_1776.apply(obj1776, []);
                                          setLineNumber(984);    // return value
                                          if (!Grace_isTrue(callmethod(var_Application, "match(1)", [1], obj1776)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method applicationTitle(_)size(_) does not have " + 
                                                      callmethod(var_Application, "asString", [0])._value + "."));
                                          return obj1776;
                                        };
                                        func1775.paramTypes = [];
                                        func1775.paramTypes.push([type_String, "initialTitle"]);
                                        func1775.paramTypes.push([]);
                                        func1775.paramCounts = [1, 1];
                                        this.methods["applicationTitle(1)size(1)"] = func1775;
                                        func1775.definitionLine = 984;
                                        func1775.definitionModule = "objectdraw";
                                          var func2049 = function(argcv) {    // method applicationTitle(_)size(_)$object(_)
                                            var curarg = 1;
                                            var var_initialTitle = arguments[curarg];
                                            curarg++;
                                            var var_dimensions__39__ = arguments[curarg];
                                            curarg++;
                                            var inheritingObject = arguments[curarg++];
                                            // Start argument processing
                                            curarg = 1;
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in applicationTitle (arg list 1), which corresponds to parameter initialTitle, does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            curarg++;
                                            setLineNumber(985);    // compilenode identifier
                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                            curarg++;
                                            // End argument processing
                                            setModuleName("objectdraw");
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var obj2050 = Grace_allocObject(null, "applicationTitle(1)size(1)");
                                            obj2050.definitionModule = "objectdraw";
                                            obj2050.definitionLine = 984;
                                            var inho2050 = inheritingObject;
                                            while (inho2050.superobj) inho2050 = inho2050.superobj;
                                            inho2050.superobj = obj2050;
                                            obj2050.data = inheritingObject.data;
                                            if (inheritingObject.hasOwnProperty('_value'))
                                              obj2050._value = inheritingObject._value;
                                            obj2050.outer = this;
                                            var reader_objectdraw_outer2051 = function() {
                                              return this.outer;
                                            };
                                            obj2050.methods["outer"] = reader_objectdraw_outer2051;
                                            var obj_init_2050 = function() {
                                              var origSuperDepth = superDepth;
                                              superDepth = obj2050;
                                              var func2052 = function(argcv) {    // method element
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2053 = GraceDone;
                                                setLineNumber(1001);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2055 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2055)) {
                                                  setLineNumber(1002);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2059 = callmethodChecked(this, "theWindow", []);
                                                  var call2060 = callmethodChecked(call2059, "document", []);
                                                  var call2061 = callmethodChecked(call2060, "body", []);
                                                  if2053 = call2061;
                                                } else {
                                                  setLineNumber(1004);    // compilenode member
                                                  // call case 1: super request
                                                  var call2063 = callmethodsuper(this, "element", []);
                                                  if2053 = call2063;
                                                }
                                                setLineNumber(1001);    // return value
                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], if2053)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method element does not have " + 
                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                return if2053;
                                              };
                                              func2052.paramCounts = [0];
                                              obj2050.methods["element"] = func2052;
                                              func2052.definitionLine = 1000;
                                              func2052.definitionModule = "objectdraw";
                                              var func2064 = function(argcv) {    // method arrangeHorizontal
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2065 = GraceDone;
                                                setLineNumber(1014);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2067 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2067)) {
                                                  setLineNumber(1015);    // compilenode member
                                                  // call case 1: super request
                                                  var call2069 = callmethodsuper(this, "arrangeHorizontal", []);
                                                  if2065 = call2069;
                                                } else {
                                                  setLineNumber(1017);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2071 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceTrue);
                                                  if2065 = call2071;
                                                }
                                                setLineNumber(1014);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2065)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method arrangeHorizontal does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2065;
                                              };
                                              func2064.paramCounts = [0];
                                              obj2050.methods["arrangeHorizontal"] = func2064;
                                              func2064.definitionLine = 1013;
                                              func2064.definitionModule = "objectdraw";
                                              var func2072 = function(argcv) {    // method arrangeVertical
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2073 = GraceDone;
                                                setLineNumber(1024);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2075 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2075)) {
                                                  setLineNumber(1025);    // compilenode member
                                                  // call case 1: super request
                                                  var call2077 = callmethodsuper(this, "arrangeVertical", []);
                                                  if2073 = call2077;
                                                } else {
                                                  setLineNumber(1027);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2079 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceFalse);
                                                  if2073 = call2079;
                                                }
                                                setLineNumber(1024);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2073)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method arrangeVertical does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2073;
                                              };
                                              func2072.paramCounts = [0];
                                              obj2050.methods["arrangeVertical"] = func2072;
                                              func2072.definitionLine = 1023;
                                              func2072.definitionModule = "objectdraw";
                                              var func2080 = function(argcv) {    // method on(_)do(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_kind = arguments[curarg];
                                                curarg++;
                                                var var_response = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1032);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                curarg++;
                                                setLineNumber(1033);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in do (arg list 2), which corresponds to parameter response, does not have " + 
                                                            callmethod(var_Procedure, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                var if2081 = GraceDone;
                                                setLineNumber(1034);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2083 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2083)) {
                                                  setLineNumber(1035);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2086 = callmethodChecked(this, "theWindow", []);
                                                  var call2087 = callmethodChecked(call2086, "addEventListener(2)", [2], var_kind, var_response);
                                                  if2081 = call2087;
                                                } else {
                                                  setLineNumber(1037);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call2091 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call2092 = callmethodChecked(call2091, "eventLogKind(1)response(1)", [1, 1], var_kind, var_response);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2094 = callmethodChecked(this, "events", []);
                                                  var call2095 = callmethodChecked(call2094, "push(1)", [1], call2092);
                                                  if2081 = call2095;
                                                }
                                                setLineNumber(1034);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2081)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method on(_)do(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2081;
                                              };
                                              func2080.paramTypes = [];
                                              func2080.paramTypes.push([type_String, "kind"]);
                                              func2080.paramTypes.push([]);
                                              func2080.confidential = true;
                                              func2080.paramCounts = [1, 1];
                                              obj2050.methods["on(1)do(1)"] = func2080;
                                              func2080.definitionLine = 1032;
                                              func2080.definitionModule = "objectdraw";
                                              var func2096 = function(argcv) {    // method windowTitle
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2097 = GraceDone;
                                                setLineNumber(1043);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2099 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2099)) {
                                                  setLineNumber(1044);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2102 = callmethodChecked(this, "theWindow", []);
                                                  var call2103 = callmethodChecked(call2102, "title", []);
                                                  if2097 = call2103;
                                                } else {
                                                  setLineNumber(1046);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2105 = callmethodChecked(this, "theTitle", []);
                                                  if2097 = call2105;
                                                }
                                                setLineNumber(1043);    // return value
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if2097)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method windowTitle does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                return if2097;
                                              };
                                              func2096.paramCounts = [0];
                                              obj2050.methods["windowTitle"] = func2096;
                                              func2096.definitionLine = 1042;
                                              func2096.definitionModule = "objectdraw";
                                              var func2106 = function(argcv) {    // method windowTitle:=(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_value = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1051);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in windowTitle:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                var if2107 = GraceDone;
                                                setLineNumber(1052);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2109 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2109)) {
                                                  setLineNumber(1053);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2112 = callmethodChecked(this, "theWindow", []);
                                                  var call2113 = callmethodChecked(call2112, "title:=(1)", [1], var_value);
                                                  if2107 = call2113;
                                                } else {
                                                  setLineNumber(1055);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2115 = callmethodChecked(this, "theTitle:=(1)", [1], var_value);
                                                  if2107 = call2115;
                                                }
                                                setLineNumber(1052);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2107)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method windowTitle:=(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2107;
                                              };
                                              func2106.paramTypes = [];
                                              func2106.paramTypes.push([type_String, "value"]);
                                              func2106.paramCounts = [1];
                                              obj2050.methods["windowTitle:=(1)"] = func2106;
                                              func2106.definitionLine = 1051;
                                              func2106.definitionModule = "objectdraw";
                                              var func2116 = function(argcv) {    // method width
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2117 = GraceDone;
                                                setLineNumber(1061);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2119 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2119)) {
                                                  setLineNumber(1062);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2122 = callmethodChecked(this, "theWindow", []);
                                                  var call2123 = callmethodChecked(call2122, "width", []);
                                                  if2117 = call2123;
                                                } else {
                                                  setLineNumber(1064);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2125 = callmethodChecked(this, "theWidth", []);
                                                  if2117 = call2125;
                                                }
                                                setLineNumber(1061);    // return value
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if2117)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method width does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return if2117;
                                              };
                                              func2116.paramCounts = [0];
                                              obj2050.methods["width"] = func2116;
                                              func2116.definitionLine = 1060;
                                              func2116.definitionModule = "objectdraw";
                                              var func2126 = function(argcv) {    // method height
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2127 = GraceDone;
                                                setLineNumber(1070);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2129 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2129)) {
                                                  setLineNumber(1071);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2132 = callmethodChecked(this, "theWindow", []);
                                                  var call2133 = callmethodChecked(call2132, "height", []);
                                                  if2127 = call2133;
                                                } else {
                                                  setLineNumber(1073);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2135 = callmethodChecked(this, "theHeight", []);
                                                  if2127 = call2135;
                                                }
                                                setLineNumber(1070);    // return value
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if2127)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method height does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return if2127;
                                              };
                                              func2126.paramCounts = [0];
                                              obj2050.methods["height"] = func2126;
                                              func2126.definitionLine = 1069;
                                              func2126.definitionModule = "objectdraw";
                                              var func2136 = function(argcv) {    // method onMouseEnterDo(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_f = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1083);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                            callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1084);    // compilenode string
                                                var string2138 = new GraceString("mouseover");
                                                var block2139 = new GraceBlock(this, 1084, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2139.real = function(var_event__39__) {
                                                  setLineNumber(1085);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2141 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                  var var_from = call2141;
                                                  var if2142 = GraceDone;
                                                  setLineNumber(1087);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2145 = callmethodChecked(var_dom, "noObject", []);
                                                  var opresult2147 = callmethodChecked(call2145, "==(1)", [1], var_from);
                                                  if (Grace_isTrue(opresult2147)) {
                                                    setLineNumber(1088);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call2151 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call2152 = callmethodChecked(call2151, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                    // call case 6: other requests
                                                    var call2153 = callmethodChecked(var_f, "apply(1)", [1], call2152);
                                                    if2142 = call2153;
                                                  }
                                                  return if2142;
                                                };
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2154 = callmethodChecked(this, "on(1)do(1)", [1, 1], string2138, block2139);
                                                setLineNumber(1084);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2154)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method onMouseEnterDo(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2154;
                                              };
                                              func2136.paramTypes = [];
                                              func2136.paramTypes.push([]);
                                              func2136.paramCounts = [1];
                                              obj2050.methods["onMouseEnterDo(1)"] = func2136;
                                              func2136.definitionLine = 1083;
                                              func2136.definitionModule = "objectdraw";
                                              var func2155 = function(argcv) {    // method onMouseExitDo(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_f = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1094);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                            callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1095);    // compilenode string
                                                var string2157 = new GraceString("mouseout");
                                                var block2158 = new GraceBlock(this, 1095, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2158.real = function(var_event__39__) {
                                                  setLineNumber(1096);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2160 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                  var var_to = call2160;
                                                  var if2161 = GraceDone;
                                                  setLineNumber(1098);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2164 = callmethodChecked(var_dom, "noObject", []);
                                                  var opresult2166 = callmethodChecked(call2164, "==(1)", [1], var_to);
                                                  if (Grace_isTrue(opresult2166)) {
                                                    setLineNumber(1099);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call2170 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call2171 = callmethodChecked(call2170, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                    // call case 6: other requests
                                                    var call2172 = callmethodChecked(var_f, "apply(1)", [1], call2171);
                                                    if2161 = call2172;
                                                  }
                                                  return if2161;
                                                };
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2173 = callmethodChecked(this, "on(1)do(1)", [1, 1], string2157, block2158);
                                                setLineNumber(1095);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2173)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method onMouseExitDo(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2173;
                                              };
                                              func2155.paramTypes = [];
                                              func2155.paramTypes.push([]);
                                              func2155.paramCounts = [1];
                                              obj2050.methods["onMouseExitDo(1)"] = func2155;
                                              func2155.definitionLine = 1094;
                                              func2155.definitionModule = "objectdraw";
                                              var func2174 = function(argcv) {    // method onMouse(_)do(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_kind = arguments[curarg];
                                                curarg++;
                                                var var_bl = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1105);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in onMouse (arg list 1), which corresponds to parameter kind, does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                curarg++;
                                                if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in do (arg list 2), which corresponds to parameter bl, does not have " + 
                                                            callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1106);    // compilenode block
                                                var block2176 = new GraceBlock(this, 1106, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2176.real = function(var_evt) {
                                                  setLineNumber(1107);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2179 = callmethodChecked(var_evt, "pageY", []);
                                                  // call case 6: other requests
                                                  var call2182 = callmethodChecked(var_evt, "pageX", []);
                                                  var opresult2184 = callmethodChecked(call2182, "@(1)", [1], call2179);
                                                  // call case 6: other requests
                                                  var call2185 = callmethodChecked(var_bl, "apply(1)", [1], opresult2184);
                                                  return call2185;
                                                };
                                                // call case 6: other requests
                                                setLineNumber(1106);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2187 = callmethodChecked(this, "theWindow", []);
                                                var call2188 = callmethodChecked(call2187, "addEventListener(2)", [2], var_kind, block2176);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2188)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method onMouse(_)do(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2188;
                                              };
                                              func2174.paramTypes = [];
                                              func2174.paramTypes.push([type_String, "kind"]);
                                              func2174.paramTypes.push([]);
                                              func2174.confidential = true;
                                              func2174.paramCounts = [1, 1];
                                              obj2050.methods["onMouse(1)do(1)"] = func2174;
                                              func2174.definitionLine = 1105;
                                              func2174.definitionModule = "objectdraw";
                                              var func2189 = function(argcv) {    // method startApplication
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2190 = GraceDone;
                                                setLineNumber(1113);    // compilenode call
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2193 = callmethodChecked(this, "isOpened", []);
                                                var call2194 = callmethodChecked(call2193, "prefix!", [0]);
                                                if (Grace_isTrue(call2194)) {
                                                  setLineNumber(1114);    // compilenode string
                                                  var string2197 = new GraceString("");
                                                  var string2198 = new GraceString("");
                                                  var string2199 = new GraceString("");
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2202 = callmethodChecked(this, "theHeight", []);
                                                  var string2204 = new GraceString(",height=");
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2207 = callmethodChecked(this, "theWidth", []);
                                                  var string2209 = new GraceString("width=");
                                                  var opresult2211 = callmethodChecked(string2209, "++(1)", [1], call2207);
                                                  var opresult2213 = callmethodChecked(opresult2211, "++(1)", [1], string2204);
                                                  var opresult2215 = callmethodChecked(opresult2213, "++(1)", [1], call2202);
                                                  var opresult2217 = callmethodChecked(opresult2215, "++(1)", [1], string2199);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2219 = callmethodChecked(var_dom, "window", []);
                                                  var call2220 = callmethodChecked(call2219, "open(3)", [3], string2197, string2198, opresult2217);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2221 = callmethodChecked(this, "theWindow:=(1)", [1], call2220);
                                                  setLineNumber(1115);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2224 = callmethodChecked(this, "theTitle", []);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2227 = callmethodChecked(this, "theWindow", []);
                                                  var call2228 = callmethodChecked(call2227, "document", []);
                                                  var call2229 = callmethodChecked(call2228, "title:=(1)", [1], call2224);
                                                  setLineNumber(1116);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2232 = callmethodChecked(this, "element", []);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2236 = callmethodChecked(this, "theWindow", []);
                                                  var call2237 = callmethodChecked(call2236, "document", []);
                                                  var call2238 = callmethodChecked(call2237, "body", []);
                                                  var call2239 = callmethodChecked(call2238, "appendChild(1)", [1], call2232);
                                                  var if2240 = GraceDone;
                                                  setLineNumber(1118);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2243 = callmethodChecked(var_dom, "window", []);
                                                  var string2244 = new GraceString("graceRegisterWindow");
                                                  // call case 6: other requests
                                                  var call2245 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call2243, string2244);
                                                  if (Grace_isTrue(call2245)) {
                                                    setLineNumber(1119);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2248 = callmethodChecked(this, "theWindow", []);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call2250 = callmethodChecked(var_dom, "window", []);
                                                    var call2251 = callmethodChecked(call2250, "graceRegisterWindow(1)", [1], call2248);
                                                    if2240 = call2251;
                                                  }
                                                  setLineNumber(1122);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2253 = callmethodChecked(this, "isOpened:=(1)", [1], GraceTrue);
                                                  setLineNumber(1124);    // compilenode string
                                                  var string2255 = new GraceString("100%");
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2258 = callmethodChecked(this, "element", []);
                                                  var call2259 = callmethodChecked(call2258, "style", []);
                                                  var call2260 = callmethodChecked(call2259, "width:=(1)", [1], string2255);
                                                  setLineNumber(1125);    // compilenode string
                                                  var string2262 = new GraceString("0px");
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2265 = callmethodChecked(this, "element", []);
                                                  var call2266 = callmethodChecked(call2265, "style", []);
                                                  var call2267 = callmethodChecked(call2266, "margin:=(1)", [1], string2262);
                                                  var if2268 = GraceDone;
                                                  setLineNumber(1127);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2270 = callmethodChecked(this, "isHorizontal", []);
                                                  if (Grace_isTrue(call2270)) {
                                                    setLineNumber(1128);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2272 = callmethodChecked(this, "arrangeHorizontal", []);
                                                    if2268 = call2272;
                                                  } else {
                                                    setLineNumber(1130);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2274 = callmethodChecked(this, "arrangeVertical", []);
                                                    if2268 = call2274;
                                                  }
                                                  setLineNumber(1133);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2277 = callmethodChecked(this, "events", []);
                                                  var block2278 = new GraceBlock(this, 1133, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2278.real = function(var_anEvent) {
                                                    setLineNumber(1134);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2281 = callmethodChecked(var_anEvent, "kind", []);
                                                    // call case 6: other requests
                                                    var call2283 = callmethodChecked(var_anEvent, "response", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2284 = callmethodChecked(this, "on(1)do(1)", [1, 1], call2281, call2283);
                                                    return call2284;
                                                  };
                                                  // call case 5: prelude request
                                                  var call2285 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2277, block2278);
                                                  if2190 = call2285;
                                                }
                                                setLineNumber(1113);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2190)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method startApplication does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2190;
                                              };
                                              func2189.paramCounts = [0];
                                              obj2050.methods["startApplication"] = func2189;
                                              func2189.definitionLine = 1112;
                                              func2189.definitionModule = "objectdraw";
                                              var func2286 = function(argcv) {    // method stopApplication
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                var if2287 = GraceDone;
                                                setLineNumber(1141);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2289 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2289)) {
                                                  setLineNumber(1142);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2292 = callmethodChecked(this, "theWindow", []);
                                                  var call2293 = callmethodChecked(call2292, "close", []);
                                                  if2287 = call2293;
                                                }
                                                setLineNumber(1141);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2287)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method stopApplication does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2287;
                                              };
                                              func2286.paramCounts = [0];
                                              obj2050.methods["stopApplication"] = func2286;
                                              func2286.definitionLine = 1140;
                                              func2286.definitionModule = "objectdraw";
                                              var func2294 = function(argcv) {    // method asString
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1148);    // compilenode string
                                                var string2295 = new GraceString("");
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2298 = callmethodChecked(this, "windowTitle", []);
                                                var string2300 = new GraceString("application titled ");
                                                var opresult2302 = callmethodChecked(string2300, "++(1)", [1], call2298);
                                                var opresult2304 = callmethodChecked(opresult2302, "++(1)", [1], string2295);
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2304)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method asString does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                return opresult2304;
                                              };
                                              func2294.paramCounts = [0];
                                              obj2050.methods["asString"] = func2294;
                                              func2294.definitionLine = 1147;
                                              func2294.definitionModule = "objectdraw";
                                              setLineNumber(989);    // compilenode member
                                              // call case 6: other requests
                                              var call2307 = callmethodChecked(var_document, "createDocumentFragment", []);
                                              // call case 6: other requests
                                              setLineNumber(0);    // compilenode member
                                              // call case 3: self.outer request
                                              var call2309 = callmethodChecked(superDepth, "outer", [0]);
                                              onSelf = true;
                                              var call2310 = callmethodChecked(call2309, "containerFromElement(1)$object(1)", [1, 1], call2307, this);
                                              obj2050.superobj = call2310;
                                              if (call2310.data) obj2050.data = call2310.data;
                                              if (call2310.hasOwnProperty('_value'))
                                                  obj2050._value = call2310._value;
                                              setLineNumber(991);    // compilenode identifier
                                              obj2050.data["isOpened"] = GraceFalse;
                                              var reader_objectdraw_isOpened2311 = function() {
                                                return this.data["isOpened"];
                                              };
                                              obj2050.methods["isOpened"] = reader_objectdraw_isOpened2311;
                                              obj2050.data["isOpened"] = GraceFalse;
                                              var writer_objectdraw_isOpened2311 = function(argcv, o) {
                                                this.data["isOpened"] = o;
                                                return GraceDone;
                                              };
                                              obj2050.methods["isOpened:=(1)"] = writer_objectdraw_isOpened2311;
                                              reader_objectdraw_isOpened2311.confidential = true;
                                              writer_objectdraw_isOpened2311.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'isOpened' is not of type Boolean"));
                                              obj2050.mutable = true;
                                              obj2050.data["theWindow"] = undefined;
                                              var reader_objectdraw_theWindow2312 = function() {
                                                return this.data["theWindow"];
                                              };
                                              obj2050.methods["theWindow"] = reader_objectdraw_theWindow2312;
                                              obj2050.data["theWindow"] = undefined;
                                              var writer_objectdraw_theWindow2312 = function(argcv, o) {
                                                this.data["theWindow"] = o;
                                                return GraceDone;
                                              };
                                              obj2050.methods["theWindow:=(1)"] = writer_objectdraw_theWindow2312;
                                              reader_objectdraw_theWindow2312.confidential = true;
                                              writer_objectdraw_theWindow2312.confidential = true;
                                              obj2050.mutable = true;
                                              setLineNumber(994);    // compilenode identifier
                                              obj2050.data["theTitle"] = var_initialTitle;
                                              var reader_objectdraw_theTitle2313 = function() {
                                                return this.data["theTitle"];
                                              };
                                              obj2050.methods["theTitle"] = reader_objectdraw_theTitle2313;
                                              obj2050.data["theTitle"] = var_initialTitle;
                                              var writer_objectdraw_theTitle2313 = function(argcv, o) {
                                                this.data["theTitle"] = o;
                                                return GraceDone;
                                              };
                                              obj2050.methods["theTitle:=(1)"] = writer_objectdraw_theTitle2313;
                                              reader_objectdraw_theTitle2313.confidential = true;
                                              writer_objectdraw_theTitle2313.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_initialTitle)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'theTitle' is not of type String"));
                                              obj2050.mutable = true;
                                              setLineNumber(995);    // compilenode member
                                              // call case 6: other requests
                                              var call2315 = callmethodChecked(var_dimensions__39__, "x", []);
                                              obj2050.data["theWidth"] = call2315;
                                              var reader_objectdraw_theWidth2316 = function() {
                                                return this.data["theWidth"];
                                              };
                                              obj2050.methods["theWidth"] = reader_objectdraw_theWidth2316;
                                              obj2050.data["theWidth"] = call2315;
                                              var writer_objectdraw_theWidth2316 = function(argcv, o) {
                                                this.data["theWidth"] = o;
                                                return GraceDone;
                                              };
                                              obj2050.methods["theWidth:=(1)"] = writer_objectdraw_theWidth2316;
                                              reader_objectdraw_theWidth2316.confidential = true;
                                              writer_objectdraw_theWidth2316.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2315)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'theWidth' is not of type Number"));
                                              obj2050.mutable = true;
                                              setLineNumber(996);    // compilenode member
                                              // call case 6: other requests
                                              var call2318 = callmethodChecked(var_dimensions__39__, "y", []);
                                              obj2050.data["theHeight"] = call2318;
                                              var reader_objectdraw_theHeight2319 = function() {
                                                return this.data["theHeight"];
                                              };
                                              obj2050.methods["theHeight"] = reader_objectdraw_theHeight2319;
                                              obj2050.data["theHeight"] = call2318;
                                              var writer_objectdraw_theHeight2319 = function(argcv, o) {
                                                this.data["theHeight"] = o;
                                                return GraceDone;
                                              };
                                              obj2050.methods["theHeight:=(1)"] = writer_objectdraw_theHeight2319;
                                              reader_objectdraw_theHeight2319.confidential = true;
                                              writer_objectdraw_theHeight2319.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2318)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'theHeight' is not of type Number"));
                                              obj2050.mutable = true;
                                              setLineNumber(998);    // compilenode array
                                              var array2320 = new PrimitiveGraceList([]);
                                              obj2050.data["events"] = array2320;
                                              var reader_objectdraw_events2321 = function() {
                                                return this.data["events"];
                                              };
                                              reader_objectdraw_events2321.def = true;
                                              reader_objectdraw_events2321.confidential = true;
                                              obj2050.methods["events"] = reader_objectdraw_events2321;
                                              setLineNumber(1009);    // compilenode identifier
                                              obj2050.data["isHorizontal"] = GraceTrue;
                                              var reader_objectdraw_isHorizontal2322 = function() {
                                                return this.data["isHorizontal"];
                                              };
                                              obj2050.methods["isHorizontal"] = reader_objectdraw_isHorizontal2322;
                                              obj2050.data["isHorizontal"] = GraceTrue;
                                              var writer_objectdraw_isHorizontal2322 = function(argcv, o) {
                                                this.data["isHorizontal"] = o;
                                                return GraceDone;
                                              };
                                              obj2050.methods["isHorizontal:=(1)"] = writer_objectdraw_isHorizontal2322;
                                              reader_objectdraw_isHorizontal2322.confidential = true;
                                              writer_objectdraw_isHorizontal2322.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'isHorizontal' is not of type Boolean"));
                                              obj2050.mutable = true;
                                              superDepth = origSuperDepth;
                                            };
                                            obj_init_2050.apply(inheritingObject, []);
                                            return obj2050;
                                            };
                                            func2049.paramTypes = [];
                                            func2049.paramTypes.push([type_String, "initialTitle"]);
                                            func2049.paramTypes.push([]);
                                            this.methods["applicationTitle(1)size(1)$object(1)"] = func2049;
                                          setLineNumber(1152);    // compilenode method
                                          var func2323 = function(argcv) {    // method drawingCanvasSize(_)
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            var var_dimensions__39__ = arguments[curarg];
                                            curarg++;
                                            // Start argument checking
                                            curarg = 1;
                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in drawingCanvasSize (arg list 1), which corresponds to parameter dimensions', does not have " + 
                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                            curarg++;
                                            // End argument checking
                                            setModuleName("objectdraw");
                                            var obj2324 = Grace_allocObject(null, "drawingCanvasSize(_)");
                                            obj2324.definitionModule = "objectdraw";
                                            obj2324.definitionLine = 1152;
                                            obj2324.outer = this;
                                            var reader_objectdraw_outer2325 = function() {
                                              return this.outer;
                                            };
                                            obj2324.methods["outer"] = reader_objectdraw_outer2325;
                                            var obj_init_2324 = function() {
                                              var origSuperDepth = superDepth;
                                              superDepth = obj2324;
                                              var func2326 = function(argcv) {    // method width
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1167);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2329 = callmethodChecked(this, "element", []);
                                                var call2330 = callmethodChecked(call2329, "width", []);
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2330)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method width does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return call2330;
                                              };
                                              func2326.paramCounts = [0];
                                              obj2324.methods["width"] = func2326;
                                              func2326.definitionLine = 1166;
                                              func2326.definitionModule = "objectdraw";
                                              var func2331 = function(argcv) {    // method height
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1172);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2334 = callmethodChecked(this, "element", []);
                                                var call2335 = callmethodChecked(call2334, "height", []);
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2335)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method height does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return call2335;
                                              };
                                              func2331.paramCounts = [0];
                                              obj2324.methods["height"] = func2331;
                                              func2331.definitionLine = 1171;
                                              func2331.definitionModule = "objectdraw";
                                              var func2336 = function(argcv) {    // method size
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1175);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2339 = callmethodChecked(this, "element", []);
                                                var call2340 = callmethodChecked(call2339, "height", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2344 = callmethodChecked(this, "element", []);
                                                var call2345 = callmethodChecked(call2344, "width", []);
                                                var opresult2347 = callmethodChecked(call2345, "@(1)", [1], call2340);
                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult2347)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method size does not have " + 
                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                return opresult2347;
                                              };
                                              func2336.paramCounts = [0];
                                              obj2324.methods["size"] = func2336;
                                              func2336.definitionLine = 1175;
                                              func2336.definitionModule = "objectdraw";
                                              var func2348 = function(argcv) {    // method notifyRedraw
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1184);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2350 = callmethodChecked(this, "redraw:=(1)", [1], GraceTrue);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2350)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method notifyRedraw does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2350;
                                              };
                                              func2348.paramCounts = [0];
                                              obj2324.methods["notifyRedraw"] = func2348;
                                              func2348.definitionLine = 1183;
                                              func2348.definitionModule = "objectdraw";
                                              var func2351 = function(argcv) {    // method startDrawing
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1189);    // compilenode block
                                                var block2353 = new GraceBlock(this, 1189, 0);
                                                block2353.real = function() {
                                                  var if2354 = GraceDone;
                                                  setLineNumber(1190);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2356 = callmethodChecked(this, "redraw", []);
                                                  if (Grace_isTrue(call2356)) {
                                                    setLineNumber(1191);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2359 = callmethodChecked(this, "theContext", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2361 = callmethodChecked(this, "theGraphics", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2363 = callmethodChecked(this, "width", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2365 = callmethodChecked(this, "height", []);
                                                    // call case 6: other requests
                                                    var call2366 = callmethodChecked(var_dom, "draw(4)", [4], call2359, call2361, call2363, call2365);
                                                    if2354 = call2366;
                                                  }
                                                  return if2354;
                                                };
                                                setLineNumber(1193);    // compilenode num
                                                var quotient2369 = callmethodChecked(new GraceNum(1000), "/(1)", [1], var_frameRate);
                                                // call case 6: other requests
                                                setLineNumber(1189);    // compilenode member
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2373 = callmethodChecked(this, "element", []);
                                                var call2374 = callmethodChecked(call2373, "ownerDocument", []);
                                                var call2375 = callmethodChecked(call2374, "defaultView", []);
                                                var call2376 = callmethodChecked(call2375, "setInterval(2)", [2], block2353, quotient2369);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2376)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method startDrawing does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2376;
                                              };
                                              func2351.paramCounts = [0];
                                              obj2324.methods["startDrawing"] = func2351;
                                              func2351.definitionLine = 1188;
                                              func2351.definitionModule = "objectdraw";
                                              var func2377 = function(argcv) {    // method clear
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1198);    // compilenode array
                                                var array2379 = new PrimitiveGraceList([]);
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2380 = callmethodChecked(this, "theGraphics:=(1)", [1], array2379);
                                                setLineNumber(1199);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2382 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2382)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method clear does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2382;
                                              };
                                              func2377.paramCounts = [0];
                                              obj2324.methods["clear"] = func2377;
                                              func2377.definitionLine = 1197;
                                              func2377.definitionModule = "objectdraw";
                                              var func2383 = function(argcv) {    // method add(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_d = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1203);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in add (arg list 1), which corresponds to parameter d, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1204);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2386 = callmethodChecked(this, "theGraphics", []);
                                                var call2387 = callmethodChecked(call2386, "push(1)", [1], var_d);
                                                setLineNumber(1205);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2389 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2389)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method add(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2389;
                                              };
                                              func2383.paramTypes = [];
                                              func2383.paramTypes.push([]);
                                              func2383.paramCounts = [1];
                                              obj2324.methods["add(1)"] = func2383;
                                              func2383.definitionLine = 1203;
                                              func2383.definitionModule = "objectdraw";
                                              var func2390 = function(argcv) {    // method remove(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1209);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in remove (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                var if2391 = GraceDone;
                                                setLineNumber(1210);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2394 = callmethodChecked(this, "theGraphics", []);
                                                var call2395 = callmethodChecked(call2394, "contains(1)", [1], var_aGraphic);
                                                if (Grace_isTrue(call2395)) {
                                                  setLineNumber(1211);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2398 = callmethodChecked(this, "theGraphics", []);
                                                  var call2399 = callmethodChecked(call2398, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1212);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2401 = callmethodChecked(this, "notifyRedraw", []);
                                                  if2391 = call2401;
                                                }
                                                setLineNumber(1210);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2391)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method remove(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2391;
                                              };
                                              func2390.paramTypes = [];
                                              func2390.paramTypes.push([]);
                                              func2390.paramCounts = [1];
                                              obj2324.methods["remove(1)"] = func2390;
                                              func2390.definitionLine = 1209;
                                              func2390.definitionModule = "objectdraw";
                                              var func2402 = function(argcv) {    // method sendToFront(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1217);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendToFront (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1218);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2405 = callmethodChecked(this, "theGraphics", []);
                                                var call2406 = callmethodChecked(call2405, "remove(1)", [1], var_aGraphic);
                                                setLineNumber(1219);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2409 = callmethodChecked(this, "theGraphics", []);
                                                var call2410 = callmethodChecked(call2409, "push(1)", [1], var_aGraphic);
                                                setLineNumber(1220);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2412 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2412)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendToFront(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2412;
                                              };
                                              func2402.paramTypes = [];
                                              func2402.paramTypes.push([]);
                                              func2402.paramCounts = [1];
                                              obj2324.methods["sendToFront(1)"] = func2402;
                                              func2402.definitionLine = 1217;
                                              func2402.definitionModule = "objectdraw";
                                              var func2413 = function(argcv) {    // method sendToBack(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1224);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendToBack (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1225);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2416 = callmethodChecked(this, "theGraphics", []);
                                                var call2417 = callmethodChecked(call2416, "remove(1)", [1], var_aGraphic);
                                                setLineNumber(1226);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2420 = callmethodChecked(this, "theGraphics", []);
                                                var call2421 = callmethodChecked(call2420, "unshift(1)", [1], var_aGraphic);
                                                setLineNumber(1227);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2423 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2423)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendToBack(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2423;
                                              };
                                              func2413.paramTypes = [];
                                              func2413.paramTypes.push([]);
                                              func2413.paramCounts = [1];
                                              obj2324.methods["sendToBack(1)"] = func2413;
                                              func2413.definitionLine = 1224;
                                              func2413.definitionModule = "objectdraw";
                                              var func2424 = function(argcv) {    // method sendForward(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1231);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendForward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1232);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2427 = callmethodChecked(this, "theGraphics", []);
                                                var call2428 = callmethodChecked(call2427, "indexOf(1)", [1], var_aGraphic);
                                                var var_theIndex = call2428;
                                                var if2429 = GraceDone;
                                                setLineNumber(1234);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2432 = callmethodChecked(this, "theGraphics", []);
                                                var call2433 = callmethodChecked(call2432, "size", []);
                                                var opresult2436 = callmethodChecked(var_theIndex, "\u2260(1)", [1], call2433);
                                                if (Grace_isTrue(opresult2436)) {
                                                  setLineNumber(1235);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2439 = callmethodChecked(this, "theGraphics", []);
                                                  var call2440 = callmethodChecked(call2439, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1236);    // compilenode identifier
                                                  var opresult2444 = callmethodChecked(var_theIndex, "+(1)", [1], new GraceNum(1));
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2446 = callmethodChecked(this, "theGraphics", []);
                                                  var call2447 = callmethodChecked(call2446, "at(1)add(1)", [1, 1], opresult2444, var_aGraphic);
                                                  setLineNumber(1237);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2449 = callmethodChecked(this, "notifyRedraw", []);
                                                  if2429 = call2449;
                                                }
                                                setLineNumber(1234);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2429)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendForward(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2429;
                                              };
                                              func2424.paramTypes = [];
                                              func2424.paramTypes.push([]);
                                              func2424.paramCounts = [1];
                                              obj2324.methods["sendForward(1)"] = func2424;
                                              func2424.definitionLine = 1231;
                                              func2424.definitionModule = "objectdraw";
                                              var func2450 = function(argcv) {    // method sendBackward(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1242);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendBackward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                setLineNumber(1243);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2453 = callmethodChecked(this, "theGraphics", []);
                                                var call2454 = callmethodChecked(call2453, "indexOf(1)", [1], var_aGraphic);
                                                var var_theIndex = call2454;
                                                var if2455 = GraceDone;
                                                setLineNumber(1245);    // compilenode identifier
                                                var opresult2458 = callmethodChecked(var_theIndex, "\u2260(1)", [1], new GraceNum(1));
                                                if (Grace_isTrue(opresult2458)) {
                                                  setLineNumber(1246);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2461 = callmethodChecked(this, "theGraphics", []);
                                                  var call2462 = callmethodChecked(call2461, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1247);    // compilenode identifier
                                                  var diff2466 = callmethodChecked(var_theIndex, "-(1)", [1], new GraceNum(1));
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2468 = callmethodChecked(this, "theGraphics", []);
                                                  var call2469 = callmethodChecked(call2468, "at(1)add(1)", [1, 1], diff2466, var_aGraphic);
                                                  setLineNumber(1248);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2471 = callmethodChecked(this, "notifyRedraw", []);
                                                  if2455 = call2471;
                                                }
                                                setLineNumber(1245);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2455)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendBackward(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2455;
                                              };
                                              func2450.paramTypes = [];
                                              func2450.paramTypes.push([]);
                                              func2450.paramCounts = [1];
                                              obj2324.methods["sendBackward(1)"] = func2450;
                                              func2450.definitionLine = 1242;
                                              func2450.definitionModule = "objectdraw";
                                              var func2472 = function(argcv) {    // method printObjects
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1254);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2475 = callmethodChecked(this, "theGraphics", []);
                                                var block2476 = new GraceBlock(this, 1254, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2476.real = function(var_aGraphic) {
                                                  setLineNumber(1255);    // compilenode identifier
                                                  var call2477 = Grace_print(var_aGraphic);
                                                  return call2477;
                                                };
                                                // call case 5: prelude request
                                                var call2478 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2475, block2476);
                                                setLineNumber(1254);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2478)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method printObjects does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2478;
                                              };
                                              func2472.paramCounts = [0];
                                              obj2324.methods["printObjects"] = func2472;
                                              func2472.definitionLine = 1253;
                                              func2472.definitionModule = "objectdraw";
                                              var func2479 = function(argcv) {    // method asString
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("objectdraw");
                                                setLineNumber(1261);    // compilenode string
                                                var string2480 = new GraceString(" objects");
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2484 = callmethodChecked(this, "theGraphics", []);
                                                var call2485 = callmethodChecked(call2484, "size", []);
                                                var string2487 = new GraceString("canvas: with ");
                                                var opresult2489 = callmethodChecked(string2487, "++(1)", [1], call2485);
                                                var opresult2491 = callmethodChecked(opresult2489, "++(1)", [1], string2480);
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2491)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method asString does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                return opresult2491;
                                              };
                                              func2479.paramCounts = [0];
                                              obj2324.methods["asString"] = func2479;
                                              func2479.definitionLine = 1260;
                                              func2479.definitionModule = "objectdraw";
                                              setLineNumber(1156);    // compilenode string
                                              var string2494 = new GraceString("canvas");
                                              // call case 6: other requests
                                              var call2495 = callmethodChecked(var_document, "createElement(1)", [1], string2494);
                                              // call case 6: other requests
                                              setLineNumber(0);    // compilenode member
                                              // call case 3: self.outer request
                                              var call2497 = callmethodChecked(superDepth, "outer", [0]);
                                              onSelf = true;
                                              var call2498 = callmethodChecked(call2497, "componentFromElement(1)$object(1)", [1, 1], call2495, this);
                                              obj2324.superobj = call2498;
                                              if (call2498.data) obj2324.data = call2498.data;
                                              if (call2498.hasOwnProperty('_value'))
                                                  obj2324._value = call2498._value;
                                              setLineNumber(1158);    // compilenode member
                                              // call case 6: other requests
                                              var call2501 = callmethodChecked(var_dimensions__39__, "x", []);
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2503 = callmethodChecked(this, "element", []);
                                              var call2504 = callmethodChecked(call2503, "width:=(1)", [1], call2501);
                                              setLineNumber(1159);    // compilenode member
                                              // call case 6: other requests
                                              var call2507 = callmethodChecked(var_dimensions__39__, "y", []);
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2509 = callmethodChecked(this, "element", []);
                                              var call2510 = callmethodChecked(call2509, "height:=(1)", [1], call2507);
                                              setLineNumber(1160);    // compilenode string
                                              var string2512 = new GraceString("center");
                                              // call case 6: other requests
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2515 = callmethodChecked(this, "element", []);
                                              var call2516 = callmethodChecked(call2515, "style", []);
                                              var call2517 = callmethodChecked(call2516, "alignSelf:=(1)", [1], string2512);
                                              setLineNumber(1162);    // compilenode string
                                              var string2519 = new GraceString("2d");
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2521 = callmethodChecked(this, "element", []);
                                              var call2522 = callmethodChecked(call2521, "getContext(1)", [1], string2519);
                                              obj2324.data["theContext"] = call2522;
                                              var reader_objectdraw_theContext2523 = function() {
                                                return this.data["theContext"];
                                              };
                                              reader_objectdraw_theContext2523.def = true;
                                              reader_objectdraw_theContext2523.confidential = true;
                                              obj2324.methods["theContext"] = reader_objectdraw_theContext2523;
                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call2522)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("value of def 'theContext' is not of type Foreign"));
                                              setLineNumber(1163);    // compilenode num
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2526 = callmethodChecked(this, "theContext", []);
                                              var call2527 = callmethodChecked(call2526, "lineWidth:=(1)", [1], new GraceNum(2));
                                              setLineNumber(1178);    // compilenode array
                                              var array2528 = new PrimitiveGraceList([]);
                                              obj2324.data["theGraphics"] = array2528;
                                              var reader_objectdraw_theGraphics2529 = function() {
                                                return this.data["theGraphics"];
                                              };
                                              obj2324.methods["theGraphics"] = reader_objectdraw_theGraphics2529;
                                              obj2324.data["theGraphics"] = array2528;
                                              var writer_objectdraw_theGraphics2529 = function(argcv, o) {
                                                this.data["theGraphics"] = o;
                                                return GraceDone;
                                              };
                                              obj2324.methods["theGraphics:=(1)"] = writer_objectdraw_theGraphics2529;
                                              reader_objectdraw_theGraphics2529.confidential = true;
                                              writer_objectdraw_theGraphics2529.confidential = true;
                                              obj2324.mutable = true;
                                              setLineNumber(1180);    // compilenode identifier
                                              obj2324.data["redraw"] = GraceFalse;
                                              var reader_objectdraw_redraw2530 = function() {
                                                return this.data["redraw"];
                                              };
                                              obj2324.methods["redraw"] = reader_objectdraw_redraw2530;
                                              obj2324.data["redraw"] = GraceFalse;
                                              var writer_objectdraw_redraw2530 = function(argcv, o) {
                                                this.data["redraw"] = o;
                                                return GraceDone;
                                              };
                                              obj2324.methods["redraw:=(1)"] = writer_objectdraw_redraw2530;
                                              reader_objectdraw_redraw2530.confidential = true;
                                              writer_objectdraw_redraw2530.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'redraw' is not of type Boolean"));
                                              obj2324.mutable = true;
                                              superDepth = origSuperDepth;
                                            };
                                            obj_init_2324.apply(obj2324, []);
                                            setLineNumber(1152);    // return value
                                            if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], obj2324)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method drawingCanvasSize(_) does not have " + 
                                                        callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                            return obj2324;
                                          };
                                          func2323.paramTypes = [];
                                          func2323.paramTypes.push([]);
                                          func2323.paramCounts = [1];
                                          this.methods["drawingCanvasSize(1)"] = func2323;
                                          func2323.definitionLine = 1152;
                                          func2323.definitionModule = "objectdraw";
                                            var func2531 = function(argcv) {    // method drawingCanvasSize(_)$object(_)
                                              var curarg = 1;
                                              var var_dimensions__39__ = arguments[curarg];
                                              curarg++;
                                              var inheritingObject = arguments[curarg++];
                                              // Start argument processing
                                              curarg = 1;
                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in drawingCanvasSize (arg list 1), which corresponds to parameter dimensions', does not have " + 
                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument processing
                                              setModuleName("objectdraw");
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var obj2532 = Grace_allocObject(null, "drawingCanvasSize(1)");
                                              obj2532.definitionModule = "objectdraw";
                                              obj2532.definitionLine = 1152;
                                              var inho2532 = inheritingObject;
                                              while (inho2532.superobj) inho2532 = inho2532.superobj;
                                              inho2532.superobj = obj2532;
                                              obj2532.data = inheritingObject.data;
                                              if (inheritingObject.hasOwnProperty('_value'))
                                                obj2532._value = inheritingObject._value;
                                              obj2532.outer = this;
                                              var reader_objectdraw_outer2533 = function() {
                                                return this.outer;
                                              };
                                              obj2532.methods["outer"] = reader_objectdraw_outer2533;
                                              var obj_init_2532 = function() {
                                                var origSuperDepth = superDepth;
                                                superDepth = obj2532;
                                                var func2534 = function(argcv) {    // method width
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1167);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2537 = callmethodChecked(this, "element", []);
                                                  var call2538 = callmethodChecked(call2537, "width", []);
                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2538)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method width does not have " + 
                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                  return call2538;
                                                };
                                                func2534.paramCounts = [0];
                                                obj2532.methods["width"] = func2534;
                                                func2534.definitionLine = 1166;
                                                func2534.definitionModule = "objectdraw";
                                                var func2539 = function(argcv) {    // method height
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1172);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2542 = callmethodChecked(this, "element", []);
                                                  var call2543 = callmethodChecked(call2542, "height", []);
                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2543)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method height does not have " + 
                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                  return call2543;
                                                };
                                                func2539.paramCounts = [0];
                                                obj2532.methods["height"] = func2539;
                                                func2539.definitionLine = 1171;
                                                func2539.definitionModule = "objectdraw";
                                                var func2544 = function(argcv) {    // method size
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1175);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2547 = callmethodChecked(this, "element", []);
                                                  var call2548 = callmethodChecked(call2547, "height", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2552 = callmethodChecked(this, "element", []);
                                                  var call2553 = callmethodChecked(call2552, "width", []);
                                                  var opresult2555 = callmethodChecked(call2553, "@(1)", [1], call2548);
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult2555)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method size does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  return opresult2555;
                                                };
                                                func2544.paramCounts = [0];
                                                obj2532.methods["size"] = func2544;
                                                func2544.definitionLine = 1175;
                                                func2544.definitionModule = "objectdraw";
                                                var func2556 = function(argcv) {    // method notifyRedraw
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1184);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2558 = callmethodChecked(this, "redraw:=(1)", [1], GraceTrue);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2558)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method notifyRedraw does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2558;
                                                };
                                                func2556.paramCounts = [0];
                                                obj2532.methods["notifyRedraw"] = func2556;
                                                func2556.definitionLine = 1183;
                                                func2556.definitionModule = "objectdraw";
                                                var func2559 = function(argcv) {    // method startDrawing
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1189);    // compilenode block
                                                  var block2561 = new GraceBlock(this, 1189, 0);
                                                  block2561.real = function() {
                                                    var if2562 = GraceDone;
                                                    setLineNumber(1190);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2564 = callmethodChecked(this, "redraw", []);
                                                    if (Grace_isTrue(call2564)) {
                                                      setLineNumber(1191);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2567 = callmethodChecked(this, "theContext", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2569 = callmethodChecked(this, "theGraphics", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2571 = callmethodChecked(this, "width", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2573 = callmethodChecked(this, "height", []);
                                                      // call case 6: other requests
                                                      var call2574 = callmethodChecked(var_dom, "draw(4)", [4], call2567, call2569, call2571, call2573);
                                                      if2562 = call2574;
                                                    }
                                                    return if2562;
                                                  };
                                                  setLineNumber(1193);    // compilenode num
                                                  var quotient2577 = callmethodChecked(new GraceNum(1000), "/(1)", [1], var_frameRate);
                                                  // call case 6: other requests
                                                  setLineNumber(1189);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2581 = callmethodChecked(this, "element", []);
                                                  var call2582 = callmethodChecked(call2581, "ownerDocument", []);
                                                  var call2583 = callmethodChecked(call2582, "defaultView", []);
                                                  var call2584 = callmethodChecked(call2583, "setInterval(2)", [2], block2561, quotient2577);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2584)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method startDrawing does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2584;
                                                };
                                                func2559.paramCounts = [0];
                                                obj2532.methods["startDrawing"] = func2559;
                                                func2559.definitionLine = 1188;
                                                func2559.definitionModule = "objectdraw";
                                                var func2585 = function(argcv) {    // method clear
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1198);    // compilenode array
                                                  var array2587 = new PrimitiveGraceList([]);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2588 = callmethodChecked(this, "theGraphics:=(1)", [1], array2587);
                                                  setLineNumber(1199);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2590 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2590)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method clear does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2590;
                                                };
                                                func2585.paramCounts = [0];
                                                obj2532.methods["clear"] = func2585;
                                                func2585.definitionLine = 1197;
                                                func2585.definitionModule = "objectdraw";
                                                var func2591 = function(argcv) {    // method add(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_d = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1203);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in add (arg list 1), which corresponds to parameter d, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1204);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2594 = callmethodChecked(this, "theGraphics", []);
                                                  var call2595 = callmethodChecked(call2594, "push(1)", [1], var_d);
                                                  setLineNumber(1205);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2597 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2597)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method add(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2597;
                                                };
                                                func2591.paramTypes = [];
                                                func2591.paramTypes.push([]);
                                                func2591.paramCounts = [1];
                                                obj2532.methods["add(1)"] = func2591;
                                                func2591.definitionLine = 1203;
                                                func2591.definitionModule = "objectdraw";
                                                var func2598 = function(argcv) {    // method remove(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1209);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in remove (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  var if2599 = GraceDone;
                                                  setLineNumber(1210);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2602 = callmethodChecked(this, "theGraphics", []);
                                                  var call2603 = callmethodChecked(call2602, "contains(1)", [1], var_aGraphic);
                                                  if (Grace_isTrue(call2603)) {
                                                    setLineNumber(1211);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2606 = callmethodChecked(this, "theGraphics", []);
                                                    var call2607 = callmethodChecked(call2606, "remove(1)", [1], var_aGraphic);
                                                    setLineNumber(1212);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2609 = callmethodChecked(this, "notifyRedraw", []);
                                                    if2599 = call2609;
                                                  }
                                                  setLineNumber(1210);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2599)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method remove(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return if2599;
                                                };
                                                func2598.paramTypes = [];
                                                func2598.paramTypes.push([]);
                                                func2598.paramCounts = [1];
                                                obj2532.methods["remove(1)"] = func2598;
                                                func2598.definitionLine = 1209;
                                                func2598.definitionModule = "objectdraw";
                                                var func2610 = function(argcv) {    // method sendToFront(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1217);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendToFront (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1218);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2613 = callmethodChecked(this, "theGraphics", []);
                                                  var call2614 = callmethodChecked(call2613, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1219);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2617 = callmethodChecked(this, "theGraphics", []);
                                                  var call2618 = callmethodChecked(call2617, "push(1)", [1], var_aGraphic);
                                                  setLineNumber(1220);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2620 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2620)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendToFront(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2620;
                                                };
                                                func2610.paramTypes = [];
                                                func2610.paramTypes.push([]);
                                                func2610.paramCounts = [1];
                                                obj2532.methods["sendToFront(1)"] = func2610;
                                                func2610.definitionLine = 1217;
                                                func2610.definitionModule = "objectdraw";
                                                var func2621 = function(argcv) {    // method sendToBack(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1224);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendToBack (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1225);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2624 = callmethodChecked(this, "theGraphics", []);
                                                  var call2625 = callmethodChecked(call2624, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1226);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2628 = callmethodChecked(this, "theGraphics", []);
                                                  var call2629 = callmethodChecked(call2628, "unshift(1)", [1], var_aGraphic);
                                                  setLineNumber(1227);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2631 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2631)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendToBack(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2631;
                                                };
                                                func2621.paramTypes = [];
                                                func2621.paramTypes.push([]);
                                                func2621.paramCounts = [1];
                                                obj2532.methods["sendToBack(1)"] = func2621;
                                                func2621.definitionLine = 1224;
                                                func2621.definitionModule = "objectdraw";
                                                var func2632 = function(argcv) {    // method sendForward(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1231);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendForward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1232);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2635 = callmethodChecked(this, "theGraphics", []);
                                                  var call2636 = callmethodChecked(call2635, "indexOf(1)", [1], var_aGraphic);
                                                  var var_theIndex = call2636;
                                                  var if2637 = GraceDone;
                                                  setLineNumber(1234);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2640 = callmethodChecked(this, "theGraphics", []);
                                                  var call2641 = callmethodChecked(call2640, "size", []);
                                                  var opresult2644 = callmethodChecked(var_theIndex, "\u2260(1)", [1], call2641);
                                                  if (Grace_isTrue(opresult2644)) {
                                                    setLineNumber(1235);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2647 = callmethodChecked(this, "theGraphics", []);
                                                    var call2648 = callmethodChecked(call2647, "remove(1)", [1], var_aGraphic);
                                                    setLineNumber(1236);    // compilenode identifier
                                                    var opresult2652 = callmethodChecked(var_theIndex, "+(1)", [1], new GraceNum(1));
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2654 = callmethodChecked(this, "theGraphics", []);
                                                    var call2655 = callmethodChecked(call2654, "at(1)add(1)", [1, 1], opresult2652, var_aGraphic);
                                                    setLineNumber(1237);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2657 = callmethodChecked(this, "notifyRedraw", []);
                                                    if2637 = call2657;
                                                  }
                                                  setLineNumber(1234);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2637)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendForward(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return if2637;
                                                };
                                                func2632.paramTypes = [];
                                                func2632.paramTypes.push([]);
                                                func2632.paramCounts = [1];
                                                obj2532.methods["sendForward(1)"] = func2632;
                                                func2632.definitionLine = 1231;
                                                func2632.definitionModule = "objectdraw";
                                                var func2658 = function(argcv) {    // method sendBackward(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1242);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendBackward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1243);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2661 = callmethodChecked(this, "theGraphics", []);
                                                  var call2662 = callmethodChecked(call2661, "indexOf(1)", [1], var_aGraphic);
                                                  var var_theIndex = call2662;
                                                  var if2663 = GraceDone;
                                                  setLineNumber(1245);    // compilenode identifier
                                                  var opresult2666 = callmethodChecked(var_theIndex, "\u2260(1)", [1], new GraceNum(1));
                                                  if (Grace_isTrue(opresult2666)) {
                                                    setLineNumber(1246);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2669 = callmethodChecked(this, "theGraphics", []);
                                                    var call2670 = callmethodChecked(call2669, "remove(1)", [1], var_aGraphic);
                                                    setLineNumber(1247);    // compilenode identifier
                                                    var diff2674 = callmethodChecked(var_theIndex, "-(1)", [1], new GraceNum(1));
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2676 = callmethodChecked(this, "theGraphics", []);
                                                    var call2677 = callmethodChecked(call2676, "at(1)add(1)", [1, 1], diff2674, var_aGraphic);
                                                    setLineNumber(1248);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2679 = callmethodChecked(this, "notifyRedraw", []);
                                                    if2663 = call2679;
                                                  }
                                                  setLineNumber(1245);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2663)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendBackward(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return if2663;
                                                };
                                                func2658.paramTypes = [];
                                                func2658.paramTypes.push([]);
                                                func2658.paramCounts = [1];
                                                obj2532.methods["sendBackward(1)"] = func2658;
                                                func2658.definitionLine = 1242;
                                                func2658.definitionModule = "objectdraw";
                                                var func2680 = function(argcv) {    // method printObjects
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1254);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2683 = callmethodChecked(this, "theGraphics", []);
                                                  var block2684 = new GraceBlock(this, 1254, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2684.real = function(var_aGraphic) {
                                                    setLineNumber(1255);    // compilenode identifier
                                                    var call2685 = Grace_print(var_aGraphic);
                                                    return call2685;
                                                  };
                                                  // call case 5: prelude request
                                                  var call2686 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2683, block2684);
                                                  setLineNumber(1254);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2686)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method printObjects does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2686;
                                                };
                                                func2680.paramCounts = [0];
                                                obj2532.methods["printObjects"] = func2680;
                                                func2680.definitionLine = 1253;
                                                func2680.definitionModule = "objectdraw";
                                                var func2687 = function(argcv) {    // method asString
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1261);    // compilenode string
                                                  var string2688 = new GraceString(" objects");
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2692 = callmethodChecked(this, "theGraphics", []);
                                                  var call2693 = callmethodChecked(call2692, "size", []);
                                                  var string2695 = new GraceString("canvas: with ");
                                                  var opresult2697 = callmethodChecked(string2695, "++(1)", [1], call2693);
                                                  var opresult2699 = callmethodChecked(opresult2697, "++(1)", [1], string2688);
                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2699)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method asString does not have " + 
                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                  return opresult2699;
                                                };
                                                func2687.paramCounts = [0];
                                                obj2532.methods["asString"] = func2687;
                                                func2687.definitionLine = 1260;
                                                func2687.definitionModule = "objectdraw";
                                                setLineNumber(1156);    // compilenode string
                                                var string2702 = new GraceString("canvas");
                                                // call case 6: other requests
                                                var call2703 = callmethodChecked(var_document, "createElement(1)", [1], string2702);
                                                // call case 6: other requests
                                                setLineNumber(0);    // compilenode member
                                                // call case 3: self.outer request
                                                var call2705 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2706 = callmethodChecked(call2705, "componentFromElement(1)$object(1)", [1, 1], call2703, this);
                                                obj2532.superobj = call2706;
                                                if (call2706.data) obj2532.data = call2706.data;
                                                if (call2706.hasOwnProperty('_value'))
                                                    obj2532._value = call2706._value;
                                                setLineNumber(1158);    // compilenode member
                                                // call case 6: other requests
                                                var call2709 = callmethodChecked(var_dimensions__39__, "x", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2711 = callmethodChecked(this, "element", []);
                                                var call2712 = callmethodChecked(call2711, "width:=(1)", [1], call2709);
                                                setLineNumber(1159);    // compilenode member
                                                // call case 6: other requests
                                                var call2715 = callmethodChecked(var_dimensions__39__, "y", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2717 = callmethodChecked(this, "element", []);
                                                var call2718 = callmethodChecked(call2717, "height:=(1)", [1], call2715);
                                                setLineNumber(1160);    // compilenode string
                                                var string2720 = new GraceString("center");
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2723 = callmethodChecked(this, "element", []);
                                                var call2724 = callmethodChecked(call2723, "style", []);
                                                var call2725 = callmethodChecked(call2724, "alignSelf:=(1)", [1], string2720);
                                                setLineNumber(1162);    // compilenode string
                                                var string2727 = new GraceString("2d");
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2729 = callmethodChecked(this, "element", []);
                                                var call2730 = callmethodChecked(call2729, "getContext(1)", [1], string2727);
                                                obj2532.data["theContext"] = call2730;
                                                var reader_objectdraw_theContext2731 = function() {
                                                  return this.data["theContext"];
                                                };
                                                reader_objectdraw_theContext2731.def = true;
                                                reader_objectdraw_theContext2731.confidential = true;
                                                obj2532.methods["theContext"] = reader_objectdraw_theContext2731;
                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call2730)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'theContext' is not of type Foreign"));
                                                setLineNumber(1163);    // compilenode num
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2734 = callmethodChecked(this, "theContext", []);
                                                var call2735 = callmethodChecked(call2734, "lineWidth:=(1)", [1], new GraceNum(2));
                                                setLineNumber(1178);    // compilenode array
                                                var array2736 = new PrimitiveGraceList([]);
                                                obj2532.data["theGraphics"] = array2736;
                                                var reader_objectdraw_theGraphics2737 = function() {
                                                  return this.data["theGraphics"];
                                                };
                                                obj2532.methods["theGraphics"] = reader_objectdraw_theGraphics2737;
                                                obj2532.data["theGraphics"] = array2736;
                                                var writer_objectdraw_theGraphics2737 = function(argcv, o) {
                                                  this.data["theGraphics"] = o;
                                                  return GraceDone;
                                                };
                                                obj2532.methods["theGraphics:=(1)"] = writer_objectdraw_theGraphics2737;
                                                reader_objectdraw_theGraphics2737.confidential = true;
                                                writer_objectdraw_theGraphics2737.confidential = true;
                                                obj2532.mutable = true;
                                                setLineNumber(1180);    // compilenode identifier
                                                obj2532.data["redraw"] = GraceFalse;
                                                var reader_objectdraw_redraw2738 = function() {
                                                  return this.data["redraw"];
                                                };
                                                obj2532.methods["redraw"] = reader_objectdraw_redraw2738;
                                                obj2532.data["redraw"] = GraceFalse;
                                                var writer_objectdraw_redraw2738 = function(argcv, o) {
                                                  this.data["redraw"] = o;
                                                  return GraceDone;
                                                };
                                                obj2532.methods["redraw:=(1)"] = writer_objectdraw_redraw2738;
                                                reader_objectdraw_redraw2738.confidential = true;
                                                writer_objectdraw_redraw2738.confidential = true;
                                                if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("initial value of var 'redraw' is not of type Boolean"));
                                                obj2532.mutable = true;
                                                superDepth = origSuperDepth;
                                              };
                                              obj_init_2532.apply(inheritingObject, []);
                                              return obj2532;
                                              };
                                              func2531.paramTypes = [];
                                              func2531.paramTypes.push([]);
                                              this.methods["drawingCanvasSize(1)$object(1)"] = func2531;
                                            setLineNumber(1265);    // compilenode method
                                            var func2739 = function(argcv) {    // method graphicApplicationSize(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_theDimension__39__ = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in graphicApplicationSize (arg list 1), which corresponds to parameter theDimension', does not have " + 
                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("objectdraw");
                                              var obj2740 = Grace_allocObject(null, "graphicApplicationSize(_)");
                                              obj2740.definitionModule = "objectdraw";
                                              obj2740.definitionLine = 1265;
                                              obj2740.outer = this;
                                              var reader_objectdraw_outer2741 = function() {
                                                return this.outer;
                                              };
                                              obj2740.methods["outer"] = reader_objectdraw_outer2741;
                                              var obj_init_2740 = function() {
                                                var origSuperDepth = superDepth;
                                                superDepth = obj2740;
                                                var func2742 = function(argcv) {    // method prepend(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aComponent = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1284);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                              callmethod(var_Component, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1285);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2745 = callmethodChecked(this, "before", []);
                                                  var call2746 = callmethodChecked(call2745, "prepend(1)", [1], var_aComponent);
                                                  setLineNumber(1286);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2749 = callmethodChecked(this, "children", []);
                                                  var call2750 = callmethodChecked(call2749, "unshift(1)", [1], var_aComponent);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2750)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method prepend(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2750;
                                                };
                                                func2742.paramTypes = [];
                                                func2742.paramTypes.push([]);
                                                func2742.paramCounts = [1];
                                                obj2740.methods["prepend(1)"] = func2742;
                                                func2742.definitionLine = 1284;
                                                func2742.definitionModule = "objectdraw";
                                                var func2751 = function(argcv) {    // method append(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aComponent = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1290);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                              callmethod(var_Component, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1291);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2754 = callmethodChecked(this, "after", []);
                                                  var call2755 = callmethodChecked(call2754, "append(1)", [1], var_aComponent);
                                                  setLineNumber(1292);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2758 = callmethodChecked(this, "children", []);
                                                  var call2759 = callmethodChecked(call2758, "push(1)", [1], var_aComponent);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2759)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method append(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2759;
                                                };
                                                func2751.paramTypes = [];
                                                func2751.paramTypes.push([]);
                                                func2751.paramCounts = [1];
                                                obj2740.methods["append(1)"] = func2751;
                                                func2751.definitionLine = 1290;
                                                func2751.definitionModule = "objectdraw";
                                                var func2760 = function(argcv) {    // method onMouseClick(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1299);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseClick (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseClick(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2760.paramTypes = [];
                                                func2760.paramTypes.push([]);
                                                func2760.paramCounts = [1];
                                                obj2740.methods["onMouseClick(1)"] = func2760;
                                                func2760.definitionLine = 1299;
                                                func2760.definitionModule = "objectdraw";
                                                var func2761 = function(argcv) {    // method onMousePress(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1302);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMousePress (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMousePress(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2761.paramTypes = [];
                                                func2761.paramTypes.push([]);
                                                func2761.paramCounts = [1];
                                                obj2740.methods["onMousePress(1)"] = func2761;
                                                func2761.definitionLine = 1302;
                                                func2761.definitionModule = "objectdraw";
                                                var func2762 = function(argcv) {    // method onMouseRelease(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1305);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseRelease (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseRelease(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2762.paramTypes = [];
                                                func2762.paramTypes.push([]);
                                                func2762.paramCounts = [1];
                                                obj2740.methods["onMouseRelease(1)"] = func2762;
                                                func2762.definitionLine = 1305;
                                                func2762.definitionModule = "objectdraw";
                                                var func2763 = function(argcv) {    // method onMouseMove(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1308);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseMove (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseMove(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2763.paramTypes = [];
                                                func2763.paramTypes.push([]);
                                                func2763.paramCounts = [1];
                                                obj2740.methods["onMouseMove(1)"] = func2763;
                                                func2763.definitionLine = 1308;
                                                func2763.definitionModule = "objectdraw";
                                                var func2764 = function(argcv) {    // method onMouseDrag(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1311);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseDrag (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseDrag(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2764.paramTypes = [];
                                                func2764.paramTypes.push([]);
                                                func2764.paramCounts = [1];
                                                obj2740.methods["onMouseDrag(1)"] = func2764;
                                                func2764.definitionLine = 1311;
                                                func2764.definitionModule = "objectdraw";
                                                var func2765 = function(argcv) {    // method onMouseEnter(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1314);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseEnter (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseEnter(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2765.paramTypes = [];
                                                func2765.paramTypes.push([]);
                                                func2765.paramCounts = [1];
                                                obj2740.methods["onMouseEnter(1)"] = func2765;
                                                func2765.definitionLine = 1314;
                                                func2765.definitionModule = "objectdraw";
                                                var func2766 = function(argcv) {    // method onMouseExit(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1317);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseExit (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseExit(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2766.paramTypes = [];
                                                func2766.paramTypes.push([]);
                                                func2766.paramCounts = [1];
                                                obj2740.methods["onMouseExit(1)"] = func2766;
                                                func2766.definitionLine = 1317;
                                                func2766.definitionModule = "objectdraw";
                                                var func2767 = function(argcv) {    // method startGraphics
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1322);    // compilenode string
                                                  var string2769 = new GraceString("div");
                                                  // call case 6: other requests
                                                  var call2770 = callmethodChecked(var_document, "createElement(1)", [1], string2769);
                                                  var var_parentElement = call2770;
                                                  setLineNumber(1323);    // compilenode string
                                                  var string2772 = new GraceString("height-calculator");
                                                  // call case 6: other requests
                                                  var call2773 = callmethodChecked(var_parentElement, "className:=(1)", [1], string2772);
                                                  setLineNumber(1324);    // compilenode string
                                                  var string2775 = new GraceString("px");
                                                  // call case 6: other requests
                                                  var call2778 = callmethodChecked(var_theDimension__39__, "x", []);
                                                  var string2780 = new GraceString("");
                                                  var opresult2782 = callmethodChecked(string2780, "++(1)", [1], call2778);
                                                  var opresult2784 = callmethodChecked(opresult2782, "++(1)", [1], string2775);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2786 = callmethodChecked(var_parentElement, "style", []);
                                                  var call2787 = callmethodChecked(call2786, "width:=(1)", [1], opresult2784);
                                                  setLineNumber(1325);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2791 = callmethodChecked(this, "element", []);
                                                  var call2792 = callmethodChecked(call2791, "cloneNode(1)", [1], GraceTrue);
                                                  // call case 6: other requests
                                                  var call2793 = callmethodChecked(var_parentElement, "appendChild(1)", [1], call2792);
                                                  setLineNumber(1326);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2796 = callmethodChecked(var_document, "body", []);
                                                  var call2797 = callmethodChecked(call2796, "appendChild(1)", [1], var_parentElement);
                                                  setLineNumber(1327);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2800 = callmethodChecked(var_parentElement, "offsetHeight", []);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2801 = callmethodChecked(this, "theHeight:=(1)", [1], call2800);
                                                  setLineNumber(1328);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2804 = callmethodChecked(var_document, "body", []);
                                                  var call2805 = callmethodChecked(call2804, "removeChild(1)", [1], var_parentElement);
                                                  setLineNumber(1330);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2807 = callmethodChecked(this, "startApplication", []);
                                                  setLineNumber(1331);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2810 = callmethodChecked(this, "canvas", []);
                                                  var call2811 = callmethodChecked(call2810, "startDrawing", []);
                                                  setLineNumber(1333);    // compilenode string
                                                  var string2813 = new GraceString("hidden");
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2818 = callmethodChecked(this, "theWindow", []);
                                                  var call2819 = callmethodChecked(call2818, "document", []);
                                                  var call2820 = callmethodChecked(call2819, "documentElement", []);
                                                  var call2821 = callmethodChecked(call2820, "style", []);
                                                  var call2822 = callmethodChecked(call2821, "overflow:=(1)", [1], string2813);
                                                  setLineNumber(1335);    // compilenode block
                                                  var block2824 = new GraceBlock(this, 1335, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2824.real = function(var_event__39__) {
                                                    setLineNumber(1336);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2827 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2828 = callmethodChecked(this, "onMouseClick(1)", [1], call2827);
                                                    return call2828;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1335);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2830 = callmethodChecked(this, "canvas", []);
                                                  var call2831 = callmethodChecked(call2830, "onMouseClickDo(1)", [1], block2824);
                                                  setLineNumber(1339);    // compilenode block
                                                  var block2833 = new GraceBlock(this, 1339, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2833.real = function(var_event__39__) {
                                                    setLineNumber(1340);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2836 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2837 = callmethodChecked(this, "onMousePress(1)", [1], call2836);
                                                    return call2837;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1339);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2839 = callmethodChecked(this, "canvas", []);
                                                  var call2840 = callmethodChecked(call2839, "onMousePressDo(1)", [1], block2833);
                                                  setLineNumber(1343);    // compilenode block
                                                  var block2842 = new GraceBlock(this, 1343, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2842.real = function(var_event__39__) {
                                                    setLineNumber(1344);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2845 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2846 = callmethodChecked(this, "onMouseRelease(1)", [1], call2845);
                                                    return call2846;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1343);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2848 = callmethodChecked(this, "canvas", []);
                                                  var call2849 = callmethodChecked(call2848, "onMouseReleaseDo(1)", [1], block2842);
                                                  setLineNumber(1347);    // compilenode block
                                                  var block2851 = new GraceBlock(this, 1347, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2851.real = function(var_event__39__) {
                                                    setLineNumber(1348);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2854 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2855 = callmethodChecked(this, "onMouseMove(1)", [1], call2854);
                                                    return call2855;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1347);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2857 = callmethodChecked(this, "canvas", []);
                                                  var call2858 = callmethodChecked(call2857, "onMouseMoveDo(1)", [1], block2851);
                                                  setLineNumber(1351);    // compilenode block
                                                  var block2860 = new GraceBlock(this, 1351, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2860.real = function(var_event__39__) {
                                                    setLineNumber(1352);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2863 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2864 = callmethodChecked(this, "onMouseDrag(1)", [1], call2863);
                                                    return call2864;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1351);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2866 = callmethodChecked(this, "canvas", []);
                                                  var call2867 = callmethodChecked(call2866, "onMouseDragDo(1)", [1], block2860);
                                                  setLineNumber(1355);    // compilenode block
                                                  var block2869 = new GraceBlock(this, 1355, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2869.real = function(var_event__39__) {
                                                    setLineNumber(1356);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2872 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2873 = callmethodChecked(this, "onMouseEnter(1)", [1], call2872);
                                                    return call2873;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1355);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2875 = callmethodChecked(this, "canvas", []);
                                                  var call2876 = callmethodChecked(call2875, "onMouseEnterDo(1)", [1], block2869);
                                                  setLineNumber(1359);    // compilenode block
                                                  var block2878 = new GraceBlock(this, 1359, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2878.real = function(var_event__39__) {
                                                    setLineNumber(1360);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2881 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2882 = callmethodChecked(this, "onMouseExit(1)", [1], call2881);
                                                    return call2882;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1359);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2884 = callmethodChecked(this, "canvas", []);
                                                  var call2885 = callmethodChecked(call2884, "onMouseExitDo(1)", [1], block2878);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2885)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method startGraphics does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2885;
                                                };
                                                func2767.paramCounts = [0];
                                                obj2740.methods["startGraphics"] = func2767;
                                                func2767.definitionLine = 1321;
                                                func2767.definitionModule = "objectdraw";
                                                var func2886 = function(argcv) {    // method asString
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1365);    // compilenode string
                                                  var string2887 = new GraceString("");
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2890 = callmethodChecked(this, "canvas", []);
                                                  var string2892 = new GraceString("graphic application of ");
                                                  var opresult2894 = callmethodChecked(string2892, "++(1)", [1], call2890);
                                                  var opresult2896 = callmethodChecked(opresult2894, "++(1)", [1], string2887);
                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2896)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method asString does not have " + 
                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                  return opresult2896;
                                                };
                                                func2886.paramCounts = [0];
                                                obj2740.methods["asString"] = func2886;
                                                func2886.definitionLine = 1364;
                                                func2886.definitionModule = "objectdraw";
                                                setLineNumber(1269);    // compilenode string
                                                var string2898 = new GraceString("Simple graphics");
                                                // call case 6: other requests
                                                setLineNumber(0);    // compilenode member
                                                // call case 3: self.outer request
                                                var call2900 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2901 = callmethodChecked(call2900, "applicationTitle(1)size(1)$object(1)", [1, 1, 1], string2898, var_theDimension__39__, this);
                                                obj2740.superobj = call2901;
                                                if (call2901.data) obj2740.data = call2901.data;
                                                if (call2901.hasOwnProperty('_value'))
                                                    obj2740._value = call2901._value;
                                                setLineNumber(1271);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call2904 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2905 = callmethodChecked(call2904, "drawingCanvasSize(1)", [1], var_theDimension__39__);
                                                obj2740.data["canvas"] = call2905;
                                                var reader_objectdraw_canvas2906 = function() {
                                                  return this.data["canvas"];
                                                };
                                                reader_objectdraw_canvas2906.def = true;
                                                obj2740.methods["canvas"] = reader_objectdraw_canvas2906;
                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], call2905)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'canvas' is not of type DrawingCanvas"));
                                                setLineNumber(1273);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2909 = callmethodChecked(this, "canvas", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2911 = callmethodChecked(this, "children", []);
                                                var call2912 = callmethodChecked(call2911, "push(1)", [1], call2909);
                                                setLineNumber(1275);    // compilenode member
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call2915 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2916 = callmethodChecked(call2915, "emptyContainer", []);
                                                obj2740.data["before"] = call2916;
                                                var reader_objectdraw_before2917 = function() {
                                                  return this.data["before"];
                                                };
                                                reader_objectdraw_before2917.def = true;
                                                reader_objectdraw_before2917.confidential = true;
                                                obj2740.methods["before"] = reader_objectdraw_before2917;
                                                if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call2916)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'before' is not of type Container"));
                                                setLineNumber(1276);    // compilenode member
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call2920 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2921 = callmethodChecked(call2920, "emptyContainer", []);
                                                obj2740.data["after"] = call2921;
                                                var reader_objectdraw_after2922 = function() {
                                                  return this.data["after"];
                                                };
                                                reader_objectdraw_after2922.def = true;
                                                reader_objectdraw_after2922.confidential = true;
                                                obj2740.methods["after"] = reader_objectdraw_after2922;
                                                if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call2921)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'after' is not of type Container"));
                                                setLineNumber(1278);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2924 = callmethodChecked(this, "arrangeVertical", []);
                                                setLineNumber(1279);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2928 = callmethodChecked(this, "before", []);
                                                var call2929 = callmethodChecked(call2928, "element", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2931 = callmethodChecked(this, "element", []);
                                                var call2932 = callmethodChecked(call2931, "appendChild(1)", [1], call2929);
                                                setLineNumber(1280);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2936 = callmethodChecked(this, "canvas", []);
                                                var call2937 = callmethodChecked(call2936, "element", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2939 = callmethodChecked(this, "element", []);
                                                var call2940 = callmethodChecked(call2939, "appendChild(1)", [1], call2937);
                                                setLineNumber(1281);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2944 = callmethodChecked(this, "after", []);
                                                var call2945 = callmethodChecked(call2944, "element", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2947 = callmethodChecked(this, "element", []);
                                                var call2948 = callmethodChecked(call2947, "appendChild(1)", [1], call2945);
                                                superDepth = origSuperDepth;
                                              };
                                              obj_init_2740.apply(obj2740, []);
                                              setLineNumber(1265);    // return value
                                              if (!Grace_isTrue(callmethod(var_GraphicApplication, "match(1)", [1], obj2740)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method graphicApplicationSize(_) does not have " + 
                                                          callmethod(var_GraphicApplication, "asString", [0])._value + "."));
                                              return obj2740;
                                            };
                                            func2739.paramTypes = [];
                                            func2739.paramTypes.push([]);
                                            func2739.paramCounts = [1];
                                            this.methods["graphicApplicationSize(1)"] = func2739;
                                            func2739.definitionLine = 1265;
                                            func2739.definitionModule = "objectdraw";
                                              var func2949 = function(argcv) {    // method graphicApplicationSize(_)$object(_)
                                                var curarg = 1;
                                                var var_theDimension__39__ = arguments[curarg];
                                                curarg++;
                                                var inheritingObject = arguments[curarg++];
                                                // Start argument processing
                                                curarg = 1;
                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in graphicApplicationSize (arg list 1), which corresponds to parameter theDimension', does not have " + 
                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument processing
                                                setModuleName("objectdraw");
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var obj2950 = Grace_allocObject(null, "graphicApplicationSize(1)");
                                                obj2950.definitionModule = "objectdraw";
                                                obj2950.definitionLine = 1265;
                                                var inho2950 = inheritingObject;
                                                while (inho2950.superobj) inho2950 = inho2950.superobj;
                                                inho2950.superobj = obj2950;
                                                obj2950.data = inheritingObject.data;
                                                if (inheritingObject.hasOwnProperty('_value'))
                                                  obj2950._value = inheritingObject._value;
                                                obj2950.outer = this;
                                                var reader_objectdraw_outer2951 = function() {
                                                  return this.outer;
                                                };
                                                obj2950.methods["outer"] = reader_objectdraw_outer2951;
                                                var obj_init_2950 = function() {
                                                  var origSuperDepth = superDepth;
                                                  superDepth = obj2950;
                                                  var func2952 = function(argcv) {    // method prepend(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_aComponent = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1284);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                                callmethod(var_Component, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1285);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2955 = callmethodChecked(this, "before", []);
                                                    var call2956 = callmethodChecked(call2955, "prepend(1)", [1], var_aComponent);
                                                    setLineNumber(1286);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2959 = callmethodChecked(this, "children", []);
                                                    var call2960 = callmethodChecked(call2959, "unshift(1)", [1], var_aComponent);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2960)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method prepend(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call2960;
                                                  };
                                                  func2952.paramTypes = [];
                                                  func2952.paramTypes.push([]);
                                                  func2952.paramCounts = [1];
                                                  obj2950.methods["prepend(1)"] = func2952;
                                                  func2952.definitionLine = 1284;
                                                  func2952.definitionModule = "objectdraw";
                                                  var func2961 = function(argcv) {    // method append(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_aComponent = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1290);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                                callmethod(var_Component, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1291);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2964 = callmethodChecked(this, "after", []);
                                                    var call2965 = callmethodChecked(call2964, "append(1)", [1], var_aComponent);
                                                    setLineNumber(1292);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2968 = callmethodChecked(this, "children", []);
                                                    var call2969 = callmethodChecked(call2968, "push(1)", [1], var_aComponent);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2969)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method append(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call2969;
                                                  };
                                                  func2961.paramTypes = [];
                                                  func2961.paramTypes.push([]);
                                                  func2961.paramCounts = [1];
                                                  obj2950.methods["append(1)"] = func2961;
                                                  func2961.definitionLine = 1290;
                                                  func2961.definitionModule = "objectdraw";
                                                  var func2970 = function(argcv) {    // method onMouseClick(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1299);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseClick (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseClick(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2970.paramTypes = [];
                                                  func2970.paramTypes.push([]);
                                                  func2970.paramCounts = [1];
                                                  obj2950.methods["onMouseClick(1)"] = func2970;
                                                  func2970.definitionLine = 1299;
                                                  func2970.definitionModule = "objectdraw";
                                                  var func2971 = function(argcv) {    // method onMousePress(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1302);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMousePress (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMousePress(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2971.paramTypes = [];
                                                  func2971.paramTypes.push([]);
                                                  func2971.paramCounts = [1];
                                                  obj2950.methods["onMousePress(1)"] = func2971;
                                                  func2971.definitionLine = 1302;
                                                  func2971.definitionModule = "objectdraw";
                                                  var func2972 = function(argcv) {    // method onMouseRelease(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1305);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseRelease (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseRelease(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2972.paramTypes = [];
                                                  func2972.paramTypes.push([]);
                                                  func2972.paramCounts = [1];
                                                  obj2950.methods["onMouseRelease(1)"] = func2972;
                                                  func2972.definitionLine = 1305;
                                                  func2972.definitionModule = "objectdraw";
                                                  var func2973 = function(argcv) {    // method onMouseMove(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1308);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseMove (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseMove(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2973.paramTypes = [];
                                                  func2973.paramTypes.push([]);
                                                  func2973.paramCounts = [1];
                                                  obj2950.methods["onMouseMove(1)"] = func2973;
                                                  func2973.definitionLine = 1308;
                                                  func2973.definitionModule = "objectdraw";
                                                  var func2974 = function(argcv) {    // method onMouseDrag(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1311);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseDrag (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseDrag(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2974.paramTypes = [];
                                                  func2974.paramTypes.push([]);
                                                  func2974.paramCounts = [1];
                                                  obj2950.methods["onMouseDrag(1)"] = func2974;
                                                  func2974.definitionLine = 1311;
                                                  func2974.definitionModule = "objectdraw";
                                                  var func2975 = function(argcv) {    // method onMouseEnter(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1314);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseEnter (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseEnter(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2975.paramTypes = [];
                                                  func2975.paramTypes.push([]);
                                                  func2975.paramCounts = [1];
                                                  obj2950.methods["onMouseEnter(1)"] = func2975;
                                                  func2975.definitionLine = 1314;
                                                  func2975.definitionModule = "objectdraw";
                                                  var func2976 = function(argcv) {    // method onMouseExit(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1317);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseExit (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseExit(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2976.paramTypes = [];
                                                  func2976.paramTypes.push([]);
                                                  func2976.paramCounts = [1];
                                                  obj2950.methods["onMouseExit(1)"] = func2976;
                                                  func2976.definitionLine = 1317;
                                                  func2976.definitionModule = "objectdraw";
                                                  var func2977 = function(argcv) {    // method startGraphics
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1322);    // compilenode string
                                                    var string2979 = new GraceString("div");
                                                    // call case 6: other requests
                                                    var call2980 = callmethodChecked(var_document, "createElement(1)", [1], string2979);
                                                    var var_parentElement = call2980;
                                                    setLineNumber(1323);    // compilenode string
                                                    var string2982 = new GraceString("height-calculator");
                                                    // call case 6: other requests
                                                    var call2983 = callmethodChecked(var_parentElement, "className:=(1)", [1], string2982);
                                                    setLineNumber(1324);    // compilenode string
                                                    var string2985 = new GraceString("px");
                                                    // call case 6: other requests
                                                    var call2988 = callmethodChecked(var_theDimension__39__, "x", []);
                                                    var string2990 = new GraceString("");
                                                    var opresult2992 = callmethodChecked(string2990, "++(1)", [1], call2988);
                                                    var opresult2994 = callmethodChecked(opresult2992, "++(1)", [1], string2985);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call2996 = callmethodChecked(var_parentElement, "style", []);
                                                    var call2997 = callmethodChecked(call2996, "width:=(1)", [1], opresult2994);
                                                    setLineNumber(1325);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3001 = callmethodChecked(this, "element", []);
                                                    var call3002 = callmethodChecked(call3001, "cloneNode(1)", [1], GraceTrue);
                                                    // call case 6: other requests
                                                    var call3003 = callmethodChecked(var_parentElement, "appendChild(1)", [1], call3002);
                                                    setLineNumber(1326);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call3006 = callmethodChecked(var_document, "body", []);
                                                    var call3007 = callmethodChecked(call3006, "appendChild(1)", [1], var_parentElement);
                                                    setLineNumber(1327);    // compilenode member
                                                    // call case 6: other requests
                                                    var call3010 = callmethodChecked(var_parentElement, "offsetHeight", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3011 = callmethodChecked(this, "theHeight:=(1)", [1], call3010);
                                                    setLineNumber(1328);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call3014 = callmethodChecked(var_document, "body", []);
                                                    var call3015 = callmethodChecked(call3014, "removeChild(1)", [1], var_parentElement);
                                                    setLineNumber(1330);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3017 = callmethodChecked(this, "startApplication", []);
                                                    setLineNumber(1331);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3020 = callmethodChecked(this, "canvas", []);
                                                    var call3021 = callmethodChecked(call3020, "startDrawing", []);
                                                    setLineNumber(1333);    // compilenode string
                                                    var string3023 = new GraceString("hidden");
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3028 = callmethodChecked(this, "theWindow", []);
                                                    var call3029 = callmethodChecked(call3028, "document", []);
                                                    var call3030 = callmethodChecked(call3029, "documentElement", []);
                                                    var call3031 = callmethodChecked(call3030, "style", []);
                                                    var call3032 = callmethodChecked(call3031, "overflow:=(1)", [1], string3023);
                                                    setLineNumber(1335);    // compilenode block
                                                    var block3034 = new GraceBlock(this, 1335, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3034.real = function(var_event__39__) {
                                                      setLineNumber(1336);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3037 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3038 = callmethodChecked(this, "onMouseClick(1)", [1], call3037);
                                                      return call3038;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1335);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3040 = callmethodChecked(this, "canvas", []);
                                                    var call3041 = callmethodChecked(call3040, "onMouseClickDo(1)", [1], block3034);
                                                    setLineNumber(1339);    // compilenode block
                                                    var block3043 = new GraceBlock(this, 1339, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3043.real = function(var_event__39__) {
                                                      setLineNumber(1340);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3046 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3047 = callmethodChecked(this, "onMousePress(1)", [1], call3046);
                                                      return call3047;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1339);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3049 = callmethodChecked(this, "canvas", []);
                                                    var call3050 = callmethodChecked(call3049, "onMousePressDo(1)", [1], block3043);
                                                    setLineNumber(1343);    // compilenode block
                                                    var block3052 = new GraceBlock(this, 1343, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3052.real = function(var_event__39__) {
                                                      setLineNumber(1344);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3055 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3056 = callmethodChecked(this, "onMouseRelease(1)", [1], call3055);
                                                      return call3056;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1343);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3058 = callmethodChecked(this, "canvas", []);
                                                    var call3059 = callmethodChecked(call3058, "onMouseReleaseDo(1)", [1], block3052);
                                                    setLineNumber(1347);    // compilenode block
                                                    var block3061 = new GraceBlock(this, 1347, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3061.real = function(var_event__39__) {
                                                      setLineNumber(1348);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3064 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3065 = callmethodChecked(this, "onMouseMove(1)", [1], call3064);
                                                      return call3065;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1347);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3067 = callmethodChecked(this, "canvas", []);
                                                    var call3068 = callmethodChecked(call3067, "onMouseMoveDo(1)", [1], block3061);
                                                    setLineNumber(1351);    // compilenode block
                                                    var block3070 = new GraceBlock(this, 1351, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3070.real = function(var_event__39__) {
                                                      setLineNumber(1352);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3073 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3074 = callmethodChecked(this, "onMouseDrag(1)", [1], call3073);
                                                      return call3074;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1351);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3076 = callmethodChecked(this, "canvas", []);
                                                    var call3077 = callmethodChecked(call3076, "onMouseDragDo(1)", [1], block3070);
                                                    setLineNumber(1355);    // compilenode block
                                                    var block3079 = new GraceBlock(this, 1355, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3079.real = function(var_event__39__) {
                                                      setLineNumber(1356);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3082 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3083 = callmethodChecked(this, "onMouseEnter(1)", [1], call3082);
                                                      return call3083;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1355);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3085 = callmethodChecked(this, "canvas", []);
                                                    var call3086 = callmethodChecked(call3085, "onMouseEnterDo(1)", [1], block3079);
                                                    setLineNumber(1359);    // compilenode block
                                                    var block3088 = new GraceBlock(this, 1359, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3088.real = function(var_event__39__) {
                                                      setLineNumber(1360);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3091 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3092 = callmethodChecked(this, "onMouseExit(1)", [1], call3091);
                                                      return call3092;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1359);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3094 = callmethodChecked(this, "canvas", []);
                                                    var call3095 = callmethodChecked(call3094, "onMouseExitDo(1)", [1], block3088);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3095)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method startGraphics does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3095;
                                                  };
                                                  func2977.paramCounts = [0];
                                                  obj2950.methods["startGraphics"] = func2977;
                                                  func2977.definitionLine = 1321;
                                                  func2977.definitionModule = "objectdraw";
                                                  var func3096 = function(argcv) {    // method asString
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1365);    // compilenode string
                                                    var string3097 = new GraceString("");
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3100 = callmethodChecked(this, "canvas", []);
                                                    var string3102 = new GraceString("graphic application of ");
                                                    var opresult3104 = callmethodChecked(string3102, "++(1)", [1], call3100);
                                                    var opresult3106 = callmethodChecked(opresult3104, "++(1)", [1], string3097);
                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3106)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method asString does not have " + 
                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                    return opresult3106;
                                                  };
                                                  func3096.paramCounts = [0];
                                                  obj2950.methods["asString"] = func3096;
                                                  func3096.definitionLine = 1364;
                                                  func3096.definitionModule = "objectdraw";
                                                  setLineNumber(1269);    // compilenode string
                                                  var string3108 = new GraceString("Simple graphics");
                                                  // call case 6: other requests
                                                  setLineNumber(0);    // compilenode member
                                                  // call case 3: self.outer request
                                                  var call3110 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3111 = callmethodChecked(call3110, "applicationTitle(1)size(1)$object(1)", [1, 1, 1], string3108, var_theDimension__39__, this);
                                                  obj2950.superobj = call3111;
                                                  if (call3111.data) obj2950.data = call3111.data;
                                                  if (call3111.hasOwnProperty('_value'))
                                                      obj2950._value = call3111._value;
                                                  setLineNumber(1271);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call3114 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3115 = callmethodChecked(call3114, "drawingCanvasSize(1)", [1], var_theDimension__39__);
                                                  obj2950.data["canvas"] = call3115;
                                                  var reader_objectdraw_canvas3116 = function() {
                                                    return this.data["canvas"];
                                                  };
                                                  reader_objectdraw_canvas3116.def = true;
                                                  obj2950.methods["canvas"] = reader_objectdraw_canvas3116;
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], call3115)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("value of def 'canvas' is not of type DrawingCanvas"));
                                                  setLineNumber(1273);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3119 = callmethodChecked(this, "canvas", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3121 = callmethodChecked(this, "children", []);
                                                  var call3122 = callmethodChecked(call3121, "push(1)", [1], call3119);
                                                  setLineNumber(1275);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call3125 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3126 = callmethodChecked(call3125, "emptyContainer", []);
                                                  obj2950.data["before"] = call3126;
                                                  var reader_objectdraw_before3127 = function() {
                                                    return this.data["before"];
                                                  };
                                                  reader_objectdraw_before3127.def = true;
                                                  reader_objectdraw_before3127.confidential = true;
                                                  obj2950.methods["before"] = reader_objectdraw_before3127;
                                                  if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call3126)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("value of def 'before' is not of type Container"));
                                                  setLineNumber(1276);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call3130 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3131 = callmethodChecked(call3130, "emptyContainer", []);
                                                  obj2950.data["after"] = call3131;
                                                  var reader_objectdraw_after3132 = function() {
                                                    return this.data["after"];
                                                  };
                                                  reader_objectdraw_after3132.def = true;
                                                  reader_objectdraw_after3132.confidential = true;
                                                  obj2950.methods["after"] = reader_objectdraw_after3132;
                                                  if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call3131)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("value of def 'after' is not of type Container"));
                                                  setLineNumber(1278);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3134 = callmethodChecked(this, "arrangeVertical", []);
                                                  setLineNumber(1279);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3138 = callmethodChecked(this, "before", []);
                                                  var call3139 = callmethodChecked(call3138, "element", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3141 = callmethodChecked(this, "element", []);
                                                  var call3142 = callmethodChecked(call3141, "appendChild(1)", [1], call3139);
                                                  setLineNumber(1280);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3146 = callmethodChecked(this, "canvas", []);
                                                  var call3147 = callmethodChecked(call3146, "element", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3149 = callmethodChecked(this, "element", []);
                                                  var call3150 = callmethodChecked(call3149, "appendChild(1)", [1], call3147);
                                                  setLineNumber(1281);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3154 = callmethodChecked(this, "after", []);
                                                  var call3155 = callmethodChecked(call3154, "element", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3157 = callmethodChecked(this, "element", []);
                                                  var call3158 = callmethodChecked(call3157, "appendChild(1)", [1], call3155);
                                                  superDepth = origSuperDepth;
                                                };
                                                obj_init_2950.apply(inheritingObject, []);
                                                return obj2950;
                                                };
                                                func2949.paramTypes = [];
                                                func2949.paramTypes.push([]);
                                                this.methods["graphicApplicationSize(1)$object(1)"] = func2949;
                                              setLineNumber(1369);    // compilenode method
                                              var func3159 = function(argcv) {    // method drawableAt(_)on(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_location__39__ = arguments[curarg];
                                                curarg++;
                                                var var_canvas__39__ = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in drawableAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                curarg++;
                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in on (arg list 2), which corresponds to parameter canvas', does not have " + 
                                                            callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("objectdraw");
                                                var obj3160 = Grace_allocObject(GraceObject, "drawableAt(_)on(_)");
                                                obj3160.definitionModule = "objectdraw";
                                                obj3160.definitionLine = 1369;
                                                obj3160.outer = this;
                                                var reader_objectdraw_outer3161 = function() {
                                                  return this.outer;
                                                };
                                                obj3160.methods["outer"] = reader_objectdraw_outer3161;
                                                var obj_init_3160 = function() {
                                                  var origSuperDepth = superDepth;
                                                  superDepth = obj3160;
                                                  var func3162 = function(argcv) {    // method x
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1377);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3165 = callmethodChecked(this, "location", []);
                                                    var call3166 = callmethodChecked(call3165, "x", []);
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3166)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method x does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    return call3166;
                                                  };
                                                  func3162.paramCounts = [0];
                                                  obj3160.methods["x"] = func3162;
                                                  func3162.definitionLine = 1376;
                                                  func3162.definitionModule = "objectdraw";
                                                  var func3167 = function(argcv) {    // method y
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1382);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3170 = callmethodChecked(this, "location", []);
                                                    var call3171 = callmethodChecked(call3170, "y", []);
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3171)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method y does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    return call3171;
                                                  };
                                                  func3167.paramCounts = [0];
                                                  obj3160.methods["y"] = func3167;
                                                  func3167.definitionLine = 1381;
                                                  func3167.definitionModule = "objectdraw";
                                                  var func3172 = function(argcv) {    // method ==(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_other = arguments[curarg];
                                                    curarg++;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1388);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3174 = callmethodChecked(this, "isMe(1)", [1], var_other);
                                                    return call3174;
                                                  };
                                                  func3172.paramCounts = [1];
                                                  obj3160.methods["==(1)"] = func3172;
                                                  func3172.definitionLine = 1385;
                                                  func3172.definitionModule = "objectdraw";
                                                  var func3175 = function(argcv) {    // method color
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1397);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3177 = callmethodChecked(this, "theColor", []);
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3177)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method color does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    return call3177;
                                                  };
                                                  func3175.paramCounts = [0];
                                                  obj3160.methods["color"] = func3175;
                                                  func3175.definitionLine = 1397;
                                                  func3175.definitionModule = "objectdraw";
                                                  var func3178 = function(argcv) {    // method color:=(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_newColor = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1399);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in color:= (arg list 1), which corresponds to parameter newColor, does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1400);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3180 = callmethodChecked(this, "theColor:=(1)", [1], var_newColor);
                                                    setLineNumber(1401);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3182 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3182)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method color:=(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3182;
                                                  };
                                                  func3178.paramTypes = [];
                                                  func3178.paramTypes.push([]);
                                                  func3178.paramCounts = [1];
                                                  obj3160.methods["color:=(1)"] = func3178;
                                                  func3178.definitionLine = 1399;
                                                  func3178.definitionModule = "objectdraw";
                                                  var func3183 = function(argcv) {    // method frameColor
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1406);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3185 = callmethodChecked(this, "theFrameColor", []);
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3185)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method frameColor does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    return call3185;
                                                  };
                                                  func3183.paramCounts = [0];
                                                  obj3160.methods["frameColor"] = func3183;
                                                  func3183.definitionLine = 1406;
                                                  func3183.definitionModule = "objectdraw";
                                                  var func3186 = function(argcv) {    // method frameColor:=(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_newfColor = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1407);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in frameColor:= (arg list 1), which corresponds to parameter newfColor, does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1408);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3188 = callmethodChecked(this, "theFrameColor:=(1)", [1], var_newfColor);
                                                    setLineNumber(1409);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3190 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3190)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method frameColor:=(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3190;
                                                  };
                                                  func3186.paramTypes = [];
                                                  func3186.paramTypes.push([]);
                                                  func3186.paramCounts = [1];
                                                  obj3160.methods["frameColor:=(1)"] = func3186;
                                                  func3186.definitionLine = 1407;
                                                  func3186.definitionModule = "objectdraw";
                                                  var func3191 = function(argcv) {    // method visible:=(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_b = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1416);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in visible:= (arg list 1), which corresponds to parameter b, does not have " + 
                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1417);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3193 = callmethodChecked(this, "isVisible:=(1)", [1], var_b);
                                                    setLineNumber(1418);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3195 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3195)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method visible:=(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3195;
                                                  };
                                                  func3191.paramTypes = [];
                                                  func3191.paramTypes.push([type_Boolean, "b"]);
                                                  func3191.paramCounts = [1];
                                                  obj3160.methods["visible:=(1)"] = func3191;
                                                  func3191.definitionLine = 1416;
                                                  func3191.definitionModule = "objectdraw";
                                                  var func3196 = function(argcv) {    // method addToCanvas(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_c = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1422);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in addToCanvas (arg list 1), which corresponds to parameter c, does not have " + 
                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1423);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3198 = callmethodChecked(this, "removeFromCanvas", []);
                                                    setLineNumber(1424);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3200 = callmethodChecked(this, "canvas:=(1)", [1], var_c);
                                                    setLineNumber(1425);    // compilenode identifier
                                                    // call case 6: other requests
                                                    var call3202 = callmethodChecked(var_c, "add(1)", [1], this);
                                                    setLineNumber(1426);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3204 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3204)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method addToCanvas(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3204;
                                                  };
                                                  func3196.paramTypes = [];
                                                  func3196.paramTypes.push([]);
                                                  func3196.paramCounts = [1];
                                                  obj3160.methods["addToCanvas(1)"] = func3196;
                                                  func3196.definitionLine = 1422;
                                                  func3196.definitionModule = "objectdraw";
                                                  var func3205 = function(argcv) {    // method removeFromCanvas
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1431);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3208 = callmethodChecked(this, "canvas", []);
                                                    var call3209 = callmethodChecked(call3208, "remove(1)", [1], this);
                                                    setLineNumber(1432);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3211 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3211)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method removeFromCanvas does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3211;
                                                  };
                                                  func3205.paramCounts = [0];
                                                  obj3160.methods["removeFromCanvas"] = func3205;
                                                  func3205.definitionLine = 1430;
                                                  func3205.definitionModule = "objectdraw";
                                                  var func3212 = function(argcv) {    // method moveTo(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_newLocn = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1436);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1437);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3214 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                    setLineNumber(1438);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3216 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3216)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method moveTo(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3216;
                                                  };
                                                  func3212.paramTypes = [];
                                                  func3212.paramTypes.push([]);
                                                  func3212.paramCounts = [1];
                                                  obj3160.methods["moveTo(1)"] = func3212;
                                                  func3212.definitionLine = 1436;
                                                  func3212.definitionModule = "objectdraw";
                                                  var func3217 = function(argcv) {    // method moveBy(_,_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_dx = arguments[curarg];
                                                    curarg++;
                                                    var var_dy = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1442);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    curarg++;
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1443);    // compilenode identifier
                                                    var opresult3221 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3224 = callmethodChecked(this, "location", []);
                                                    var opresult3226 = callmethodChecked(call3224, "+(1)", [1], opresult3221);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3227 = callmethodChecked(this, "location:=(1)", [1], opresult3226);
                                                    setLineNumber(1444);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3229 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3229)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method moveBy(_,_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3229;
                                                  };
                                                  func3217.paramTypes = [];
                                                  func3217.paramTypes.push([type_Number, "dx"]);
                                                  func3217.paramTypes.push([type_Number, "dy"]);
                                                  func3217.paramCounts = [2];
                                                  obj3160.methods["moveBy(2)"] = func3217;
                                                  func3217.definitionLine = 1442;
                                                  func3217.definitionModule = "objectdraw";
                                                  var func3230 = function(argcv) {    // method contains(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_locn = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1448);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1449);    // compilenode string
                                                    var string3232 = new GraceString("");
                                                    var string3235 = new GraceString("contains not implemented for ");
                                                    var opresult3237 = callmethodChecked(string3235, "++(1)", [1], this);
                                                    var opresult3239 = callmethodChecked(opresult3237, "++(1)", [1], string3232);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call3242 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3243 = callmethodChecked(call3242, "SubobjectResponsibility", []);
                                                    var call3244 = callmethodChecked(call3243, "raise(1)", [1], opresult3239);
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3244)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method contains(_) does not have " + 
                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                    return call3244;
                                                  };
                                                  func3230.paramTypes = [];
                                                  func3230.paramTypes.push([]);
                                                  func3230.paramCounts = [1];
                                                  obj3160.methods["contains(1)"] = func3230;
                                                  func3230.definitionLine = 1448;
                                                  func3230.definitionModule = "objectdraw";
                                                  var func3245 = function(argcv) {    // method overlaps(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_otherObject = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1453);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter otherObject, does not have " + 
                                                                callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1454);    // compilenode string
                                                    var string3247 = new GraceString("");
                                                    var string3250 = new GraceString("overlaps not implemented for ");
                                                    var opresult3252 = callmethodChecked(string3250, "++(1)", [1], this);
                                                    var opresult3254 = callmethodChecked(opresult3252, "++(1)", [1], string3247);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call3257 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3258 = callmethodChecked(call3257, "SubobjectResponsibility", []);
                                                    var call3259 = callmethodChecked(call3258, "raise(1)", [1], opresult3254);
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3259)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method overlaps(_) does not have " + 
                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                    return call3259;
                                                  };
                                                  func3245.paramTypes = [];
                                                  func3245.paramTypes.push([]);
                                                  func3245.paramCounts = [1];
                                                  obj3160.methods["overlaps(1)"] = func3245;
                                                  func3245.definitionLine = 1453;
                                                  func3245.definitionModule = "objectdraw";
                                                  var func3260 = function(argcv) {    // method sendForward
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1459);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3263 = callmethodChecked(this, "canvas", []);
                                                    var call3264 = callmethodChecked(call3263, "sendForward(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3264)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendForward does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3264;
                                                  };
                                                  func3260.paramCounts = [0];
                                                  obj3160.methods["sendForward"] = func3260;
                                                  func3260.definitionLine = 1458;
                                                  func3260.definitionModule = "objectdraw";
                                                  var func3265 = function(argcv) {    // method sendBackward
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1464);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3268 = callmethodChecked(this, "canvas", []);
                                                    var call3269 = callmethodChecked(call3268, "sendBackward(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3269)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendBackward does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3269;
                                                  };
                                                  func3265.paramCounts = [0];
                                                  obj3160.methods["sendBackward"] = func3265;
                                                  func3265.definitionLine = 1463;
                                                  func3265.definitionModule = "objectdraw";
                                                  var func3270 = function(argcv) {    // method sendToFront
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1469);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3273 = callmethodChecked(this, "canvas", []);
                                                    var call3274 = callmethodChecked(call3273, "sendToFront(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3274)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendToFront does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3274;
                                                  };
                                                  func3270.paramCounts = [0];
                                                  obj3160.methods["sendToFront"] = func3270;
                                                  func3270.definitionLine = 1468;
                                                  func3270.definitionModule = "objectdraw";
                                                  var func3275 = function(argcv) {    // method sendToBack
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1474);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3278 = callmethodChecked(this, "canvas", []);
                                                    var call3279 = callmethodChecked(call3278, "sendToBack(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3279)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendToBack does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3279;
                                                  };
                                                  func3275.paramCounts = [0];
                                                  obj3160.methods["sendToBack"] = func3275;
                                                  func3275.definitionLine = 1473;
                                                  func3275.definitionModule = "objectdraw";
                                                  var func3280 = function(argcv) {    // method notifyRedraw
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1479);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3283 = callmethodChecked(this, "canvas", []);
                                                    var call3284 = callmethodChecked(call3283, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3284)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method notifyRedraw does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3284;
                                                  };
                                                  func3280.confidential = true;
                                                  func3280.paramCounts = [0];
                                                  obj3160.methods["notifyRedraw"] = func3280;
                                                  func3280.definitionLine = 1478;
                                                  func3280.definitionModule = "objectdraw";
                                                  var func3285 = function(argcv) {    // method draw(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_ctx = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1483);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1484);    // compilenode string
                                                    var string3287 = new GraceString("");
                                                    var string3290 = new GraceString("draw not implemented for ");
                                                    var opresult3292 = callmethodChecked(string3290, "++(1)", [1], this);
                                                    var opresult3294 = callmethodChecked(opresult3292, "++(1)", [1], string3287);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call3297 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3298 = callmethodChecked(call3297, "SubobjectResponsibility", []);
                                                    var call3299 = callmethodChecked(call3298, "raise(1)", [1], opresult3294);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3299)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method draw(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3299;
                                                  };
                                                  func3285.paramTypes = [];
                                                  func3285.paramTypes.push([]);
                                                  func3285.paramCounts = [1];
                                                  obj3160.methods["draw(1)"] = func3285;
                                                  func3285.definitionLine = 1483;
                                                  func3285.definitionModule = "objectdraw";
                                                  var func3300 = function(argcv) {    // method asString
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1489);    // compilenode string
                                                    var string3301 = new GraceString("Graphic object");
                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string3301)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method asString does not have " + 
                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                    return string3301;
                                                  };
                                                  func3300.paramCounts = [0];
                                                  obj3160.methods["asString"] = func3300;
                                                  func3300.definitionLine = 1488;
                                                  func3300.definitionModule = "objectdraw";
                                                  setLineNumber(1373);    // compilenode identifier
                                                  obj3160.data["location"] = var_location__39__;
                                                  var reader_objectdraw_location3302 = function() {
                                                    return this.data["location"];
                                                  };
                                                  obj3160.methods["location"] = reader_objectdraw_location3302;
                                                  obj3160.data["location"] = var_location__39__;
                                                  var writer_objectdraw_location3302 = function(argcv, o) {
                                                    this.data["location"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3160.methods["location:=(1)"] = writer_objectdraw_location3302;
                                                  writer_objectdraw_location3302.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_location__39__)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'location' is not of type Point"));
                                                  obj3160.mutable = true;
                                                  setLineNumber(1392);    // compilenode identifier
                                                  obj3160.data["canvas"] = var_canvas__39__;
                                                  var reader_objectdraw_canvas3303 = function() {
                                                    return this.data["canvas"];
                                                  };
                                                  obj3160.methods["canvas"] = reader_objectdraw_canvas3303;
                                                  obj3160.data["canvas"] = var_canvas__39__;
                                                  var writer_objectdraw_canvas3303 = function(argcv, o) {
                                                    this.data["canvas"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3160.methods["canvas:=(1)"] = writer_objectdraw_canvas3303;
                                                  reader_objectdraw_canvas3303.confidential = true;
                                                  writer_objectdraw_canvas3303.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], var_canvas__39__)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'canvas' is not of type DrawingCanvas"));
                                                  obj3160.mutable = true;
                                                  setLineNumber(1395);    // compilenode identifier
                                                  obj3160.data["theColor"] = var_black;
                                                  var reader_objectdraw_theColor3304 = function() {
                                                    return this.data["theColor"];
                                                  };
                                                  obj3160.methods["theColor"] = reader_objectdraw_theColor3304;
                                                  obj3160.data["theColor"] = var_black;
                                                  var writer_objectdraw_theColor3304 = function(argcv, o) {
                                                    this.data["theColor"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3160.methods["theColor:=(1)"] = writer_objectdraw_theColor3304;
                                                  reader_objectdraw_theColor3304.confidential = true;
                                                  writer_objectdraw_theColor3304.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'theColor' is not of type Color"));
                                                  obj3160.mutable = true;
                                                  setLineNumber(1404);    // compilenode identifier
                                                  obj3160.data["theFrameColor"] = var_black;
                                                  var reader_objectdraw_theFrameColor3305 = function() {
                                                    return this.data["theFrameColor"];
                                                  };
                                                  obj3160.methods["theFrameColor"] = reader_objectdraw_theFrameColor3305;
                                                  obj3160.data["theFrameColor"] = var_black;
                                                  var writer_objectdraw_theFrameColor3305 = function(argcv, o) {
                                                    this.data["theFrameColor"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3160.methods["theFrameColor:=(1)"] = writer_objectdraw_theFrameColor3305;
                                                  reader_objectdraw_theFrameColor3305.confidential = true;
                                                  writer_objectdraw_theFrameColor3305.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'theFrameColor' is not of type Color"));
                                                  obj3160.mutable = true;
                                                  setLineNumber(1413);    // compilenode identifier
                                                  obj3160.data["isVisible"] = GraceTrue;
                                                  var reader_objectdraw_isVisible3306 = function() {
                                                    return this.data["isVisible"];
                                                  };
                                                  obj3160.methods["isVisible"] = reader_objectdraw_isVisible3306;
                                                  obj3160.data["isVisible"] = GraceTrue;
                                                  var writer_objectdraw_isVisible3306 = function(argcv, o) {
                                                    this.data["isVisible"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3160.methods["isVisible:=(1)"] = writer_objectdraw_isVisible3306;
                                                  writer_objectdraw_isVisible3306.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'isVisible' is not of type Boolean"));
                                                  obj3160.mutable = true;
                                                  superDepth = origSuperDepth;
                                                };
                                                obj_init_3160.apply(obj3160, []);
                                                setLineNumber(1369);    // return value
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)", [1], obj3160)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method drawableAt(_)on(_) does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                return obj3160;
                                              };
                                              func3159.paramTypes = [];
                                              func3159.paramTypes.push([]);
                                              func3159.paramTypes.push([]);
                                              func3159.paramCounts = [1, 1];
                                              this.methods["drawableAt(1)on(1)"] = func3159;
                                              func3159.definitionLine = 1369;
                                              func3159.definitionModule = "objectdraw";
                                                var func3307 = function(argcv) {    // method drawableAt(_)on(_)$object(_)
                                                  var curarg = 1;
                                                  var var_location__39__ = arguments[curarg];
                                                  curarg++;
                                                  var var_canvas__39__ = arguments[curarg];
                                                  curarg++;
                                                  var inheritingObject = arguments[curarg++];
                                                  // Start argument processing
                                                  curarg = 1;
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in drawableAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in on (arg list 2), which corresponds to parameter canvas', does not have " + 
                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument processing
                                                  setModuleName("objectdraw");
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var obj3308 = Grace_allocObject(GraceObject, "drawableAt(1)on(1)");
                                                  obj3308.definitionModule = "objectdraw";
                                                  obj3308.definitionLine = 1369;
                                                  var inho3308 = inheritingObject;
                                                  while (inho3308.superobj) inho3308 = inho3308.superobj;
                                                  inho3308.superobj = obj3308;
                                                  obj3308.data = inheritingObject.data;
                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                    obj3308._value = inheritingObject._value;
                                                  obj3308.outer = this;
                                                  var reader_objectdraw_outer3309 = function() {
                                                    return this.outer;
                                                  };
                                                  obj3308.methods["outer"] = reader_objectdraw_outer3309;
                                                  var obj_init_3308 = function() {
                                                    var origSuperDepth = superDepth;
                                                    superDepth = obj3308;
                                                    var func3310 = function(argcv) {    // method x
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1377);    // compilenode member
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3313 = callmethodChecked(this, "location", []);
                                                      var call3314 = callmethodChecked(call3313, "x", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3314)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method x does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3314;
                                                    };
                                                    func3310.paramCounts = [0];
                                                    obj3308.methods["x"] = func3310;
                                                    func3310.definitionLine = 1376;
                                                    func3310.definitionModule = "objectdraw";
                                                    var func3315 = function(argcv) {    // method y
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1382);    // compilenode member
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3318 = callmethodChecked(this, "location", []);
                                                      var call3319 = callmethodChecked(call3318, "y", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3319)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method y does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3319;
                                                    };
                                                    func3315.paramCounts = [0];
                                                    obj3308.methods["y"] = func3315;
                                                    func3315.definitionLine = 1381;
                                                    func3315.definitionModule = "objectdraw";
                                                    var func3320 = function(argcv) {    // method ==(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_other = arguments[curarg];
                                                      curarg++;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1388);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3322 = callmethodChecked(this, "isMe(1)", [1], var_other);
                                                      return call3322;
                                                    };
                                                    func3320.paramCounts = [1];
                                                    obj3308.methods["==(1)"] = func3320;
                                                    func3320.definitionLine = 1385;
                                                    func3320.definitionModule = "objectdraw";
                                                    var func3323 = function(argcv) {    // method color
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1397);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3325 = callmethodChecked(this, "theColor", []);
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3325)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method color does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      return call3325;
                                                    };
                                                    func3323.paramCounts = [0];
                                                    obj3308.methods["color"] = func3323;
                                                    func3323.definitionLine = 1397;
                                                    func3323.definitionModule = "objectdraw";
                                                    var func3326 = function(argcv) {    // method color:=(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_newColor = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1399);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in color:= (arg list 1), which corresponds to parameter newColor, does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1400);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3328 = callmethodChecked(this, "theColor:=(1)", [1], var_newColor);
                                                      setLineNumber(1401);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3330 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3330)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method color:=(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3330;
                                                    };
                                                    func3326.paramTypes = [];
                                                    func3326.paramTypes.push([]);
                                                    func3326.paramCounts = [1];
                                                    obj3308.methods["color:=(1)"] = func3326;
                                                    func3326.definitionLine = 1399;
                                                    func3326.definitionModule = "objectdraw";
                                                    var func3331 = function(argcv) {    // method frameColor
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1406);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3333 = callmethodChecked(this, "theFrameColor", []);
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3333)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method frameColor does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      return call3333;
                                                    };
                                                    func3331.paramCounts = [0];
                                                    obj3308.methods["frameColor"] = func3331;
                                                    func3331.definitionLine = 1406;
                                                    func3331.definitionModule = "objectdraw";
                                                    var func3334 = function(argcv) {    // method frameColor:=(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_newfColor = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1407);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in frameColor:= (arg list 1), which corresponds to parameter newfColor, does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1408);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3336 = callmethodChecked(this, "theFrameColor:=(1)", [1], var_newfColor);
                                                      setLineNumber(1409);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3338 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3338)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method frameColor:=(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3338;
                                                    };
                                                    func3334.paramTypes = [];
                                                    func3334.paramTypes.push([]);
                                                    func3334.paramCounts = [1];
                                                    obj3308.methods["frameColor:=(1)"] = func3334;
                                                    func3334.definitionLine = 1407;
                                                    func3334.definitionModule = "objectdraw";
                                                    var func3339 = function(argcv) {    // method visible:=(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_b = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1416);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in visible:= (arg list 1), which corresponds to parameter b, does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1417);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3341 = callmethodChecked(this, "isVisible:=(1)", [1], var_b);
                                                      setLineNumber(1418);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3343 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3343)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method visible:=(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3343;
                                                    };
                                                    func3339.paramTypes = [];
                                                    func3339.paramTypes.push([type_Boolean, "b"]);
                                                    func3339.paramCounts = [1];
                                                    obj3308.methods["visible:=(1)"] = func3339;
                                                    func3339.definitionLine = 1416;
                                                    func3339.definitionModule = "objectdraw";
                                                    var func3344 = function(argcv) {    // method addToCanvas(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_c = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1422);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in addToCanvas (arg list 1), which corresponds to parameter c, does not have " + 
                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1423);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3346 = callmethodChecked(this, "removeFromCanvas", []);
                                                      setLineNumber(1424);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3348 = callmethodChecked(this, "canvas:=(1)", [1], var_c);
                                                      setLineNumber(1425);    // compilenode identifier
                                                      // call case 6: other requests
                                                      var call3350 = callmethodChecked(var_c, "add(1)", [1], this);
                                                      setLineNumber(1426);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3352 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3352)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method addToCanvas(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3352;
                                                    };
                                                    func3344.paramTypes = [];
                                                    func3344.paramTypes.push([]);
                                                    func3344.paramCounts = [1];
                                                    obj3308.methods["addToCanvas(1)"] = func3344;
                                                    func3344.definitionLine = 1422;
                                                    func3344.definitionModule = "objectdraw";
                                                    var func3353 = function(argcv) {    // method removeFromCanvas
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1431);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3356 = callmethodChecked(this, "canvas", []);
                                                      var call3357 = callmethodChecked(call3356, "remove(1)", [1], this);
                                                      setLineNumber(1432);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3359 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3359)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method removeFromCanvas does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3359;
                                                    };
                                                    func3353.paramCounts = [0];
                                                    obj3308.methods["removeFromCanvas"] = func3353;
                                                    func3353.definitionLine = 1430;
                                                    func3353.definitionModule = "objectdraw";
                                                    var func3360 = function(argcv) {    // method moveTo(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_newLocn = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1436);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1437);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3362 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                      setLineNumber(1438);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3364 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3364)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method moveTo(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3364;
                                                    };
                                                    func3360.paramTypes = [];
                                                    func3360.paramTypes.push([]);
                                                    func3360.paramCounts = [1];
                                                    obj3308.methods["moveTo(1)"] = func3360;
                                                    func3360.definitionLine = 1436;
                                                    func3360.definitionModule = "objectdraw";
                                                    var func3365 = function(argcv) {    // method moveBy(_,_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_dx = arguments[curarg];
                                                      curarg++;
                                                      var var_dy = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1442);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      curarg++;
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1443);    // compilenode identifier
                                                      var opresult3369 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3372 = callmethodChecked(this, "location", []);
                                                      var opresult3374 = callmethodChecked(call3372, "+(1)", [1], opresult3369);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3375 = callmethodChecked(this, "location:=(1)", [1], opresult3374);
                                                      setLineNumber(1444);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3377 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3377)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method moveBy(_,_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3377;
                                                    };
                                                    func3365.paramTypes = [];
                                                    func3365.paramTypes.push([type_Number, "dx"]);
                                                    func3365.paramTypes.push([type_Number, "dy"]);
                                                    func3365.paramCounts = [2];
                                                    obj3308.methods["moveBy(2)"] = func3365;
                                                    func3365.definitionLine = 1442;
                                                    func3365.definitionModule = "objectdraw";
                                                    var func3378 = function(argcv) {    // method contains(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_locn = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1448);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1449);    // compilenode string
                                                      var string3380 = new GraceString("");
                                                      var string3383 = new GraceString("contains not implemented for ");
                                                      var opresult3385 = callmethodChecked(string3383, "++(1)", [1], this);
                                                      var opresult3387 = callmethodChecked(opresult3385, "++(1)", [1], string3380);
                                                      // call case 6: other requests
                                                      // call case 6: other requests
                                                      // call case 3: self.outer request
                                                      var call3390 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3391 = callmethodChecked(call3390, "SubobjectResponsibility", []);
                                                      var call3392 = callmethodChecked(call3391, "raise(1)", [1], opresult3387);
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3392)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method contains(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return call3392;
                                                    };
                                                    func3378.paramTypes = [];
                                                    func3378.paramTypes.push([]);
                                                    func3378.paramCounts = [1];
                                                    obj3308.methods["contains(1)"] = func3378;
                                                    func3378.definitionLine = 1448;
                                                    func3378.definitionModule = "objectdraw";
                                                    var func3393 = function(argcv) {    // method overlaps(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_otherObject = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1453);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter otherObject, does not have " + 
                                                                  callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1454);    // compilenode string
                                                      var string3395 = new GraceString("");
                                                      var string3398 = new GraceString("overlaps not implemented for ");
                                                      var opresult3400 = callmethodChecked(string3398, "++(1)", [1], this);
                                                      var opresult3402 = callmethodChecked(opresult3400, "++(1)", [1], string3395);
                                                      // call case 6: other requests
                                                      // call case 6: other requests
                                                      // call case 3: self.outer request
                                                      var call3405 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3406 = callmethodChecked(call3405, "SubobjectResponsibility", []);
                                                      var call3407 = callmethodChecked(call3406, "raise(1)", [1], opresult3402);
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3407)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method overlaps(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return call3407;
                                                    };
                                                    func3393.paramTypes = [];
                                                    func3393.paramTypes.push([]);
                                                    func3393.paramCounts = [1];
                                                    obj3308.methods["overlaps(1)"] = func3393;
                                                    func3393.definitionLine = 1453;
                                                    func3393.definitionModule = "objectdraw";
                                                    var func3408 = function(argcv) {    // method sendForward
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1459);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3411 = callmethodChecked(this, "canvas", []);
                                                      var call3412 = callmethodChecked(call3411, "sendForward(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3412)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendForward does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3412;
                                                    };
                                                    func3408.paramCounts = [0];
                                                    obj3308.methods["sendForward"] = func3408;
                                                    func3408.definitionLine = 1458;
                                                    func3408.definitionModule = "objectdraw";
                                                    var func3413 = function(argcv) {    // method sendBackward
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1464);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3416 = callmethodChecked(this, "canvas", []);
                                                      var call3417 = callmethodChecked(call3416, "sendBackward(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3417)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendBackward does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3417;
                                                    };
                                                    func3413.paramCounts = [0];
                                                    obj3308.methods["sendBackward"] = func3413;
                                                    func3413.definitionLine = 1463;
                                                    func3413.definitionModule = "objectdraw";
                                                    var func3418 = function(argcv) {    // method sendToFront
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1469);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3421 = callmethodChecked(this, "canvas", []);
                                                      var call3422 = callmethodChecked(call3421, "sendToFront(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3422)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendToFront does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3422;
                                                    };
                                                    func3418.paramCounts = [0];
                                                    obj3308.methods["sendToFront"] = func3418;
                                                    func3418.definitionLine = 1468;
                                                    func3418.definitionModule = "objectdraw";
                                                    var func3423 = function(argcv) {    // method sendToBack
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1474);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3426 = callmethodChecked(this, "canvas", []);
                                                      var call3427 = callmethodChecked(call3426, "sendToBack(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3427)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendToBack does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3427;
                                                    };
                                                    func3423.paramCounts = [0];
                                                    obj3308.methods["sendToBack"] = func3423;
                                                    func3423.definitionLine = 1473;
                                                    func3423.definitionModule = "objectdraw";
                                                    var func3428 = function(argcv) {    // method notifyRedraw
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1479);    // compilenode member
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3431 = callmethodChecked(this, "canvas", []);
                                                      var call3432 = callmethodChecked(call3431, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3432)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method notifyRedraw does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3432;
                                                    };
                                                    func3428.confidential = true;
                                                    func3428.paramCounts = [0];
                                                    obj3308.methods["notifyRedraw"] = func3428;
                                                    func3428.definitionLine = 1478;
                                                    func3428.definitionModule = "objectdraw";
                                                    var func3433 = function(argcv) {    // method draw(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_ctx = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1483);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1484);    // compilenode string
                                                      var string3435 = new GraceString("");
                                                      var string3438 = new GraceString("draw not implemented for ");
                                                      var opresult3440 = callmethodChecked(string3438, "++(1)", [1], this);
                                                      var opresult3442 = callmethodChecked(opresult3440, "++(1)", [1], string3435);
                                                      // call case 6: other requests
                                                      // call case 6: other requests
                                                      // call case 3: self.outer request
                                                      var call3445 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3446 = callmethodChecked(call3445, "SubobjectResponsibility", []);
                                                      var call3447 = callmethodChecked(call3446, "raise(1)", [1], opresult3442);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3447)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method draw(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3447;
                                                    };
                                                    func3433.paramTypes = [];
                                                    func3433.paramTypes.push([]);
                                                    func3433.paramCounts = [1];
                                                    obj3308.methods["draw(1)"] = func3433;
                                                    func3433.definitionLine = 1483;
                                                    func3433.definitionModule = "objectdraw";
                                                    var func3448 = function(argcv) {    // method asString
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1489);    // compilenode string
                                                      var string3449 = new GraceString("Graphic object");
                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string3449)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method asString does not have " + 
                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                      return string3449;
                                                    };
                                                    func3448.paramCounts = [0];
                                                    obj3308.methods["asString"] = func3448;
                                                    func3448.definitionLine = 1488;
                                                    func3448.definitionModule = "objectdraw";
                                                    setLineNumber(1373);    // compilenode identifier
                                                    obj3308.data["location"] = var_location__39__;
                                                    var reader_objectdraw_location3450 = function() {
                                                      return this.data["location"];
                                                    };
                                                    obj3308.methods["location"] = reader_objectdraw_location3450;
                                                    obj3308.data["location"] = var_location__39__;
                                                    var writer_objectdraw_location3450 = function(argcv, o) {
                                                      this.data["location"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3308.methods["location:=(1)"] = writer_objectdraw_location3450;
                                                    writer_objectdraw_location3450.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_location__39__)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'location' is not of type Point"));
                                                    obj3308.mutable = true;
                                                    setLineNumber(1392);    // compilenode identifier
                                                    obj3308.data["canvas"] = var_canvas__39__;
                                                    var reader_objectdraw_canvas3451 = function() {
                                                      return this.data["canvas"];
                                                    };
                                                    obj3308.methods["canvas"] = reader_objectdraw_canvas3451;
                                                    obj3308.data["canvas"] = var_canvas__39__;
                                                    var writer_objectdraw_canvas3451 = function(argcv, o) {
                                                      this.data["canvas"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3308.methods["canvas:=(1)"] = writer_objectdraw_canvas3451;
                                                    reader_objectdraw_canvas3451.confidential = true;
                                                    writer_objectdraw_canvas3451.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], var_canvas__39__)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'canvas' is not of type DrawingCanvas"));
                                                    obj3308.mutable = true;
                                                    setLineNumber(1395);    // compilenode identifier
                                                    obj3308.data["theColor"] = var_black;
                                                    var reader_objectdraw_theColor3452 = function() {
                                                      return this.data["theColor"];
                                                    };
                                                    obj3308.methods["theColor"] = reader_objectdraw_theColor3452;
                                                    obj3308.data["theColor"] = var_black;
                                                    var writer_objectdraw_theColor3452 = function(argcv, o) {
                                                      this.data["theColor"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3308.methods["theColor:=(1)"] = writer_objectdraw_theColor3452;
                                                    reader_objectdraw_theColor3452.confidential = true;
                                                    writer_objectdraw_theColor3452.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theColor' is not of type Color"));
                                                    obj3308.mutable = true;
                                                    setLineNumber(1404);    // compilenode identifier
                                                    obj3308.data["theFrameColor"] = var_black;
                                                    var reader_objectdraw_theFrameColor3453 = function() {
                                                      return this.data["theFrameColor"];
                                                    };
                                                    obj3308.methods["theFrameColor"] = reader_objectdraw_theFrameColor3453;
                                                    obj3308.data["theFrameColor"] = var_black;
                                                    var writer_objectdraw_theFrameColor3453 = function(argcv, o) {
                                                      this.data["theFrameColor"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3308.methods["theFrameColor:=(1)"] = writer_objectdraw_theFrameColor3453;
                                                    reader_objectdraw_theFrameColor3453.confidential = true;
                                                    writer_objectdraw_theFrameColor3453.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theFrameColor' is not of type Color"));
                                                    obj3308.mutable = true;
                                                    setLineNumber(1413);    // compilenode identifier
                                                    obj3308.data["isVisible"] = GraceTrue;
                                                    var reader_objectdraw_isVisible3454 = function() {
                                                      return this.data["isVisible"];
                                                    };
                                                    obj3308.methods["isVisible"] = reader_objectdraw_isVisible3454;
                                                    obj3308.data["isVisible"] = GraceTrue;
                                                    var writer_objectdraw_isVisible3454 = function(argcv, o) {
                                                      this.data["isVisible"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3308.methods["isVisible:=(1)"] = writer_objectdraw_isVisible3454;
                                                    writer_objectdraw_isVisible3454.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'isVisible' is not of type Boolean"));
                                                    obj3308.mutable = true;
                                                    superDepth = origSuperDepth;
                                                  };
                                                  obj_init_3308.apply(inheritingObject, []);
                                                  return obj3308;
                                                  };
                                                  func3307.paramTypes = [];
                                                  func3307.paramTypes.push([]);
                                                  func3307.paramTypes.push([]);
                                                  this.methods["drawableAt(1)on(1)$object(1)"] = func3307;
                                                setLineNumber(1494);    // compilenode method
                                                var func3455 = function(argcv) {    // method drawable2DAt(_)size(_)on(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_location__39__ = arguments[curarg];
                                                  curarg++;
                                                  var var_dimension__39__ = arguments[curarg];
                                                  curarg++;
                                                  var var_canvas__39__ = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in drawable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  setLineNumber(1495);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimension', does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  setLineNumber(1496);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("objectdraw");
                                                  setLineNumber(1494);    // compilenode object
                                                  var obj3456 = Grace_allocObject(null, "drawable2DAt(_)size(_)on(_)");
                                                  obj3456.definitionModule = "objectdraw";
                                                  obj3456.definitionLine = 1494;
                                                  obj3456.outer = this;
                                                  var reader_objectdraw_outer3457 = function() {
                                                    return this.outer;
                                                  };
                                                  obj3456.methods["outer"] = reader_objectdraw_outer3457;
                                                  var obj_init_3456 = function() {
                                                    var origSuperDepth = superDepth;
                                                    superDepth = obj3456;
                                                    var func3458 = function(argcv) {    // method width
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1503);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3460 = callmethodChecked(this, "theWidth", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3460)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method width does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3460;
                                                    };
                                                    func3458.paramCounts = [0];
                                                    obj3456.methods["width"] = func3458;
                                                    func3458.definitionLine = 1503;
                                                    func3458.definitionModule = "objectdraw";
                                                    var func3461 = function(argcv) {    // method height
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1507);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3463 = callmethodChecked(this, "theHeight", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3463)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method height does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3463;
                                                    };
                                                    func3461.paramCounts = [0];
                                                    obj3456.methods["height"] = func3461;
                                                    func3461.definitionLine = 1507;
                                                    func3461.definitionModule = "objectdraw";
                                                    var func3464 = function(argcv) {    // method size
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1509);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3466 = callmethodChecked(this, "theHeight", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3469 = callmethodChecked(this, "theWidth", []);
                                                      var opresult3471 = callmethodChecked(call3469, "@(1)", [1], call3466);
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult3471)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method size does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      return opresult3471;
                                                    };
                                                    func3464.paramCounts = [0];
                                                    obj3456.methods["size"] = func3464;
                                                    func3464.definitionLine = 1509;
                                                    func3464.definitionModule = "objectdraw";
                                                    var func3472 = function(argcv) {    // method contains(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_locn = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1513);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1515);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3474 = callmethodChecked(this, "height", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3477 = callmethodChecked(this, "y", []);
                                                      var opresult3479 = callmethodChecked(call3477, "+(1)", [1], call3474);
                                                      // call case 6: other requests
                                                      var call3482 = callmethodChecked(var_locn, "y", []);
                                                      var opresult3484 = callmethodChecked(call3482, "\u2264(1)", [1], opresult3479);
                                                      // call case 6: other requests
                                                      var call3487 = callmethodChecked(var_locn, "y", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3490 = callmethodChecked(this, "y", []);
                                                      var opresult3492 = callmethodChecked(call3490, "\u2264(1)", [1], call3487);
                                                      setLineNumber(1514);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3495 = callmethodChecked(this, "width", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3498 = callmethodChecked(this, "x", []);
                                                      var opresult3500 = callmethodChecked(call3498, "+(1)", [1], call3495);
                                                      // call case 6: other requests
                                                      var call3503 = callmethodChecked(var_locn, "x", []);
                                                      var opresult3505 = callmethodChecked(call3503, "\u2264(1)", [1], opresult3500);
                                                      // call case 6: other requests
                                                      var call3508 = callmethodChecked(var_locn, "x", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3511 = callmethodChecked(this, "x", []);
                                                      var opresult3513 = callmethodChecked(call3511, "\u2264(1)", [1], call3508);
                                                      var opresult3515 = callmethodChecked(opresult3513, "&&(1)", [1], opresult3505);
                                                      var opresult3517 = callmethodChecked(opresult3515, "&&(1)", [1], opresult3492);
                                                      var opresult3519 = callmethodChecked(opresult3517, "&&(1)", [1], opresult3484);
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult3519)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method contains(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return opresult3519;
                                                    };
                                                    func3472.paramTypes = [];
                                                    func3472.paramTypes.push([]);
                                                    func3472.paramCounts = [1];
                                                    obj3456.methods["contains(1)"] = func3472;
                                                    func3472.definitionLine = 1513;
                                                    func3472.definitionModule = "objectdraw";
                                                    var func3520 = function(argcv) {    // method overlaps(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_other = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1519);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter other, does not have " + 
                                                                  callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1520);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3522 = callmethodChecked(var_other, "x", []);
                                                      var var_itemleft = call3522;
                                                      setLineNumber(1521);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3524 = callmethodChecked(var_other, "width", []);
                                                      // call case 6: other requests
                                                      var call3527 = callmethodChecked(var_other, "x", []);
                                                      var opresult3529 = callmethodChecked(call3527, "+(1)", [1], call3524);
                                                      var var_itemright = opresult3529;
                                                      setLineNumber(1522);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3531 = callmethodChecked(var_other, "y", []);
                                                      var var_itemtop = call3531;
                                                      setLineNumber(1523);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3533 = callmethodChecked(var_other, "height", []);
                                                      // call case 6: other requests
                                                      var call3536 = callmethodChecked(var_other, "y", []);
                                                      var opresult3538 = callmethodChecked(call3536, "+(1)", [1], call3533);
                                                      var var_itembottom = opresult3538;
                                                      setLineNumber(1525);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3540 = callmethodChecked(this, "y", []);
                                                      var opresult3543 = callmethodChecked(var_itembottom, "<(1)", [1], call3540);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3547 = callmethodChecked(this, "height", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3550 = callmethodChecked(this, "y", []);
                                                      var opresult3552 = callmethodChecked(call3550, "+(1)", [1], call3547);
                                                      var opresult3554 = callmethodChecked(opresult3552, "<(1)", [1], var_itemtop);
                                                      setLineNumber(1524);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3557 = callmethodChecked(this, "x", []);
                                                      var opresult3560 = callmethodChecked(var_itemright, "<(1)", [1], call3557);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3564 = callmethodChecked(this, "width", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3567 = callmethodChecked(this, "x", []);
                                                      var opresult3569 = callmethodChecked(call3567, "+(1)", [1], call3564);
                                                      var opresult3571 = callmethodChecked(opresult3569, "<(1)", [1], var_itemleft);
                                                      var opresult3573 = callmethodChecked(opresult3571, "||(1)", [1], opresult3560);
                                                      var opresult3575 = callmethodChecked(opresult3573, "||(1)", [1], opresult3554);
                                                      var opresult3577 = callmethodChecked(opresult3575, "||(1)", [1], opresult3543);
                                                      var var_disjoint = opresult3577;
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], var_disjoint)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("value of def 'disjoint' is not of type Boolean"));
                                                      setLineNumber(1527);    // compilenode call
                                                      // call case 6: other requests
                                                      setLineNumber(1526);    // compilenode identifier
                                                      var call3579 = callmethodChecked(var_disjoint, "prefix!", [0]);
                                                      setLineNumber(1527);    // return value
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3579)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method overlaps(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return call3579;
                                                    };
                                                    func3520.paramTypes = [];
                                                    func3520.paramTypes.push([]);
                                                    func3520.paramCounts = [1];
                                                    obj3456.methods["overlaps(1)"] = func3520;
                                                    func3520.definitionLine = 1519;
                                                    func3520.definitionModule = "objectdraw";
                                                    var func3580 = function(argcv) {    // method asString
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1532);    // compilenode string
                                                      var string3581 = new GraceString("");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3584 = callmethodChecked(this, "color", []);
                                                      var string3586 = new GraceString(", and color ");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3589 = callmethodChecked(this, "width", []);
                                                      var string3591 = new GraceString(", width ");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3594 = callmethodChecked(this, "height", []);
                                                      var string3596 = new GraceString("with height ");
                                                      var opresult3598 = callmethodChecked(string3596, "++(1)", [1], call3594);
                                                      var opresult3600 = callmethodChecked(opresult3598, "++(1)", [1], string3591);
                                                      var opresult3602 = callmethodChecked(opresult3600, "++(1)", [1], call3589);
                                                      var opresult3604 = callmethodChecked(opresult3602, "++(1)", [1], string3586);
                                                      var opresult3606 = callmethodChecked(opresult3604, "++(1)", [1], call3584);
                                                      var opresult3608 = callmethodChecked(opresult3606, "++(1)", [1], string3581);
                                                      setLineNumber(1531);    // compilenode string
                                                      var string3610 = new GraceString(") ");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3613 = callmethodChecked(this, "y", []);
                                                      var string3615 = new GraceString(",");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3618 = callmethodChecked(this, "x", []);
                                                      var string3620 = new GraceString("drawable2D object at (");
                                                      var opresult3622 = callmethodChecked(string3620, "++(1)", [1], call3618);
                                                      var opresult3624 = callmethodChecked(opresult3622, "++(1)", [1], string3615);
                                                      var opresult3626 = callmethodChecked(opresult3624, "++(1)", [1], call3613);
                                                      var opresult3628 = callmethodChecked(opresult3626, "++(1)", [1], string3610);
                                                      var opresult3630 = callmethodChecked(opresult3628, "++(1)", [1], opresult3608);
                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3630)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method asString does not have " + 
                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                      return opresult3630;
                                                    };
                                                    func3580.paramCounts = [0];
                                                    obj3456.methods["asString"] = func3580;
                                                    func3580.definitionLine = 1530;
                                                    func3580.definitionModule = "objectdraw";
                                                    setLineNumber(1499);    // compilenode identifier
                                                    // call case 6: other requests
                                                    setLineNumber(0);    // compilenode member
                                                    // call case 3: self.outer request
                                                    var call3633 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3634 = callmethodChecked(call3633, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                    obj3456.superobj = call3634;
                                                    if (call3634.data) obj3456.data = call3634.data;
                                                    if (call3634.hasOwnProperty('_value'))
                                                        obj3456._value = call3634._value;
                                                    setLineNumber(1500);    // compilenode member
                                                    // call case 6: other requests
                                                    var call3636 = callmethodChecked(var_dimension__39__, "x", []);
                                                    obj3456.data["theWidth"] = call3636;
                                                    var reader_objectdraw_theWidth3637 = function() {
                                                      return this.data["theWidth"];
                                                    };
                                                    obj3456.methods["theWidth"] = reader_objectdraw_theWidth3637;
                                                    obj3456.data["theWidth"] = call3636;
                                                    var writer_objectdraw_theWidth3637 = function(argcv, o) {
                                                      this.data["theWidth"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3456.methods["theWidth:=(1)"] = writer_objectdraw_theWidth3637;
                                                    reader_objectdraw_theWidth3637.confidential = true;
                                                    writer_objectdraw_theWidth3637.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3636)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theWidth' is not of type Number"));
                                                    obj3456.mutable = true;
                                                    setLineNumber(1504);    // compilenode member
                                                    // call case 6: other requests
                                                    var call3639 = callmethodChecked(var_dimension__39__, "y", []);
                                                    obj3456.data["theHeight"] = call3639;
                                                    var reader_objectdraw_theHeight3640 = function() {
                                                      return this.data["theHeight"];
                                                    };
                                                    obj3456.methods["theHeight"] = reader_objectdraw_theHeight3640;
                                                    obj3456.data["theHeight"] = call3639;
                                                    var writer_objectdraw_theHeight3640 = function(argcv, o) {
                                                      this.data["theHeight"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3456.methods["theHeight:=(1)"] = writer_objectdraw_theHeight3640;
                                                    reader_objectdraw_theHeight3640.confidential = true;
                                                    writer_objectdraw_theHeight3640.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3639)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theHeight' is not of type Number"));
                                                    obj3456.mutable = true;
                                                    superDepth = origSuperDepth;
                                                  };
                                                  obj_init_3456.apply(obj3456, []);
                                                  setLineNumber(1494);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj3456)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method drawable2DAt(_)size(_)on(_) does not have " + 
                                                              callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                  return obj3456;
                                                };
                                                func3455.paramTypes = [];
                                                func3455.paramTypes.push([]);
                                                func3455.paramTypes.push([]);
                                                func3455.paramTypes.push([]);
                                                func3455.paramCounts = [1, 1, 1];
                                                this.methods["drawable2DAt(1)size(1)on(1)"] = func3455;
                                                func3455.definitionLine = 1494;
                                                func3455.definitionModule = "objectdraw";
                                                  var func3641 = function(argcv) {    // method drawable2DAt(_)size(_)on(_)$object(_)
                                                    var curarg = 1;
                                                    var var_location__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_dimension__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_canvas__39__ = arguments[curarg];
                                                    curarg++;
                                                    var inheritingObject = arguments[curarg++];
                                                    // Start argument processing
                                                    curarg = 1;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in drawable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    setLineNumber(1495);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimension', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    setLineNumber(1496);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument processing
                                                    setModuleName("objectdraw");
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var obj3642 = Grace_allocObject(null, "drawable2DAt(1)size(1)on(1)");
                                                    obj3642.definitionModule = "objectdraw";
                                                    obj3642.definitionLine = 1494;
                                                    var inho3642 = inheritingObject;
                                                    while (inho3642.superobj) inho3642 = inho3642.superobj;
                                                    inho3642.superobj = obj3642;
                                                    obj3642.data = inheritingObject.data;
                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                      obj3642._value = inheritingObject._value;
                                                    obj3642.outer = this;
                                                    var reader_objectdraw_outer3643 = function() {
                                                      return this.outer;
                                                    };
                                                    obj3642.methods["outer"] = reader_objectdraw_outer3643;
                                                    var obj_init_3642 = function() {
                                                      var origSuperDepth = superDepth;
                                                      superDepth = obj3642;
                                                      var func3644 = function(argcv) {    // method width
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1503);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3646 = callmethodChecked(this, "theWidth", []);
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3646)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method width does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        return call3646;
                                                      };
                                                      func3644.paramCounts = [0];
                                                      obj3642.methods["width"] = func3644;
                                                      func3644.definitionLine = 1503;
                                                      func3644.definitionModule = "objectdraw";
                                                      var func3647 = function(argcv) {    // method height
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1507);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3649 = callmethodChecked(this, "theHeight", []);
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3649)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method height does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        return call3649;
                                                      };
                                                      func3647.paramCounts = [0];
                                                      obj3642.methods["height"] = func3647;
                                                      func3647.definitionLine = 1507;
                                                      func3647.definitionModule = "objectdraw";
                                                      var func3650 = function(argcv) {    // method size
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1509);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3652 = callmethodChecked(this, "theHeight", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3655 = callmethodChecked(this, "theWidth", []);
                                                        var opresult3657 = callmethodChecked(call3655, "@(1)", [1], call3652);
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult3657)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method size does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        return opresult3657;
                                                      };
                                                      func3650.paramCounts = [0];
                                                      obj3642.methods["size"] = func3650;
                                                      func3650.definitionLine = 1509;
                                                      func3650.definitionModule = "objectdraw";
                                                      var func3658 = function(argcv) {    // method contains(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_locn = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1513);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1515);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3660 = callmethodChecked(this, "height", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3663 = callmethodChecked(this, "y", []);
                                                        var opresult3665 = callmethodChecked(call3663, "+(1)", [1], call3660);
                                                        // call case 6: other requests
                                                        var call3668 = callmethodChecked(var_locn, "y", []);
                                                        var opresult3670 = callmethodChecked(call3668, "\u2264(1)", [1], opresult3665);
                                                        // call case 6: other requests
                                                        var call3673 = callmethodChecked(var_locn, "y", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3676 = callmethodChecked(this, "y", []);
                                                        var opresult3678 = callmethodChecked(call3676, "\u2264(1)", [1], call3673);
                                                        setLineNumber(1514);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3681 = callmethodChecked(this, "width", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3684 = callmethodChecked(this, "x", []);
                                                        var opresult3686 = callmethodChecked(call3684, "+(1)", [1], call3681);
                                                        // call case 6: other requests
                                                        var call3689 = callmethodChecked(var_locn, "x", []);
                                                        var opresult3691 = callmethodChecked(call3689, "\u2264(1)", [1], opresult3686);
                                                        // call case 6: other requests
                                                        var call3694 = callmethodChecked(var_locn, "x", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3697 = callmethodChecked(this, "x", []);
                                                        var opresult3699 = callmethodChecked(call3697, "\u2264(1)", [1], call3694);
                                                        var opresult3701 = callmethodChecked(opresult3699, "&&(1)", [1], opresult3691);
                                                        var opresult3703 = callmethodChecked(opresult3701, "&&(1)", [1], opresult3678);
                                                        var opresult3705 = callmethodChecked(opresult3703, "&&(1)", [1], opresult3670);
                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult3705)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method contains(_) does not have " + 
                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                        return opresult3705;
                                                      };
                                                      func3658.paramTypes = [];
                                                      func3658.paramTypes.push([]);
                                                      func3658.paramCounts = [1];
                                                      obj3642.methods["contains(1)"] = func3658;
                                                      func3658.definitionLine = 1513;
                                                      func3658.definitionModule = "objectdraw";
                                                      var func3706 = function(argcv) {    // method overlaps(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_other = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1519);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter other, does not have " + 
                                                                    callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1520);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3708 = callmethodChecked(var_other, "x", []);
                                                        var var_itemleft = call3708;
                                                        setLineNumber(1521);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3710 = callmethodChecked(var_other, "width", []);
                                                        // call case 6: other requests
                                                        var call3713 = callmethodChecked(var_other, "x", []);
                                                        var opresult3715 = callmethodChecked(call3713, "+(1)", [1], call3710);
                                                        var var_itemright = opresult3715;
                                                        setLineNumber(1522);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3717 = callmethodChecked(var_other, "y", []);
                                                        var var_itemtop = call3717;
                                                        setLineNumber(1523);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3719 = callmethodChecked(var_other, "height", []);
                                                        // call case 6: other requests
                                                        var call3722 = callmethodChecked(var_other, "y", []);
                                                        var opresult3724 = callmethodChecked(call3722, "+(1)", [1], call3719);
                                                        var var_itembottom = opresult3724;
                                                        setLineNumber(1525);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3726 = callmethodChecked(this, "y", []);
                                                        var opresult3729 = callmethodChecked(var_itembottom, "<(1)", [1], call3726);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3733 = callmethodChecked(this, "height", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3736 = callmethodChecked(this, "y", []);
                                                        var opresult3738 = callmethodChecked(call3736, "+(1)", [1], call3733);
                                                        var opresult3740 = callmethodChecked(opresult3738, "<(1)", [1], var_itemtop);
                                                        setLineNumber(1524);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3743 = callmethodChecked(this, "x", []);
                                                        var opresult3746 = callmethodChecked(var_itemright, "<(1)", [1], call3743);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3750 = callmethodChecked(this, "width", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3753 = callmethodChecked(this, "x", []);
                                                        var opresult3755 = callmethodChecked(call3753, "+(1)", [1], call3750);
                                                        var opresult3757 = callmethodChecked(opresult3755, "<(1)", [1], var_itemleft);
                                                        var opresult3759 = callmethodChecked(opresult3757, "||(1)", [1], opresult3746);
                                                        var opresult3761 = callmethodChecked(opresult3759, "||(1)", [1], opresult3740);
                                                        var opresult3763 = callmethodChecked(opresult3761, "||(1)", [1], opresult3729);
                                                        var var_disjoint = opresult3763;
                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], var_disjoint)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("value of def 'disjoint' is not of type Boolean"));
                                                        setLineNumber(1527);    // compilenode call
                                                        // call case 6: other requests
                                                        setLineNumber(1526);    // compilenode identifier
                                                        var call3765 = callmethodChecked(var_disjoint, "prefix!", [0]);
                                                        setLineNumber(1527);    // return value
                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3765)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method overlaps(_) does not have " + 
                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                        return call3765;
                                                      };
                                                      func3706.paramTypes = [];
                                                      func3706.paramTypes.push([]);
                                                      func3706.paramCounts = [1];
                                                      obj3642.methods["overlaps(1)"] = func3706;
                                                      func3706.definitionLine = 1519;
                                                      func3706.definitionModule = "objectdraw";
                                                      var func3766 = function(argcv) {    // method asString
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1532);    // compilenode string
                                                        var string3767 = new GraceString("");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3770 = callmethodChecked(this, "color", []);
                                                        var string3772 = new GraceString(", and color ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3775 = callmethodChecked(this, "width", []);
                                                        var string3777 = new GraceString(", width ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3780 = callmethodChecked(this, "height", []);
                                                        var string3782 = new GraceString("with height ");
                                                        var opresult3784 = callmethodChecked(string3782, "++(1)", [1], call3780);
                                                        var opresult3786 = callmethodChecked(opresult3784, "++(1)", [1], string3777);
                                                        var opresult3788 = callmethodChecked(opresult3786, "++(1)", [1], call3775);
                                                        var opresult3790 = callmethodChecked(opresult3788, "++(1)", [1], string3772);
                                                        var opresult3792 = callmethodChecked(opresult3790, "++(1)", [1], call3770);
                                                        var opresult3794 = callmethodChecked(opresult3792, "++(1)", [1], string3767);
                                                        setLineNumber(1531);    // compilenode string
                                                        var string3796 = new GraceString(") ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3799 = callmethodChecked(this, "y", []);
                                                        var string3801 = new GraceString(",");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3804 = callmethodChecked(this, "x", []);
                                                        var string3806 = new GraceString("drawable2D object at (");
                                                        var opresult3808 = callmethodChecked(string3806, "++(1)", [1], call3804);
                                                        var opresult3810 = callmethodChecked(opresult3808, "++(1)", [1], string3801);
                                                        var opresult3812 = callmethodChecked(opresult3810, "++(1)", [1], call3799);
                                                        var opresult3814 = callmethodChecked(opresult3812, "++(1)", [1], string3796);
                                                        var opresult3816 = callmethodChecked(opresult3814, "++(1)", [1], opresult3794);
                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3816)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method asString does not have " + 
                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                        return opresult3816;
                                                      };
                                                      func3766.paramCounts = [0];
                                                      obj3642.methods["asString"] = func3766;
                                                      func3766.definitionLine = 1530;
                                                      func3766.definitionModule = "objectdraw";
                                                      setLineNumber(1499);    // compilenode identifier
                                                      // call case 6: other requests
                                                      setLineNumber(0);    // compilenode member
                                                      // call case 3: self.outer request
                                                      var call3819 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3820 = callmethodChecked(call3819, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                      obj3642.superobj = call3820;
                                                      if (call3820.data) obj3642.data = call3820.data;
                                                      if (call3820.hasOwnProperty('_value'))
                                                          obj3642._value = call3820._value;
                                                      setLineNumber(1500);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3822 = callmethodChecked(var_dimension__39__, "x", []);
                                                      obj3642.data["theWidth"] = call3822;
                                                      var reader_objectdraw_theWidth3823 = function() {
                                                        return this.data["theWidth"];
                                                      };
                                                      obj3642.methods["theWidth"] = reader_objectdraw_theWidth3823;
                                                      obj3642.data["theWidth"] = call3822;
                                                      var writer_objectdraw_theWidth3823 = function(argcv, o) {
                                                        this.data["theWidth"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj3642.methods["theWidth:=(1)"] = writer_objectdraw_theWidth3823;
                                                      reader_objectdraw_theWidth3823.confidential = true;
                                                      writer_objectdraw_theWidth3823.confidential = true;
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3822)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("initial value of var 'theWidth' is not of type Number"));
                                                      obj3642.mutable = true;
                                                      setLineNumber(1504);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3825 = callmethodChecked(var_dimension__39__, "y", []);
                                                      obj3642.data["theHeight"] = call3825;
                                                      var reader_objectdraw_theHeight3826 = function() {
                                                        return this.data["theHeight"];
                                                      };
                                                      obj3642.methods["theHeight"] = reader_objectdraw_theHeight3826;
                                                      obj3642.data["theHeight"] = call3825;
                                                      var writer_objectdraw_theHeight3826 = function(argcv, o) {
                                                        this.data["theHeight"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj3642.methods["theHeight:=(1)"] = writer_objectdraw_theHeight3826;
                                                      reader_objectdraw_theHeight3826.confidential = true;
                                                      writer_objectdraw_theHeight3826.confidential = true;
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3825)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("initial value of var 'theHeight' is not of type Number"));
                                                      obj3642.mutable = true;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_3642.apply(inheritingObject, []);
                                                    return obj3642;
                                                    };
                                                    func3641.paramTypes = [];
                                                    func3641.paramTypes.push([]);
                                                    func3641.paramTypes.push([]);
                                                    func3641.paramTypes.push([]);
                                                    this.methods["drawable2DAt(1)size(1)on(1)$object(1)"] = func3641;
                                                  setLineNumber(1536);    // compilenode method
                                                  var func3827 = function(argcv) {    // method resizable2DAt(_)size(_)on(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_location__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_dimensions__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_canvas__39__ = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in resizable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    setLineNumber(1537);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("objectdraw");
                                                    setLineNumber(1536);    // compilenode object
                                                    var obj3828 = Grace_allocObject(null, "resizable2DAt(_)size(_)on(_)");
                                                    obj3828.definitionModule = "objectdraw";
                                                    obj3828.definitionLine = 1536;
                                                    obj3828.outer = this;
                                                    var reader_objectdraw_outer3829 = function() {
                                                      return this.outer;
                                                    };
                                                    obj3828.methods["outer"] = reader_objectdraw_outer3829;
                                                    var obj_init_3828 = function() {
                                                      var origSuperDepth = superDepth;
                                                      superDepth = obj3828;
                                                      var func3830 = function(argcv) {    // method width:=(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_w = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1543);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in width:= (arg list 1), which corresponds to parameter w, does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1544);    // compilenode identifier
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3832 = callmethodChecked(this, "theWidth:=(1)", [1], var_w);
                                                        setLineNumber(1545);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3834 = callmethodChecked(this, "notifyRedraw", []);
                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3834)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method width:=(_) does not have " + 
                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                        return call3834;
                                                      };
                                                      func3830.paramTypes = [];
                                                      func3830.paramTypes.push([type_Number, "w"]);
                                                      func3830.paramCounts = [1];
                                                      obj3828.methods["width:=(1)"] = func3830;
                                                      func3830.definitionLine = 1543;
                                                      func3830.definitionModule = "objectdraw";
                                                      var func3835 = function(argcv) {    // method height:=(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_h = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1549);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in height:= (arg list 1), which corresponds to parameter h, does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1550);    // compilenode identifier
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3837 = callmethodChecked(this, "theHeight:=(1)", [1], var_h);
                                                        setLineNumber(1551);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3839 = callmethodChecked(this, "notifyRedraw", []);
                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3839)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method height:=(_) does not have " + 
                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                        return call3839;
                                                      };
                                                      func3835.paramTypes = [];
                                                      func3835.paramTypes.push([type_Number, "h"]);
                                                      func3835.paramCounts = [1];
                                                      obj3828.methods["height:=(1)"] = func3835;
                                                      func3835.definitionLine = 1549;
                                                      func3835.definitionModule = "objectdraw";
                                                      var func3840 = function(argcv) {    // method size:=(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_dimensions = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1555);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in size:= (arg list 1), which corresponds to parameter dimensions, does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1556);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3843 = callmethodChecked(var_dimensions, "x", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3844 = callmethodChecked(this, "width:=(1)", [1], call3843);
                                                        setLineNumber(1557);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3847 = callmethodChecked(var_dimensions, "y", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3848 = callmethodChecked(this, "height:=(1)", [1], call3847);
                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3848)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method size:=(_) does not have " + 
                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                        return call3848;
                                                      };
                                                      func3840.paramTypes = [];
                                                      func3840.paramTypes.push([]);
                                                      func3840.paramCounts = [1];
                                                      obj3828.methods["size:=(1)"] = func3840;
                                                      func3840.definitionLine = 1555;
                                                      func3840.definitionModule = "objectdraw";
                                                      var func3849 = function(argcv) {    // method asString
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1563);    // compilenode string
                                                        var string3850 = new GraceString("");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3853 = callmethodChecked(this, "color", []);
                                                        var string3855 = new GraceString(", and color ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3858 = callmethodChecked(this, "width", []);
                                                        var string3860 = new GraceString(", width ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3863 = callmethodChecked(this, "height", []);
                                                        var string3865 = new GraceString("with height ");
                                                        var opresult3867 = callmethodChecked(string3865, "++(1)", [1], call3863);
                                                        var opresult3869 = callmethodChecked(opresult3867, "++(1)", [1], string3860);
                                                        var opresult3871 = callmethodChecked(opresult3869, "++(1)", [1], call3858);
                                                        var opresult3873 = callmethodChecked(opresult3871, "++(1)", [1], string3855);
                                                        var opresult3875 = callmethodChecked(opresult3873, "++(1)", [1], call3853);
                                                        var opresult3877 = callmethodChecked(opresult3875, "++(1)", [1], string3850);
                                                        setLineNumber(1562);    // compilenode string
                                                        var string3879 = new GraceString(") ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3882 = callmethodChecked(this, "y", []);
                                                        var string3884 = new GraceString(",");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3887 = callmethodChecked(this, "x", []);
                                                        var string3889 = new GraceString("Resizable2D object at (");
                                                        var opresult3891 = callmethodChecked(string3889, "++(1)", [1], call3887);
                                                        var opresult3893 = callmethodChecked(opresult3891, "++(1)", [1], string3884);
                                                        var opresult3895 = callmethodChecked(opresult3893, "++(1)", [1], call3882);
                                                        var opresult3897 = callmethodChecked(opresult3895, "++(1)", [1], string3879);
                                                        var opresult3899 = callmethodChecked(opresult3897, "++(1)", [1], opresult3877);
                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3899)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method asString does not have " + 
                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                        return opresult3899;
                                                      };
                                                      func3849.paramCounts = [0];
                                                      obj3828.methods["asString"] = func3849;
                                                      func3849.definitionLine = 1561;
                                                      func3849.definitionModule = "objectdraw";
                                                      setLineNumber(1540);    // compilenode identifier
                                                      // call case 6: other requests
                                                      setLineNumber(0);    // compilenode member
                                                      // call case 3: self.outer request
                                                      var call3902 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3903 = callmethodChecked(call3902, "drawable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                      obj3828.superobj = call3903;
                                                      if (call3903.data) obj3828.data = call3903.data;
                                                      if (call3903.hasOwnProperty('_value'))
                                                          obj3828._value = call3903._value;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_3828.apply(obj3828, []);
                                                    setLineNumber(1536);    // return value
                                                    if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj3828)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method resizable2DAt(_)size(_)on(_) does not have " + 
                                                                callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                    return obj3828;
                                                  };
                                                  func3827.paramTypes = [];
                                                  func3827.paramTypes.push([]);
                                                  func3827.paramTypes.push([]);
                                                  func3827.paramTypes.push([]);
                                                  func3827.paramCounts = [1, 1, 1];
                                                  this.methods["resizable2DAt(1)size(1)on(1)"] = func3827;
                                                  func3827.definitionLine = 1536;
                                                  func3827.definitionModule = "objectdraw";
                                                    var func3904 = function(argcv) {    // method resizable2DAt(_)size(_)on(_)$object(_)
                                                      var curarg = 1;
                                                      var var_location__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_dimensions__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_canvas__39__ = arguments[curarg];
                                                      curarg++;
                                                      var inheritingObject = arguments[curarg++];
                                                      // Start argument processing
                                                      curarg = 1;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in resizable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      setLineNumber(1537);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument processing
                                                      setModuleName("objectdraw");
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var obj3905 = Grace_allocObject(null, "resizable2DAt(1)size(1)on(1)");
                                                      obj3905.definitionModule = "objectdraw";
                                                      obj3905.definitionLine = 1536;
                                                      var inho3905 = inheritingObject;
                                                      while (inho3905.superobj) inho3905 = inho3905.superobj;
                                                      inho3905.superobj = obj3905;
                                                      obj3905.data = inheritingObject.data;
                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                        obj3905._value = inheritingObject._value;
                                                      obj3905.outer = this;
                                                      var reader_objectdraw_outer3906 = function() {
                                                        return this.outer;
                                                      };
                                                      obj3905.methods["outer"] = reader_objectdraw_outer3906;
                                                      var obj_init_3905 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj3905;
                                                        var func3907 = function(argcv) {    // method width:=(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_w = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1543);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in width:= (arg list 1), which corresponds to parameter w, does not have " + 
                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1544);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3909 = callmethodChecked(this, "theWidth:=(1)", [1], var_w);
                                                          setLineNumber(1545);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3911 = callmethodChecked(this, "notifyRedraw", []);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3911)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method width:=(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call3911;
                                                        };
                                                        func3907.paramTypes = [];
                                                        func3907.paramTypes.push([type_Number, "w"]);
                                                        func3907.paramCounts = [1];
                                                        obj3905.methods["width:=(1)"] = func3907;
                                                        func3907.definitionLine = 1543;
                                                        func3907.definitionModule = "objectdraw";
                                                        var func3912 = function(argcv) {    // method height:=(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_h = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1549);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in height:= (arg list 1), which corresponds to parameter h, does not have " + 
                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1550);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3914 = callmethodChecked(this, "theHeight:=(1)", [1], var_h);
                                                          setLineNumber(1551);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3916 = callmethodChecked(this, "notifyRedraw", []);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3916)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method height:=(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call3916;
                                                        };
                                                        func3912.paramTypes = [];
                                                        func3912.paramTypes.push([type_Number, "h"]);
                                                        func3912.paramCounts = [1];
                                                        obj3905.methods["height:=(1)"] = func3912;
                                                        func3912.definitionLine = 1549;
                                                        func3912.definitionModule = "objectdraw";
                                                        var func3917 = function(argcv) {    // method size:=(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_dimensions = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1555);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in size:= (arg list 1), which corresponds to parameter dimensions, does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1556);    // compilenode member
                                                          // call case 6: other requests
                                                          var call3920 = callmethodChecked(var_dimensions, "x", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3921 = callmethodChecked(this, "width:=(1)", [1], call3920);
                                                          setLineNumber(1557);    // compilenode member
                                                          // call case 6: other requests
                                                          var call3924 = callmethodChecked(var_dimensions, "y", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3925 = callmethodChecked(this, "height:=(1)", [1], call3924);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3925)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method size:=(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call3925;
                                                        };
                                                        func3917.paramTypes = [];
                                                        func3917.paramTypes.push([]);
                                                        func3917.paramCounts = [1];
                                                        obj3905.methods["size:=(1)"] = func3917;
                                                        func3917.definitionLine = 1555;
                                                        func3917.definitionModule = "objectdraw";
                                                        var func3926 = function(argcv) {    // method asString
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1563);    // compilenode string
                                                          var string3927 = new GraceString("");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3930 = callmethodChecked(this, "color", []);
                                                          var string3932 = new GraceString(", and color ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3935 = callmethodChecked(this, "width", []);
                                                          var string3937 = new GraceString(", width ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3940 = callmethodChecked(this, "height", []);
                                                          var string3942 = new GraceString("with height ");
                                                          var opresult3944 = callmethodChecked(string3942, "++(1)", [1], call3940);
                                                          var opresult3946 = callmethodChecked(opresult3944, "++(1)", [1], string3937);
                                                          var opresult3948 = callmethodChecked(opresult3946, "++(1)", [1], call3935);
                                                          var opresult3950 = callmethodChecked(opresult3948, "++(1)", [1], string3932);
                                                          var opresult3952 = callmethodChecked(opresult3950, "++(1)", [1], call3930);
                                                          var opresult3954 = callmethodChecked(opresult3952, "++(1)", [1], string3927);
                                                          setLineNumber(1562);    // compilenode string
                                                          var string3956 = new GraceString(") ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3959 = callmethodChecked(this, "y", []);
                                                          var string3961 = new GraceString(",");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3964 = callmethodChecked(this, "x", []);
                                                          var string3966 = new GraceString("Resizable2D object at (");
                                                          var opresult3968 = callmethodChecked(string3966, "++(1)", [1], call3964);
                                                          var opresult3970 = callmethodChecked(opresult3968, "++(1)", [1], string3961);
                                                          var opresult3972 = callmethodChecked(opresult3970, "++(1)", [1], call3959);
                                                          var opresult3974 = callmethodChecked(opresult3972, "++(1)", [1], string3956);
                                                          var opresult3976 = callmethodChecked(opresult3974, "++(1)", [1], opresult3954);
                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3976)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method asString does not have " + 
                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                          return opresult3976;
                                                        };
                                                        func3926.paramCounts = [0];
                                                        obj3905.methods["asString"] = func3926;
                                                        func3926.definitionLine = 1561;
                                                        func3926.definitionModule = "objectdraw";
                                                        setLineNumber(1540);    // compilenode identifier
                                                        // call case 6: other requests
                                                        setLineNumber(0);    // compilenode member
                                                        // call case 3: self.outer request
                                                        var call3979 = callmethodChecked(superDepth, "outer", [0]);
                                                        onSelf = true;
                                                        var call3980 = callmethodChecked(call3979, "drawable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                        obj3905.superobj = call3980;
                                                        if (call3980.data) obj3905.data = call3980.data;
                                                        if (call3980.hasOwnProperty('_value'))
                                                            obj3905._value = call3980._value;
                                                        superDepth = origSuperDepth;
                                                      };
                                                      obj_init_3905.apply(inheritingObject, []);
                                                      return obj3905;
                                                      };
                                                      func3904.paramTypes = [];
                                                      func3904.paramTypes.push([]);
                                                      func3904.paramTypes.push([]);
                                                      func3904.paramTypes.push([]);
                                                      this.methods["resizable2DAt(1)size(1)on(1)$object(1)"] = func3904;
                                                    setLineNumber(1567);    // compilenode method
                                                    var func3981 = function(argcv) {    // method framedRectAt(_)size(_)on(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_location__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_dimensions__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_canvas__39__ = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in framedRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      setLineNumber(1568);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("objectdraw");
                                                      setLineNumber(1567);    // compilenode object
                                                      var obj3982 = Grace_allocObject(null, "framedRectAt(_)size(_)on(_)");
                                                      obj3982.definitionModule = "objectdraw";
                                                      obj3982.definitionLine = 1567;
                                                      obj3982.outer = this;
                                                      var reader_objectdraw_outer3983 = function() {
                                                        return this.outer;
                                                      };
                                                      obj3982.methods["outer"] = reader_objectdraw_outer3983;
                                                      var obj_init_3982 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj3982;
                                                        var func3984 = function(argcv) {    // method draw(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_ctx = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1576);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                      callmethod(var_Foreign, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1577);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3986 = callmethodChecked(this, "color", []);
                                                          var var_col = call3986;
                                                          setLineNumber(1578);    // compilenode member
                                                          // call case 6: other requests
                                                          var call3988 = callmethodChecked(var_ctx, "save", []);
                                                          setLineNumber(1579);    // compilenode string
                                                          var string3990 = new GraceString(")");
                                                          // call case 6: other requests
                                                          var call3993 = callmethodChecked(var_col, "blue", []);
                                                          var string3995 = new GraceString(", ");
                                                          // call case 6: other requests
                                                          var call3998 = callmethodChecked(var_col, "green", []);
                                                          var string4000 = new GraceString(", ");
                                                          // call case 6: other requests
                                                          var call4003 = callmethodChecked(var_col, "red", []);
                                                          var string4005 = new GraceString("rgb(");
                                                          var opresult4007 = callmethodChecked(string4005, "++(1)", [1], call4003);
                                                          var opresult4009 = callmethodChecked(opresult4007, "++(1)", [1], string4000);
                                                          var opresult4011 = callmethodChecked(opresult4009, "++(1)", [1], call3998);
                                                          var opresult4013 = callmethodChecked(opresult4011, "++(1)", [1], string3995);
                                                          var opresult4015 = callmethodChecked(opresult4013, "++(1)", [1], call3993);
                                                          var opresult4017 = callmethodChecked(opresult4015, "++(1)", [1], string3990);
                                                          // call case 6: other requests
                                                          var call4018 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4017);
                                                          setLineNumber(1580);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4021 = callmethodChecked(this, "x", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4023 = callmethodChecked(this, "y", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4025 = callmethodChecked(this, "width", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4027 = callmethodChecked(this, "height", []);
                                                          // call case 6: other requests
                                                          var call4028 = callmethodChecked(var_ctx, "strokeRect(4)", [4], call4021, call4023, call4025, call4027);
                                                          setLineNumber(1581);    // compilenode member
                                                          // call case 6: other requests
                                                          var call4030 = callmethodChecked(var_ctx, "restore", []);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4030)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method draw(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call4030;
                                                        };
                                                        func3984.paramTypes = [];
                                                        func3984.paramTypes.push([]);
                                                        func3984.paramCounts = [1];
                                                        obj3982.methods["draw(1)"] = func3984;
                                                        func3984.definitionLine = 1576;
                                                        func3984.definitionModule = "objectdraw";
                                                        var func4031 = function(argcv) {    // method asString
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1587);    // compilenode string
                                                          var string4032 = new GraceString("");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4035 = callmethodChecked(this, "color", []);
                                                          var string4037 = new GraceString(", and color ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4040 = callmethodChecked(this, "width", []);
                                                          var string4042 = new GraceString(", width ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4045 = callmethodChecked(this, "height", []);
                                                          var string4047 = new GraceString("with height ");
                                                          var opresult4049 = callmethodChecked(string4047, "++(1)", [1], call4045);
                                                          var opresult4051 = callmethodChecked(opresult4049, "++(1)", [1], string4042);
                                                          var opresult4053 = callmethodChecked(opresult4051, "++(1)", [1], call4040);
                                                          var opresult4055 = callmethodChecked(opresult4053, "++(1)", [1], string4037);
                                                          var opresult4057 = callmethodChecked(opresult4055, "++(1)", [1], call4035);
                                                          var opresult4059 = callmethodChecked(opresult4057, "++(1)", [1], string4032);
                                                          setLineNumber(1586);    // compilenode string
                                                          var string4061 = new GraceString(") ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4064 = callmethodChecked(this, "y", []);
                                                          var string4066 = new GraceString(",");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4069 = callmethodChecked(this, "x", []);
                                                          var string4071 = new GraceString("FramedRect at (");
                                                          var opresult4073 = callmethodChecked(string4071, "++(1)", [1], call4069);
                                                          var opresult4075 = callmethodChecked(opresult4073, "++(1)", [1], string4066);
                                                          var opresult4077 = callmethodChecked(opresult4075, "++(1)", [1], call4064);
                                                          var opresult4079 = callmethodChecked(opresult4077, "++(1)", [1], string4061);
                                                          var opresult4081 = callmethodChecked(opresult4079, "++(1)", [1], opresult4059);
                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4081)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method asString does not have " + 
                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                          return opresult4081;
                                                        };
                                                        func4031.paramCounts = [0];
                                                        obj3982.methods["asString"] = func4031;
                                                        func4031.definitionLine = 1585;
                                                        func4031.definitionModule = "objectdraw";
                                                        setLineNumber(1572);    // compilenode identifier
                                                        // call case 6: other requests
                                                        setLineNumber(0);    // compilenode member
                                                        // call case 3: self.outer request
                                                        var call4084 = callmethodChecked(superDepth, "outer", [0]);
                                                        onSelf = true;
                                                        var call4085 = callmethodChecked(call4084, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                        obj3982.superobj = call4085;
                                                        if (call4085.data) obj3982.data = call4085.data;
                                                        if (call4085.hasOwnProperty('_value'))
                                                            obj3982._value = call4085._value;
                                                        setLineNumber(1573);    // compilenode identifier
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call4087 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                        superDepth = origSuperDepth;
                                                      };
                                                      obj_init_3982.apply(obj3982, []);
                                                      setLineNumber(1567);    // return value
                                                      if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj3982)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method framedRectAt(_)size(_)on(_) does not have " + 
                                                                  callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                      return obj3982;
                                                    };
                                                    func3981.paramTypes = [];
                                                    func3981.paramTypes.push([]);
                                                    func3981.paramTypes.push([]);
                                                    func3981.paramTypes.push([]);
                                                    func3981.paramCounts = [1, 1, 1];
                                                    this.methods["framedRectAt(1)size(1)on(1)"] = func3981;
                                                    func3981.definitionLine = 1567;
                                                    func3981.definitionModule = "objectdraw";
                                                      var func4088 = function(argcv) {    // method framedRectAt(_)size(_)on(_)$object(_)
                                                        var curarg = 1;
                                                        var var_location__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_dimensions__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_canvas__39__ = arguments[curarg];
                                                        curarg++;
                                                        var inheritingObject = arguments[curarg++];
                                                        // Start argument processing
                                                        curarg = 1;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in framedRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        setLineNumber(1568);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument processing
                                                        setModuleName("objectdraw");
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var obj4089 = Grace_allocObject(null, "framedRectAt(1)size(1)on(1)");
                                                        obj4089.definitionModule = "objectdraw";
                                                        obj4089.definitionLine = 1567;
                                                        var inho4089 = inheritingObject;
                                                        while (inho4089.superobj) inho4089 = inho4089.superobj;
                                                        inho4089.superobj = obj4089;
                                                        obj4089.data = inheritingObject.data;
                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                          obj4089._value = inheritingObject._value;
                                                        obj4089.outer = this;
                                                        var reader_objectdraw_outer4090 = function() {
                                                          return this.outer;
                                                        };
                                                        obj4089.methods["outer"] = reader_objectdraw_outer4090;
                                                        var obj_init_4089 = function() {
                                                          var origSuperDepth = superDepth;
                                                          superDepth = obj4089;
                                                          var func4091 = function(argcv) {    // method draw(_)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_ctx = arguments[curarg];
                                                            curarg++;
                                                            // Start argument checking
                                                            curarg = 1;
                                                            setLineNumber(1576);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                        callmethod(var_Foreign, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument checking
                                                            setModuleName("objectdraw");
                                                            setLineNumber(1577);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4093 = callmethodChecked(this, "color", []);
                                                            var var_col = call4093;
                                                            setLineNumber(1578);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4095 = callmethodChecked(var_ctx, "save", []);
                                                            setLineNumber(1579);    // compilenode string
                                                            var string4097 = new GraceString(")");
                                                            // call case 6: other requests
                                                            var call4100 = callmethodChecked(var_col, "blue", []);
                                                            var string4102 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4105 = callmethodChecked(var_col, "green", []);
                                                            var string4107 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4110 = callmethodChecked(var_col, "red", []);
                                                            var string4112 = new GraceString("rgb(");
                                                            var opresult4114 = callmethodChecked(string4112, "++(1)", [1], call4110);
                                                            var opresult4116 = callmethodChecked(opresult4114, "++(1)", [1], string4107);
                                                            var opresult4118 = callmethodChecked(opresult4116, "++(1)", [1], call4105);
                                                            var opresult4120 = callmethodChecked(opresult4118, "++(1)", [1], string4102);
                                                            var opresult4122 = callmethodChecked(opresult4120, "++(1)", [1], call4100);
                                                            var opresult4124 = callmethodChecked(opresult4122, "++(1)", [1], string4097);
                                                            // call case 6: other requests
                                                            var call4125 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4124);
                                                            setLineNumber(1580);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4128 = callmethodChecked(this, "x", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4130 = callmethodChecked(this, "y", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4132 = callmethodChecked(this, "width", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4134 = callmethodChecked(this, "height", []);
                                                            // call case 6: other requests
                                                            var call4135 = callmethodChecked(var_ctx, "strokeRect(4)", [4], call4128, call4130, call4132, call4134);
                                                            setLineNumber(1581);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4137 = callmethodChecked(var_ctx, "restore", []);
                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4137)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method draw(_) does not have " + 
                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                            return call4137;
                                                          };
                                                          func4091.paramTypes = [];
                                                          func4091.paramTypes.push([]);
                                                          func4091.paramCounts = [1];
                                                          obj4089.methods["draw(1)"] = func4091;
                                                          func4091.definitionLine = 1576;
                                                          func4091.definitionModule = "objectdraw";
                                                          var func4138 = function(argcv) {    // method asString
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            setModuleName("objectdraw");
                                                            setLineNumber(1587);    // compilenode string
                                                            var string4139 = new GraceString("");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4142 = callmethodChecked(this, "color", []);
                                                            var string4144 = new GraceString(", and color ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4147 = callmethodChecked(this, "width", []);
                                                            var string4149 = new GraceString(", width ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4152 = callmethodChecked(this, "height", []);
                                                            var string4154 = new GraceString("with height ");
                                                            var opresult4156 = callmethodChecked(string4154, "++(1)", [1], call4152);
                                                            var opresult4158 = callmethodChecked(opresult4156, "++(1)", [1], string4149);
                                                            var opresult4160 = callmethodChecked(opresult4158, "++(1)", [1], call4147);
                                                            var opresult4162 = callmethodChecked(opresult4160, "++(1)", [1], string4144);
                                                            var opresult4164 = callmethodChecked(opresult4162, "++(1)", [1], call4142);
                                                            var opresult4166 = callmethodChecked(opresult4164, "++(1)", [1], string4139);
                                                            setLineNumber(1586);    // compilenode string
                                                            var string4168 = new GraceString(") ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4171 = callmethodChecked(this, "y", []);
                                                            var string4173 = new GraceString(",");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4176 = callmethodChecked(this, "x", []);
                                                            var string4178 = new GraceString("FramedRect at (");
                                                            var opresult4180 = callmethodChecked(string4178, "++(1)", [1], call4176);
                                                            var opresult4182 = callmethodChecked(opresult4180, "++(1)", [1], string4173);
                                                            var opresult4184 = callmethodChecked(opresult4182, "++(1)", [1], call4171);
                                                            var opresult4186 = callmethodChecked(opresult4184, "++(1)", [1], string4168);
                                                            var opresult4188 = callmethodChecked(opresult4186, "++(1)", [1], opresult4166);
                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4188)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method asString does not have " + 
                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                            return opresult4188;
                                                          };
                                                          func4138.paramCounts = [0];
                                                          obj4089.methods["asString"] = func4138;
                                                          func4138.definitionLine = 1585;
                                                          func4138.definitionModule = "objectdraw";
                                                          setLineNumber(1572);    // compilenode identifier
                                                          // call case 6: other requests
                                                          setLineNumber(0);    // compilenode member
                                                          // call case 3: self.outer request
                                                          var call4191 = callmethodChecked(superDepth, "outer", [0]);
                                                          onSelf = true;
                                                          var call4192 = callmethodChecked(call4191, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                          obj4089.superobj = call4192;
                                                          if (call4192.data) obj4089.data = call4192.data;
                                                          if (call4192.hasOwnProperty('_value'))
                                                              obj4089._value = call4192._value;
                                                          setLineNumber(1573);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4194 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                          superDepth = origSuperDepth;
                                                        };
                                                        obj_init_4089.apply(inheritingObject, []);
                                                        return obj4089;
                                                        };
                                                        func4088.paramTypes = [];
                                                        func4088.paramTypes.push([]);
                                                        func4088.paramTypes.push([]);
                                                        func4088.paramTypes.push([]);
                                                        this.methods["framedRectAt(1)size(1)on(1)$object(1)"] = func4088;
                                                      setLineNumber(1591);    // compilenode method
                                                      var func4195 = function(argcv) {    // method filledRectAt(_)size(_)on(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_location__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_dimensions__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_canvas__39__ = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in filledRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        setLineNumber(1592);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("objectdraw");
                                                        setLineNumber(1591);    // compilenode object
                                                        var obj4196 = Grace_allocObject(null, "filledRectAt(_)size(_)on(_)");
                                                        obj4196.definitionModule = "objectdraw";
                                                        obj4196.definitionLine = 1591;
                                                        obj4196.outer = this;
                                                        var reader_objectdraw_outer4197 = function() {
                                                          return this.outer;
                                                        };
                                                        obj4196.methods["outer"] = reader_objectdraw_outer4197;
                                                        var obj_init_4196 = function() {
                                                          var origSuperDepth = superDepth;
                                                          superDepth = obj4196;
                                                          var func4198 = function(argcv) {    // method draw(_)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_ctx = arguments[curarg];
                                                            curarg++;
                                                            // Start argument checking
                                                            curarg = 1;
                                                            setLineNumber(1601);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                        callmethod(var_Foreign, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument checking
                                                            setModuleName("objectdraw");
                                                            setLineNumber(1602);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4200 = callmethodChecked(this, "color", []);
                                                            var var_col = call4200;
                                                            setLineNumber(1603);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4202 = callmethodChecked(var_ctx, "save", []);
                                                            setLineNumber(1604);    // compilenode string
                                                            var string4204 = new GraceString(")");
                                                            // call case 6: other requests
                                                            var call4207 = callmethodChecked(var_col, "blue", []);
                                                            var string4209 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4212 = callmethodChecked(var_col, "green", []);
                                                            var string4214 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4217 = callmethodChecked(var_col, "red", []);
                                                            var string4219 = new GraceString("rgb(");
                                                            var opresult4221 = callmethodChecked(string4219, "++(1)", [1], call4217);
                                                            var opresult4223 = callmethodChecked(opresult4221, "++(1)", [1], string4214);
                                                            var opresult4225 = callmethodChecked(opresult4223, "++(1)", [1], call4212);
                                                            var opresult4227 = callmethodChecked(opresult4225, "++(1)", [1], string4209);
                                                            var opresult4229 = callmethodChecked(opresult4227, "++(1)", [1], call4207);
                                                            var opresult4231 = callmethodChecked(opresult4229, "++(1)", [1], string4204);
                                                            // call case 6: other requests
                                                            var call4232 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4231);
                                                            setLineNumber(1605);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4235 = callmethodChecked(this, "x", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4237 = callmethodChecked(this, "y", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4239 = callmethodChecked(this, "width", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4241 = callmethodChecked(this, "height", []);
                                                            // call case 6: other requests
                                                            var call4242 = callmethodChecked(var_ctx, "fillRect(4)", [4], call4235, call4237, call4239, call4241);
                                                            setLineNumber(1606);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4244 = callmethodChecked(var_ctx, "restore", []);
                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4244)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method draw(_) does not have " + 
                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                            return call4244;
                                                          };
                                                          func4198.paramTypes = [];
                                                          func4198.paramTypes.push([]);
                                                          func4198.paramCounts = [1];
                                                          obj4196.methods["draw(1)"] = func4198;
                                                          func4198.definitionLine = 1601;
                                                          func4198.definitionModule = "objectdraw";
                                                          var func4245 = function(argcv) {    // method asString
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            setModuleName("objectdraw");
                                                            setLineNumber(1611);    // compilenode string
                                                            var string4246 = new GraceString("");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4249 = callmethodChecked(this, "y", []);
                                                            var string4251 = new GraceString(",");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4254 = callmethodChecked(this, "x", []);
                                                            var string4256 = new GraceString("called asString with ");
                                                            var opresult4258 = callmethodChecked(string4256, "++(1)", [1], call4254);
                                                            var opresult4260 = callmethodChecked(opresult4258, "++(1)", [1], string4251);
                                                            var opresult4262 = callmethodChecked(opresult4260, "++(1)", [1], call4249);
                                                            var opresult4264 = callmethodChecked(opresult4262, "++(1)", [1], string4246);
                                                            var call4265 = Grace_print(opresult4264);
                                                            setLineNumber(1613);    // compilenode string
                                                            var string4266 = new GraceString("");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4269 = callmethodChecked(this, "color", []);
                                                            var string4271 = new GraceString(", and color ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4274 = callmethodChecked(this, "width", []);
                                                            var string4276 = new GraceString(", width ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4279 = callmethodChecked(this, "height", []);
                                                            var string4281 = new GraceString("with height ");
                                                            var opresult4283 = callmethodChecked(string4281, "++(1)", [1], call4279);
                                                            var opresult4285 = callmethodChecked(opresult4283, "++(1)", [1], string4276);
                                                            var opresult4287 = callmethodChecked(opresult4285, "++(1)", [1], call4274);
                                                            var opresult4289 = callmethodChecked(opresult4287, "++(1)", [1], string4271);
                                                            var opresult4291 = callmethodChecked(opresult4289, "++(1)", [1], call4269);
                                                            var opresult4293 = callmethodChecked(opresult4291, "++(1)", [1], string4266);
                                                            setLineNumber(1612);    // compilenode string
                                                            var string4295 = new GraceString(") ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4298 = callmethodChecked(this, "y", []);
                                                            var string4300 = new GraceString(", ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4303 = callmethodChecked(this, "x", []);
                                                            var string4305 = new GraceString("FilledRect at (");
                                                            var opresult4307 = callmethodChecked(string4305, "++(1)", [1], call4303);
                                                            var opresult4309 = callmethodChecked(opresult4307, "++(1)", [1], string4300);
                                                            var opresult4311 = callmethodChecked(opresult4309, "++(1)", [1], call4298);
                                                            var opresult4313 = callmethodChecked(opresult4311, "++(1)", [1], string4295);
                                                            var opresult4315 = callmethodChecked(opresult4313, "++(1)", [1], opresult4293);
                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4315)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method asString does not have " + 
                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                            return opresult4315;
                                                          };
                                                          func4245.paramCounts = [0];
                                                          obj4196.methods["asString"] = func4245;
                                                          func4245.definitionLine = 1610;
                                                          func4245.definitionModule = "objectdraw";
                                                          setLineNumber(1596);    // compilenode identifier
                                                          // call case 6: other requests
                                                          setLineNumber(0);    // compilenode member
                                                          // call case 3: self.outer request
                                                          var call4318 = callmethodChecked(superDepth, "outer", [0]);
                                                          onSelf = true;
                                                          var call4319 = callmethodChecked(call4318, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                          obj4196.superobj = call4319;
                                                          if (call4319.data) obj4196.data = call4319.data;
                                                          if (call4319.hasOwnProperty('_value'))
                                                              obj4196._value = call4319._value;
                                                          setLineNumber(1598);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4321 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                          superDepth = origSuperDepth;
                                                        };
                                                        obj_init_4196.apply(obj4196, []);
                                                        setLineNumber(1591);    // return value
                                                        if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj4196)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method filledRectAt(_)size(_)on(_) does not have " + 
                                                                    callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                        return obj4196;
                                                      };
                                                      func4195.paramTypes = [];
                                                      func4195.paramTypes.push([]);
                                                      func4195.paramTypes.push([]);
                                                      func4195.paramTypes.push([]);
                                                      func4195.paramCounts = [1, 1, 1];
                                                      this.methods["filledRectAt(1)size(1)on(1)"] = func4195;
                                                      func4195.definitionLine = 1591;
                                                      func4195.definitionModule = "objectdraw";
                                                        var func4322 = function(argcv) {    // method filledRectAt(_)size(_)on(_)$object(_)
                                                          var curarg = 1;
                                                          var var_location__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_dimensions__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_canvas__39__ = arguments[curarg];
                                                          curarg++;
                                                          var inheritingObject = arguments[curarg++];
                                                          // Start argument processing
                                                          curarg = 1;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in filledRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          setLineNumber(1592);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                      callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument processing
                                                          setModuleName("objectdraw");
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var obj4323 = Grace_allocObject(null, "filledRectAt(1)size(1)on(1)");
                                                          obj4323.definitionModule = "objectdraw";
                                                          obj4323.definitionLine = 1591;
                                                          var inho4323 = inheritingObject;
                                                          while (inho4323.superobj) inho4323 = inho4323.superobj;
                                                          inho4323.superobj = obj4323;
                                                          obj4323.data = inheritingObject.data;
                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                            obj4323._value = inheritingObject._value;
                                                          obj4323.outer = this;
                                                          var reader_objectdraw_outer4324 = function() {
                                                            return this.outer;
                                                          };
                                                          obj4323.methods["outer"] = reader_objectdraw_outer4324;
                                                          var obj_init_4323 = function() {
                                                            var origSuperDepth = superDepth;
                                                            superDepth = obj4323;
                                                            var func4325 = function(argcv) {    // method draw(_)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_ctx = arguments[curarg];
                                                              curarg++;
                                                              // Start argument checking
                                                              curarg = 1;
                                                              setLineNumber(1601);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument checking
                                                              setModuleName("objectdraw");
                                                              setLineNumber(1602);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4327 = callmethodChecked(this, "color", []);
                                                              var var_col = call4327;
                                                              setLineNumber(1603);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4329 = callmethodChecked(var_ctx, "save", []);
                                                              setLineNumber(1604);    // compilenode string
                                                              var string4331 = new GraceString(")");
                                                              // call case 6: other requests
                                                              var call4334 = callmethodChecked(var_col, "blue", []);
                                                              var string4336 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4339 = callmethodChecked(var_col, "green", []);
                                                              var string4341 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4344 = callmethodChecked(var_col, "red", []);
                                                              var string4346 = new GraceString("rgb(");
                                                              var opresult4348 = callmethodChecked(string4346, "++(1)", [1], call4344);
                                                              var opresult4350 = callmethodChecked(opresult4348, "++(1)", [1], string4341);
                                                              var opresult4352 = callmethodChecked(opresult4350, "++(1)", [1], call4339);
                                                              var opresult4354 = callmethodChecked(opresult4352, "++(1)", [1], string4336);
                                                              var opresult4356 = callmethodChecked(opresult4354, "++(1)", [1], call4334);
                                                              var opresult4358 = callmethodChecked(opresult4356, "++(1)", [1], string4331);
                                                              // call case 6: other requests
                                                              var call4359 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4358);
                                                              setLineNumber(1605);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4362 = callmethodChecked(this, "x", []);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4364 = callmethodChecked(this, "y", []);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4366 = callmethodChecked(this, "width", []);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4368 = callmethodChecked(this, "height", []);
                                                              // call case 6: other requests
                                                              var call4369 = callmethodChecked(var_ctx, "fillRect(4)", [4], call4362, call4364, call4366, call4368);
                                                              setLineNumber(1606);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4371 = callmethodChecked(var_ctx, "restore", []);
                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4371)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method draw(_) does not have " + 
                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                              return call4371;
                                                            };
                                                            func4325.paramTypes = [];
                                                            func4325.paramTypes.push([]);
                                                            func4325.paramCounts = [1];
                                                            obj4323.methods["draw(1)"] = func4325;
                                                            func4325.definitionLine = 1601;
                                                            func4325.definitionModule = "objectdraw";
                                                            var func4372 = function(argcv) {    // method asString
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              setModuleName("objectdraw");
                                                              setLineNumber(1611);    // compilenode string
                                                              var string4373 = new GraceString("");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4376 = callmethodChecked(this, "y", []);
                                                              var string4378 = new GraceString(",");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4381 = callmethodChecked(this, "x", []);
                                                              var string4383 = new GraceString("called asString with ");
                                                              var opresult4385 = callmethodChecked(string4383, "++(1)", [1], call4381);
                                                              var opresult4387 = callmethodChecked(opresult4385, "++(1)", [1], string4378);
                                                              var opresult4389 = callmethodChecked(opresult4387, "++(1)", [1], call4376);
                                                              var opresult4391 = callmethodChecked(opresult4389, "++(1)", [1], string4373);
                                                              var call4392 = Grace_print(opresult4391);
                                                              setLineNumber(1613);    // compilenode string
                                                              var string4393 = new GraceString("");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4396 = callmethodChecked(this, "color", []);
                                                              var string4398 = new GraceString(", and color ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4401 = callmethodChecked(this, "width", []);
                                                              var string4403 = new GraceString(", width ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4406 = callmethodChecked(this, "height", []);
                                                              var string4408 = new GraceString("with height ");
                                                              var opresult4410 = callmethodChecked(string4408, "++(1)", [1], call4406);
                                                              var opresult4412 = callmethodChecked(opresult4410, "++(1)", [1], string4403);
                                                              var opresult4414 = callmethodChecked(opresult4412, "++(1)", [1], call4401);
                                                              var opresult4416 = callmethodChecked(opresult4414, "++(1)", [1], string4398);
                                                              var opresult4418 = callmethodChecked(opresult4416, "++(1)", [1], call4396);
                                                              var opresult4420 = callmethodChecked(opresult4418, "++(1)", [1], string4393);
                                                              setLineNumber(1612);    // compilenode string
                                                              var string4422 = new GraceString(") ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4425 = callmethodChecked(this, "y", []);
                                                              var string4427 = new GraceString(", ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4430 = callmethodChecked(this, "x", []);
                                                              var string4432 = new GraceString("FilledRect at (");
                                                              var opresult4434 = callmethodChecked(string4432, "++(1)", [1], call4430);
                                                              var opresult4436 = callmethodChecked(opresult4434, "++(1)", [1], string4427);
                                                              var opresult4438 = callmethodChecked(opresult4436, "++(1)", [1], call4425);
                                                              var opresult4440 = callmethodChecked(opresult4438, "++(1)", [1], string4422);
                                                              var opresult4442 = callmethodChecked(opresult4440, "++(1)", [1], opresult4420);
                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4442)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method asString does not have " + 
                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                              return opresult4442;
                                                            };
                                                            func4372.paramCounts = [0];
                                                            obj4323.methods["asString"] = func4372;
                                                            func4372.definitionLine = 1610;
                                                            func4372.definitionModule = "objectdraw";
                                                            setLineNumber(1596);    // compilenode identifier
                                                            // call case 6: other requests
                                                            setLineNumber(0);    // compilenode member
                                                            // call case 3: self.outer request
                                                            var call4445 = callmethodChecked(superDepth, "outer", [0]);
                                                            onSelf = true;
                                                            var call4446 = callmethodChecked(call4445, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                            obj4323.superobj = call4446;
                                                            if (call4446.data) obj4323.data = call4446.data;
                                                            if (call4446.hasOwnProperty('_value'))
                                                                obj4323._value = call4446._value;
                                                            setLineNumber(1598);    // compilenode identifier
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4448 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                            superDepth = origSuperDepth;
                                                          };
                                                          obj_init_4323.apply(inheritingObject, []);
                                                          return obj4323;
                                                          };
                                                          func4322.paramTypes = [];
                                                          func4322.paramTypes.push([]);
                                                          func4322.paramTypes.push([]);
                                                          func4322.paramTypes.push([]);
                                                          this.methods["filledRectAt(1)size(1)on(1)$object(1)"] = func4322;
                                                        setLineNumber(1618);    // compilenode method
                                                        var func4449 = function(argcv) {    // method framedOvalAt(_)size(_)on(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_location__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_dimensions__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_canvas__39__ = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in framedOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          setLineNumber(1619);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                      callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("objectdraw");
                                                          setLineNumber(1618);    // compilenode object
                                                          var obj4450 = Grace_allocObject(null, "framedOvalAt(_)size(_)on(_)");
                                                          obj4450.definitionModule = "objectdraw";
                                                          obj4450.definitionLine = 1618;
                                                          obj4450.outer = this;
                                                          var reader_objectdraw_outer4451 = function() {
                                                            return this.outer;
                                                          };
                                                          obj4450.methods["outer"] = reader_objectdraw_outer4451;
                                                          var obj_init_4450 = function() {
                                                            var origSuperDepth = superDepth;
                                                            superDepth = obj4450;
                                                            var func4452 = function(argcv) {    // method draw(_)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_ctx = arguments[curarg];
                                                              curarg++;
                                                              // Start argument checking
                                                              curarg = 1;
                                                              setLineNumber(1627);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument checking
                                                              setModuleName("objectdraw");
                                                              setLineNumber(1628);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4454 = callmethodChecked(this, "color", []);
                                                              var var_col = call4454;
                                                              setLineNumber(1629);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4456 = callmethodChecked(var_ctx, "beginPath", []);
                                                              setLineNumber(1630);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4458 = callmethodChecked(var_ctx, "save", []);
                                                              setLineNumber(1631);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4462 = callmethodChecked(this, "width", []);
                                                              var quotient4464 = callmethodChecked(call4462, "/(1)", [1], new GraceNum(2));
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4467 = callmethodChecked(this, "x", []);
                                                              var opresult4469 = callmethodChecked(call4467, "+(1)", [1], quotient4464);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4472 = callmethodChecked(this, "height", []);
                                                              var quotient4474 = callmethodChecked(call4472, "/(1)", [1], new GraceNum(2));
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4477 = callmethodChecked(this, "y", []);
                                                              var opresult4479 = callmethodChecked(call4477, "+(1)", [1], quotient4474);
                                                              // call case 6: other requests
                                                              var call4480 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4469, opresult4479);
                                                              setLineNumber(1632);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4484 = callmethodChecked(this, "width", []);
                                                              var quotient4486 = callmethodChecked(call4484, "/(1)", [1], new GraceNum(2));
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4489 = callmethodChecked(this, "height", []);
                                                              var quotient4491 = callmethodChecked(call4489, "/(1)", [1], new GraceNum(2));
                                                              // call case 6: other requests
                                                              var call4492 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4486, quotient4491);
                                                              setLineNumber(1633);    // compilenode num
                                                              var prod4496 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                              // call case 6: other requests
                                                              var call4497 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4496);
                                                              setLineNumber(1634);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4499 = callmethodChecked(var_ctx, "restore", []);
                                                              setLineNumber(1635);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4501 = callmethodChecked(var_ctx, "save", []);
                                                              setLineNumber(1636);    // compilenode string
                                                              var string4503 = new GraceString(")");
                                                              // call case 6: other requests
                                                              var call4506 = callmethodChecked(var_col, "blue", []);
                                                              var string4508 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4511 = callmethodChecked(var_col, "green", []);
                                                              var string4513 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4516 = callmethodChecked(var_col, "red", []);
                                                              var string4518 = new GraceString("rgb(");
                                                              var opresult4520 = callmethodChecked(string4518, "++(1)", [1], call4516);
                                                              var opresult4522 = callmethodChecked(opresult4520, "++(1)", [1], string4513);
                                                              var opresult4524 = callmethodChecked(opresult4522, "++(1)", [1], call4511);
                                                              var opresult4526 = callmethodChecked(opresult4524, "++(1)", [1], string4508);
                                                              var opresult4528 = callmethodChecked(opresult4526, "++(1)", [1], call4506);
                                                              var opresult4530 = callmethodChecked(opresult4528, "++(1)", [1], string4503);
                                                              // call case 6: other requests
                                                              var call4531 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4530);
                                                              setLineNumber(1637);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4533 = callmethodChecked(var_ctx, "stroke", []);
                                                              setLineNumber(1638);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4535 = callmethodChecked(var_ctx, "restore", []);
                                                              setLineNumber(1639);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4537 = callmethodChecked(var_ctx, "closePath", []);
                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4537)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method draw(_) does not have " + 
                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                              return call4537;
                                                            };
                                                            func4452.paramTypes = [];
                                                            func4452.paramTypes.push([]);
                                                            func4452.paramCounts = [1];
                                                            obj4450.methods["draw(1)"] = func4452;
                                                            func4452.definitionLine = 1627;
                                                            func4452.definitionModule = "objectdraw";
                                                            var func4538 = function(argcv) {    // method asString
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              setModuleName("objectdraw");
                                                              setLineNumber(1645);    // compilenode string
                                                              var string4539 = new GraceString("");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4542 = callmethodChecked(this, "color", []);
                                                              var string4544 = new GraceString(", and color ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4547 = callmethodChecked(this, "width", []);
                                                              var string4549 = new GraceString(", width ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4552 = callmethodChecked(this, "height", []);
                                                              var string4554 = new GraceString("with height ");
                                                              var opresult4556 = callmethodChecked(string4554, "++(1)", [1], call4552);
                                                              var opresult4558 = callmethodChecked(opresult4556, "++(1)", [1], string4549);
                                                              var opresult4560 = callmethodChecked(opresult4558, "++(1)", [1], call4547);
                                                              var opresult4562 = callmethodChecked(opresult4560, "++(1)", [1], string4544);
                                                              var opresult4564 = callmethodChecked(opresult4562, "++(1)", [1], call4542);
                                                              var opresult4566 = callmethodChecked(opresult4564, "++(1)", [1], string4539);
                                                              setLineNumber(1644);    // compilenode string
                                                              var string4568 = new GraceString(") ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4571 = callmethodChecked(this, "y", []);
                                                              var string4573 = new GraceString(",");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4576 = callmethodChecked(this, "x", []);
                                                              var string4578 = new GraceString("FramedOval at (");
                                                              var opresult4580 = callmethodChecked(string4578, "++(1)", [1], call4576);
                                                              var opresult4582 = callmethodChecked(opresult4580, "++(1)", [1], string4573);
                                                              var opresult4584 = callmethodChecked(opresult4582, "++(1)", [1], call4571);
                                                              var opresult4586 = callmethodChecked(opresult4584, "++(1)", [1], string4568);
                                                              var opresult4588 = callmethodChecked(opresult4586, "++(1)", [1], opresult4566);
                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4588)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method asString does not have " + 
                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                              return opresult4588;
                                                            };
                                                            func4538.paramCounts = [0];
                                                            obj4450.methods["asString"] = func4538;
                                                            func4538.definitionLine = 1643;
                                                            func4538.definitionModule = "objectdraw";
                                                            setLineNumber(1623);    // compilenode identifier
                                                            // call case 6: other requests
                                                            setLineNumber(0);    // compilenode member
                                                            // call case 3: self.outer request
                                                            var call4591 = callmethodChecked(superDepth, "outer", [0]);
                                                            onSelf = true;
                                                            var call4592 = callmethodChecked(call4591, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                            obj4450.superobj = call4592;
                                                            if (call4592.data) obj4450.data = call4592.data;
                                                            if (call4592.hasOwnProperty('_value'))
                                                                obj4450._value = call4592._value;
                                                            setLineNumber(1624);    // compilenode identifier
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4594 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                            superDepth = origSuperDepth;
                                                          };
                                                          obj_init_4450.apply(obj4450, []);
                                                          setLineNumber(1618);    // return value
                                                          if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj4450)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method framedOvalAt(_)size(_)on(_) does not have " + 
                                                                      callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                          return obj4450;
                                                        };
                                                        func4449.paramTypes = [];
                                                        func4449.paramTypes.push([]);
                                                        func4449.paramTypes.push([]);
                                                        func4449.paramTypes.push([]);
                                                        func4449.paramCounts = [1, 1, 1];
                                                        this.methods["framedOvalAt(1)size(1)on(1)"] = func4449;
                                                        func4449.definitionLine = 1618;
                                                        func4449.definitionModule = "objectdraw";
                                                          var func4595 = function(argcv) {    // method framedOvalAt(_)size(_)on(_)$object(_)
                                                            var curarg = 1;
                                                            var var_location__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_dimensions__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_canvas__39__ = arguments[curarg];
                                                            curarg++;
                                                            var inheritingObject = arguments[curarg++];
                                                            // Start argument processing
                                                            curarg = 1;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in framedOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            setLineNumber(1619);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                        callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument processing
                                                            setModuleName("objectdraw");
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var obj4596 = Grace_allocObject(null, "framedOvalAt(1)size(1)on(1)");
                                                            obj4596.definitionModule = "objectdraw";
                                                            obj4596.definitionLine = 1618;
                                                            var inho4596 = inheritingObject;
                                                            while (inho4596.superobj) inho4596 = inho4596.superobj;
                                                            inho4596.superobj = obj4596;
                                                            obj4596.data = inheritingObject.data;
                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                              obj4596._value = inheritingObject._value;
                                                            obj4596.outer = this;
                                                            var reader_objectdraw_outer4597 = function() {
                                                              return this.outer;
                                                            };
                                                            obj4596.methods["outer"] = reader_objectdraw_outer4597;
                                                            var obj_init_4596 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj4596;
                                                              var func4598 = function(argcv) {    // method draw(_)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_ctx = arguments[curarg];
                                                                curarg++;
                                                                // Start argument checking
                                                                curarg = 1;
                                                                setLineNumber(1627);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument checking
                                                                setModuleName("objectdraw");
                                                                setLineNumber(1628);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4600 = callmethodChecked(this, "color", []);
                                                                var var_col = call4600;
                                                                setLineNumber(1629);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4602 = callmethodChecked(var_ctx, "beginPath", []);
                                                                setLineNumber(1630);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4604 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1631);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4608 = callmethodChecked(this, "width", []);
                                                                var quotient4610 = callmethodChecked(call4608, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4613 = callmethodChecked(this, "x", []);
                                                                var opresult4615 = callmethodChecked(call4613, "+(1)", [1], quotient4610);
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4618 = callmethodChecked(this, "height", []);
                                                                var quotient4620 = callmethodChecked(call4618, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4623 = callmethodChecked(this, "y", []);
                                                                var opresult4625 = callmethodChecked(call4623, "+(1)", [1], quotient4620);
                                                                // call case 6: other requests
                                                                var call4626 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4615, opresult4625);
                                                                setLineNumber(1632);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4630 = callmethodChecked(this, "width", []);
                                                                var quotient4632 = callmethodChecked(call4630, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4635 = callmethodChecked(this, "height", []);
                                                                var quotient4637 = callmethodChecked(call4635, "/(1)", [1], new GraceNum(2));
                                                                // call case 6: other requests
                                                                var call4638 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4632, quotient4637);
                                                                setLineNumber(1633);    // compilenode num
                                                                var prod4642 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                                // call case 6: other requests
                                                                var call4643 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4642);
                                                                setLineNumber(1634);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4645 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1635);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4647 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1636);    // compilenode string
                                                                var string4649 = new GraceString(")");
                                                                // call case 6: other requests
                                                                var call4652 = callmethodChecked(var_col, "blue", []);
                                                                var string4654 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4657 = callmethodChecked(var_col, "green", []);
                                                                var string4659 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4662 = callmethodChecked(var_col, "red", []);
                                                                var string4664 = new GraceString("rgb(");
                                                                var opresult4666 = callmethodChecked(string4664, "++(1)", [1], call4662);
                                                                var opresult4668 = callmethodChecked(opresult4666, "++(1)", [1], string4659);
                                                                var opresult4670 = callmethodChecked(opresult4668, "++(1)", [1], call4657);
                                                                var opresult4672 = callmethodChecked(opresult4670, "++(1)", [1], string4654);
                                                                var opresult4674 = callmethodChecked(opresult4672, "++(1)", [1], call4652);
                                                                var opresult4676 = callmethodChecked(opresult4674, "++(1)", [1], string4649);
                                                                // call case 6: other requests
                                                                var call4677 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4676);
                                                                setLineNumber(1637);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4679 = callmethodChecked(var_ctx, "stroke", []);
                                                                setLineNumber(1638);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4681 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1639);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4683 = callmethodChecked(var_ctx, "closePath", []);
                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4683)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method draw(_) does not have " + 
                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                return call4683;
                                                              };
                                                              func4598.paramTypes = [];
                                                              func4598.paramTypes.push([]);
                                                              func4598.paramCounts = [1];
                                                              obj4596.methods["draw(1)"] = func4598;
                                                              func4598.definitionLine = 1627;
                                                              func4598.definitionModule = "objectdraw";
                                                              var func4684 = function(argcv) {    // method asString
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                setModuleName("objectdraw");
                                                                setLineNumber(1645);    // compilenode string
                                                                var string4685 = new GraceString("");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4688 = callmethodChecked(this, "color", []);
                                                                var string4690 = new GraceString(", and color ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4693 = callmethodChecked(this, "width", []);
                                                                var string4695 = new GraceString(", width ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4698 = callmethodChecked(this, "height", []);
                                                                var string4700 = new GraceString("with height ");
                                                                var opresult4702 = callmethodChecked(string4700, "++(1)", [1], call4698);
                                                                var opresult4704 = callmethodChecked(opresult4702, "++(1)", [1], string4695);
                                                                var opresult4706 = callmethodChecked(opresult4704, "++(1)", [1], call4693);
                                                                var opresult4708 = callmethodChecked(opresult4706, "++(1)", [1], string4690);
                                                                var opresult4710 = callmethodChecked(opresult4708, "++(1)", [1], call4688);
                                                                var opresult4712 = callmethodChecked(opresult4710, "++(1)", [1], string4685);
                                                                setLineNumber(1644);    // compilenode string
                                                                var string4714 = new GraceString(") ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4717 = callmethodChecked(this, "y", []);
                                                                var string4719 = new GraceString(",");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4722 = callmethodChecked(this, "x", []);
                                                                var string4724 = new GraceString("FramedOval at (");
                                                                var opresult4726 = callmethodChecked(string4724, "++(1)", [1], call4722);
                                                                var opresult4728 = callmethodChecked(opresult4726, "++(1)", [1], string4719);
                                                                var opresult4730 = callmethodChecked(opresult4728, "++(1)", [1], call4717);
                                                                var opresult4732 = callmethodChecked(opresult4730, "++(1)", [1], string4714);
                                                                var opresult4734 = callmethodChecked(opresult4732, "++(1)", [1], opresult4712);
                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4734)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method asString does not have " + 
                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                return opresult4734;
                                                              };
                                                              func4684.paramCounts = [0];
                                                              obj4596.methods["asString"] = func4684;
                                                              func4684.definitionLine = 1643;
                                                              func4684.definitionModule = "objectdraw";
                                                              setLineNumber(1623);    // compilenode identifier
                                                              // call case 6: other requests
                                                              setLineNumber(0);    // compilenode member
                                                              // call case 3: self.outer request
                                                              var call4737 = callmethodChecked(superDepth, "outer", [0]);
                                                              onSelf = true;
                                                              var call4738 = callmethodChecked(call4737, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                              obj4596.superobj = call4738;
                                                              if (call4738.data) obj4596.data = call4738.data;
                                                              if (call4738.hasOwnProperty('_value'))
                                                                  obj4596._value = call4738._value;
                                                              setLineNumber(1624);    // compilenode identifier
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4740 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_4596.apply(inheritingObject, []);
                                                            return obj4596;
                                                            };
                                                            func4595.paramTypes = [];
                                                            func4595.paramTypes.push([]);
                                                            func4595.paramTypes.push([]);
                                                            func4595.paramTypes.push([]);
                                                            this.methods["framedOvalAt(1)size(1)on(1)$object(1)"] = func4595;
                                                          setLineNumber(1649);    // compilenode method
                                                          var func4741 = function(argcv) {    // method filledOvalAt(_)size(_)on(_)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_location__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_dimensions__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_canvas__39__ = arguments[curarg];
                                                            curarg++;
                                                            // Start argument checking
                                                            curarg = 1;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in filledOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            setLineNumber(1650);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                        callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument checking
                                                            setModuleName("objectdraw");
                                                            setLineNumber(1649);    // compilenode object
                                                            var obj4742 = Grace_allocObject(null, "filledOvalAt(_)size(_)on(_)");
                                                            obj4742.definitionModule = "objectdraw";
                                                            obj4742.definitionLine = 1649;
                                                            obj4742.outer = this;
                                                            var reader_objectdraw_outer4743 = function() {
                                                              return this.outer;
                                                            };
                                                            obj4742.methods["outer"] = reader_objectdraw_outer4743;
                                                            var obj_init_4742 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj4742;
                                                              var func4744 = function(argcv) {    // method draw(_)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_ctx = arguments[curarg];
                                                                curarg++;
                                                                // Start argument checking
                                                                curarg = 1;
                                                                setLineNumber(1659);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument checking
                                                                setModuleName("objectdraw");
                                                                setLineNumber(1660);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4746 = callmethodChecked(this, "color", []);
                                                                var var_col = call4746;
                                                                setLineNumber(1661);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4748 = callmethodChecked(var_ctx, "beginPath", []);
                                                                setLineNumber(1662);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4750 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1663);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4754 = callmethodChecked(this, "width", []);
                                                                var quotient4756 = callmethodChecked(call4754, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4759 = callmethodChecked(this, "x", []);
                                                                var opresult4761 = callmethodChecked(call4759, "+(1)", [1], quotient4756);
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4764 = callmethodChecked(this, "height", []);
                                                                var quotient4766 = callmethodChecked(call4764, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4769 = callmethodChecked(this, "y", []);
                                                                var opresult4771 = callmethodChecked(call4769, "+(1)", [1], quotient4766);
                                                                // call case 6: other requests
                                                                var call4772 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4761, opresult4771);
                                                                setLineNumber(1664);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4776 = callmethodChecked(this, "width", []);
                                                                var quotient4778 = callmethodChecked(call4776, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4781 = callmethodChecked(this, "height", []);
                                                                var quotient4783 = callmethodChecked(call4781, "/(1)", [1], new GraceNum(2));
                                                                // call case 6: other requests
                                                                var call4784 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4778, quotient4783);
                                                                setLineNumber(1665);    // compilenode num
                                                                var prod4788 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                                // call case 6: other requests
                                                                var call4789 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4788);
                                                                setLineNumber(1666);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4791 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1667);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4793 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1668);    // compilenode string
                                                                var string4795 = new GraceString(")");
                                                                // call case 6: other requests
                                                                var call4798 = callmethodChecked(var_col, "blue", []);
                                                                var string4800 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4803 = callmethodChecked(var_col, "green", []);
                                                                var string4805 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4808 = callmethodChecked(var_col, "red", []);
                                                                var string4810 = new GraceString("rgb(");
                                                                var opresult4812 = callmethodChecked(string4810, "++(1)", [1], call4808);
                                                                var opresult4814 = callmethodChecked(opresult4812, "++(1)", [1], string4805);
                                                                var opresult4816 = callmethodChecked(opresult4814, "++(1)", [1], call4803);
                                                                var opresult4818 = callmethodChecked(opresult4816, "++(1)", [1], string4800);
                                                                var opresult4820 = callmethodChecked(opresult4818, "++(1)", [1], call4798);
                                                                var opresult4822 = callmethodChecked(opresult4820, "++(1)", [1], string4795);
                                                                // call case 6: other requests
                                                                var call4823 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4822);
                                                                setLineNumber(1669);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4825 = callmethodChecked(var_ctx, "fill", []);
                                                                setLineNumber(1670);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4827 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1671);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4829 = callmethodChecked(var_ctx, "closePath", []);
                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4829)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method draw(_) does not have " + 
                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                return call4829;
                                                              };
                                                              func4744.paramTypes = [];
                                                              func4744.paramTypes.push([]);
                                                              func4744.paramCounts = [1];
                                                              obj4742.methods["draw(1)"] = func4744;
                                                              func4744.definitionLine = 1659;
                                                              func4744.definitionModule = "objectdraw";
                                                              var func4830 = function(argcv) {    // method asString
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                setModuleName("objectdraw");
                                                                setLineNumber(1677);    // compilenode string
                                                                var string4831 = new GraceString("");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4834 = callmethodChecked(this, "color", []);
                                                                var string4836 = new GraceString(", and color ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4839 = callmethodChecked(this, "width", []);
                                                                var string4841 = new GraceString(", width ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4844 = callmethodChecked(this, "height", []);
                                                                var string4846 = new GraceString("with height ");
                                                                var opresult4848 = callmethodChecked(string4846, "++(1)", [1], call4844);
                                                                var opresult4850 = callmethodChecked(opresult4848, "++(1)", [1], string4841);
                                                                var opresult4852 = callmethodChecked(opresult4850, "++(1)", [1], call4839);
                                                                var opresult4854 = callmethodChecked(opresult4852, "++(1)", [1], string4836);
                                                                var opresult4856 = callmethodChecked(opresult4854, "++(1)", [1], call4834);
                                                                var opresult4858 = callmethodChecked(opresult4856, "++(1)", [1], string4831);
                                                                setLineNumber(1676);    // compilenode string
                                                                var string4860 = new GraceString(") ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4863 = callmethodChecked(this, "y", []);
                                                                var string4865 = new GraceString(",");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4868 = callmethodChecked(this, "x", []);
                                                                var string4870 = new GraceString("FilledOval at (");
                                                                var opresult4872 = callmethodChecked(string4870, "++(1)", [1], call4868);
                                                                var opresult4874 = callmethodChecked(opresult4872, "++(1)", [1], string4865);
                                                                var opresult4876 = callmethodChecked(opresult4874, "++(1)", [1], call4863);
                                                                var opresult4878 = callmethodChecked(opresult4876, "++(1)", [1], string4860);
                                                                var opresult4880 = callmethodChecked(opresult4878, "++(1)", [1], opresult4858);
                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4880)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method asString does not have " + 
                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                return opresult4880;
                                                              };
                                                              func4830.paramCounts = [0];
                                                              obj4742.methods["asString"] = func4830;
                                                              func4830.definitionLine = 1675;
                                                              func4830.definitionModule = "objectdraw";
                                                              setLineNumber(1654);    // compilenode identifier
                                                              // call case 6: other requests
                                                              setLineNumber(0);    // compilenode member
                                                              // call case 3: self.outer request
                                                              var call4883 = callmethodChecked(superDepth, "outer", [0]);
                                                              onSelf = true;
                                                              var call4884 = callmethodChecked(call4883, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                              obj4742.superobj = call4884;
                                                              if (call4884.data) obj4742.data = call4884.data;
                                                              if (call4884.hasOwnProperty('_value'))
                                                                  obj4742._value = call4884._value;
                                                              setLineNumber(1656);    // compilenode identifier
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4886 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_4742.apply(obj4742, []);
                                                            setLineNumber(1649);    // return value
                                                            if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj4742)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method filledOvalAt(_)size(_)on(_) does not have " + 
                                                                        callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                            return obj4742;
                                                          };
                                                          func4741.paramTypes = [];
                                                          func4741.paramTypes.push([]);
                                                          func4741.paramTypes.push([]);
                                                          func4741.paramTypes.push([]);
                                                          func4741.paramCounts = [1, 1, 1];
                                                          this.methods["filledOvalAt(1)size(1)on(1)"] = func4741;
                                                          func4741.definitionLine = 1649;
                                                          func4741.definitionModule = "objectdraw";
                                                            var func4887 = function(argcv) {    // method filledOvalAt(_)size(_)on(_)$object(_)
                                                              var curarg = 1;
                                                              var var_location__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_dimensions__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_canvas__39__ = arguments[curarg];
                                                              curarg++;
                                                              var inheritingObject = arguments[curarg++];
                                                              // Start argument processing
                                                              curarg = 1;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in filledOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              setLineNumber(1650);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                          callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument processing
                                                              setModuleName("objectdraw");
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var obj4888 = Grace_allocObject(null, "filledOvalAt(1)size(1)on(1)");
                                                              obj4888.definitionModule = "objectdraw";
                                                              obj4888.definitionLine = 1649;
                                                              var inho4888 = inheritingObject;
                                                              while (inho4888.superobj) inho4888 = inho4888.superobj;
                                                              inho4888.superobj = obj4888;
                                                              obj4888.data = inheritingObject.data;
                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                obj4888._value = inheritingObject._value;
                                                              obj4888.outer = this;
                                                              var reader_objectdraw_outer4889 = function() {
                                                                return this.outer;
                                                              };
                                                              obj4888.methods["outer"] = reader_objectdraw_outer4889;
                                                              var obj_init_4888 = function() {
                                                                var origSuperDepth = superDepth;
                                                                superDepth = obj4888;
                                                                var func4890 = function(argcv) {    // method draw(_)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_ctx = arguments[curarg];
                                                                  curarg++;
                                                                  // Start argument checking
                                                                  curarg = 1;
                                                                  setLineNumber(1659);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                              callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument checking
                                                                  setModuleName("objectdraw");
                                                                  setLineNumber(1660);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4892 = callmethodChecked(this, "color", []);
                                                                  var var_col = call4892;
                                                                  setLineNumber(1661);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4894 = callmethodChecked(var_ctx, "beginPath", []);
                                                                  setLineNumber(1662);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4896 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1663);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4900 = callmethodChecked(this, "width", []);
                                                                  var quotient4902 = callmethodChecked(call4900, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4905 = callmethodChecked(this, "x", []);
                                                                  var opresult4907 = callmethodChecked(call4905, "+(1)", [1], quotient4902);
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4910 = callmethodChecked(this, "height", []);
                                                                  var quotient4912 = callmethodChecked(call4910, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4915 = callmethodChecked(this, "y", []);
                                                                  var opresult4917 = callmethodChecked(call4915, "+(1)", [1], quotient4912);
                                                                  // call case 6: other requests
                                                                  var call4918 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4907, opresult4917);
                                                                  setLineNumber(1664);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4922 = callmethodChecked(this, "width", []);
                                                                  var quotient4924 = callmethodChecked(call4922, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4927 = callmethodChecked(this, "height", []);
                                                                  var quotient4929 = callmethodChecked(call4927, "/(1)", [1], new GraceNum(2));
                                                                  // call case 6: other requests
                                                                  var call4930 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4924, quotient4929);
                                                                  setLineNumber(1665);    // compilenode num
                                                                  var prod4934 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                                  // call case 6: other requests
                                                                  var call4935 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4934);
                                                                  setLineNumber(1666);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4937 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1667);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4939 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1668);    // compilenode string
                                                                  var string4941 = new GraceString(")");
                                                                  // call case 6: other requests
                                                                  var call4944 = callmethodChecked(var_col, "blue", []);
                                                                  var string4946 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call4949 = callmethodChecked(var_col, "green", []);
                                                                  var string4951 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call4954 = callmethodChecked(var_col, "red", []);
                                                                  var string4956 = new GraceString("rgb(");
                                                                  var opresult4958 = callmethodChecked(string4956, "++(1)", [1], call4954);
                                                                  var opresult4960 = callmethodChecked(opresult4958, "++(1)", [1], string4951);
                                                                  var opresult4962 = callmethodChecked(opresult4960, "++(1)", [1], call4949);
                                                                  var opresult4964 = callmethodChecked(opresult4962, "++(1)", [1], string4946);
                                                                  var opresult4966 = callmethodChecked(opresult4964, "++(1)", [1], call4944);
                                                                  var opresult4968 = callmethodChecked(opresult4966, "++(1)", [1], string4941);
                                                                  // call case 6: other requests
                                                                  var call4969 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4968);
                                                                  setLineNumber(1669);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4971 = callmethodChecked(var_ctx, "fill", []);
                                                                  setLineNumber(1670);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4973 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1671);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4975 = callmethodChecked(var_ctx, "closePath", []);
                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4975)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method draw(_) does not have " + 
                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                  return call4975;
                                                                };
                                                                func4890.paramTypes = [];
                                                                func4890.paramTypes.push([]);
                                                                func4890.paramCounts = [1];
                                                                obj4888.methods["draw(1)"] = func4890;
                                                                func4890.definitionLine = 1659;
                                                                func4890.definitionModule = "objectdraw";
                                                                var func4976 = function(argcv) {    // method asString
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  setModuleName("objectdraw");
                                                                  setLineNumber(1677);    // compilenode string
                                                                  var string4977 = new GraceString("");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4980 = callmethodChecked(this, "color", []);
                                                                  var string4982 = new GraceString(", and color ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4985 = callmethodChecked(this, "width", []);
                                                                  var string4987 = new GraceString(", width ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4990 = callmethodChecked(this, "height", []);
                                                                  var string4992 = new GraceString("with height ");
                                                                  var opresult4994 = callmethodChecked(string4992, "++(1)", [1], call4990);
                                                                  var opresult4996 = callmethodChecked(opresult4994, "++(1)", [1], string4987);
                                                                  var opresult4998 = callmethodChecked(opresult4996, "++(1)", [1], call4985);
                                                                  var opresult5000 = callmethodChecked(opresult4998, "++(1)", [1], string4982);
                                                                  var opresult5002 = callmethodChecked(opresult5000, "++(1)", [1], call4980);
                                                                  var opresult5004 = callmethodChecked(opresult5002, "++(1)", [1], string4977);
                                                                  setLineNumber(1676);    // compilenode string
                                                                  var string5006 = new GraceString(") ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5009 = callmethodChecked(this, "y", []);
                                                                  var string5011 = new GraceString(",");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5014 = callmethodChecked(this, "x", []);
                                                                  var string5016 = new GraceString("FilledOval at (");
                                                                  var opresult5018 = callmethodChecked(string5016, "++(1)", [1], call5014);
                                                                  var opresult5020 = callmethodChecked(opresult5018, "++(1)", [1], string5011);
                                                                  var opresult5022 = callmethodChecked(opresult5020, "++(1)", [1], call5009);
                                                                  var opresult5024 = callmethodChecked(opresult5022, "++(1)", [1], string5006);
                                                                  var opresult5026 = callmethodChecked(opresult5024, "++(1)", [1], opresult5004);
                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5026)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method asString does not have " + 
                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                  return opresult5026;
                                                                };
                                                                func4976.paramCounts = [0];
                                                                obj4888.methods["asString"] = func4976;
                                                                func4976.definitionLine = 1675;
                                                                func4976.definitionModule = "objectdraw";
                                                                setLineNumber(1654);    // compilenode identifier
                                                                // call case 6: other requests
                                                                setLineNumber(0);    // compilenode member
                                                                // call case 3: self.outer request
                                                                var call5029 = callmethodChecked(superDepth, "outer", [0]);
                                                                onSelf = true;
                                                                var call5030 = callmethodChecked(call5029, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                obj4888.superobj = call5030;
                                                                if (call5030.data) obj4888.data = call5030.data;
                                                                if (call5030.hasOwnProperty('_value'))
                                                                    obj4888._value = call5030._value;
                                                                setLineNumber(1656);    // compilenode identifier
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call5032 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                superDepth = origSuperDepth;
                                                              };
                                                              obj_init_4888.apply(inheritingObject, []);
                                                              return obj4888;
                                                              };
                                                              func4887.paramTypes = [];
                                                              func4887.paramTypes.push([]);
                                                              func4887.paramTypes.push([]);
                                                              func4887.paramTypes.push([]);
                                                              this.methods["filledOvalAt(1)size(1)on(1)$object(1)"] = func4887;
                                                            setLineNumber(1681);    // compilenode method
                                                            var func5033 = function(argcv) {    // method framedArcAt(_)size(_)from(_)to(_)on(_)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_location__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_dimensions__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_startAngle = arguments[curarg];
                                                              curarg++;
                                                              var var_endAngle = arguments[curarg];
                                                              curarg++;
                                                              var var_canvas__39__ = arguments[curarg];
                                                              curarg++;
                                                              // Start argument checking
                                                              curarg = 1;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in framedArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              setLineNumber(1682);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                              curarg++;
                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                              curarg++;
                                                              setLineNumber(1683);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                          callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument checking
                                                              setModuleName("objectdraw");
                                                              setLineNumber(1681);    // compilenode object
                                                              var obj5034 = Grace_allocObject(null, "framedArcAt(_)size(_)from(_)to(_)on(_)");
                                                              obj5034.definitionModule = "objectdraw";
                                                              obj5034.definitionLine = 1681;
                                                              obj5034.outer = this;
                                                              var reader_objectdraw_outer5035 = function() {
                                                                return this.outer;
                                                              };
                                                              obj5034.methods["outer"] = reader_objectdraw_outer5035;
                                                              var obj_init_5034 = function() {
                                                                var origSuperDepth = superDepth;
                                                                superDepth = obj5034;
                                                                var func5036 = function(argcv) {    // method draw(_)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_ctx = arguments[curarg];
                                                                  curarg++;
                                                                  // Start argument checking
                                                                  curarg = 1;
                                                                  setLineNumber(1692);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                              callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument checking
                                                                  setModuleName("objectdraw");
                                                                  setLineNumber(1693);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5038 = callmethodChecked(this, "color", []);
                                                                  var var_col = call5038;
                                                                  setLineNumber(1694);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5040 = callmethodChecked(var_ctx, "beginPath", []);
                                                                  setLineNumber(1695);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5042 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1696);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5046 = callmethodChecked(this, "width", []);
                                                                  var quotient5048 = callmethodChecked(call5046, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5051 = callmethodChecked(this, "x", []);
                                                                  var opresult5053 = callmethodChecked(call5051, "+(1)", [1], quotient5048);
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5056 = callmethodChecked(this, "height", []);
                                                                  var quotient5058 = callmethodChecked(call5056, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5061 = callmethodChecked(this, "y", []);
                                                                  var opresult5063 = callmethodChecked(call5061, "+(1)", [1], quotient5058);
                                                                  // call case 6: other requests
                                                                  var call5064 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5053, opresult5063);
                                                                  setLineNumber(1697);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5068 = callmethodChecked(this, "width", []);
                                                                  var quotient5070 = callmethodChecked(call5068, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5073 = callmethodChecked(this, "height", []);
                                                                  var quotient5075 = callmethodChecked(call5073, "/(1)", [1], new GraceNum(2));
                                                                  // call case 6: other requests
                                                                  var call5076 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5070, quotient5075);
                                                                  var if5077 = GraceDone;
                                                                  setLineNumber(1698);    // compilenode identifier
                                                                  var opresult5080 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                  if (Grace_isTrue(opresult5080)) {
                                                                    setLineNumber(1699);    // compilenode identifier
                                                                    var prod5085 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                    var quotient5087 = callmethodChecked(prod5085, "/(1)", [1], new GraceNum(180));
                                                                    var prod5091 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                    var quotient5093 = callmethodChecked(prod5091, "/(1)", [1], new GraceNum(180));
                                                                    // call case 6: other requests
                                                                    var call5094 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5087, quotient5093);
                                                                    if5077 = call5094;
                                                                  } else {
                                                                    setLineNumber(1701);    // compilenode identifier
                                                                    var prod5099 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                    var quotient5101 = callmethodChecked(prod5099, "/(1)", [1], new GraceNum(180));
                                                                    var prod5105 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                    var quotient5107 = callmethodChecked(prod5105, "/(1)", [1], new GraceNum(180));
                                                                    // call case 6: other requests
                                                                    var call5108 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5101, quotient5107);
                                                                    if5077 = call5108;
                                                                  }
                                                                  setLineNumber(1703);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5110 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1704);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5112 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1705);    // compilenode string
                                                                  var string5114 = new GraceString(")");
                                                                  // call case 6: other requests
                                                                  var call5117 = callmethodChecked(var_col, "blue", []);
                                                                  var string5119 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call5122 = callmethodChecked(var_col, "green", []);
                                                                  var string5124 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call5127 = callmethodChecked(var_col, "red", []);
                                                                  var string5129 = new GraceString("rgb(");
                                                                  var opresult5131 = callmethodChecked(string5129, "++(1)", [1], call5127);
                                                                  var opresult5133 = callmethodChecked(opresult5131, "++(1)", [1], string5124);
                                                                  var opresult5135 = callmethodChecked(opresult5133, "++(1)", [1], call5122);
                                                                  var opresult5137 = callmethodChecked(opresult5135, "++(1)", [1], string5119);
                                                                  var opresult5139 = callmethodChecked(opresult5137, "++(1)", [1], call5117);
                                                                  var opresult5141 = callmethodChecked(opresult5139, "++(1)", [1], string5114);
                                                                  // call case 6: other requests
                                                                  var call5142 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult5141);
                                                                  setLineNumber(1706);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5144 = callmethodChecked(var_ctx, "stroke", []);
                                                                  setLineNumber(1707);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5146 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1708);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5148 = callmethodChecked(var_ctx, "closePath", []);
                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5148)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method draw(_) does not have " + 
                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                  return call5148;
                                                                };
                                                                func5036.paramTypes = [];
                                                                func5036.paramTypes.push([]);
                                                                func5036.paramCounts = [1];
                                                                obj5034.methods["draw(1)"] = func5036;
                                                                func5036.definitionLine = 1692;
                                                                func5036.definitionModule = "objectdraw";
                                                                var func5149 = function(argcv) {    // method asString
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  setModuleName("objectdraw");
                                                                  setLineNumber(1715);    // compilenode string
                                                                  var string5150 = new GraceString(" degrees");
                                                                  var string5153 = new GraceString(" degrees to ");
                                                                  var string5156 = new GraceString("from ");
                                                                  var opresult5158 = callmethodChecked(string5156, "++(1)", [1], var_startAngle);
                                                                  var opresult5160 = callmethodChecked(opresult5158, "++(1)", [1], string5153);
                                                                  var opresult5162 = callmethodChecked(opresult5160, "++(1)", [1], var_endAngle);
                                                                  var opresult5164 = callmethodChecked(opresult5162, "++(1)", [1], string5150);
                                                                  setLineNumber(1714);    // compilenode string
                                                                  var string5166 = new GraceString(" going ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5169 = callmethodChecked(this, "color", []);
                                                                  var string5171 = new GraceString(", and color ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5174 = callmethodChecked(this, "width", []);
                                                                  var string5176 = new GraceString(", width ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5179 = callmethodChecked(this, "height", []);
                                                                  var string5181 = new GraceString("with height ");
                                                                  var opresult5183 = callmethodChecked(string5181, "++(1)", [1], call5179);
                                                                  var opresult5185 = callmethodChecked(opresult5183, "++(1)", [1], string5176);
                                                                  var opresult5187 = callmethodChecked(opresult5185, "++(1)", [1], call5174);
                                                                  var opresult5189 = callmethodChecked(opresult5187, "++(1)", [1], string5171);
                                                                  var opresult5191 = callmethodChecked(opresult5189, "++(1)", [1], call5169);
                                                                  var opresult5193 = callmethodChecked(opresult5191, "++(1)", [1], string5166);
                                                                  setLineNumber(1713);    // compilenode string
                                                                  var string5195 = new GraceString(") ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5198 = callmethodChecked(this, "y", []);
                                                                  var string5200 = new GraceString(",");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5203 = callmethodChecked(this, "x", []);
                                                                  var string5205 = new GraceString("FramedArc at (");
                                                                  var opresult5207 = callmethodChecked(string5205, "++(1)", [1], call5203);
                                                                  var opresult5209 = callmethodChecked(opresult5207, "++(1)", [1], string5200);
                                                                  var opresult5211 = callmethodChecked(opresult5209, "++(1)", [1], call5198);
                                                                  var opresult5213 = callmethodChecked(opresult5211, "++(1)", [1], string5195);
                                                                  var opresult5215 = callmethodChecked(opresult5213, "++(1)", [1], opresult5193);
                                                                  var opresult5217 = callmethodChecked(opresult5215, "++(1)", [1], opresult5164);
                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5217)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method asString does not have " + 
                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                  return opresult5217;
                                                                };
                                                                func5149.paramCounts = [0];
                                                                obj5034.methods["asString"] = func5149;
                                                                func5149.definitionLine = 1712;
                                                                func5149.definitionModule = "objectdraw";
                                                                setLineNumber(1688);    // compilenode identifier
                                                                // call case 6: other requests
                                                                setLineNumber(0);    // compilenode member
                                                                // call case 3: self.outer request
                                                                var call5220 = callmethodChecked(superDepth, "outer", [0]);
                                                                onSelf = true;
                                                                var call5221 = callmethodChecked(call5220, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                obj5034.superobj = call5221;
                                                                if (call5221.data) obj5034.data = call5221.data;
                                                                if (call5221.hasOwnProperty('_value'))
                                                                    obj5034._value = call5221._value;
                                                                setLineNumber(1689);    // compilenode identifier
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call5223 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                superDepth = origSuperDepth;
                                                              };
                                                              obj_init_5034.apply(obj5034, []);
                                                              setLineNumber(1681);    // return value
                                                              if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj5034)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method framedArcAt(_)size(_)from(_)to(_)on(_) does not have " + 
                                                                          callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                              return obj5034;
                                                            };
                                                            func5033.paramTypes = [];
                                                            func5033.paramTypes.push([]);
                                                            func5033.paramTypes.push([]);
                                                            func5033.paramTypes.push([type_Number, "startAngle"]);
                                                            func5033.paramTypes.push([type_Number, "endAngle"]);
                                                            func5033.paramTypes.push([]);
                                                            func5033.paramCounts = [1, 1, 1, 1, 1];
                                                            this.methods["framedArcAt(1)size(1)from(1)to(1)on(1)"] = func5033;
                                                            func5033.definitionLine = 1681;
                                                            func5033.definitionModule = "objectdraw";
                                                              var func5224 = function(argcv) {    // method framedArcAt(_)size(_)from(_)to(_)on(_)$object(_)
                                                                var curarg = 1;
                                                                var var_location__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_dimensions__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_startAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_endAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_canvas__39__ = arguments[curarg];
                                                                curarg++;
                                                                var inheritingObject = arguments[curarg++];
                                                                // Start argument processing
                                                                curarg = 1;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in framedArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1682);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1683);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                            callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument processing
                                                                setModuleName("objectdraw");
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var obj5225 = Grace_allocObject(null, "framedArcAt(1)size(1)from(1)to(1)on(1)");
                                                                obj5225.definitionModule = "objectdraw";
                                                                obj5225.definitionLine = 1681;
                                                                var inho5225 = inheritingObject;
                                                                while (inho5225.superobj) inho5225 = inho5225.superobj;
                                                                inho5225.superobj = obj5225;
                                                                obj5225.data = inheritingObject.data;
                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                  obj5225._value = inheritingObject._value;
                                                                obj5225.outer = this;
                                                                var reader_objectdraw_outer5226 = function() {
                                                                  return this.outer;
                                                                };
                                                                obj5225.methods["outer"] = reader_objectdraw_outer5226;
                                                                var obj_init_5225 = function() {
                                                                  var origSuperDepth = superDepth;
                                                                  superDepth = obj5225;
                                                                  var func5227 = function(argcv) {    // method draw(_)
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    var var_ctx = arguments[curarg];
                                                                    curarg++;
                                                                    // Start argument checking
                                                                    curarg = 1;
                                                                    setLineNumber(1692);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument checking
                                                                    setModuleName("objectdraw");
                                                                    setLineNumber(1693);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5229 = callmethodChecked(this, "color", []);
                                                                    var var_col = call5229;
                                                                    setLineNumber(1694);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5231 = callmethodChecked(var_ctx, "beginPath", []);
                                                                    setLineNumber(1695);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5233 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1696);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5237 = callmethodChecked(this, "width", []);
                                                                    var quotient5239 = callmethodChecked(call5237, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5242 = callmethodChecked(this, "x", []);
                                                                    var opresult5244 = callmethodChecked(call5242, "+(1)", [1], quotient5239);
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5247 = callmethodChecked(this, "height", []);
                                                                    var quotient5249 = callmethodChecked(call5247, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5252 = callmethodChecked(this, "y", []);
                                                                    var opresult5254 = callmethodChecked(call5252, "+(1)", [1], quotient5249);
                                                                    // call case 6: other requests
                                                                    var call5255 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5244, opresult5254);
                                                                    setLineNumber(1697);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5259 = callmethodChecked(this, "width", []);
                                                                    var quotient5261 = callmethodChecked(call5259, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5264 = callmethodChecked(this, "height", []);
                                                                    var quotient5266 = callmethodChecked(call5264, "/(1)", [1], new GraceNum(2));
                                                                    // call case 6: other requests
                                                                    var call5267 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5261, quotient5266);
                                                                    var if5268 = GraceDone;
                                                                    setLineNumber(1698);    // compilenode identifier
                                                                    var opresult5271 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                    if (Grace_isTrue(opresult5271)) {
                                                                      setLineNumber(1699);    // compilenode identifier
                                                                      var prod5276 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5278 = callmethodChecked(prod5276, "/(1)", [1], new GraceNum(180));
                                                                      var prod5282 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5284 = callmethodChecked(prod5282, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5285 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5278, quotient5284);
                                                                      if5268 = call5285;
                                                                    } else {
                                                                      setLineNumber(1701);    // compilenode identifier
                                                                      var prod5290 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5292 = callmethodChecked(prod5290, "/(1)", [1], new GraceNum(180));
                                                                      var prod5296 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5298 = callmethodChecked(prod5296, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5299 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5292, quotient5298);
                                                                      if5268 = call5299;
                                                                    }
                                                                    setLineNumber(1703);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5301 = callmethodChecked(var_ctx, "restore", []);
                                                                    setLineNumber(1704);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5303 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1705);    // compilenode string
                                                                    var string5305 = new GraceString(")");
                                                                    // call case 6: other requests
                                                                    var call5308 = callmethodChecked(var_col, "blue", []);
                                                                    var string5310 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5313 = callmethodChecked(var_col, "green", []);
                                                                    var string5315 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5318 = callmethodChecked(var_col, "red", []);
                                                                    var string5320 = new GraceString("rgb(");
                                                                    var opresult5322 = callmethodChecked(string5320, "++(1)", [1], call5318);
                                                                    var opresult5324 = callmethodChecked(opresult5322, "++(1)", [1], string5315);
                                                                    var opresult5326 = callmethodChecked(opresult5324, "++(1)", [1], call5313);
                                                                    var opresult5328 = callmethodChecked(opresult5326, "++(1)", [1], string5310);
                                                                    var opresult5330 = callmethodChecked(opresult5328, "++(1)", [1], call5308);
                                                                    var opresult5332 = callmethodChecked(opresult5330, "++(1)", [1], string5305);
                                                                    // call case 6: other requests
                                                                    var call5333 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult5332);
                                                                    setLineNumber(1706);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5335 = callmethodChecked(var_ctx, "stroke", []);
                                                                    setLineNumber(1707);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5337 = callmethodChecked(var_ctx, "restore", []);
                                                                    setLineNumber(1708);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5339 = callmethodChecked(var_ctx, "closePath", []);
                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5339)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method draw(_) does not have " + 
                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                    return call5339;
                                                                  };
                                                                  func5227.paramTypes = [];
                                                                  func5227.paramTypes.push([]);
                                                                  func5227.paramCounts = [1];
                                                                  obj5225.methods["draw(1)"] = func5227;
                                                                  func5227.definitionLine = 1692;
                                                                  func5227.definitionModule = "objectdraw";
                                                                  var func5340 = function(argcv) {    // method asString
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    setModuleName("objectdraw");
                                                                    setLineNumber(1715);    // compilenode string
                                                                    var string5341 = new GraceString(" degrees");
                                                                    var string5344 = new GraceString(" degrees to ");
                                                                    var string5347 = new GraceString("from ");
                                                                    var opresult5349 = callmethodChecked(string5347, "++(1)", [1], var_startAngle);
                                                                    var opresult5351 = callmethodChecked(opresult5349, "++(1)", [1], string5344);
                                                                    var opresult5353 = callmethodChecked(opresult5351, "++(1)", [1], var_endAngle);
                                                                    var opresult5355 = callmethodChecked(opresult5353, "++(1)", [1], string5341);
                                                                    setLineNumber(1714);    // compilenode string
                                                                    var string5357 = new GraceString(" going ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5360 = callmethodChecked(this, "color", []);
                                                                    var string5362 = new GraceString(", and color ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5365 = callmethodChecked(this, "width", []);
                                                                    var string5367 = new GraceString(", width ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5370 = callmethodChecked(this, "height", []);
                                                                    var string5372 = new GraceString("with height ");
                                                                    var opresult5374 = callmethodChecked(string5372, "++(1)", [1], call5370);
                                                                    var opresult5376 = callmethodChecked(opresult5374, "++(1)", [1], string5367);
                                                                    var opresult5378 = callmethodChecked(opresult5376, "++(1)", [1], call5365);
                                                                    var opresult5380 = callmethodChecked(opresult5378, "++(1)", [1], string5362);
                                                                    var opresult5382 = callmethodChecked(opresult5380, "++(1)", [1], call5360);
                                                                    var opresult5384 = callmethodChecked(opresult5382, "++(1)", [1], string5357);
                                                                    setLineNumber(1713);    // compilenode string
                                                                    var string5386 = new GraceString(") ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5389 = callmethodChecked(this, "y", []);
                                                                    var string5391 = new GraceString(",");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5394 = callmethodChecked(this, "x", []);
                                                                    var string5396 = new GraceString("FramedArc at (");
                                                                    var opresult5398 = callmethodChecked(string5396, "++(1)", [1], call5394);
                                                                    var opresult5400 = callmethodChecked(opresult5398, "++(1)", [1], string5391);
                                                                    var opresult5402 = callmethodChecked(opresult5400, "++(1)", [1], call5389);
                                                                    var opresult5404 = callmethodChecked(opresult5402, "++(1)", [1], string5386);
                                                                    var opresult5406 = callmethodChecked(opresult5404, "++(1)", [1], opresult5384);
                                                                    var opresult5408 = callmethodChecked(opresult5406, "++(1)", [1], opresult5355);
                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5408)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method asString does not have " + 
                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                    return opresult5408;
                                                                  };
                                                                  func5340.paramCounts = [0];
                                                                  obj5225.methods["asString"] = func5340;
                                                                  func5340.definitionLine = 1712;
                                                                  func5340.definitionModule = "objectdraw";
                                                                  setLineNumber(1688);    // compilenode identifier
                                                                  // call case 6: other requests
                                                                  setLineNumber(0);    // compilenode member
                                                                  // call case 3: self.outer request
                                                                  var call5411 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onSelf = true;
                                                                  var call5412 = callmethodChecked(call5411, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                  obj5225.superobj = call5412;
                                                                  if (call5412.data) obj5225.data = call5412.data;
                                                                  if (call5412.hasOwnProperty('_value'))
                                                                      obj5225._value = call5412._value;
                                                                  setLineNumber(1689);    // compilenode identifier
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5414 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                  superDepth = origSuperDepth;
                                                                };
                                                                obj_init_5225.apply(inheritingObject, []);
                                                                return obj5225;
                                                                };
                                                                func5224.paramTypes = [];
                                                                func5224.paramTypes.push([]);
                                                                func5224.paramTypes.push([]);
                                                                func5224.paramTypes.push([type_Number, "startAngle"]);
                                                                func5224.paramTypes.push([type_Number, "endAngle"]);
                                                                func5224.paramTypes.push([]);
                                                                this.methods["framedArcAt(1)size(1)from(1)to(1)on(1)$object(1)"] = func5224;
                                                              setLineNumber(1720);    // compilenode method
                                                              var func5415 = function(argcv) {    // method filledArcAt(_)size(_)from(_)to(_)on(_)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_location__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_dimensions__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_startAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_endAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_canvas__39__ = arguments[curarg];
                                                                curarg++;
                                                                // Start argument checking
                                                                curarg = 1;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in filledArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1721);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1722);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                            callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument checking
                                                                setModuleName("objectdraw");
                                                                setLineNumber(1720);    // compilenode object
                                                                var obj5416 = Grace_allocObject(null, "filledArcAt(_)size(_)from(_)to(_)on(_)");
                                                                obj5416.definitionModule = "objectdraw";
                                                                obj5416.definitionLine = 1720;
                                                                obj5416.outer = this;
                                                                var reader_objectdraw_outer5417 = function() {
                                                                  return this.outer;
                                                                };
                                                                obj5416.methods["outer"] = reader_objectdraw_outer5417;
                                                                var obj_init_5416 = function() {
                                                                  var origSuperDepth = superDepth;
                                                                  superDepth = obj5416;
                                                                  var func5418 = function(argcv) {    // method draw(_)
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    var var_ctx = arguments[curarg];
                                                                    curarg++;
                                                                    // Start argument checking
                                                                    curarg = 1;
                                                                    setLineNumber(1732);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument checking
                                                                    setModuleName("objectdraw");
                                                                    setLineNumber(1733);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5420 = callmethodChecked(this, "color", []);
                                                                    var var_col = call5420;
                                                                    setLineNumber(1734);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5422 = callmethodChecked(var_ctx, "beginPath", []);
                                                                    setLineNumber(1735);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5424 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1736);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5428 = callmethodChecked(this, "width", []);
                                                                    var quotient5430 = callmethodChecked(call5428, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5433 = callmethodChecked(this, "x", []);
                                                                    var opresult5435 = callmethodChecked(call5433, "+(1)", [1], quotient5430);
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5438 = callmethodChecked(this, "height", []);
                                                                    var quotient5440 = callmethodChecked(call5438, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5443 = callmethodChecked(this, "y", []);
                                                                    var opresult5445 = callmethodChecked(call5443, "+(1)", [1], quotient5440);
                                                                    // call case 6: other requests
                                                                    var call5446 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5435, opresult5445);
                                                                    setLineNumber(1737);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5450 = callmethodChecked(this, "width", []);
                                                                    var quotient5452 = callmethodChecked(call5450, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5455 = callmethodChecked(this, "height", []);
                                                                    var quotient5457 = callmethodChecked(call5455, "/(1)", [1], new GraceNum(2));
                                                                    // call case 6: other requests
                                                                    var call5458 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5452, quotient5457);
                                                                    var if5459 = GraceDone;
                                                                    setLineNumber(1738);    // compilenode identifier
                                                                    var opresult5462 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                    if (Grace_isTrue(opresult5462)) {
                                                                      setLineNumber(1739);    // compilenode identifier
                                                                      var prod5467 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5469 = callmethodChecked(prod5467, "/(1)", [1], new GraceNum(180));
                                                                      var prod5473 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5475 = callmethodChecked(prod5473, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5476 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5469, quotient5475);
                                                                      if5459 = call5476;
                                                                    } else {
                                                                      setLineNumber(1741);    // compilenode identifier
                                                                      var prod5481 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5483 = callmethodChecked(prod5481, "/(1)", [1], new GraceNum(180));
                                                                      var prod5487 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5489 = callmethodChecked(prod5487, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5490 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5483, quotient5489);
                                                                      if5459 = call5490;
                                                                    }
                                                                    setLineNumber(1743);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5492 = callmethodChecked(var_ctx, "restore", []);
                                                                    setLineNumber(1744);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5494 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1745);    // compilenode string
                                                                    var string5496 = new GraceString(")");
                                                                    // call case 6: other requests
                                                                    var call5499 = callmethodChecked(var_col, "blue", []);
                                                                    var string5501 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5504 = callmethodChecked(var_col, "green", []);
                                                                    var string5506 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5509 = callmethodChecked(var_col, "red", []);
                                                                    var string5511 = new GraceString("rgb(");
                                                                    var opresult5513 = callmethodChecked(string5511, "++(1)", [1], call5509);
                                                                    var opresult5515 = callmethodChecked(opresult5513, "++(1)", [1], string5506);
                                                                    var opresult5517 = callmethodChecked(opresult5515, "++(1)", [1], call5504);
                                                                    var opresult5519 = callmethodChecked(opresult5517, "++(1)", [1], string5501);
                                                                    var opresult5521 = callmethodChecked(opresult5519, "++(1)", [1], call5499);
                                                                    var opresult5523 = callmethodChecked(opresult5521, "++(1)", [1], string5496);
                                                                    // call case 6: other requests
                                                                    var call5524 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult5523);
                                                                    setLineNumber(1746);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5526 = callmethodChecked(var_ctx, "fill", []);
                                                                    setLineNumber(1747);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5528 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1748);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5530 = callmethodChecked(var_ctx, "closePath", []);
                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5530)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method draw(_) does not have " + 
                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                    return call5530;
                                                                  };
                                                                  func5418.paramTypes = [];
                                                                  func5418.paramTypes.push([]);
                                                                  func5418.paramCounts = [1];
                                                                  obj5416.methods["draw(1)"] = func5418;
                                                                  func5418.definitionLine = 1732;
                                                                  func5418.definitionModule = "objectdraw";
                                                                  var func5531 = function(argcv) {    // method asString
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    setModuleName("objectdraw");
                                                                    setLineNumber(1755);    // compilenode string
                                                                    var string5532 = new GraceString(" degrees");
                                                                    var string5535 = new GraceString(" degrees to ");
                                                                    var string5538 = new GraceString("from ");
                                                                    var opresult5540 = callmethodChecked(string5538, "++(1)", [1], var_startAngle);
                                                                    var opresult5542 = callmethodChecked(opresult5540, "++(1)", [1], string5535);
                                                                    var opresult5544 = callmethodChecked(opresult5542, "++(1)", [1], var_endAngle);
                                                                    var opresult5546 = callmethodChecked(opresult5544, "++(1)", [1], string5532);
                                                                    setLineNumber(1754);    // compilenode string
                                                                    var string5548 = new GraceString(" going ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5551 = callmethodChecked(this, "color", []);
                                                                    var string5553 = new GraceString(", and color ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5556 = callmethodChecked(this, "width", []);
                                                                    var string5558 = new GraceString(", width ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5561 = callmethodChecked(this, "height", []);
                                                                    var string5563 = new GraceString("with height ");
                                                                    var opresult5565 = callmethodChecked(string5563, "++(1)", [1], call5561);
                                                                    var opresult5567 = callmethodChecked(opresult5565, "++(1)", [1], string5558);
                                                                    var opresult5569 = callmethodChecked(opresult5567, "++(1)", [1], call5556);
                                                                    var opresult5571 = callmethodChecked(opresult5569, "++(1)", [1], string5553);
                                                                    var opresult5573 = callmethodChecked(opresult5571, "++(1)", [1], call5551);
                                                                    var opresult5575 = callmethodChecked(opresult5573, "++(1)", [1], string5548);
                                                                    setLineNumber(1753);    // compilenode string
                                                                    var string5577 = new GraceString(") ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5580 = callmethodChecked(this, "y", []);
                                                                    var string5582 = new GraceString(",");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5585 = callmethodChecked(this, "x", []);
                                                                    var string5587 = new GraceString("FilledArc at (");
                                                                    var opresult5589 = callmethodChecked(string5587, "++(1)", [1], call5585);
                                                                    var opresult5591 = callmethodChecked(opresult5589, "++(1)", [1], string5582);
                                                                    var opresult5593 = callmethodChecked(opresult5591, "++(1)", [1], call5580);
                                                                    var opresult5595 = callmethodChecked(opresult5593, "++(1)", [1], string5577);
                                                                    var opresult5597 = callmethodChecked(opresult5595, "++(1)", [1], opresult5575);
                                                                    var opresult5599 = callmethodChecked(opresult5597, "++(1)", [1], opresult5546);
                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5599)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method asString does not have " + 
                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                    return opresult5599;
                                                                  };
                                                                  func5531.paramCounts = [0];
                                                                  obj5416.methods["asString"] = func5531;
                                                                  func5531.definitionLine = 1752;
                                                                  func5531.definitionModule = "objectdraw";
                                                                  setLineNumber(1728);    // compilenode identifier
                                                                  // call case 6: other requests
                                                                  setLineNumber(0);    // compilenode member
                                                                  // call case 3: self.outer request
                                                                  var call5602 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onSelf = true;
                                                                  var call5603 = callmethodChecked(call5602, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                  obj5416.superobj = call5603;
                                                                  if (call5603.data) obj5416.data = call5603.data;
                                                                  if (call5603.hasOwnProperty('_value'))
                                                                      obj5416._value = call5603._value;
                                                                  setLineNumber(1729);    // compilenode identifier
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5605 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                  superDepth = origSuperDepth;
                                                                };
                                                                obj_init_5416.apply(obj5416, []);
                                                                setLineNumber(1720);    // return value
                                                                if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj5416)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method filledArcAt(_)size(_)from(_)to(_)on(_) does not have " + 
                                                                            callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                                return obj5416;
                                                              };
                                                              func5415.paramTypes = [];
                                                              func5415.paramTypes.push([]);
                                                              func5415.paramTypes.push([]);
                                                              func5415.paramTypes.push([type_Number, "startAngle"]);
                                                              func5415.paramTypes.push([type_Number, "endAngle"]);
                                                              func5415.paramTypes.push([]);
                                                              func5415.paramCounts = [1, 1, 1, 1, 1];
                                                              this.methods["filledArcAt(1)size(1)from(1)to(1)on(1)"] = func5415;
                                                              func5415.definitionLine = 1720;
                                                              func5415.definitionModule = "objectdraw";
                                                                var func5606 = function(argcv) {    // method filledArcAt(_)size(_)from(_)to(_)on(_)$object(_)
                                                                  var curarg = 1;
                                                                  var var_location__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_dimensions__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_startAngle = arguments[curarg];
                                                                  curarg++;
                                                                  var var_endAngle = arguments[curarg];
                                                                  curarg++;
                                                                  var var_canvas__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var inheritingObject = arguments[curarg++];
                                                                  // Start argument processing
                                                                  curarg = 1;
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in filledArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1721);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1722);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument processing
                                                                  setModuleName("objectdraw");
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var obj5607 = Grace_allocObject(null, "filledArcAt(1)size(1)from(1)to(1)on(1)");
                                                                  obj5607.definitionModule = "objectdraw";
                                                                  obj5607.definitionLine = 1720;
                                                                  var inho5607 = inheritingObject;
                                                                  while (inho5607.superobj) inho5607 = inho5607.superobj;
                                                                  inho5607.superobj = obj5607;
                                                                  obj5607.data = inheritingObject.data;
                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                    obj5607._value = inheritingObject._value;
                                                                  obj5607.outer = this;
                                                                  var reader_objectdraw_outer5608 = function() {
                                                                    return this.outer;
                                                                  };
                                                                  obj5607.methods["outer"] = reader_objectdraw_outer5608;
                                                                  var obj_init_5607 = function() {
                                                                    var origSuperDepth = superDepth;
                                                                    superDepth = obj5607;
                                                                    var func5609 = function(argcv) {    // method draw(_)
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      var var_ctx = arguments[curarg];
                                                                      curarg++;
                                                                      // Start argument checking
                                                                      curarg = 1;
                                                                      setLineNumber(1732);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument checking
                                                                      setModuleName("objectdraw");
                                                                      setLineNumber(1733);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5611 = callmethodChecked(this, "color", []);
                                                                      var var_col = call5611;
                                                                      setLineNumber(1734);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5613 = callmethodChecked(var_ctx, "beginPath", []);
                                                                      setLineNumber(1735);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5615 = callmethodChecked(var_ctx, "save", []);
                                                                      setLineNumber(1736);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5619 = callmethodChecked(this, "width", []);
                                                                      var quotient5621 = callmethodChecked(call5619, "/(1)", [1], new GraceNum(2));
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5624 = callmethodChecked(this, "x", []);
                                                                      var opresult5626 = callmethodChecked(call5624, "+(1)", [1], quotient5621);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5629 = callmethodChecked(this, "height", []);
                                                                      var quotient5631 = callmethodChecked(call5629, "/(1)", [1], new GraceNum(2));
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5634 = callmethodChecked(this, "y", []);
                                                                      var opresult5636 = callmethodChecked(call5634, "+(1)", [1], quotient5631);
                                                                      // call case 6: other requests
                                                                      var call5637 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5626, opresult5636);
                                                                      setLineNumber(1737);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5641 = callmethodChecked(this, "width", []);
                                                                      var quotient5643 = callmethodChecked(call5641, "/(1)", [1], new GraceNum(2));
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5646 = callmethodChecked(this, "height", []);
                                                                      var quotient5648 = callmethodChecked(call5646, "/(1)", [1], new GraceNum(2));
                                                                      // call case 6: other requests
                                                                      var call5649 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5643, quotient5648);
                                                                      var if5650 = GraceDone;
                                                                      setLineNumber(1738);    // compilenode identifier
                                                                      var opresult5653 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                      if (Grace_isTrue(opresult5653)) {
                                                                        setLineNumber(1739);    // compilenode identifier
                                                                        var prod5658 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                        var quotient5660 = callmethodChecked(prod5658, "/(1)", [1], new GraceNum(180));
                                                                        var prod5664 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                        var quotient5666 = callmethodChecked(prod5664, "/(1)", [1], new GraceNum(180));
                                                                        // call case 6: other requests
                                                                        var call5667 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5660, quotient5666);
                                                                        if5650 = call5667;
                                                                      } else {
                                                                        setLineNumber(1741);    // compilenode identifier
                                                                        var prod5672 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                        var quotient5674 = callmethodChecked(prod5672, "/(1)", [1], new GraceNum(180));
                                                                        var prod5678 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                        var quotient5680 = callmethodChecked(prod5678, "/(1)", [1], new GraceNum(180));
                                                                        // call case 6: other requests
                                                                        var call5681 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5674, quotient5680);
                                                                        if5650 = call5681;
                                                                      }
                                                                      setLineNumber(1743);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5683 = callmethodChecked(var_ctx, "restore", []);
                                                                      setLineNumber(1744);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5685 = callmethodChecked(var_ctx, "save", []);
                                                                      setLineNumber(1745);    // compilenode string
                                                                      var string5687 = new GraceString(")");
                                                                      // call case 6: other requests
                                                                      var call5690 = callmethodChecked(var_col, "blue", []);
                                                                      var string5692 = new GraceString(", ");
                                                                      // call case 6: other requests
                                                                      var call5695 = callmethodChecked(var_col, "green", []);
                                                                      var string5697 = new GraceString(", ");
                                                                      // call case 6: other requests
                                                                      var call5700 = callmethodChecked(var_col, "red", []);
                                                                      var string5702 = new GraceString("rgb(");
                                                                      var opresult5704 = callmethodChecked(string5702, "++(1)", [1], call5700);
                                                                      var opresult5706 = callmethodChecked(opresult5704, "++(1)", [1], string5697);
                                                                      var opresult5708 = callmethodChecked(opresult5706, "++(1)", [1], call5695);
                                                                      var opresult5710 = callmethodChecked(opresult5708, "++(1)", [1], string5692);
                                                                      var opresult5712 = callmethodChecked(opresult5710, "++(1)", [1], call5690);
                                                                      var opresult5714 = callmethodChecked(opresult5712, "++(1)", [1], string5687);
                                                                      // call case 6: other requests
                                                                      var call5715 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult5714);
                                                                      setLineNumber(1746);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5717 = callmethodChecked(var_ctx, "fill", []);
                                                                      setLineNumber(1747);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5719 = callmethodChecked(var_ctx, "save", []);
                                                                      setLineNumber(1748);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5721 = callmethodChecked(var_ctx, "closePath", []);
                                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5721)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method draw(_) does not have " + 
                                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                                      return call5721;
                                                                    };
                                                                    func5609.paramTypes = [];
                                                                    func5609.paramTypes.push([]);
                                                                    func5609.paramCounts = [1];
                                                                    obj5607.methods["draw(1)"] = func5609;
                                                                    func5609.definitionLine = 1732;
                                                                    func5609.definitionModule = "objectdraw";
                                                                    var func5722 = function(argcv) {    // method asString
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      setModuleName("objectdraw");
                                                                      setLineNumber(1755);    // compilenode string
                                                                      var string5723 = new GraceString(" degrees");
                                                                      var string5726 = new GraceString(" degrees to ");
                                                                      var string5729 = new GraceString("from ");
                                                                      var opresult5731 = callmethodChecked(string5729, "++(1)", [1], var_startAngle);
                                                                      var opresult5733 = callmethodChecked(opresult5731, "++(1)", [1], string5726);
                                                                      var opresult5735 = callmethodChecked(opresult5733, "++(1)", [1], var_endAngle);
                                                                      var opresult5737 = callmethodChecked(opresult5735, "++(1)", [1], string5723);
                                                                      setLineNumber(1754);    // compilenode string
                                                                      var string5739 = new GraceString(" going ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5742 = callmethodChecked(this, "color", []);
                                                                      var string5744 = new GraceString(", and color ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5747 = callmethodChecked(this, "width", []);
                                                                      var string5749 = new GraceString(", width ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5752 = callmethodChecked(this, "height", []);
                                                                      var string5754 = new GraceString("with height ");
                                                                      var opresult5756 = callmethodChecked(string5754, "++(1)", [1], call5752);
                                                                      var opresult5758 = callmethodChecked(opresult5756, "++(1)", [1], string5749);
                                                                      var opresult5760 = callmethodChecked(opresult5758, "++(1)", [1], call5747);
                                                                      var opresult5762 = callmethodChecked(opresult5760, "++(1)", [1], string5744);
                                                                      var opresult5764 = callmethodChecked(opresult5762, "++(1)", [1], call5742);
                                                                      var opresult5766 = callmethodChecked(opresult5764, "++(1)", [1], string5739);
                                                                      setLineNumber(1753);    // compilenode string
                                                                      var string5768 = new GraceString(") ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5771 = callmethodChecked(this, "y", []);
                                                                      var string5773 = new GraceString(",");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5776 = callmethodChecked(this, "x", []);
                                                                      var string5778 = new GraceString("FilledArc at (");
                                                                      var opresult5780 = callmethodChecked(string5778, "++(1)", [1], call5776);
                                                                      var opresult5782 = callmethodChecked(opresult5780, "++(1)", [1], string5773);
                                                                      var opresult5784 = callmethodChecked(opresult5782, "++(1)", [1], call5771);
                                                                      var opresult5786 = callmethodChecked(opresult5784, "++(1)", [1], string5768);
                                                                      var opresult5788 = callmethodChecked(opresult5786, "++(1)", [1], opresult5766);
                                                                      var opresult5790 = callmethodChecked(opresult5788, "++(1)", [1], opresult5737);
                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5790)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method asString does not have " + 
                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                      return opresult5790;
                                                                    };
                                                                    func5722.paramCounts = [0];
                                                                    obj5607.methods["asString"] = func5722;
                                                                    func5722.definitionLine = 1752;
                                                                    func5722.definitionModule = "objectdraw";
                                                                    setLineNumber(1728);    // compilenode identifier
                                                                    // call case 6: other requests
                                                                    setLineNumber(0);    // compilenode member
                                                                    // call case 3: self.outer request
                                                                    var call5793 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onSelf = true;
                                                                    var call5794 = callmethodChecked(call5793, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                    obj5607.superobj = call5794;
                                                                    if (call5794.data) obj5607.data = call5794.data;
                                                                    if (call5794.hasOwnProperty('_value'))
                                                                        obj5607._value = call5794._value;
                                                                    setLineNumber(1729);    // compilenode identifier
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5796 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                    superDepth = origSuperDepth;
                                                                  };
                                                                  obj_init_5607.apply(inheritingObject, []);
                                                                  return obj5607;
                                                                  };
                                                                  func5606.paramTypes = [];
                                                                  func5606.paramTypes.push([]);
                                                                  func5606.paramTypes.push([]);
                                                                  func5606.paramTypes.push([type_Number, "startAngle"]);
                                                                  func5606.paramTypes.push([type_Number, "endAngle"]);
                                                                  func5606.paramTypes.push([]);
                                                                  this.methods["filledArcAt(1)size(1)from(1)to(1)on(1)$object(1)"] = func5606;
                                                                setLineNumber(1802);    // compilenode method
                                                                var func5797 = function(argcv) {    // method drawableImageAt(_)size(_)url(_)on(_)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_location__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_dimensions__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_url = arguments[curarg];
                                                                  curarg++;
                                                                  var var_canvas__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  // Start argument checking
                                                                  curarg = 1;
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in drawableImageAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1803);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1804);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in url (arg list 3), which corresponds to parameter url, does not have " + 
                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1805);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument checking
                                                                  setModuleName("objectdraw");
                                                                  setLineNumber(1802);    // compilenode object
                                                                  var obj5798 = Grace_allocObject(null, "drawableImageAt(_)size(_)url(_)on(_)");
                                                                  obj5798.definitionModule = "objectdraw";
                                                                  obj5798.definitionLine = 1802;
                                                                  obj5798.outer = this;
                                                                  var reader_objectdraw_outer5799 = function() {
                                                                    return this.outer;
                                                                  };
                                                                  obj5798.methods["outer"] = reader_objectdraw_outer5799;
                                                                  var obj_init_5798 = function() {
                                                                    var origSuperDepth = superDepth;
                                                                    superDepth = obj5798;
                                                                    var func5800 = function(argcv) {    // method draw(_)
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      var var_ctx = arguments[curarg];
                                                                      curarg++;
                                                                      // Start argument checking
                                                                      curarg = 1;
                                                                      setLineNumber(1819);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument checking
                                                                      setModuleName("objectdraw");
                                                                      setLineNumber(1820);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5803 = callmethodChecked(this, "theImage", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5805 = callmethodChecked(this, "x", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5807 = callmethodChecked(this, "y", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5809 = callmethodChecked(this, "width", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5811 = callmethodChecked(this, "height", []);
                                                                      // call case 6: other requests
                                                                      var call5812 = callmethodChecked(var_ctx, "drawImage(5)", [5], call5803, call5805, call5807, call5809, call5811);
                                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5812)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method draw(_) does not have " + 
                                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                                      return call5812;
                                                                    };
                                                                    func5800.paramTypes = [];
                                                                    func5800.paramTypes.push([]);
                                                                    func5800.paramCounts = [1];
                                                                    obj5798.methods["draw(1)"] = func5800;
                                                                    func5800.definitionLine = 1819;
                                                                    func5800.definitionModule = "objectdraw";
                                                                    var func5813 = function(argcv) {    // method asString
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      setModuleName("objectdraw");
                                                                      setLineNumber(1827);    // compilenode string
                                                                      var string5814 = new GraceString("");
                                                                      var string5817 = new GraceString("from url ");
                                                                      var opresult5819 = callmethodChecked(string5817, "++(1)", [1], var_url);
                                                                      var opresult5821 = callmethodChecked(opresult5819, "++(1)", [1], string5814);
                                                                      setLineNumber(1826);    // compilenode string
                                                                      var string5823 = new GraceString(", ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5826 = callmethodChecked(this, "width", []);
                                                                      var string5828 = new GraceString(", width ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5831 = callmethodChecked(this, "height", []);
                                                                      var string5833 = new GraceString("with height ");
                                                                      var opresult5835 = callmethodChecked(string5833, "++(1)", [1], call5831);
                                                                      var opresult5837 = callmethodChecked(opresult5835, "++(1)", [1], string5828);
                                                                      var opresult5839 = callmethodChecked(opresult5837, "++(1)", [1], call5826);
                                                                      var opresult5841 = callmethodChecked(opresult5839, "++(1)", [1], string5823);
                                                                      setLineNumber(1825);    // compilenode string
                                                                      var string5843 = new GraceString(") ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5846 = callmethodChecked(this, "y", []);
                                                                      var string5848 = new GraceString(",");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5851 = callmethodChecked(this, "x", []);
                                                                      var string5853 = new GraceString("DrawableImage at (");
                                                                      var opresult5855 = callmethodChecked(string5853, "++(1)", [1], call5851);
                                                                      var opresult5857 = callmethodChecked(opresult5855, "++(1)", [1], string5848);
                                                                      var opresult5859 = callmethodChecked(opresult5857, "++(1)", [1], call5846);
                                                                      var opresult5861 = callmethodChecked(opresult5859, "++(1)", [1], string5843);
                                                                      var opresult5863 = callmethodChecked(opresult5861, "++(1)", [1], opresult5841);
                                                                      var opresult5865 = callmethodChecked(opresult5863, "++(1)", [1], opresult5821);
                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5865)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method asString does not have " + 
                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                      return opresult5865;
                                                                    };
                                                                    func5813.paramCounts = [0];
                                                                    obj5798.methods["asString"] = func5813;
                                                                    func5813.definitionLine = 1824;
                                                                    func5813.definitionModule = "objectdraw";
                                                                    setLineNumber(1809);    // compilenode identifier
                                                                    // call case 6: other requests
                                                                    setLineNumber(0);    // compilenode member
                                                                    // call case 3: self.outer request
                                                                    var call5868 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onSelf = true;
                                                                    var call5869 = callmethodChecked(call5868, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                    obj5798.superobj = call5869;
                                                                    if (call5869.data) obj5798.data = call5869.data;
                                                                    if (call5869.hasOwnProperty('_value'))
                                                                        obj5798._value = call5869._value;
                                                                    setLineNumber(1811);    // compilenode string
                                                                    var string5871 = new GraceString("img");
                                                                    // call case 6: other requests
                                                                    var call5872 = callmethodChecked(var_document, "createElement(1)", [1], string5871);
                                                                    obj5798.data["theImage"] = call5872;
                                                                    var reader_objectdraw_theImage5873 = function() {
                                                                      return this.data["theImage"];
                                                                    };
                                                                    obj5798.methods["theImage"] = reader_objectdraw_theImage5873;
                                                                    obj5798.data["theImage"] = call5872;
                                                                    var writer_objectdraw_theImage5873 = function(argcv, o) {
                                                                      this.data["theImage"] = o;
                                                                      return GraceDone;
                                                                    };
                                                                    obj5798.methods["theImage:=(1)"] = writer_objectdraw_theImage5873;
                                                                    reader_objectdraw_theImage5873.confidential = true;
                                                                    writer_objectdraw_theImage5873.confidential = true;
                                                                    obj5798.mutable = true;
                                                                    setLineNumber(1812);    // compilenode identifier
                                                                    // call case 6: other requests
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5876 = callmethodChecked(this, "theImage", []);
                                                                    var call5877 = callmethodChecked(call5876, "src:=(1)", [1], var_url);
                                                                    setLineNumber(1814);    // compilenode string
                                                                    var string5879 = new GraceString("load");
                                                                    var block5880 = new GraceBlock(this, 1814, 1);
                                                                    setLineNumber(1);    // compilenode identifier
                                                                    block5880.real = function(var___95____95__24) {
                                                                      setLineNumber(1815);    // compilenode identifier
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5882 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                      return call5882;
                                                                    };
                                                                    // call case 6: other requests
                                                                    setLineNumber(1814);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5884 = callmethodChecked(this, "theImage", []);
                                                                    var call5885 = callmethodChecked(call5884, "addEventListener(2)", [2], string5879, block5880);
                                                                    superDepth = origSuperDepth;
                                                                  };
                                                                  obj_init_5798.apply(obj5798, []);
                                                                  setLineNumber(1802);    // return value
                                                                  if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj5798)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method drawableImageAt(_)size(_)url(_)on(_) does not have " + 
                                                                              callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                                  return obj5798;
                                                                };
                                                                func5797.paramTypes = [];
                                                                func5797.paramTypes.push([]);
                                                                func5797.paramTypes.push([]);
                                                                func5797.paramTypes.push([type_String, "url"]);
                                                                func5797.paramTypes.push([]);
                                                                func5797.paramCounts = [1, 1, 1, 1];
                                                                this.methods["drawableImageAt(1)size(1)url(1)on(1)"] = func5797;
                                                                func5797.definitionLine = 1802;
                                                                func5797.definitionModule = "objectdraw";
                                                                  var func5886 = function(argcv) {    // method drawableImageAt(_)size(_)url(_)on(_)$object(_)
                                                                    var curarg = 1;
                                                                    var var_location__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_dimensions__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_url = arguments[curarg];
                                                                    curarg++;
                                                                    var var_canvas__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var inheritingObject = arguments[curarg++];
                                                                    // Start argument processing
                                                                    curarg = 1;
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in drawableImageAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1803);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1804);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in url (arg list 3), which corresponds to parameter url, does not have " + 
                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1805);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument processing
                                                                    setModuleName("objectdraw");
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var obj5887 = Grace_allocObject(null, "drawableImageAt(1)size(1)url(1)on(1)");
                                                                    obj5887.definitionModule = "objectdraw";
                                                                    obj5887.definitionLine = 1802;
                                                                    var inho5887 = inheritingObject;
                                                                    while (inho5887.superobj) inho5887 = inho5887.superobj;
                                                                    inho5887.superobj = obj5887;
                                                                    obj5887.data = inheritingObject.data;
                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                      obj5887._value = inheritingObject._value;
                                                                    obj5887.outer = this;
                                                                    var reader_objectdraw_outer5888 = function() {
                                                                      return this.outer;
                                                                    };
                                                                    obj5887.methods["outer"] = reader_objectdraw_outer5888;
                                                                    var obj_init_5887 = function() {
                                                                      var origSuperDepth = superDepth;
                                                                      superDepth = obj5887;
                                                                      var func5889 = function(argcv) {    // method draw(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_ctx = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1819);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                    callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1820);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5892 = callmethodChecked(this, "theImage", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5894 = callmethodChecked(this, "x", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5896 = callmethodChecked(this, "y", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5898 = callmethodChecked(this, "width", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5900 = callmethodChecked(this, "height", []);
                                                                        // call case 6: other requests
                                                                        var call5901 = callmethodChecked(var_ctx, "drawImage(5)", [5], call5892, call5894, call5896, call5898, call5900);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5901)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method draw(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5901;
                                                                      };
                                                                      func5889.paramTypes = [];
                                                                      func5889.paramTypes.push([]);
                                                                      func5889.paramCounts = [1];
                                                                      obj5887.methods["draw(1)"] = func5889;
                                                                      func5889.definitionLine = 1819;
                                                                      func5889.definitionModule = "objectdraw";
                                                                      var func5902 = function(argcv) {    // method asString
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1827);    // compilenode string
                                                                        var string5903 = new GraceString("");
                                                                        var string5906 = new GraceString("from url ");
                                                                        var opresult5908 = callmethodChecked(string5906, "++(1)", [1], var_url);
                                                                        var opresult5910 = callmethodChecked(opresult5908, "++(1)", [1], string5903);
                                                                        setLineNumber(1826);    // compilenode string
                                                                        var string5912 = new GraceString(", ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5915 = callmethodChecked(this, "width", []);
                                                                        var string5917 = new GraceString(", width ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5920 = callmethodChecked(this, "height", []);
                                                                        var string5922 = new GraceString("with height ");
                                                                        var opresult5924 = callmethodChecked(string5922, "++(1)", [1], call5920);
                                                                        var opresult5926 = callmethodChecked(opresult5924, "++(1)", [1], string5917);
                                                                        var opresult5928 = callmethodChecked(opresult5926, "++(1)", [1], call5915);
                                                                        var opresult5930 = callmethodChecked(opresult5928, "++(1)", [1], string5912);
                                                                        setLineNumber(1825);    // compilenode string
                                                                        var string5932 = new GraceString(") ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5935 = callmethodChecked(this, "y", []);
                                                                        var string5937 = new GraceString(",");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5940 = callmethodChecked(this, "x", []);
                                                                        var string5942 = new GraceString("DrawableImage at (");
                                                                        var opresult5944 = callmethodChecked(string5942, "++(1)", [1], call5940);
                                                                        var opresult5946 = callmethodChecked(opresult5944, "++(1)", [1], string5937);
                                                                        var opresult5948 = callmethodChecked(opresult5946, "++(1)", [1], call5935);
                                                                        var opresult5950 = callmethodChecked(opresult5948, "++(1)", [1], string5932);
                                                                        var opresult5952 = callmethodChecked(opresult5950, "++(1)", [1], opresult5930);
                                                                        var opresult5954 = callmethodChecked(opresult5952, "++(1)", [1], opresult5910);
                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5954)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method asString does not have " + 
                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                        return opresult5954;
                                                                      };
                                                                      func5902.paramCounts = [0];
                                                                      obj5887.methods["asString"] = func5902;
                                                                      func5902.definitionLine = 1824;
                                                                      func5902.definitionModule = "objectdraw";
                                                                      setLineNumber(1809);    // compilenode identifier
                                                                      // call case 6: other requests
                                                                      setLineNumber(0);    // compilenode member
                                                                      // call case 3: self.outer request
                                                                      var call5957 = callmethodChecked(superDepth, "outer", [0]);
                                                                      onSelf = true;
                                                                      var call5958 = callmethodChecked(call5957, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                      obj5887.superobj = call5958;
                                                                      if (call5958.data) obj5887.data = call5958.data;
                                                                      if (call5958.hasOwnProperty('_value'))
                                                                          obj5887._value = call5958._value;
                                                                      setLineNumber(1811);    // compilenode string
                                                                      var string5960 = new GraceString("img");
                                                                      // call case 6: other requests
                                                                      var call5961 = callmethodChecked(var_document, "createElement(1)", [1], string5960);
                                                                      obj5887.data["theImage"] = call5961;
                                                                      var reader_objectdraw_theImage5962 = function() {
                                                                        return this.data["theImage"];
                                                                      };
                                                                      obj5887.methods["theImage"] = reader_objectdraw_theImage5962;
                                                                      obj5887.data["theImage"] = call5961;
                                                                      var writer_objectdraw_theImage5962 = function(argcv, o) {
                                                                        this.data["theImage"] = o;
                                                                        return GraceDone;
                                                                      };
                                                                      obj5887.methods["theImage:=(1)"] = writer_objectdraw_theImage5962;
                                                                      reader_objectdraw_theImage5962.confidential = true;
                                                                      writer_objectdraw_theImage5962.confidential = true;
                                                                      obj5887.mutable = true;
                                                                      setLineNumber(1812);    // compilenode identifier
                                                                      // call case 6: other requests
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5965 = callmethodChecked(this, "theImage", []);
                                                                      var call5966 = callmethodChecked(call5965, "src:=(1)", [1], var_url);
                                                                      setLineNumber(1814);    // compilenode string
                                                                      var string5968 = new GraceString("load");
                                                                      var block5969 = new GraceBlock(this, 1814, 1);
                                                                      setLineNumber(1);    // compilenode identifier
                                                                      block5969.real = function(var___95____95__24) {
                                                                        setLineNumber(1815);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5971 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                        return call5971;
                                                                      };
                                                                      // call case 6: other requests
                                                                      setLineNumber(1814);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5973 = callmethodChecked(this, "theImage", []);
                                                                      var call5974 = callmethodChecked(call5973, "addEventListener(2)", [2], string5968, block5969);
                                                                      superDepth = origSuperDepth;
                                                                    };
                                                                    obj_init_5887.apply(inheritingObject, []);
                                                                    return obj5887;
                                                                    };
                                                                    func5886.paramTypes = [];
                                                                    func5886.paramTypes.push([]);
                                                                    func5886.paramTypes.push([]);
                                                                    func5886.paramTypes.push([type_String, "url"]);
                                                                    func5886.paramTypes.push([]);
                                                                    this.methods["drawableImageAt(1)size(1)url(1)on(1)$object(1)"] = func5886;
                                                                  setLineNumber(1843);    // compilenode method
                                                                  var func5975 = function(argcv) {    // method lineFrom(_)to(_)on(_)
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    var var_start__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_end__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_canvas__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    // Start argument checking
                                                                    curarg = 1;
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter start', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in to (arg list 2), which corresponds to parameter end', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1844);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument checking
                                                                    setModuleName("objectdraw");
                                                                    setLineNumber(1843);    // compilenode object
                                                                    var obj5976 = Grace_allocObject(null, "lineFrom(_)to(_)on(_)");
                                                                    obj5976.definitionModule = "objectdraw";
                                                                    obj5976.definitionLine = 1843;
                                                                    obj5976.outer = this;
                                                                    var reader_objectdraw_outer5977 = function() {
                                                                      return this.outer;
                                                                    };
                                                                    obj5976.methods["outer"] = reader_objectdraw_outer5977;
                                                                    var obj_init_5976 = function() {
                                                                      var origSuperDepth = superDepth;
                                                                      superDepth = obj5976;
                                                                      var func5978 = function(argcv) {    // method start
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1853);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5980 = callmethodChecked(this, "location", []);
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call5980)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method start does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        return call5980;
                                                                      };
                                                                      func5978.paramCounts = [0];
                                                                      obj5976.methods["start"] = func5978;
                                                                      func5978.definitionLine = 1850;
                                                                      func5978.definitionModule = "objectdraw";
                                                                      var func5981 = function(argcv) {    // method end
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1859);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5983 = callmethodChecked(this, "theEnd", []);
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call5983)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method end does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        return call5983;
                                                                      };
                                                                      func5981.paramCounts = [0];
                                                                      obj5976.methods["end"] = func5981;
                                                                      func5981.definitionLine = 1856;
                                                                      func5981.definitionModule = "objectdraw";
                                                                      var func5984 = function(argcv) {    // method start:=(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newStart = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1864);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in start:= (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1867);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5986 = callmethodChecked(this, "location:=(1)", [1], var_newStart);
                                                                        setLineNumber(1868);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5988 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5988)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method start:=(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5988;
                                                                      };
                                                                      func5984.paramTypes = [];
                                                                      func5984.paramTypes.push([]);
                                                                      func5984.paramCounts = [1];
                                                                      obj5976.methods["start:=(1)"] = func5984;
                                                                      func5984.definitionLine = 1864;
                                                                      func5984.definitionModule = "objectdraw";
                                                                      var func5989 = function(argcv) {    // method end:=(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newEnd = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1871);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in end:= (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1874);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5991 = callmethodChecked(this, "theEnd:=(1)", [1], var_newEnd);
                                                                        setLineNumber(1875);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5993 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5993)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method end:=(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5993;
                                                                      };
                                                                      func5989.paramTypes = [];
                                                                      func5989.paramTypes.push([]);
                                                                      func5989.paramCounts = [1];
                                                                      obj5976.methods["end:=(1)"] = func5989;
                                                                      func5989.definitionLine = 1871;
                                                                      func5989.definitionModule = "objectdraw";
                                                                      var func5994 = function(argcv) {    // method setEndPoints(_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newStart = arguments[curarg];
                                                                        curarg++;
                                                                        var var_newEnd = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1878);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in setEndPoints (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in setEndPoints (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1881);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5996 = callmethodChecked(this, "start:=(1)", [1], var_newStart);
                                                                        setLineNumber(1882);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5998 = callmethodChecked(this, "end:=(1)", [1], var_newEnd);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5998)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method setEndPoints(_,_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5998;
                                                                      };
                                                                      func5994.paramTypes = [];
                                                                      func5994.paramTypes.push([]);
                                                                      func5994.paramTypes.push([]);
                                                                      func5994.paramCounts = [2];
                                                                      obj5976.methods["setEndPoints(2)"] = func5994;
                                                                      func5994.definitionLine = 1878;
                                                                      func5994.definitionModule = "objectdraw";
                                                                      var func5999 = function(argcv) {    // method draw(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_ctx = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1886);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                    callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1888);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6001 = callmethodChecked(this, "color", []);
                                                                        var var_col = call6001;
                                                                        setLineNumber(1889);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6003 = callmethodChecked(var_ctx, "save", []);
                                                                        setLineNumber(1890);    // compilenode string
                                                                        var string6005 = new GraceString(")");
                                                                        // call case 6: other requests
                                                                        var call6008 = callmethodChecked(var_col, "blue", []);
                                                                        var string6010 = new GraceString(", ");
                                                                        // call case 6: other requests
                                                                        var call6013 = callmethodChecked(var_col, "green", []);
                                                                        var string6015 = new GraceString(", ");
                                                                        // call case 6: other requests
                                                                        var call6018 = callmethodChecked(var_col, "red", []);
                                                                        var string6020 = new GraceString("rgb(");
                                                                        var opresult6022 = callmethodChecked(string6020, "++(1)", [1], call6018);
                                                                        var opresult6024 = callmethodChecked(opresult6022, "++(1)", [1], string6015);
                                                                        var opresult6026 = callmethodChecked(opresult6024, "++(1)", [1], call6013);
                                                                        var opresult6028 = callmethodChecked(opresult6026, "++(1)", [1], string6010);
                                                                        var opresult6030 = callmethodChecked(opresult6028, "++(1)", [1], call6008);
                                                                        var opresult6032 = callmethodChecked(opresult6030, "++(1)", [1], string6005);
                                                                        // call case 6: other requests
                                                                        var call6033 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult6032);
                                                                        setLineNumber(1891);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6035 = callmethodChecked(var_ctx, "beginPath", []);
                                                                        setLineNumber(1892);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6039 = callmethodChecked(this, "location", []);
                                                                        var call6040 = callmethodChecked(call6039, "x", []);
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6043 = callmethodChecked(this, "location", []);
                                                                        var call6044 = callmethodChecked(call6043, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6045 = callmethodChecked(var_ctx, "moveTo(2)", [2], call6040, call6044);
                                                                        setLineNumber(1893);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6049 = callmethodChecked(this, "theEnd", []);
                                                                        var call6050 = callmethodChecked(call6049, "x", []);
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6053 = callmethodChecked(this, "theEnd", []);
                                                                        var call6054 = callmethodChecked(call6053, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6055 = callmethodChecked(var_ctx, "lineTo(2)", [2], call6050, call6054);
                                                                        setLineNumber(1894);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6057 = callmethodChecked(var_ctx, "stroke", []);
                                                                        setLineNumber(1895);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6059 = callmethodChecked(var_ctx, "restore", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6059)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method draw(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6059;
                                                                      };
                                                                      func5999.paramTypes = [];
                                                                      func5999.paramTypes.push([]);
                                                                      func5999.paramCounts = [1];
                                                                      obj5976.methods["draw(1)"] = func5999;
                                                                      func5999.definitionLine = 1886;
                                                                      func5999.definitionModule = "objectdraw";
                                                                      var func6060 = function(argcv) {    // method moveBy(_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_dx = arguments[curarg];
                                                                        curarg++;
                                                                        var var_dy = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1898);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1901);    // compilenode identifier
                                                                        var opresult6064 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6067 = callmethodChecked(this, "location", []);
                                                                        var opresult6069 = callmethodChecked(call6067, "+(1)", [1], opresult6064);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6070 = callmethodChecked(this, "location:=(1)", [1], opresult6069);
                                                                        setLineNumber(1902);    // compilenode identifier
                                                                        var opresult6074 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6077 = callmethodChecked(this, "theEnd", []);
                                                                        var opresult6079 = callmethodChecked(call6077, "+(1)", [1], opresult6074);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6080 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6079);
                                                                        setLineNumber(1903);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6082 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6082)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method moveBy(_,_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6082;
                                                                      };
                                                                      func6060.paramTypes = [];
                                                                      func6060.paramTypes.push([type_Number, "dx"]);
                                                                      func6060.paramTypes.push([type_Number, "dy"]);
                                                                      func6060.paramCounts = [2];
                                                                      obj5976.methods["moveBy(2)"] = func6060;
                                                                      func6060.definitionLine = 1898;
                                                                      func6060.definitionModule = "objectdraw";
                                                                      var func6083 = function(argcv) {    // method moveTo(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newLocn = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1906);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1909);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6086 = callmethodChecked(this, "location", []);
                                                                        var diff6089 = callmethodChecked(var_newLocn, "-(1)", [1], call6086);
                                                                        var call6090 = callmethodChecked(diff6089, "x", []);
                                                                        var var_dx = call6090;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dx)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("value of def 'dx' is not of type Number"));
                                                                        setLineNumber(1910);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6093 = callmethodChecked(this, "location", []);
                                                                        var diff6096 = callmethodChecked(var_newLocn, "-(1)", [1], call6093);
                                                                        var call6097 = callmethodChecked(diff6096, "y", []);
                                                                        var var_dy = call6097;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dy)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("value of def 'dy' is not of type Number"));
                                                                        setLineNumber(1911);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6099 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                                        setLineNumber(1912);    // compilenode identifier
                                                                        var opresult6103 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6106 = callmethodChecked(this, "theEnd", []);
                                                                        var opresult6108 = callmethodChecked(call6106, "+(1)", [1], opresult6103);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6109 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6108);
                                                                        setLineNumber(1913);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6111 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6111)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method moveTo(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6111;
                                                                      };
                                                                      func6083.paramTypes = [];
                                                                      func6083.paramTypes.push([]);
                                                                      func6083.paramCounts = [1];
                                                                      obj5976.methods["moveTo(1)"] = func6083;
                                                                      func6083.definitionLine = 1906;
                                                                      func6083.definitionModule = "objectdraw";
                                                                      var func6112 = function(argcv) {    // method dist2(_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_v = arguments[curarg];
                                                                        curarg++;
                                                                        var var_w = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1917);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in dist2 (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in dist2 (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1919);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6115 = callmethodChecked(var_w, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6118 = callmethodChecked(var_v, "y", []);
                                                                        var diff6120 = callmethodChecked(call6118, "-(1)", [1], call6115);
                                                                        var opresult6122 = callmethodChecked(diff6120, "^(1)", [1], new GraceNum(2));
                                                                        // call case 6: other requests
                                                                        var call6126 = callmethodChecked(var_w, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6129 = callmethodChecked(var_v, "x", []);
                                                                        var diff6131 = callmethodChecked(call6129, "-(1)", [1], call6126);
                                                                        var opresult6133 = callmethodChecked(diff6131, "^(1)", [1], new GraceNum(2));
                                                                        var opresult6135 = callmethodChecked(opresult6133, "+(1)", [1], opresult6122);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult6135)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method dist2(_,_) does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        return opresult6135;
                                                                      };
                                                                      func6112.paramTypes = [];
                                                                      func6112.paramTypes.push([]);
                                                                      func6112.paramTypes.push([]);
                                                                      func6112.confidential = true;
                                                                      func6112.paramCounts = [2];
                                                                      obj5976.methods["dist2(2)"] = func6112;
                                                                      func6112.definitionLine = 1917;
                                                                      func6112.definitionModule = "objectdraw";
                                                                      var func6136 = function(argcv) {    // method distToSegmentSquared(_,_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_p = arguments[curarg];
                                                                        curarg++;
                                                                        var var_v = arguments[curarg];
                                                                        curarg++;
                                                                        var var_w = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1923);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in distToSegmentSquared (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in distToSegmentSquared (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 3 in distToSegmentSquared (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1927);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6138 = callmethodChecked(this, "dist2(2)", [2], var_v, var_w);
                                                                        var var_l2 = call6138;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_l2)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("initial value of var 'l2' is not of type Number"));
                                                                        var if6139 = GraceDone;
                                                                        setLineNumber(1928);    // compilenode identifier
                                                                        var opresult6142 = callmethodChecked(var_l2, "==(1)", [1], new GraceNum(0));
                                                                        if (Grace_isTrue(opresult6142)) {
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6144 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                          return call6144;
                                                                        }
                                                                        setLineNumber(1929);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6147 = callmethodChecked(var_v, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6150 = callmethodChecked(var_w, "y", []);
                                                                        var diff6152 = callmethodChecked(call6150, "-(1)", [1], call6147);
                                                                        // call case 6: other requests
                                                                        var call6155 = callmethodChecked(var_v, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6158 = callmethodChecked(var_p, "y", []);
                                                                        var diff6160 = callmethodChecked(call6158, "-(1)", [1], call6155);
                                                                        var prod6162 = callmethodChecked(diff6160, "*(1)", [1], diff6152);
                                                                        // call case 6: other requests
                                                                        var call6165 = callmethodChecked(var_v, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6168 = callmethodChecked(var_w, "x", []);
                                                                        var diff6170 = callmethodChecked(call6168, "-(1)", [1], call6165);
                                                                        // call case 6: other requests
                                                                        var call6173 = callmethodChecked(var_v, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6176 = callmethodChecked(var_p, "x", []);
                                                                        var diff6178 = callmethodChecked(call6176, "-(1)", [1], call6173);
                                                                        var prod6180 = callmethodChecked(diff6178, "*(1)", [1], diff6170);
                                                                        var opresult6182 = callmethodChecked(prod6180, "+(1)", [1], prod6162);
                                                                        var quotient6184 = callmethodChecked(opresult6182, "/(1)", [1], var_l2);
                                                                        var var_t = quotient6184;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_t)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("initial value of var 't' is not of type Number"));
                                                                        var if6185 = GraceDone;
                                                                        setLineNumber(1930);    // compilenode identifier
                                                                        var opresult6188 = callmethodChecked(var_t, "<(1)", [1], new GraceNum(0));
                                                                        if (Grace_isTrue(opresult6188)) {
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6190 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                          return call6190;
                                                                        }
                                                                        var if6191 = GraceDone;
                                                                        setLineNumber(1931);    // compilenode identifier
                                                                        var opresult6194 = callmethodChecked(var_t, ">(1)", [1], new GraceNum(1));
                                                                        if (Grace_isTrue(opresult6194)) {
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6196 = callmethodChecked(this, "dist2(2)", [2], var_p, var_w);
                                                                          return call6196;
                                                                        }
                                                                        setLineNumber(1933);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6199 = callmethodChecked(var_v, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6202 = callmethodChecked(var_w, "y", []);
                                                                        var diff6204 = callmethodChecked(call6202, "-(1)", [1], call6199);
                                                                        var prod6207 = callmethodChecked(var_t, "*(1)", [1], diff6204);
                                                                        // call case 6: other requests
                                                                        var call6210 = callmethodChecked(var_v, "y", []);
                                                                        var opresult6212 = callmethodChecked(call6210, "+(1)", [1], prod6207);
                                                                        setLineNumber(1932);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6215 = callmethodChecked(var_v, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6218 = callmethodChecked(var_w, "x", []);
                                                                        var diff6220 = callmethodChecked(call6218, "-(1)", [1], call6215);
                                                                        var prod6223 = callmethodChecked(var_t, "*(1)", [1], diff6220);
                                                                        // call case 6: other requests
                                                                        var call6226 = callmethodChecked(var_v, "x", []);
                                                                        var opresult6228 = callmethodChecked(call6226, "+(1)", [1], prod6223);
                                                                        var opresult6230 = callmethodChecked(opresult6228, "@(1)", [1], opresult6212);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6231 = callmethodChecked(this, "dist2(2)", [2], var_p, opresult6230);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6231)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method distToSegmentSquared(_,_,_) does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        return call6231;
                                                                      };
                                                                      func6136.paramTypes = [];
                                                                      func6136.paramTypes.push([]);
                                                                      func6136.paramTypes.push([]);
                                                                      func6136.paramTypes.push([]);
                                                                      func6136.confidential = true;
                                                                      func6136.paramCounts = [3];
                                                                      obj5976.methods["distToSegmentSquared(3)"] = func6136;
                                                                      func6136.definitionLine = 1923;
                                                                      func6136.definitionModule = "objectdraw";
                                                                      var func6232 = function(argcv) {    // method distToSegment(_,_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_p = arguments[curarg];
                                                                        curarg++;
                                                                        var var_v = arguments[curarg];
                                                                        curarg++;
                                                                        var var_w = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1936);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in distToSegment (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in distToSegment (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 3 in distToSegment (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1938);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6235 = callmethodChecked(this, "distToSegmentSquared(3)", [3], var_p, var_v, var_w);
                                                                        var call6236 = callmethodChecked(call6235, "sqrt", []);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6236)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method distToSegment(_,_,_) does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        return call6236;
                                                                      };
                                                                      func6232.paramTypes = [];
                                                                      func6232.paramTypes.push([]);
                                                                      func6232.paramTypes.push([]);
                                                                      func6232.paramTypes.push([]);
                                                                      func6232.paramCounts = [3];
                                                                      obj5976.methods["distToSegment(3)"] = func6232;
                                                                      func6232.definitionLine = 1936;
                                                                      func6232.definitionModule = "objectdraw";
                                                                      var func6237 = function(argcv) {    // method contains(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_pt = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1941);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1945);    // compilenode num
                                                                        var var_tolerance = new GraceNum(2);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_tolerance)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("value of def 'tolerance' is not of type Number"));
                                                                        setLineNumber(1946);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6241 = callmethodChecked(this, "start", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6243 = callmethodChecked(this, "end", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6244 = callmethodChecked(this, "distToSegment(3)", [3], var_pt, call6241, call6243);
                                                                        var opresult6246 = callmethodChecked(call6244, "<(1)", [1], var_tolerance);
                                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult6246)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method contains(_) does not have " + 
                                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                        return opresult6246;
                                                                      };
                                                                      func6237.paramTypes = [];
                                                                      func6237.paramTypes.push([]);
                                                                      func6237.paramCounts = [1];
                                                                      obj5976.methods["contains(1)"] = func6237;
                                                                      func6237.definitionLine = 1941;
                                                                      func6237.definitionModule = "objectdraw";
                                                                      var func6247 = function(argcv) {    // method asString
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1951);    // compilenode string
                                                                        var string6248 = new GraceString("");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6251 = callmethodChecked(this, "color", []);
                                                                        var string6253 = new GraceString(" with color ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6256 = callmethodChecked(this, "end", []);
                                                                        var string6258 = new GraceString(" to ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6261 = callmethodChecked(this, "start", []);
                                                                        var string6263 = new GraceString("Line from ");
                                                                        var opresult6265 = callmethodChecked(string6263, "++(1)", [1], call6261);
                                                                        var opresult6267 = callmethodChecked(opresult6265, "++(1)", [1], string6258);
                                                                        var opresult6269 = callmethodChecked(opresult6267, "++(1)", [1], call6256);
                                                                        var opresult6271 = callmethodChecked(opresult6269, "++(1)", [1], string6253);
                                                                        var opresult6273 = callmethodChecked(opresult6271, "++(1)", [1], call6251);
                                                                        var opresult6275 = callmethodChecked(opresult6273, "++(1)", [1], string6248);
                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6275)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method asString does not have " + 
                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                        return opresult6275;
                                                                      };
                                                                      func6247.paramCounts = [0];
                                                                      obj5976.methods["asString"] = func6247;
                                                                      func6247.definitionLine = 1949;
                                                                      func6247.definitionModule = "objectdraw";
                                                                      setLineNumber(1846);    // compilenode identifier
                                                                      // call case 6: other requests
                                                                      setLineNumber(0);    // compilenode member
                                                                      // call case 3: self.outer request
                                                                      var call6278 = callmethodChecked(superDepth, "outer", [0]);
                                                                      onSelf = true;
                                                                      var call6279 = callmethodChecked(call6278, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_start__39__, var_canvas__39__, this);
                                                                      obj5976.superobj = call6279;
                                                                      if (call6279.data) obj5976.data = call6279.data;
                                                                      if (call6279.hasOwnProperty('_value'))
                                                                          obj5976._value = call6279._value;
                                                                      setLineNumber(1848);    // compilenode identifier
                                                                      obj5976.data["theEnd"] = var_end__39__;
                                                                      var reader_objectdraw_theEnd6280 = function() {
                                                                        return this.data["theEnd"];
                                                                      };
                                                                      obj5976.methods["theEnd"] = reader_objectdraw_theEnd6280;
                                                                      obj5976.data["theEnd"] = var_end__39__;
                                                                      var writer_objectdraw_theEnd6280 = function(argcv, o) {
                                                                        this.data["theEnd"] = o;
                                                                        return GraceDone;
                                                                      };
                                                                      obj5976.methods["theEnd:=(1)"] = writer_objectdraw_theEnd6280;
                                                                      reader_objectdraw_theEnd6280.confidential = true;
                                                                      writer_objectdraw_theEnd6280.confidential = true;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_end__39__)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("initial value of var 'theEnd' is not of type Point"));
                                                                      obj5976.mutable = true;
                                                                      setLineNumber(1862);    // compilenode identifier
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call6282 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                      superDepth = origSuperDepth;
                                                                    };
                                                                    obj_init_5976.apply(obj5976, []);
                                                                    setLineNumber(1843);    // return value
                                                                    if (!Grace_isTrue(callmethod(var_Line, "match(1)", [1], obj5976)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method lineFrom(_)to(_)on(_) does not have " + 
                                                                                callmethod(var_Line, "asString", [0])._value + "."));
                                                                    return obj5976;
                                                                  };
                                                                  func5975.paramTypes = [];
                                                                  func5975.paramTypes.push([]);
                                                                  func5975.paramTypes.push([]);
                                                                  func5975.paramTypes.push([]);
                                                                  func5975.paramCounts = [1, 1, 1];
                                                                  this.methods["lineFrom(1)to(1)on(1)"] = func5975;
                                                                  func5975.definitionLine = 1843;
                                                                  func5975.definitionModule = "objectdraw";
                                                                    var func6283 = function(argcv) {    // method lineFrom(_)to(_)on(_)$object(_)
                                                                      var curarg = 1;
                                                                      var var_start__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      var var_end__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      var var_canvas__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      var inheritingObject = arguments[curarg++];
                                                                      // Start argument processing
                                                                      curarg = 1;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter start', does not have " + 
                                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in to (arg list 2), which corresponds to parameter end', does not have " + 
                                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      setLineNumber(1844);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument processing
                                                                      setModuleName("objectdraw");
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var obj6284 = Grace_allocObject(null, "lineFrom(1)to(1)on(1)");
                                                                      obj6284.definitionModule = "objectdraw";
                                                                      obj6284.definitionLine = 1843;
                                                                      var inho6284 = inheritingObject;
                                                                      while (inho6284.superobj) inho6284 = inho6284.superobj;
                                                                      inho6284.superobj = obj6284;
                                                                      obj6284.data = inheritingObject.data;
                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                        obj6284._value = inheritingObject._value;
                                                                      obj6284.outer = this;
                                                                      var reader_objectdraw_outer6285 = function() {
                                                                        return this.outer;
                                                                      };
                                                                      obj6284.methods["outer"] = reader_objectdraw_outer6285;
                                                                      var obj_init_6284 = function() {
                                                                        var origSuperDepth = superDepth;
                                                                        superDepth = obj6284;
                                                                        var func6286 = function(argcv) {    // method start
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1853);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6288 = callmethodChecked(this, "location", []);
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call6288)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method start does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          return call6288;
                                                                        };
                                                                        func6286.paramCounts = [0];
                                                                        obj6284.methods["start"] = func6286;
                                                                        func6286.definitionLine = 1850;
                                                                        func6286.definitionModule = "objectdraw";
                                                                        var func6289 = function(argcv) {    // method end
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1859);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6291 = callmethodChecked(this, "theEnd", []);
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call6291)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method end does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          return call6291;
                                                                        };
                                                                        func6289.paramCounts = [0];
                                                                        obj6284.methods["end"] = func6289;
                                                                        func6289.definitionLine = 1856;
                                                                        func6289.definitionModule = "objectdraw";
                                                                        var func6292 = function(argcv) {    // method start:=(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newStart = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1864);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in start:= (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1867);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6294 = callmethodChecked(this, "location:=(1)", [1], var_newStart);
                                                                          setLineNumber(1868);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6296 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6296)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method start:=(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6296;
                                                                        };
                                                                        func6292.paramTypes = [];
                                                                        func6292.paramTypes.push([]);
                                                                        func6292.paramCounts = [1];
                                                                        obj6284.methods["start:=(1)"] = func6292;
                                                                        func6292.definitionLine = 1864;
                                                                        func6292.definitionModule = "objectdraw";
                                                                        var func6297 = function(argcv) {    // method end:=(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newEnd = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1871);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in end:= (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1874);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6299 = callmethodChecked(this, "theEnd:=(1)", [1], var_newEnd);
                                                                          setLineNumber(1875);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6301 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6301)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method end:=(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6301;
                                                                        };
                                                                        func6297.paramTypes = [];
                                                                        func6297.paramTypes.push([]);
                                                                        func6297.paramCounts = [1];
                                                                        obj6284.methods["end:=(1)"] = func6297;
                                                                        func6297.definitionLine = 1871;
                                                                        func6297.definitionModule = "objectdraw";
                                                                        var func6302 = function(argcv) {    // method setEndPoints(_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newStart = arguments[curarg];
                                                                          curarg++;
                                                                          var var_newEnd = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1878);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in setEndPoints (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in setEndPoints (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1881);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6304 = callmethodChecked(this, "start:=(1)", [1], var_newStart);
                                                                          setLineNumber(1882);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6306 = callmethodChecked(this, "end:=(1)", [1], var_newEnd);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6306)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method setEndPoints(_,_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6306;
                                                                        };
                                                                        func6302.paramTypes = [];
                                                                        func6302.paramTypes.push([]);
                                                                        func6302.paramTypes.push([]);
                                                                        func6302.paramCounts = [2];
                                                                        obj6284.methods["setEndPoints(2)"] = func6302;
                                                                        func6302.definitionLine = 1878;
                                                                        func6302.definitionModule = "objectdraw";
                                                                        var func6307 = function(argcv) {    // method draw(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_ctx = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1886);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                      callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1888);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6309 = callmethodChecked(this, "color", []);
                                                                          var var_col = call6309;
                                                                          setLineNumber(1889);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6311 = callmethodChecked(var_ctx, "save", []);
                                                                          setLineNumber(1890);    // compilenode string
                                                                          var string6313 = new GraceString(")");
                                                                          // call case 6: other requests
                                                                          var call6316 = callmethodChecked(var_col, "blue", []);
                                                                          var string6318 = new GraceString(", ");
                                                                          // call case 6: other requests
                                                                          var call6321 = callmethodChecked(var_col, "green", []);
                                                                          var string6323 = new GraceString(", ");
                                                                          // call case 6: other requests
                                                                          var call6326 = callmethodChecked(var_col, "red", []);
                                                                          var string6328 = new GraceString("rgb(");
                                                                          var opresult6330 = callmethodChecked(string6328, "++(1)", [1], call6326);
                                                                          var opresult6332 = callmethodChecked(opresult6330, "++(1)", [1], string6323);
                                                                          var opresult6334 = callmethodChecked(opresult6332, "++(1)", [1], call6321);
                                                                          var opresult6336 = callmethodChecked(opresult6334, "++(1)", [1], string6318);
                                                                          var opresult6338 = callmethodChecked(opresult6336, "++(1)", [1], call6316);
                                                                          var opresult6340 = callmethodChecked(opresult6338, "++(1)", [1], string6313);
                                                                          // call case 6: other requests
                                                                          var call6341 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult6340);
                                                                          setLineNumber(1891);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6343 = callmethodChecked(var_ctx, "beginPath", []);
                                                                          setLineNumber(1892);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6347 = callmethodChecked(this, "location", []);
                                                                          var call6348 = callmethodChecked(call6347, "x", []);
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6351 = callmethodChecked(this, "location", []);
                                                                          var call6352 = callmethodChecked(call6351, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6353 = callmethodChecked(var_ctx, "moveTo(2)", [2], call6348, call6352);
                                                                          setLineNumber(1893);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6357 = callmethodChecked(this, "theEnd", []);
                                                                          var call6358 = callmethodChecked(call6357, "x", []);
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6361 = callmethodChecked(this, "theEnd", []);
                                                                          var call6362 = callmethodChecked(call6361, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6363 = callmethodChecked(var_ctx, "lineTo(2)", [2], call6358, call6362);
                                                                          setLineNumber(1894);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6365 = callmethodChecked(var_ctx, "stroke", []);
                                                                          setLineNumber(1895);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6367 = callmethodChecked(var_ctx, "restore", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6367)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method draw(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6367;
                                                                        };
                                                                        func6307.paramTypes = [];
                                                                        func6307.paramTypes.push([]);
                                                                        func6307.paramCounts = [1];
                                                                        obj6284.methods["draw(1)"] = func6307;
                                                                        func6307.definitionLine = 1886;
                                                                        func6307.definitionModule = "objectdraw";
                                                                        var func6368 = function(argcv) {    // method moveBy(_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_dx = arguments[curarg];
                                                                          curarg++;
                                                                          var var_dy = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1898);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1901);    // compilenode identifier
                                                                          var opresult6372 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6375 = callmethodChecked(this, "location", []);
                                                                          var opresult6377 = callmethodChecked(call6375, "+(1)", [1], opresult6372);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6378 = callmethodChecked(this, "location:=(1)", [1], opresult6377);
                                                                          setLineNumber(1902);    // compilenode identifier
                                                                          var opresult6382 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6385 = callmethodChecked(this, "theEnd", []);
                                                                          var opresult6387 = callmethodChecked(call6385, "+(1)", [1], opresult6382);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6388 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6387);
                                                                          setLineNumber(1903);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6390 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6390)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method moveBy(_,_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6390;
                                                                        };
                                                                        func6368.paramTypes = [];
                                                                        func6368.paramTypes.push([type_Number, "dx"]);
                                                                        func6368.paramTypes.push([type_Number, "dy"]);
                                                                        func6368.paramCounts = [2];
                                                                        obj6284.methods["moveBy(2)"] = func6368;
                                                                        func6368.definitionLine = 1898;
                                                                        func6368.definitionModule = "objectdraw";
                                                                        var func6391 = function(argcv) {    // method moveTo(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newLocn = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1906);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1909);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6394 = callmethodChecked(this, "location", []);
                                                                          var diff6397 = callmethodChecked(var_newLocn, "-(1)", [1], call6394);
                                                                          var call6398 = callmethodChecked(diff6397, "x", []);
                                                                          var var_dx = call6398;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dx)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("value of def 'dx' is not of type Number"));
                                                                          setLineNumber(1910);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6401 = callmethodChecked(this, "location", []);
                                                                          var diff6404 = callmethodChecked(var_newLocn, "-(1)", [1], call6401);
                                                                          var call6405 = callmethodChecked(diff6404, "y", []);
                                                                          var var_dy = call6405;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dy)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("value of def 'dy' is not of type Number"));
                                                                          setLineNumber(1911);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6407 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                                          setLineNumber(1912);    // compilenode identifier
                                                                          var opresult6411 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6414 = callmethodChecked(this, "theEnd", []);
                                                                          var opresult6416 = callmethodChecked(call6414, "+(1)", [1], opresult6411);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6417 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6416);
                                                                          setLineNumber(1913);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6419 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6419)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method moveTo(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6419;
                                                                        };
                                                                        func6391.paramTypes = [];
                                                                        func6391.paramTypes.push([]);
                                                                        func6391.paramCounts = [1];
                                                                        obj6284.methods["moveTo(1)"] = func6391;
                                                                        func6391.definitionLine = 1906;
                                                                        func6391.definitionModule = "objectdraw";
                                                                        var func6420 = function(argcv) {    // method dist2(_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_v = arguments[curarg];
                                                                          curarg++;
                                                                          var var_w = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1917);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in dist2 (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in dist2 (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1919);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6423 = callmethodChecked(var_w, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6426 = callmethodChecked(var_v, "y", []);
                                                                          var diff6428 = callmethodChecked(call6426, "-(1)", [1], call6423);
                                                                          var opresult6430 = callmethodChecked(diff6428, "^(1)", [1], new GraceNum(2));
                                                                          // call case 6: other requests
                                                                          var call6434 = callmethodChecked(var_w, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6437 = callmethodChecked(var_v, "x", []);
                                                                          var diff6439 = callmethodChecked(call6437, "-(1)", [1], call6434);
                                                                          var opresult6441 = callmethodChecked(diff6439, "^(1)", [1], new GraceNum(2));
                                                                          var opresult6443 = callmethodChecked(opresult6441, "+(1)", [1], opresult6430);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult6443)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method dist2(_,_) does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          return opresult6443;
                                                                        };
                                                                        func6420.paramTypes = [];
                                                                        func6420.paramTypes.push([]);
                                                                        func6420.paramTypes.push([]);
                                                                        func6420.confidential = true;
                                                                        func6420.paramCounts = [2];
                                                                        obj6284.methods["dist2(2)"] = func6420;
                                                                        func6420.definitionLine = 1917;
                                                                        func6420.definitionModule = "objectdraw";
                                                                        var func6444 = function(argcv) {    // method distToSegmentSquared(_,_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_p = arguments[curarg];
                                                                          curarg++;
                                                                          var var_v = arguments[curarg];
                                                                          curarg++;
                                                                          var var_w = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1923);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in distToSegmentSquared (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in distToSegmentSquared (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 3 in distToSegmentSquared (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1927);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6446 = callmethodChecked(this, "dist2(2)", [2], var_v, var_w);
                                                                          var var_l2 = call6446;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_l2)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'l2' is not of type Number"));
                                                                          var if6447 = GraceDone;
                                                                          setLineNumber(1928);    // compilenode identifier
                                                                          var opresult6450 = callmethodChecked(var_l2, "==(1)", [1], new GraceNum(0));
                                                                          if (Grace_isTrue(opresult6450)) {
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6452 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                            return call6452;
                                                                          }
                                                                          setLineNumber(1929);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6455 = callmethodChecked(var_v, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6458 = callmethodChecked(var_w, "y", []);
                                                                          var diff6460 = callmethodChecked(call6458, "-(1)", [1], call6455);
                                                                          // call case 6: other requests
                                                                          var call6463 = callmethodChecked(var_v, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6466 = callmethodChecked(var_p, "y", []);
                                                                          var diff6468 = callmethodChecked(call6466, "-(1)", [1], call6463);
                                                                          var prod6470 = callmethodChecked(diff6468, "*(1)", [1], diff6460);
                                                                          // call case 6: other requests
                                                                          var call6473 = callmethodChecked(var_v, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6476 = callmethodChecked(var_w, "x", []);
                                                                          var diff6478 = callmethodChecked(call6476, "-(1)", [1], call6473);
                                                                          // call case 6: other requests
                                                                          var call6481 = callmethodChecked(var_v, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6484 = callmethodChecked(var_p, "x", []);
                                                                          var diff6486 = callmethodChecked(call6484, "-(1)", [1], call6481);
                                                                          var prod6488 = callmethodChecked(diff6486, "*(1)", [1], diff6478);
                                                                          var opresult6490 = callmethodChecked(prod6488, "+(1)", [1], prod6470);
                                                                          var quotient6492 = callmethodChecked(opresult6490, "/(1)", [1], var_l2);
                                                                          var var_t = quotient6492;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_t)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 't' is not of type Number"));
                                                                          var if6493 = GraceDone;
                                                                          setLineNumber(1930);    // compilenode identifier
                                                                          var opresult6496 = callmethodChecked(var_t, "<(1)", [1], new GraceNum(0));
                                                                          if (Grace_isTrue(opresult6496)) {
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6498 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                            return call6498;
                                                                          }
                                                                          var if6499 = GraceDone;
                                                                          setLineNumber(1931);    // compilenode identifier
                                                                          var opresult6502 = callmethodChecked(var_t, ">(1)", [1], new GraceNum(1));
                                                                          if (Grace_isTrue(opresult6502)) {
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6504 = callmethodChecked(this, "dist2(2)", [2], var_p, var_w);
                                                                            return call6504;
                                                                          }
                                                                          setLineNumber(1933);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6507 = callmethodChecked(var_v, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6510 = callmethodChecked(var_w, "y", []);
                                                                          var diff6512 = callmethodChecked(call6510, "-(1)", [1], call6507);
                                                                          var prod6515 = callmethodChecked(var_t, "*(1)", [1], diff6512);
                                                                          // call case 6: other requests
                                                                          var call6518 = callmethodChecked(var_v, "y", []);
                                                                          var opresult6520 = callmethodChecked(call6518, "+(1)", [1], prod6515);
                                                                          setLineNumber(1932);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6523 = callmethodChecked(var_v, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6526 = callmethodChecked(var_w, "x", []);
                                                                          var diff6528 = callmethodChecked(call6526, "-(1)", [1], call6523);
                                                                          var prod6531 = callmethodChecked(var_t, "*(1)", [1], diff6528);
                                                                          // call case 6: other requests
                                                                          var call6534 = callmethodChecked(var_v, "x", []);
                                                                          var opresult6536 = callmethodChecked(call6534, "+(1)", [1], prod6531);
                                                                          var opresult6538 = callmethodChecked(opresult6536, "@(1)", [1], opresult6520);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6539 = callmethodChecked(this, "dist2(2)", [2], var_p, opresult6538);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6539)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method distToSegmentSquared(_,_,_) does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          return call6539;
                                                                        };
                                                                        func6444.paramTypes = [];
                                                                        func6444.paramTypes.push([]);
                                                                        func6444.paramTypes.push([]);
                                                                        func6444.paramTypes.push([]);
                                                                        func6444.confidential = true;
                                                                        func6444.paramCounts = [3];
                                                                        obj6284.methods["distToSegmentSquared(3)"] = func6444;
                                                                        func6444.definitionLine = 1923;
                                                                        func6444.definitionModule = "objectdraw";
                                                                        var func6540 = function(argcv) {    // method distToSegment(_,_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_p = arguments[curarg];
                                                                          curarg++;
                                                                          var var_v = arguments[curarg];
                                                                          curarg++;
                                                                          var var_w = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1936);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in distToSegment (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in distToSegment (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 3 in distToSegment (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1938);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6543 = callmethodChecked(this, "distToSegmentSquared(3)", [3], var_p, var_v, var_w);
                                                                          var call6544 = callmethodChecked(call6543, "sqrt", []);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6544)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method distToSegment(_,_,_) does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          return call6544;
                                                                        };
                                                                        func6540.paramTypes = [];
                                                                        func6540.paramTypes.push([]);
                                                                        func6540.paramTypes.push([]);
                                                                        func6540.paramTypes.push([]);
                                                                        func6540.paramCounts = [3];
                                                                        obj6284.methods["distToSegment(3)"] = func6540;
                                                                        func6540.definitionLine = 1936;
                                                                        func6540.definitionModule = "objectdraw";
                                                                        var func6545 = function(argcv) {    // method contains(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_pt = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1941);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1945);    // compilenode num
                                                                          var var_tolerance = new GraceNum(2);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_tolerance)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("value of def 'tolerance' is not of type Number"));
                                                                          setLineNumber(1946);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6549 = callmethodChecked(this, "start", []);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6551 = callmethodChecked(this, "end", []);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6552 = callmethodChecked(this, "distToSegment(3)", [3], var_pt, call6549, call6551);
                                                                          var opresult6554 = callmethodChecked(call6552, "<(1)", [1], var_tolerance);
                                                                          if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult6554)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method contains(_) does not have " + 
                                                                                      callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                          return opresult6554;
                                                                        };
                                                                        func6545.paramTypes = [];
                                                                        func6545.paramTypes.push([]);
                                                                        func6545.paramCounts = [1];
                                                                        obj6284.methods["contains(1)"] = func6545;
                                                                        func6545.definitionLine = 1941;
                                                                        func6545.definitionModule = "objectdraw";
                                                                        var func6555 = function(argcv) {    // method asString
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          setModuleName("objectdraw");
                                                                          setLineNumber(1951);    // compilenode string
                                                                          var string6556 = new GraceString("");
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6559 = callmethodChecked(this, "color", []);
                                                                          var string6561 = new GraceString(" with color ");
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6564 = callmethodChecked(this, "end", []);
                                                                          var string6566 = new GraceString(" to ");
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6569 = callmethodChecked(this, "start", []);
                                                                          var string6571 = new GraceString("Line from ");
                                                                          var opresult6573 = callmethodChecked(string6571, "++(1)", [1], call6569);
                                                                          var opresult6575 = callmethodChecked(opresult6573, "++(1)", [1], string6566);
                                                                          var opresult6577 = callmethodChecked(opresult6575, "++(1)", [1], call6564);
                                                                          var opresult6579 = callmethodChecked(opresult6577, "++(1)", [1], string6561);
                                                                          var opresult6581 = callmethodChecked(opresult6579, "++(1)", [1], call6559);
                                                                          var opresult6583 = callmethodChecked(opresult6581, "++(1)", [1], string6556);
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6583)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method asString does not have " + 
                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                          return opresult6583;
                                                                        };
                                                                        func6555.paramCounts = [0];
                                                                        obj6284.methods["asString"] = func6555;
                                                                        func6555.definitionLine = 1949;
                                                                        func6555.definitionModule = "objectdraw";
                                                                        setLineNumber(1846);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        setLineNumber(0);    // compilenode member
                                                                        // call case 3: self.outer request
                                                                        var call6586 = callmethodChecked(superDepth, "outer", [0]);
                                                                        onSelf = true;
                                                                        var call6587 = callmethodChecked(call6586, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_start__39__, var_canvas__39__, this);
                                                                        obj6284.superobj = call6587;
                                                                        if (call6587.data) obj6284.data = call6587.data;
                                                                        if (call6587.hasOwnProperty('_value'))
                                                                            obj6284._value = call6587._value;
                                                                        setLineNumber(1848);    // compilenode identifier
                                                                        obj6284.data["theEnd"] = var_end__39__;
                                                                        var reader_objectdraw_theEnd6588 = function() {
                                                                          return this.data["theEnd"];
                                                                        };
                                                                        obj6284.methods["theEnd"] = reader_objectdraw_theEnd6588;
                                                                        obj6284.data["theEnd"] = var_end__39__;
                                                                        var writer_objectdraw_theEnd6588 = function(argcv, o) {
                                                                          this.data["theEnd"] = o;
                                                                          return GraceDone;
                                                                        };
                                                                        obj6284.methods["theEnd:=(1)"] = writer_objectdraw_theEnd6588;
                                                                        reader_objectdraw_theEnd6588.confidential = true;
                                                                        writer_objectdraw_theEnd6588.confidential = true;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_end__39__)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("initial value of var 'theEnd' is not of type Point"));
                                                                        obj6284.mutable = true;
                                                                        setLineNumber(1862);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6590 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                        superDepth = origSuperDepth;
                                                                      };
                                                                      obj_init_6284.apply(inheritingObject, []);
                                                                      return obj6284;
                                                                      };
                                                                      func6283.paramTypes = [];
                                                                      func6283.paramTypes.push([]);
                                                                      func6283.paramTypes.push([]);
                                                                      func6283.paramTypes.push([]);
                                                                      this.methods["lineFrom(1)to(1)on(1)$object(1)"] = func6283;
                                                                    setLineNumber(1955);    // compilenode method
                                                                    var func6591 = function(argcv) {    // method lineFrom(_)length(_)direction(_)on(_)
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      var var_pt = arguments[curarg];
                                                                      curarg++;
                                                                      var var_len = arguments[curarg];
                                                                      curarg++;
                                                                      var var_radians = arguments[curarg];
                                                                      curarg++;
                                                                      var var_canvas__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      // Start argument checking
                                                                      curarg = 1;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in length (arg list 2), which corresponds to parameter len, does not have " + 
                                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in direction (arg list 3), which corresponds to parameter radians, does not have " + 
                                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      setLineNumber(1956);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument checking
                                                                      setModuleName("objectdraw");
                                                                      setLineNumber(1955);    // compilenode object
                                                                      var obj6592 = Grace_allocObject(null, "lineFrom(_)length(_)direction(_)on(_)");
                                                                      obj6592.definitionModule = "objectdraw";
                                                                      obj6592.definitionLine = 1955;
                                                                      obj6592.outer = this;
                                                                      var reader_objectdraw_outer6593 = function() {
                                                                        return this.outer;
                                                                      };
                                                                      obj6592.methods["outer"] = reader_objectdraw_outer6593;
                                                                      var obj_init_6592 = function() {
                                                                        var origSuperDepth = superDepth;
                                                                        superDepth = obj6592;
                                                                        setLineNumber(1961);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        var call6596 = callmethodChecked(var_math, "sin(1)", [1], var_radians);
                                                                        // call case 6: other requests
                                                                        var call6599 = callmethodChecked(var_len, "prefix-", [0]);
                                                                        var prod6601 = callmethodChecked(call6599, "*(1)", [1], call6596);
                                                                        setLineNumber(1960);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        var call6604 = callmethodChecked(var_math, "cos(1)", [1], var_radians);
                                                                        var prod6607 = callmethodChecked(var_len, "*(1)", [1], call6604);
                                                                        var opresult6609 = callmethodChecked(prod6607, "@(1)", [1], prod6601);
                                                                        var opresult6612 = callmethodChecked(var_pt, "+(1)", [1], opresult6609);
                                                                        setLineNumber(1961);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        setLineNumber(0);    // compilenode member
                                                                        // call case 3: self.outer request
                                                                        var call6614 = callmethodChecked(superDepth, "outer", [0]);
                                                                        onSelf = true;
                                                                        var call6615 = callmethodChecked(call6614, "lineFrom(1)to(1)on(1)$object(1)", [1, 1, 1, 1], var_pt, opresult6612, var_canvas__39__, this);
                                                                        obj6592.superobj = call6615;
                                                                        if (call6615.data) obj6592.data = call6615.data;
                                                                        if (call6615.hasOwnProperty('_value'))
                                                                            obj6592._value = call6615._value;
                                                                        superDepth = origSuperDepth;
                                                                      };
                                                                      obj_init_6592.apply(obj6592, []);
                                                                      setLineNumber(1955);    // return value
                                                                      if (!Grace_isTrue(callmethod(var_Line, "match(1)", [1], obj6592)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method lineFrom(_)length(_)direction(_)on(_) does not have " + 
                                                                                  callmethod(var_Line, "asString", [0])._value + "."));
                                                                      return obj6592;
                                                                    };
                                                                    func6591.paramTypes = [];
                                                                    func6591.paramTypes.push([]);
                                                                    func6591.paramTypes.push([type_Number, "len"]);
                                                                    func6591.paramTypes.push([type_Number, "radians"]);
                                                                    func6591.paramTypes.push([]);
                                                                    func6591.paramCounts = [1, 1, 1, 1];
                                                                    this.methods["lineFrom(1)length(1)direction(1)on(1)"] = func6591;
                                                                    func6591.definitionLine = 1955;
                                                                    func6591.definitionModule = "objectdraw";
                                                                      var func6616 = function(argcv) {    // method lineFrom(_)length(_)direction(_)on(_)$object(_)
                                                                        var curarg = 1;
                                                                        var var_pt = arguments[curarg];
                                                                        curarg++;
                                                                        var var_len = arguments[curarg];
                                                                        curarg++;
                                                                        var var_radians = arguments[curarg];
                                                                        curarg++;
                                                                        var var_canvas__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        var inheritingObject = arguments[curarg++];
                                                                        // Start argument processing
                                                                        curarg = 1;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in length (arg list 2), which corresponds to parameter len, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in direction (arg list 3), which corresponds to parameter radians, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        setLineNumber(1956);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument processing
                                                                        setModuleName("objectdraw");
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var obj6617 = Grace_allocObject(null, "lineFrom(1)length(1)direction(1)on(1)");
                                                                        obj6617.definitionModule = "objectdraw";
                                                                        obj6617.definitionLine = 1955;
                                                                        var inho6617 = inheritingObject;
                                                                        while (inho6617.superobj) inho6617 = inho6617.superobj;
                                                                        inho6617.superobj = obj6617;
                                                                        obj6617.data = inheritingObject.data;
                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                          obj6617._value = inheritingObject._value;
                                                                        obj6617.outer = this;
                                                                        var reader_objectdraw_outer6618 = function() {
                                                                          return this.outer;
                                                                        };
                                                                        obj6617.methods["outer"] = reader_objectdraw_outer6618;
                                                                        var obj_init_6617 = function() {
                                                                          var origSuperDepth = superDepth;
                                                                          superDepth = obj6617;
                                                                          setLineNumber(1961);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          var call6621 = callmethodChecked(var_math, "sin(1)", [1], var_radians);
                                                                          // call case 6: other requests
                                                                          var call6624 = callmethodChecked(var_len, "prefix-", [0]);
                                                                          var prod6626 = callmethodChecked(call6624, "*(1)", [1], call6621);
                                                                          setLineNumber(1960);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          var call6629 = callmethodChecked(var_math, "cos(1)", [1], var_radians);
                                                                          var prod6632 = callmethodChecked(var_len, "*(1)", [1], call6629);
                                                                          var opresult6634 = callmethodChecked(prod6632, "@(1)", [1], prod6626);
                                                                          var opresult6637 = callmethodChecked(var_pt, "+(1)", [1], opresult6634);
                                                                          setLineNumber(1961);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          setLineNumber(0);    // compilenode member
                                                                          // call case 3: self.outer request
                                                                          var call6639 = callmethodChecked(superDepth, "outer", [0]);
                                                                          onSelf = true;
                                                                          var call6640 = callmethodChecked(call6639, "lineFrom(1)to(1)on(1)$object(1)", [1, 1, 1, 1], var_pt, opresult6637, var_canvas__39__, this);
                                                                          obj6617.superobj = call6640;
                                                                          if (call6640.data) obj6617.data = call6640.data;
                                                                          if (call6640.hasOwnProperty('_value'))
                                                                              obj6617._value = call6640._value;
                                                                          superDepth = origSuperDepth;
                                                                        };
                                                                        obj_init_6617.apply(inheritingObject, []);
                                                                        return obj6617;
                                                                        };
                                                                        func6616.paramTypes = [];
                                                                        func6616.paramTypes.push([]);
                                                                        func6616.paramTypes.push([type_Number, "len"]);
                                                                        func6616.paramTypes.push([type_Number, "radians"]);
                                                                        func6616.paramTypes.push([]);
                                                                        this.methods["lineFrom(1)length(1)direction(1)on(1)$object(1)"] = func6616;
                                                                      setLineNumber(1964);    // compilenode method
                                                                      var func6641 = function(argcv) {    // method textAt(_)with(_)on(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_location__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        var var_contents__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        var var_canvas__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in textAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in with (arg list 2), which corresponds to parameter contents', does not have " + 
                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        setLineNumber(1965);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("objectdraw");
                                                                        setLineNumber(1964);    // compilenode object
                                                                        var obj6642 = Grace_allocObject(null, "textAt(_)with(_)on(_)");
                                                                        obj6642.definitionModule = "objectdraw";
                                                                        obj6642.definitionLine = 1964;
                                                                        obj6642.outer = this;
                                                                        var reader_objectdraw_outer6643 = function() {
                                                                          return this.outer;
                                                                        };
                                                                        obj6642.methods["outer"] = reader_objectdraw_outer6643;
                                                                        var obj_init_6642 = function() {
                                                                          var origSuperDepth = superDepth;
                                                                          superDepth = obj6642;
                                                                          var func6644 = function(argcv) {    // method width
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(1975);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6646 = callmethodChecked(this, "wid", []);
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6646)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method width does not have " + 
                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                            return call6646;
                                                                          };
                                                                          func6644.paramCounts = [0];
                                                                          obj6642.methods["width"] = func6644;
                                                                          func6644.definitionLine = 1974;
                                                                          func6644.definitionModule = "objectdraw";
                                                                          var func6647 = function(argcv) {    // method draw(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_ctx = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            setLineNumber(1979);    // compilenode identifier
                                                                            if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                        callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(1980);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6649 = callmethodChecked(this, "color", []);
                                                                            var var_col = call6649;
                                                                            setLineNumber(1981);    // compilenode member
                                                                            // call case 6: other requests
                                                                            var call6651 = callmethodChecked(var_ctx, "save", []);
                                                                            setLineNumber(1982);    // compilenode string
                                                                            var string6653 = new GraceString("pt sans-serif");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6656 = callmethodChecked(this, "fontSize", []);
                                                                            var string6658 = new GraceString("");
                                                                            var opresult6660 = callmethodChecked(string6658, "++(1)", [1], call6656);
                                                                            var opresult6662 = callmethodChecked(opresult6660, "++(1)", [1], string6653);
                                                                            // call case 6: other requests
                                                                            var call6663 = callmethodChecked(var_ctx, "font:=(1)", [1], opresult6662);
                                                                            setLineNumber(1983);    // compilenode string
                                                                            var string6665 = new GraceString(")");
                                                                            // call case 6: other requests
                                                                            var call6668 = callmethodChecked(var_col, "blue", []);
                                                                            var string6670 = new GraceString(", ");
                                                                            // call case 6: other requests
                                                                            var call6673 = callmethodChecked(var_col, "green", []);
                                                                            var string6675 = new GraceString(", ");
                                                                            // call case 6: other requests
                                                                            var call6678 = callmethodChecked(var_col, "red", []);
                                                                            var string6680 = new GraceString("rgb(");
                                                                            var opresult6682 = callmethodChecked(string6680, "++(1)", [1], call6678);
                                                                            var opresult6684 = callmethodChecked(opresult6682, "++(1)", [1], string6675);
                                                                            var opresult6686 = callmethodChecked(opresult6684, "++(1)", [1], call6673);
                                                                            var opresult6688 = callmethodChecked(opresult6686, "++(1)", [1], string6670);
                                                                            var opresult6690 = callmethodChecked(opresult6688, "++(1)", [1], call6668);
                                                                            var opresult6692 = callmethodChecked(opresult6690, "++(1)", [1], string6665);
                                                                            // call case 6: other requests
                                                                            var call6693 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult6692);
                                                                            setLineNumber(1984);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6696 = callmethodChecked(this, "contents", []);
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6699 = callmethodChecked(this, "location", []);
                                                                            var call6700 = callmethodChecked(call6699, "x", []);
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6703 = callmethodChecked(this, "location", []);
                                                                            var call6704 = callmethodChecked(call6703, "y", []);
                                                                            // call case 6: other requests
                                                                            var call6705 = callmethodChecked(var_ctx, "fillText(3)", [3], call6696, call6700, call6704);
                                                                            setLineNumber(1985);    // compilenode member
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6710 = callmethodChecked(this, "theContents", []);
                                                                            // call case 6: other requests
                                                                            var call6711 = callmethodChecked(var_ctx, "measureText(1)", [1], call6710);
                                                                            var call6712 = callmethodChecked(call6711, "width", []);
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6713 = callmethodChecked(this, "wid:=(1)", [1], call6712);
                                                                            setLineNumber(1986);    // compilenode member
                                                                            // call case 6: other requests
                                                                            var call6715 = callmethodChecked(var_ctx, "restore", []);
                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6715)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method draw(_) does not have " + 
                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                            return call6715;
                                                                          };
                                                                          func6647.paramTypes = [];
                                                                          func6647.paramTypes.push([]);
                                                                          func6647.paramCounts = [1];
                                                                          obj6642.methods["draw(1)"] = func6647;
                                                                          func6647.definitionLine = 1979;
                                                                          func6647.definitionModule = "objectdraw";
                                                                          var func6716 = function(argcv) {    // method contents
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(1991);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6718 = callmethodChecked(this, "theContents", []);
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6718)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method contents does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            return call6718;
                                                                          };
                                                                          func6716.paramCounts = [0];
                                                                          obj6642.methods["contents"] = func6716;
                                                                          func6716.definitionLine = 1990;
                                                                          func6716.definitionModule = "objectdraw";
                                                                          var func6719 = function(argcv) {    // method contents:=(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_newContents = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            setLineNumber(1995);    // compilenode identifier
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter newContents, does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(1996);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6721 = callmethodChecked(this, "theContents:=(1)", [1], var_newContents);
                                                                            setLineNumber(1997);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6723 = callmethodChecked(this, "notifyRedraw", []);
                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6723)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method contents:=(_) does not have " + 
                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                            return call6723;
                                                                          };
                                                                          func6719.paramTypes = [];
                                                                          func6719.paramTypes.push([type_String, "newContents"]);
                                                                          func6719.paramCounts = [1];
                                                                          obj6642.methods["contents:=(1)"] = func6719;
                                                                          func6719.definitionLine = 1995;
                                                                          func6719.definitionModule = "objectdraw";
                                                                          var func6724 = function(argcv) {    // method fontSize:=(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_size__39__ = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            setLineNumber(2001);    // compilenode identifier
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in fontSize:= (arg list 1), which corresponds to parameter size', does not have " + 
                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(2002);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6726 = callmethodChecked(this, "fsize:=(1)", [1], var_size__39__);
                                                                            setLineNumber(2003);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6728 = callmethodChecked(this, "notifyRedraw", []);
                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6728)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method fontSize:=(_) does not have " + 
                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                            return call6728;
                                                                          };
                                                                          func6724.paramTypes = [];
                                                                          func6724.paramTypes.push([type_Number, "size'"]);
                                                                          func6724.paramCounts = [1];
                                                                          obj6642.methods["fontSize:=(1)"] = func6724;
                                                                          func6724.definitionLine = 2001;
                                                                          func6724.definitionModule = "objectdraw";
                                                                          var func6729 = function(argcv) {    // method fontSize
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(2008);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6731 = callmethodChecked(this, "fsize", []);
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6731)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method fontSize does not have " + 
                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                            return call6731;
                                                                          };
                                                                          func6729.paramCounts = [0];
                                                                          obj6642.methods["fontSize"] = func6729;
                                                                          func6729.definitionLine = 2007;
                                                                          func6729.definitionModule = "objectdraw";
                                                                          var func6732 = function(argcv) {    // method asString
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("objectdraw");
                                                                            setLineNumber(2013);    // compilenode string
                                                                            var string6733 = new GraceString("");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6736 = callmethodChecked(this, "color", []);
                                                                            var string6738 = new GraceString(" and color ");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6741 = callmethodChecked(this, "contents", []);
                                                                            var string6743 = new GraceString(") with value ");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6746 = callmethodChecked(this, "y", []);
                                                                            var string6748 = new GraceString(",");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6751 = callmethodChecked(this, "x", []);
                                                                            var string6753 = new GraceString("Text at (");
                                                                            var opresult6755 = callmethodChecked(string6753, "++(1)", [1], call6751);
                                                                            var opresult6757 = callmethodChecked(opresult6755, "++(1)", [1], string6748);
                                                                            var opresult6759 = callmethodChecked(opresult6757, "++(1)", [1], call6746);
                                                                            var opresult6761 = callmethodChecked(opresult6759, "++(1)", [1], string6743);
                                                                            var opresult6763 = callmethodChecked(opresult6761, "++(1)", [1], call6741);
                                                                            var opresult6765 = callmethodChecked(opresult6763, "++(1)", [1], string6738);
                                                                            var opresult6767 = callmethodChecked(opresult6765, "++(1)", [1], call6736);
                                                                            var opresult6769 = callmethodChecked(opresult6767, "++(1)", [1], string6733);
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6769)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method asString does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            return opresult6769;
                                                                          };
                                                                          func6732.paramCounts = [0];
                                                                          obj6642.methods["asString"] = func6732;
                                                                          func6732.definitionLine = 2012;
                                                                          func6732.definitionModule = "objectdraw";
                                                                          setLineNumber(1968);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          setLineNumber(0);    // compilenode member
                                                                          // call case 3: self.outer request
                                                                          var call6772 = callmethodChecked(superDepth, "outer", [0]);
                                                                          onSelf = true;
                                                                          var call6773 = callmethodChecked(call6772, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                                          obj6642.superobj = call6773;
                                                                          if (call6773.data) obj6642.data = call6773.data;
                                                                          if (call6773.hasOwnProperty('_value'))
                                                                              obj6642._value = call6773._value;
                                                                          setLineNumber(1970);    // compilenode identifier
                                                                          obj6642.data["theContents"] = var_contents__39__;
                                                                          var reader_objectdraw_theContents6774 = function() {
                                                                            return this.data["theContents"];
                                                                          };
                                                                          obj6642.methods["theContents"] = reader_objectdraw_theContents6774;
                                                                          obj6642.data["theContents"] = var_contents__39__;
                                                                          var writer_objectdraw_theContents6774 = function(argcv, o) {
                                                                            this.data["theContents"] = o;
                                                                            return GraceDone;
                                                                          };
                                                                          obj6642.methods["theContents:=(1)"] = writer_objectdraw_theContents6774;
                                                                          reader_objectdraw_theContents6774.confidential = true;
                                                                          writer_objectdraw_theContents6774.confidential = true;
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_contents__39__)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'theContents' is not of type String"));
                                                                          obj6642.mutable = true;
                                                                          setLineNumber(1971);    // compilenode num
                                                                          obj6642.data["fsize"] = new GraceNum(10);
                                                                          var reader_objectdraw_fsize6775 = function() {
                                                                            return this.data["fsize"];
                                                                          };
                                                                          obj6642.methods["fsize"] = reader_objectdraw_fsize6775;
                                                                          obj6642.data["fsize"] = new GraceNum(10);
                                                                          var writer_objectdraw_fsize6775 = function(argcv, o) {
                                                                            this.data["fsize"] = o;
                                                                            return GraceDone;
                                                                          };
                                                                          obj6642.methods["fsize:=(1)"] = writer_objectdraw_fsize6775;
                                                                          writer_objectdraw_fsize6775.confidential = true;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], new GraceNum(10))))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'fsize' is not of type Number"));
                                                                          obj6642.mutable = true;
                                                                          setLineNumber(1972);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6778 = callmethodChecked(this, "fsize", []);
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6782 = callmethodChecked(this, "theContents", []);
                                                                          var call6783 = callmethodChecked(call6782, "size", []);
                                                                          var prod6785 = callmethodChecked(call6783, "*(1)", [1], call6778);
                                                                          var quotient6787 = callmethodChecked(prod6785, "/(1)", [1], new GraceNum(2));
                                                                          obj6642.data["wid"] = quotient6787;
                                                                          var reader_objectdraw_wid6788 = function() {
                                                                            return this.data["wid"];
                                                                          };
                                                                          obj6642.methods["wid"] = reader_objectdraw_wid6788;
                                                                          obj6642.data["wid"] = quotient6787;
                                                                          var writer_objectdraw_wid6788 = function(argcv, o) {
                                                                            this.data["wid"] = o;
                                                                            return GraceDone;
                                                                          };
                                                                          obj6642.methods["wid:=(1)"] = writer_objectdraw_wid6788;
                                                                          reader_objectdraw_wid6788.confidential = true;
                                                                          writer_objectdraw_wid6788.confidential = true;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], quotient6787)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'wid' is not of type Number"));
                                                                          obj6642.mutable = true;
                                                                          setLineNumber(2016);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6790 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                          superDepth = origSuperDepth;
                                                                        };
                                                                        obj_init_6642.apply(obj6642, []);
                                                                        setLineNumber(1964);    // return value
                                                                        if (!Grace_isTrue(callmethod(var_Text, "match(1)", [1], obj6642)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method textAt(_)with(_)on(_) does not have " + 
                                                                                    callmethod(var_Text, "asString", [0])._value + "."));
                                                                        return obj6642;
                                                                      };
                                                                      func6641.paramTypes = [];
                                                                      func6641.paramTypes.push([]);
                                                                      func6641.paramTypes.push([type_String, "contents'"]);
                                                                      func6641.paramTypes.push([]);
                                                                      func6641.paramCounts = [1, 1, 1];
                                                                      this.methods["textAt(1)with(1)on(1)"] = func6641;
                                                                      func6641.definitionLine = 1964;
                                                                      func6641.definitionModule = "objectdraw";
                                                                        var func6791 = function(argcv) {    // method textAt(_)with(_)on(_)$object(_)
                                                                          var curarg = 1;
                                                                          var var_location__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          var var_contents__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          var var_canvas__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          var inheritingObject = arguments[curarg++];
                                                                          // Start argument processing
                                                                          curarg = 1;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in textAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in with (arg list 2), which corresponds to parameter contents', does not have " + 
                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          setLineNumber(1965);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                      callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument processing
                                                                          setModuleName("objectdraw");
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var obj6792 = Grace_allocObject(null, "textAt(1)with(1)on(1)");
                                                                          obj6792.definitionModule = "objectdraw";
                                                                          obj6792.definitionLine = 1964;
                                                                          var inho6792 = inheritingObject;
                                                                          while (inho6792.superobj) inho6792 = inho6792.superobj;
                                                                          inho6792.superobj = obj6792;
                                                                          obj6792.data = inheritingObject.data;
                                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                                            obj6792._value = inheritingObject._value;
                                                                          obj6792.outer = this;
                                                                          var reader_objectdraw_outer6793 = function() {
                                                                            return this.outer;
                                                                          };
                                                                          obj6792.methods["outer"] = reader_objectdraw_outer6793;
                                                                          var obj_init_6792 = function() {
                                                                            var origSuperDepth = superDepth;
                                                                            superDepth = obj6792;
                                                                            var func6794 = function(argcv) {    // method width
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(1975);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6796 = callmethodChecked(this, "wid", []);
                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6796)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method width does not have " + 
                                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                                              return call6796;
                                                                            };
                                                                            func6794.paramCounts = [0];
                                                                            obj6792.methods["width"] = func6794;
                                                                            func6794.definitionLine = 1974;
                                                                            func6794.definitionModule = "objectdraw";
                                                                            var func6797 = function(argcv) {    // method draw(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_ctx = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(1979);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(1980);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6799 = callmethodChecked(this, "color", []);
                                                                              var var_col = call6799;
                                                                              setLineNumber(1981);    // compilenode member
                                                                              // call case 6: other requests
                                                                              var call6801 = callmethodChecked(var_ctx, "save", []);
                                                                              setLineNumber(1982);    // compilenode string
                                                                              var string6803 = new GraceString("pt sans-serif");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6806 = callmethodChecked(this, "fontSize", []);
                                                                              var string6808 = new GraceString("");
                                                                              var opresult6810 = callmethodChecked(string6808, "++(1)", [1], call6806);
                                                                              var opresult6812 = callmethodChecked(opresult6810, "++(1)", [1], string6803);
                                                                              // call case 6: other requests
                                                                              var call6813 = callmethodChecked(var_ctx, "font:=(1)", [1], opresult6812);
                                                                              setLineNumber(1983);    // compilenode string
                                                                              var string6815 = new GraceString(")");
                                                                              // call case 6: other requests
                                                                              var call6818 = callmethodChecked(var_col, "blue", []);
                                                                              var string6820 = new GraceString(", ");
                                                                              // call case 6: other requests
                                                                              var call6823 = callmethodChecked(var_col, "green", []);
                                                                              var string6825 = new GraceString(", ");
                                                                              // call case 6: other requests
                                                                              var call6828 = callmethodChecked(var_col, "red", []);
                                                                              var string6830 = new GraceString("rgb(");
                                                                              var opresult6832 = callmethodChecked(string6830, "++(1)", [1], call6828);
                                                                              var opresult6834 = callmethodChecked(opresult6832, "++(1)", [1], string6825);
                                                                              var opresult6836 = callmethodChecked(opresult6834, "++(1)", [1], call6823);
                                                                              var opresult6838 = callmethodChecked(opresult6836, "++(1)", [1], string6820);
                                                                              var opresult6840 = callmethodChecked(opresult6838, "++(1)", [1], call6818);
                                                                              var opresult6842 = callmethodChecked(opresult6840, "++(1)", [1], string6815);
                                                                              // call case 6: other requests
                                                                              var call6843 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult6842);
                                                                              setLineNumber(1984);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6846 = callmethodChecked(this, "contents", []);
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6849 = callmethodChecked(this, "location", []);
                                                                              var call6850 = callmethodChecked(call6849, "x", []);
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6853 = callmethodChecked(this, "location", []);
                                                                              var call6854 = callmethodChecked(call6853, "y", []);
                                                                              // call case 6: other requests
                                                                              var call6855 = callmethodChecked(var_ctx, "fillText(3)", [3], call6846, call6850, call6854);
                                                                              setLineNumber(1985);    // compilenode member
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6860 = callmethodChecked(this, "theContents", []);
                                                                              // call case 6: other requests
                                                                              var call6861 = callmethodChecked(var_ctx, "measureText(1)", [1], call6860);
                                                                              var call6862 = callmethodChecked(call6861, "width", []);
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6863 = callmethodChecked(this, "wid:=(1)", [1], call6862);
                                                                              setLineNumber(1986);    // compilenode member
                                                                              // call case 6: other requests
                                                                              var call6865 = callmethodChecked(var_ctx, "restore", []);
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6865)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method draw(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return call6865;
                                                                            };
                                                                            func6797.paramTypes = [];
                                                                            func6797.paramTypes.push([]);
                                                                            func6797.paramCounts = [1];
                                                                            obj6792.methods["draw(1)"] = func6797;
                                                                            func6797.definitionLine = 1979;
                                                                            func6797.definitionModule = "objectdraw";
                                                                            var func6866 = function(argcv) {    // method contents
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(1991);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6868 = callmethodChecked(this, "theContents", []);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6868)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return call6868;
                                                                            };
                                                                            func6866.paramCounts = [0];
                                                                            obj6792.methods["contents"] = func6866;
                                                                            func6866.definitionLine = 1990;
                                                                            func6866.definitionModule = "objectdraw";
                                                                            var func6869 = function(argcv) {    // method contents:=(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_newContents = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(1995);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter newContents, does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(1996);    // compilenode identifier
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6871 = callmethodChecked(this, "theContents:=(1)", [1], var_newContents);
                                                                              setLineNumber(1997);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6873 = callmethodChecked(this, "notifyRedraw", []);
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6873)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents:=(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return call6873;
                                                                            };
                                                                            func6869.paramTypes = [];
                                                                            func6869.paramTypes.push([type_String, "newContents"]);
                                                                            func6869.paramCounts = [1];
                                                                            obj6792.methods["contents:=(1)"] = func6869;
                                                                            func6869.definitionLine = 1995;
                                                                            func6869.definitionModule = "objectdraw";
                                                                            var func6874 = function(argcv) {    // method fontSize:=(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_size__39__ = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(2001);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in fontSize:= (arg list 1), which corresponds to parameter size', does not have " + 
                                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(2002);    // compilenode identifier
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6876 = callmethodChecked(this, "fsize:=(1)", [1], var_size__39__);
                                                                              setLineNumber(2003);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6878 = callmethodChecked(this, "notifyRedraw", []);
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6878)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method fontSize:=(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return call6878;
                                                                            };
                                                                            func6874.paramTypes = [];
                                                                            func6874.paramTypes.push([type_Number, "size'"]);
                                                                            func6874.paramCounts = [1];
                                                                            obj6792.methods["fontSize:=(1)"] = func6874;
                                                                            func6874.definitionLine = 2001;
                                                                            func6874.definitionModule = "objectdraw";
                                                                            var func6879 = function(argcv) {    // method fontSize
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(2008);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6881 = callmethodChecked(this, "fsize", []);
                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6881)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method fontSize does not have " + 
                                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                                              return call6881;
                                                                            };
                                                                            func6879.paramCounts = [0];
                                                                            obj6792.methods["fontSize"] = func6879;
                                                                            func6879.definitionLine = 2007;
                                                                            func6879.definitionModule = "objectdraw";
                                                                            var func6882 = function(argcv) {    // method asString
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(2013);    // compilenode string
                                                                              var string6883 = new GraceString("");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6886 = callmethodChecked(this, "color", []);
                                                                              var string6888 = new GraceString(" and color ");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6891 = callmethodChecked(this, "contents", []);
                                                                              var string6893 = new GraceString(") with value ");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6896 = callmethodChecked(this, "y", []);
                                                                              var string6898 = new GraceString(",");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6901 = callmethodChecked(this, "x", []);
                                                                              var string6903 = new GraceString("Text at (");
                                                                              var opresult6905 = callmethodChecked(string6903, "++(1)", [1], call6901);
                                                                              var opresult6907 = callmethodChecked(opresult6905, "++(1)", [1], string6898);
                                                                              var opresult6909 = callmethodChecked(opresult6907, "++(1)", [1], call6896);
                                                                              var opresult6911 = callmethodChecked(opresult6909, "++(1)", [1], string6893);
                                                                              var opresult6913 = callmethodChecked(opresult6911, "++(1)", [1], call6891);
                                                                              var opresult6915 = callmethodChecked(opresult6913, "++(1)", [1], string6888);
                                                                              var opresult6917 = callmethodChecked(opresult6915, "++(1)", [1], call6886);
                                                                              var opresult6919 = callmethodChecked(opresult6917, "++(1)", [1], string6883);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6919)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method asString does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return opresult6919;
                                                                            };
                                                                            func6882.paramCounts = [0];
                                                                            obj6792.methods["asString"] = func6882;
                                                                            func6882.definitionLine = 2012;
                                                                            func6882.definitionModule = "objectdraw";
                                                                            setLineNumber(1968);    // compilenode identifier
                                                                            // call case 6: other requests
                                                                            setLineNumber(0);    // compilenode member
                                                                            // call case 3: self.outer request
                                                                            var call6922 = callmethodChecked(superDepth, "outer", [0]);
                                                                            onSelf = true;
                                                                            var call6923 = callmethodChecked(call6922, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                                            obj6792.superobj = call6923;
                                                                            if (call6923.data) obj6792.data = call6923.data;
                                                                            if (call6923.hasOwnProperty('_value'))
                                                                                obj6792._value = call6923._value;
                                                                            setLineNumber(1970);    // compilenode identifier
                                                                            obj6792.data["theContents"] = var_contents__39__;
                                                                            var reader_objectdraw_theContents6924 = function() {
                                                                              return this.data["theContents"];
                                                                            };
                                                                            obj6792.methods["theContents"] = reader_objectdraw_theContents6924;
                                                                            obj6792.data["theContents"] = var_contents__39__;
                                                                            var writer_objectdraw_theContents6924 = function(argcv, o) {
                                                                              this.data["theContents"] = o;
                                                                              return GraceDone;
                                                                            };
                                                                            obj6792.methods["theContents:=(1)"] = writer_objectdraw_theContents6924;
                                                                            reader_objectdraw_theContents6924.confidential = true;
                                                                            writer_objectdraw_theContents6924.confidential = true;
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_contents__39__)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("initial value of var 'theContents' is not of type String"));
                                                                            obj6792.mutable = true;
                                                                            setLineNumber(1971);    // compilenode num
                                                                            obj6792.data["fsize"] = new GraceNum(10);
                                                                            var reader_objectdraw_fsize6925 = function() {
                                                                              return this.data["fsize"];
                                                                            };
                                                                            obj6792.methods["fsize"] = reader_objectdraw_fsize6925;
                                                                            obj6792.data["fsize"] = new GraceNum(10);
                                                                            var writer_objectdraw_fsize6925 = function(argcv, o) {
                                                                              this.data["fsize"] = o;
                                                                              return GraceDone;
                                                                            };
                                                                            obj6792.methods["fsize:=(1)"] = writer_objectdraw_fsize6925;
                                                                            writer_objectdraw_fsize6925.confidential = true;
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], new GraceNum(10))))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("initial value of var 'fsize' is not of type Number"));
                                                                            obj6792.mutable = true;
                                                                            setLineNumber(1972);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6928 = callmethodChecked(this, "fsize", []);
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6932 = callmethodChecked(this, "theContents", []);
                                                                            var call6933 = callmethodChecked(call6932, "size", []);
                                                                            var prod6935 = callmethodChecked(call6933, "*(1)", [1], call6928);
                                                                            var quotient6937 = callmethodChecked(prod6935, "/(1)", [1], new GraceNum(2));
                                                                            obj6792.data["wid"] = quotient6937;
                                                                            var reader_objectdraw_wid6938 = function() {
                                                                              return this.data["wid"];
                                                                            };
                                                                            obj6792.methods["wid"] = reader_objectdraw_wid6938;
                                                                            obj6792.data["wid"] = quotient6937;
                                                                            var writer_objectdraw_wid6938 = function(argcv, o) {
                                                                              this.data["wid"] = o;
                                                                              return GraceDone;
                                                                            };
                                                                            obj6792.methods["wid:=(1)"] = writer_objectdraw_wid6938;
                                                                            reader_objectdraw_wid6938.confidential = true;
                                                                            writer_objectdraw_wid6938.confidential = true;
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], quotient6937)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("initial value of var 'wid' is not of type Number"));
                                                                            obj6792.mutable = true;
                                                                            setLineNumber(2016);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6940 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                            superDepth = origSuperDepth;
                                                                          };
                                                                          obj_init_6792.apply(inheritingObject, []);
                                                                          return obj6792;
                                                                          };
                                                                          func6791.paramTypes = [];
                                                                          func6791.paramTypes.push([]);
                                                                          func6791.paramTypes.push([type_String, "contents'"]);
                                                                          func6791.paramTypes.push([]);
                                                                          this.methods["textAt(1)with(1)on(1)$object(1)"] = func6791;
                                                                        setLineNumber(2019);    // compilenode method
                                                                        var func6941 = function(argcv) {    // method textBoxWith(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_contents__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in textBoxWith (arg list 1), which corresponds to parameter contents', does not have " + 
                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("objectdraw");
                                                                          var obj6942 = Grace_allocObject(null, "textBoxWith(_)");
                                                                          obj6942.definitionModule = "objectdraw";
                                                                          obj6942.definitionLine = 2019;
                                                                          obj6942.outer = this;
                                                                          var reader_objectdraw_outer6943 = function() {
                                                                            return this.outer;
                                                                          };
                                                                          obj6942.methods["outer"] = reader_objectdraw_outer6943;
                                                                          var obj_init_6942 = function() {
                                                                            var origSuperDepth = superDepth;
                                                                            superDepth = obj6942;
                                                                            var func6944 = function(argcv) {    // method contents
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(2027);    // compilenode member
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6947 = callmethodChecked(this, "element", []);
                                                                              var call6948 = callmethodChecked(call6947, "textContent", []);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6948)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return call6948;
                                                                            };
                                                                            func6944.paramCounts = [0];
                                                                            obj6942.methods["contents"] = func6944;
                                                                            func6944.definitionLine = 2025;
                                                                            func6944.definitionModule = "objectdraw";
                                                                            var func6949 = function(argcv) {    // method contents:=(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_value = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(2030);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(2032);    // compilenode identifier
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6952 = callmethodChecked(this, "element", []);
                                                                              var call6953 = callmethodChecked(call6952, "textContent:=(1)", [1], var_value);
                                                                              setLineNumber(2033);    // return value
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents:=(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return var_done;
                                                                            };
                                                                            func6949.paramTypes = [];
                                                                            func6949.paramTypes.push([type_String, "value"]);
                                                                            func6949.paramCounts = [1];
                                                                            obj6942.methods["contents:=(1)"] = func6949;
                                                                            func6949.definitionLine = 2030;
                                                                            func6949.definitionModule = "objectdraw";
                                                                            var func6954 = function(argcv) {    // method asString
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("objectdraw");
                                                                              setLineNumber(2038);    // compilenode string
                                                                              var string6955 = new GraceString("");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6958 = callmethodChecked(this, "contents", []);
                                                                              var string6960 = new GraceString("a text box showing ");
                                                                              var opresult6962 = callmethodChecked(string6960, "++(1)", [1], call6958);
                                                                              var opresult6964 = callmethodChecked(opresult6962, "++(1)", [1], string6955);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6964)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method asString does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return opresult6964;
                                                                            };
                                                                            func6954.paramCounts = [0];
                                                                            obj6942.methods["asString"] = func6954;
                                                                            func6954.definitionLine = 2037;
                                                                            func6954.definitionModule = "objectdraw";
                                                                            setLineNumber(2023);    // compilenode string
                                                                            var string6966 = new GraceString("span");
                                                                            setLineNumber(0);    // compilenode identifier
                                                                            // call case 6: other requests
                                                                            // call case 3: self.outer request
                                                                            var call6968 = callmethodChecked(superDepth, "outer", [0]);
                                                                            onSelf = true;
                                                                            var call6969 = callmethodChecked(call6968, "componentOfElementType(1)$object(1)", [1, 1], string6966, this);
                                                                            obj6942.superobj = call6969;
                                                                            if (call6969.data) obj6942.data = call6969.data;
                                                                            if (call6969.hasOwnProperty('_value'))
                                                                                obj6942._value = call6969._value;
                                                                            setLineNumber(2041);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6971 = callmethodChecked(this, "contents:=(1)", [1], var_contents__39__);
                                                                            superDepth = origSuperDepth;
                                                                          };
                                                                          obj_init_6942.apply(obj6942, []);
                                                                          setLineNumber(2019);    // return value
                                                                          if (!Grace_isTrue(callmethod(var_TextBox, "match(1)", [1], obj6942)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method textBoxWith(_) does not have " + 
                                                                                      callmethod(var_TextBox, "asString", [0])._value + "."));
                                                                          return obj6942;
                                                                        };
                                                                        func6941.paramTypes = [];
                                                                        func6941.paramTypes.push([type_String, "contents'"]);
                                                                        func6941.paramCounts = [1];
                                                                        this.methods["textBoxWith(1)"] = func6941;
                                                                        func6941.definitionLine = 2019;
                                                                        func6941.definitionModule = "objectdraw";
                                                                          var func6972 = function(argcv) {    // method textBoxWith(_)$object(_)
                                                                            var curarg = 1;
                                                                            var var_contents__39__ = arguments[curarg];
                                                                            curarg++;
                                                                            var inheritingObject = arguments[curarg++];
                                                                            // Start argument processing
                                                                            curarg = 1;
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in textBoxWith (arg list 1), which corresponds to parameter contents', does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument processing
                                                                            setModuleName("objectdraw");
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var obj6973 = Grace_allocObject(null, "textBoxWith(1)");
                                                                            obj6973.definitionModule = "objectdraw";
                                                                            obj6973.definitionLine = 2019;
                                                                            var inho6973 = inheritingObject;
                                                                            while (inho6973.superobj) inho6973 = inho6973.superobj;
                                                                            inho6973.superobj = obj6973;
                                                                            obj6973.data = inheritingObject.data;
                                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                                              obj6973._value = inheritingObject._value;
                                                                            obj6973.outer = this;
                                                                            var reader_objectdraw_outer6974 = function() {
                                                                              return this.outer;
                                                                            };
                                                                            obj6973.methods["outer"] = reader_objectdraw_outer6974;
                                                                            var obj_init_6973 = function() {
                                                                              var origSuperDepth = superDepth;
                                                                              superDepth = obj6973;
                                                                              var func6975 = function(argcv) {    // method contents
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("objectdraw");
                                                                                setLineNumber(2027);    // compilenode member
                                                                                // call case 6: other requests
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call6978 = callmethodChecked(this, "element", []);
                                                                                var call6979 = callmethodChecked(call6978, "textContent", []);
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6979)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method contents does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                return call6979;
                                                                              };
                                                                              func6975.paramCounts = [0];
                                                                              obj6973.methods["contents"] = func6975;
                                                                              func6975.definitionLine = 2025;
                                                                              func6975.definitionModule = "objectdraw";
                                                                              var func6980 = function(argcv) {    // method contents:=(_)
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                var var_value = arguments[curarg];
                                                                                curarg++;
                                                                                // Start argument checking
                                                                                curarg = 1;
                                                                                setLineNumber(2030);    // compilenode identifier
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                curarg++;
                                                                                // End argument checking
                                                                                setModuleName("objectdraw");
                                                                                setLineNumber(2032);    // compilenode identifier
                                                                                // call case 6: other requests
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call6983 = callmethodChecked(this, "element", []);
                                                                                var call6984 = callmethodChecked(call6983, "textContent:=(1)", [1], var_value);
                                                                                setLineNumber(2033);    // return value
                                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method contents:=(_) does not have " + 
                                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                                return var_done;
                                                                              };
                                                                              func6980.paramTypes = [];
                                                                              func6980.paramTypes.push([type_String, "value"]);
                                                                              func6980.paramCounts = [1];
                                                                              obj6973.methods["contents:=(1)"] = func6980;
                                                                              func6980.definitionLine = 2030;
                                                                              func6980.definitionModule = "objectdraw";
                                                                              var func6985 = function(argcv) {    // method asString
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("objectdraw");
                                                                                setLineNumber(2038);    // compilenode string
                                                                                var string6986 = new GraceString("");
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call6989 = callmethodChecked(this, "contents", []);
                                                                                var string6991 = new GraceString("a text box showing ");
                                                                                var opresult6993 = callmethodChecked(string6991, "++(1)", [1], call6989);
                                                                                var opresult6995 = callmethodChecked(opresult6993, "++(1)", [1], string6986);
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6995)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method asString does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                return opresult6995;
                                                                              };
                                                                              func6985.paramCounts = [0];
                                                                              obj6973.methods["asString"] = func6985;
                                                                              func6985.definitionLine = 2037;
                                                                              func6985.definitionModule = "objectdraw";
                                                                              setLineNumber(2023);    // compilenode string
                                                                              var string6997 = new GraceString("span");
                                                                              setLineNumber(0);    // compilenode identifier
                                                                              // call case 6: other requests
                                                                              // call case 3: self.outer request
                                                                              var call6999 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onSelf = true;
                                                                              var call7000 = callmethodChecked(call6999, "componentOfElementType(1)$object(1)", [1, 1], string6997, this);
                                                                              obj6973.superobj = call7000;
                                                                              if (call7000.data) obj6973.data = call7000.data;
                                                                              if (call7000.hasOwnProperty('_value'))
                                                                                  obj6973._value = call7000._value;
                                                                              setLineNumber(2041);    // compilenode identifier
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call7002 = callmethodChecked(this, "contents:=(1)", [1], var_contents__39__);
                                                                              superDepth = origSuperDepth;
                                                                            };
                                                                            obj_init_6973.apply(inheritingObject, []);
                                                                            return obj6973;
                                                                            };
                                                                            func6972.paramTypes = [];
                                                                            func6972.paramTypes.push([type_String, "contents'"]);
                                                                            this.methods["textBoxWith(1)$object(1)"] = func6972;
                                                                          setLineNumber(2044);    // compilenode method
                                                                          var func7003 = function(argcv) {    // method buttonLabeled(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_label__39__ = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in buttonLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("objectdraw");
                                                                            var obj7004 = Grace_allocObject(null, "buttonLabeled(_)");
                                                                            obj7004.definitionModule = "objectdraw";
                                                                            obj7004.definitionLine = 2044;
                                                                            obj7004.outer = this;
                                                                            var reader_objectdraw_outer7005 = function() {
                                                                              return this.outer;
                                                                            };
                                                                            obj7004.methods["outer"] = reader_objectdraw_outer7005;
                                                                            var obj_init_7004 = function() {
                                                                              var origSuperDepth = superDepth;
                                                                              superDepth = obj7004;
                                                                              var func7006 = function(argcv) {    // method asString
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("objectdraw");
                                                                                setLineNumber(2049);    // compilenode string
                                                                                var string7007 = new GraceString("");
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call7010 = callmethodChecked(this, "label", []);
                                                                                var string7012 = new GraceString("a button labeled: ");
                                                                                var opresult7014 = callmethodChecked(string7012, "++(1)", [1], call7010);
                                                                                var opresult7016 = callmethodChecked(opresult7014, "++(1)", [1], string7007);
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7016)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method asString does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                return opresult7016;
                                                                              };
                                                                              func7006.paramCounts = [0];
                                                                              obj7004.methods["asString"] = func7006;
                                                                              func7006.definitionLine = 2048;
                                                                              func7006.definitionModule = "objectdraw";
                                                                              setLineNumber(2046);    // compilenode string
                                                                              var string7018 = new GraceString("button");
                                                                              // call case 6: other requests
                                                                              setLineNumber(0);    // compilenode member
                                                                              // call case 3: self.outer request
                                                                              var call7020 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onSelf = true;
                                                                              var call7021 = callmethodChecked(call7020, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7018, var_label__39__, this);
                                                                              obj7004.superobj = call7021;
                                                                              if (call7021.data) obj7004.data = call7021.data;
                                                                              if (call7021.hasOwnProperty('_value'))
                                                                                  obj7004._value = call7021._value;
                                                                              superDepth = origSuperDepth;
                                                                            };
                                                                            obj_init_7004.apply(obj7004, []);
                                                                            setLineNumber(2044);    // return value
                                                                            if (!Grace_isTrue(callmethod(var_Button, "match(1)", [1], obj7004)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method buttonLabeled(_) does not have " + 
                                                                                        callmethod(var_Button, "asString", [0])._value + "."));
                                                                            return obj7004;
                                                                          };
                                                                          func7003.paramTypes = [];
                                                                          func7003.paramTypes.push([type_String, "label'"]);
                                                                          func7003.paramCounts = [1];
                                                                          this.methods["buttonLabeled(1)"] = func7003;
                                                                          func7003.definitionLine = 2044;
                                                                          func7003.definitionModule = "objectdraw";
                                                                            var func7022 = function(argcv) {    // method buttonLabeled(_)$object(_)
                                                                              var curarg = 1;
                                                                              var var_label__39__ = arguments[curarg];
                                                                              curarg++;
                                                                              var inheritingObject = arguments[curarg++];
                                                                              // Start argument processing
                                                                              curarg = 1;
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in buttonLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument processing
                                                                              setModuleName("objectdraw");
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var obj7023 = Grace_allocObject(null, "buttonLabeled(1)");
                                                                              obj7023.definitionModule = "objectdraw";
                                                                              obj7023.definitionLine = 2044;
                                                                              var inho7023 = inheritingObject;
                                                                              while (inho7023.superobj) inho7023 = inho7023.superobj;
                                                                              inho7023.superobj = obj7023;
                                                                              obj7023.data = inheritingObject.data;
                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                obj7023._value = inheritingObject._value;
                                                                              obj7023.outer = this;
                                                                              var reader_objectdraw_outer7024 = function() {
                                                                                return this.outer;
                                                                              };
                                                                              obj7023.methods["outer"] = reader_objectdraw_outer7024;
                                                                              var obj_init_7023 = function() {
                                                                                var origSuperDepth = superDepth;
                                                                                superDepth = obj7023;
                                                                                var func7025 = function(argcv) {    // method asString
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  setModuleName("objectdraw");
                                                                                  setLineNumber(2049);    // compilenode string
                                                                                  var string7026 = new GraceString("");
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7029 = callmethodChecked(this, "label", []);
                                                                                  var string7031 = new GraceString("a button labeled: ");
                                                                                  var opresult7033 = callmethodChecked(string7031, "++(1)", [1], call7029);
                                                                                  var opresult7035 = callmethodChecked(opresult7033, "++(1)", [1], string7026);
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7035)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method asString does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  return opresult7035;
                                                                                };
                                                                                func7025.paramCounts = [0];
                                                                                obj7023.methods["asString"] = func7025;
                                                                                func7025.definitionLine = 2048;
                                                                                func7025.definitionModule = "objectdraw";
                                                                                setLineNumber(2046);    // compilenode string
                                                                                var string7037 = new GraceString("button");
                                                                                // call case 6: other requests
                                                                                setLineNumber(0);    // compilenode member
                                                                                // call case 3: self.outer request
                                                                                var call7039 = callmethodChecked(superDepth, "outer", [0]);
                                                                                onSelf = true;
                                                                                var call7040 = callmethodChecked(call7039, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7037, var_label__39__, this);
                                                                                obj7023.superobj = call7040;
                                                                                if (call7040.data) obj7023.data = call7040.data;
                                                                                if (call7040.hasOwnProperty('_value'))
                                                                                    obj7023._value = call7040._value;
                                                                                superDepth = origSuperDepth;
                                                                              };
                                                                              obj_init_7023.apply(inheritingObject, []);
                                                                              return obj7023;
                                                                              };
                                                                              func7022.paramTypes = [];
                                                                              func7022.paramTypes.push([type_String, "label'"]);
                                                                              this.methods["buttonLabeled(1)$object(1)"] = func7022;
                                                                            setLineNumber(2066);    // compilenode method
                                                                            var func7041 = function(argcv) {    // method textFieldLabeled(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_label__39__ = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in textFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("objectdraw");
                                                                              var obj7042 = Grace_allocObject(null, "textFieldLabeled(_)");
                                                                              obj7042.definitionModule = "objectdraw";
                                                                              obj7042.definitionLine = 2066;
                                                                              obj7042.outer = this;
                                                                              var reader_objectdraw_outer7043 = function() {
                                                                                return this.outer;
                                                                              };
                                                                              obj7042.methods["outer"] = reader_objectdraw_outer7043;
                                                                              var obj_init_7042 = function() {
                                                                                var origSuperDepth = superDepth;
                                                                                superDepth = obj7042;
                                                                                var func7044 = function(argcv) {    // method text
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  setModuleName("objectdraw");
                                                                                  setLineNumber(2073);    // compilenode member
                                                                                  // call case 6: other requests
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7047 = callmethodChecked(this, "element", []);
                                                                                  var call7048 = callmethodChecked(call7047, "value", []);
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7048)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method text does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  return call7048;
                                                                                };
                                                                                func7044.paramCounts = [0];
                                                                                obj7042.methods["text"] = func7044;
                                                                                func7044.definitionLine = 2071;
                                                                                func7044.definitionModule = "objectdraw";
                                                                                var func7049 = function(argcv) {    // method text:=(_)
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  var var_value = arguments[curarg];
                                                                                  curarg++;
                                                                                  // Start argument checking
                                                                                  curarg = 1;
                                                                                  setLineNumber(2076);    // compilenode identifier
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("argument 1 in text:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  curarg++;
                                                                                  // End argument checking
                                                                                  setModuleName("objectdraw");
                                                                                  setLineNumber(2078);    // compilenode identifier
                                                                                  // call case 6: other requests
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7052 = callmethodChecked(this, "element", []);
                                                                                  var call7053 = callmethodChecked(call7052, "value:=(1)", [1], var_value);
                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7053)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method text:=(_) does not have " + 
                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                  return call7053;
                                                                                };
                                                                                func7049.paramTypes = [];
                                                                                func7049.paramTypes.push([type_String, "value"]);
                                                                                func7049.paramCounts = [1];
                                                                                obj7042.methods["text:=(1)"] = func7049;
                                                                                func7049.definitionLine = 2076;
                                                                                func7049.definitionModule = "objectdraw";
                                                                                var func7054 = function(argcv) {    // method asString
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  setModuleName("objectdraw");
                                                                                  var if7055 = GraceDone;
                                                                                  setLineNumber(2083);    // compilenode string
                                                                                  var string7056 = new GraceString("");
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7059 = callmethodChecked(this, "label", []);
                                                                                  var opresult7061 = callmethodChecked(call7059, "==(1)", [1], string7056);
                                                                                  if (Grace_isTrue(opresult7061)) {
                                                                                    setLineNumber(2084);    // compilenode string
                                                                                    var string7062 = new GraceString("");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7065 = callmethodChecked(this, "text", []);
                                                                                    var string7067 = new GraceString("a text field with ");
                                                                                    var opresult7069 = callmethodChecked(string7067, "++(1)", [1], call7065);
                                                                                    var opresult7071 = callmethodChecked(opresult7069, "++(1)", [1], string7062);
                                                                                    if7055 = opresult7071;
                                                                                  } else {
                                                                                    setLineNumber(2086);    // compilenode string
                                                                                    var string7072 = new GraceString("");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7075 = callmethodChecked(this, "text", []);
                                                                                    var string7077 = new GraceString(" with ");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7080 = callmethodChecked(this, "label", []);
                                                                                    var string7082 = new GraceString("a text field labeled: ");
                                                                                    var opresult7084 = callmethodChecked(string7082, "++(1)", [1], call7080);
                                                                                    var opresult7086 = callmethodChecked(opresult7084, "++(1)", [1], string7077);
                                                                                    var opresult7088 = callmethodChecked(opresult7086, "++(1)", [1], call7075);
                                                                                    var opresult7090 = callmethodChecked(opresult7088, "++(1)", [1], string7072);
                                                                                    if7055 = opresult7090;
                                                                                  }
                                                                                  setLineNumber(2083);    // return value
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7055)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method asString does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  return if7055;
                                                                                };
                                                                                func7054.paramCounts = [0];
                                                                                obj7042.methods["asString"] = func7054;
                                                                                func7054.definitionLine = 2082;
                                                                                func7054.definitionModule = "objectdraw";
                                                                                setLineNumber(2069);    // compilenode string
                                                                                var string7092 = new GraceString("text");
                                                                                // call case 6: other requests
                                                                                setLineNumber(0);    // compilenode member
                                                                                // call case 3: self.outer request
                                                                                var call7094 = callmethodChecked(superDepth, "outer", [0]);
                                                                                onSelf = true;
                                                                                var call7095 = callmethodChecked(call7094, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7092, var_label__39__, this);
                                                                                obj7042.superobj = call7095;
                                                                                if (call7095.data) obj7042.data = call7095.data;
                                                                                if (call7095.hasOwnProperty('_value'))
                                                                                    obj7042._value = call7095._value;
                                                                                superDepth = origSuperDepth;
                                                                              };
                                                                              obj_init_7042.apply(obj7042, []);
                                                                              setLineNumber(2066);    // return value
                                                                              if (!Grace_isTrue(callmethod(var_TextField, "match(1)", [1], obj7042)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method textFieldLabeled(_) does not have " + 
                                                                                          callmethod(var_TextField, "asString", [0])._value + "."));
                                                                              return obj7042;
                                                                            };
                                                                            func7041.paramTypes = [];
                                                                            func7041.paramTypes.push([type_String, "label'"]);
                                                                            func7041.paramCounts = [1];
                                                                            this.methods["textFieldLabeled(1)"] = func7041;
                                                                            func7041.definitionLine = 2066;
                                                                            func7041.definitionModule = "objectdraw";
                                                                              var func7096 = function(argcv) {    // method textFieldLabeled(_)$object(_)
                                                                                var curarg = 1;
                                                                                var var_label__39__ = arguments[curarg];
                                                                                curarg++;
                                                                                var inheritingObject = arguments[curarg++];
                                                                                // Start argument processing
                                                                                curarg = 1;
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("argument 1 in textFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                curarg++;
                                                                                // End argument processing
                                                                                setModuleName("objectdraw");
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var obj7097 = Grace_allocObject(null, "textFieldLabeled(1)");
                                                                                obj7097.definitionModule = "objectdraw";
                                                                                obj7097.definitionLine = 2066;
                                                                                var inho7097 = inheritingObject;
                                                                                while (inho7097.superobj) inho7097 = inho7097.superobj;
                                                                                inho7097.superobj = obj7097;
                                                                                obj7097.data = inheritingObject.data;
                                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                                  obj7097._value = inheritingObject._value;
                                                                                obj7097.outer = this;
                                                                                var reader_objectdraw_outer7098 = function() {
                                                                                  return this.outer;
                                                                                };
                                                                                obj7097.methods["outer"] = reader_objectdraw_outer7098;
                                                                                var obj_init_7097 = function() {
                                                                                  var origSuperDepth = superDepth;
                                                                                  superDepth = obj7097;
                                                                                  var func7099 = function(argcv) {    // method text
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    setModuleName("objectdraw");
                                                                                    setLineNumber(2073);    // compilenode member
                                                                                    // call case 6: other requests
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7102 = callmethodChecked(this, "element", []);
                                                                                    var call7103 = callmethodChecked(call7102, "value", []);
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7103)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method text does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    return call7103;
                                                                                  };
                                                                                  func7099.paramCounts = [0];
                                                                                  obj7097.methods["text"] = func7099;
                                                                                  func7099.definitionLine = 2071;
                                                                                  func7099.definitionModule = "objectdraw";
                                                                                  var func7104 = function(argcv) {    // method text:=(_)
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    var var_value = arguments[curarg];
                                                                                    curarg++;
                                                                                    // Start argument checking
                                                                                    curarg = 1;
                                                                                    setLineNumber(2076);    // compilenode identifier
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("argument 1 in text:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    curarg++;
                                                                                    // End argument checking
                                                                                    setModuleName("objectdraw");
                                                                                    setLineNumber(2078);    // compilenode identifier
                                                                                    // call case 6: other requests
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7107 = callmethodChecked(this, "element", []);
                                                                                    var call7108 = callmethodChecked(call7107, "value:=(1)", [1], var_value);
                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7108)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method text:=(_) does not have " + 
                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                    return call7108;
                                                                                  };
                                                                                  func7104.paramTypes = [];
                                                                                  func7104.paramTypes.push([type_String, "value"]);
                                                                                  func7104.paramCounts = [1];
                                                                                  obj7097.methods["text:=(1)"] = func7104;
                                                                                  func7104.definitionLine = 2076;
                                                                                  func7104.definitionModule = "objectdraw";
                                                                                  var func7109 = function(argcv) {    // method asString
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    setModuleName("objectdraw");
                                                                                    var if7110 = GraceDone;
                                                                                    setLineNumber(2083);    // compilenode string
                                                                                    var string7111 = new GraceString("");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7114 = callmethodChecked(this, "label", []);
                                                                                    var opresult7116 = callmethodChecked(call7114, "==(1)", [1], string7111);
                                                                                    if (Grace_isTrue(opresult7116)) {
                                                                                      setLineNumber(2084);    // compilenode string
                                                                                      var string7117 = new GraceString("");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7120 = callmethodChecked(this, "text", []);
                                                                                      var string7122 = new GraceString("a text field with ");
                                                                                      var opresult7124 = callmethodChecked(string7122, "++(1)", [1], call7120);
                                                                                      var opresult7126 = callmethodChecked(opresult7124, "++(1)", [1], string7117);
                                                                                      if7110 = opresult7126;
                                                                                    } else {
                                                                                      setLineNumber(2086);    // compilenode string
                                                                                      var string7127 = new GraceString("");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7130 = callmethodChecked(this, "text", []);
                                                                                      var string7132 = new GraceString(" with ");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7135 = callmethodChecked(this, "label", []);
                                                                                      var string7137 = new GraceString("a text field labeled: ");
                                                                                      var opresult7139 = callmethodChecked(string7137, "++(1)", [1], call7135);
                                                                                      var opresult7141 = callmethodChecked(opresult7139, "++(1)", [1], string7132);
                                                                                      var opresult7143 = callmethodChecked(opresult7141, "++(1)", [1], call7130);
                                                                                      var opresult7145 = callmethodChecked(opresult7143, "++(1)", [1], string7127);
                                                                                      if7110 = opresult7145;
                                                                                    }
                                                                                    setLineNumber(2083);    // return value
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7110)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method asString does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    return if7110;
                                                                                  };
                                                                                  func7109.paramCounts = [0];
                                                                                  obj7097.methods["asString"] = func7109;
                                                                                  func7109.definitionLine = 2082;
                                                                                  func7109.definitionModule = "objectdraw";
                                                                                  setLineNumber(2069);    // compilenode string
                                                                                  var string7147 = new GraceString("text");
                                                                                  // call case 6: other requests
                                                                                  setLineNumber(0);    // compilenode member
                                                                                  // call case 3: self.outer request
                                                                                  var call7149 = callmethodChecked(superDepth, "outer", [0]);
                                                                                  onSelf = true;
                                                                                  var call7150 = callmethodChecked(call7149, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7147, var_label__39__, this);
                                                                                  obj7097.superobj = call7150;
                                                                                  if (call7150.data) obj7097.data = call7150.data;
                                                                                  if (call7150.hasOwnProperty('_value'))
                                                                                      obj7097._value = call7150._value;
                                                                                  superDepth = origSuperDepth;
                                                                                };
                                                                                obj_init_7097.apply(inheritingObject, []);
                                                                                return obj7097;
                                                                                };
                                                                                func7096.paramTypes = [];
                                                                                func7096.paramTypes.push([type_String, "label'"]);
                                                                                this.methods["textFieldLabeled(1)$object(1)"] = func7096;
                                                                              setLineNumber(2091);    // compilenode method
                                                                              var func7151 = function(argcv) {    // method textFieldUnlabeled
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("objectdraw");
                                                                                var obj7152 = Grace_allocObject(null, "textFieldUnlabeled");
                                                                                obj7152.definitionModule = "objectdraw";
                                                                                obj7152.definitionLine = 2091;
                                                                                obj7152.outer = this;
                                                                                var reader_objectdraw_outer7153 = function() {
                                                                                  return this.outer;
                                                                                };
                                                                                obj7152.methods["outer"] = reader_objectdraw_outer7153;
                                                                                var obj_init_7152 = function() {
                                                                                  var origSuperDepth = superDepth;
                                                                                  superDepth = obj7152;
                                                                                  setLineNumber(2094);    // compilenode string
                                                                                  var string7155 = new GraceString("");
                                                                                  setLineNumber(0);    // compilenode identifier
                                                                                  // call case 6: other requests
                                                                                  // call case 3: self.outer request
                                                                                  var call7157 = callmethodChecked(superDepth, "outer", [0]);
                                                                                  onSelf = true;
                                                                                  var call7158 = callmethodChecked(call7157, "textFieldLabeled(1)$object(1)", [1, 1], string7155, this);
                                                                                  obj7152.superobj = call7158;
                                                                                  if (call7158.data) obj7152.data = call7158.data;
                                                                                  if (call7158.hasOwnProperty('_value'))
                                                                                      obj7152._value = call7158._value;
                                                                                  superDepth = origSuperDepth;
                                                                                };
                                                                                obj_init_7152.apply(obj7152, []);
                                                                                setLineNumber(2091);    // return value
                                                                                if (!Grace_isTrue(callmethod(var_TextField, "match(1)", [1], obj7152)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method textFieldUnlabeled does not have " + 
                                                                                            callmethod(var_TextField, "asString", [0])._value + "."));
                                                                                return obj7152;
                                                                              };
                                                                              func7151.paramCounts = [0];
                                                                              this.methods["textFieldUnlabeled"] = func7151;
                                                                              func7151.definitionLine = 2091;
                                                                              func7151.definitionModule = "objectdraw";
                                                                                var func7159 = function(argcv) {    // method textFieldUnlabeled$object(_)
                                                                                  var curarg = 1;
                                                                                  var inheritingObject = arguments[curarg++];
                                                                                  // Start argument processing
                                                                                  curarg = 1;
                                                                                  // End argument processing
                                                                                  setModuleName("objectdraw");
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var obj7160 = Grace_allocObject(null, "textFieldUnlabeled");
                                                                                  obj7160.definitionModule = "objectdraw";
                                                                                  obj7160.definitionLine = 2091;
                                                                                  var inho7160 = inheritingObject;
                                                                                  while (inho7160.superobj) inho7160 = inho7160.superobj;
                                                                                  inho7160.superobj = obj7160;
                                                                                  obj7160.data = inheritingObject.data;
                                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                                    obj7160._value = inheritingObject._value;
                                                                                  obj7160.outer = this;
                                                                                  var reader_objectdraw_outer7161 = function() {
                                                                                    return this.outer;
                                                                                  };
                                                                                  obj7160.methods["outer"] = reader_objectdraw_outer7161;
                                                                                  var obj_init_7160 = function() {
                                                                                    var origSuperDepth = superDepth;
                                                                                    superDepth = obj7160;
                                                                                    setLineNumber(2094);    // compilenode string
                                                                                    var string7163 = new GraceString("");
                                                                                    setLineNumber(0);    // compilenode identifier
                                                                                    // call case 6: other requests
                                                                                    // call case 3: self.outer request
                                                                                    var call7165 = callmethodChecked(superDepth, "outer", [0]);
                                                                                    onSelf = true;
                                                                                    var call7166 = callmethodChecked(call7165, "textFieldLabeled(1)$object(1)", [1, 1], string7163, this);
                                                                                    obj7160.superobj = call7166;
                                                                                    if (call7166.data) obj7160.data = call7166.data;
                                                                                    if (call7166.hasOwnProperty('_value'))
                                                                                        obj7160._value = call7166._value;
                                                                                    superDepth = origSuperDepth;
                                                                                  };
                                                                                  obj_init_7160.apply(inheritingObject, []);
                                                                                  return obj7160;
                                                                                  };
                                                                                  this.methods["textFieldUnlabeled$object(1)"] = func7159;
                                                                                setLineNumber(2098);    // compilenode method
                                                                                var func7167 = function(argcv) {    // method passwordFieldLabeled(_)
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  var var_lab = arguments[curarg];
                                                                                  curarg++;
                                                                                  // Start argument checking
                                                                                  curarg = 1;
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("argument 1 in passwordFieldLabeled (arg list 1), which corresponds to parameter lab, does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  curarg++;
                                                                                  // End argument checking
                                                                                  setModuleName("objectdraw");
                                                                                  var obj7168 = Grace_allocObject(null, "passwordFieldLabeled(_)");
                                                                                  obj7168.definitionModule = "objectdraw";
                                                                                  obj7168.definitionLine = 2098;
                                                                                  obj7168.outer = this;
                                                                                  var reader_objectdraw_outer7169 = function() {
                                                                                    return this.outer;
                                                                                  };
                                                                                  obj7168.methods["outer"] = reader_objectdraw_outer7169;
                                                                                  var obj_init_7168 = function() {
                                                                                    var origSuperDepth = superDepth;
                                                                                    superDepth = obj7168;
                                                                                    var func7170 = function(argcv) {    // method asString
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var curarg = 1;
                                                                                      setModuleName("objectdraw");
                                                                                      var if7171 = GraceDone;
                                                                                      setLineNumber(2107);    // compilenode string
                                                                                      var string7172 = new GraceString("");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7175 = callmethodChecked(this, "label", []);
                                                                                      var opresult7177 = callmethodChecked(call7175, "==(1)", [1], string7172);
                                                                                      if (Grace_isTrue(opresult7177)) {
                                                                                        setLineNumber(2108);    // compilenode string
                                                                                        var string7178 = new GraceString("a password field");
                                                                                        if7171 = string7178;
                                                                                      } else {
                                                                                        setLineNumber(2110);    // compilenode string
                                                                                        var string7179 = new GraceString("");
                                                                                        // call case 4: self request
                                                                                        onSelf = true;
                                                                                        var call7182 = callmethodChecked(this, "label", []);
                                                                                        var string7184 = new GraceString("a password field labeled: ");
                                                                                        var opresult7186 = callmethodChecked(string7184, "++(1)", [1], call7182);
                                                                                        var opresult7188 = callmethodChecked(opresult7186, "++(1)", [1], string7179);
                                                                                        if7171 = opresult7188;
                                                                                      }
                                                                                      setLineNumber(2107);    // return value
                                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7171)))
                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                              new GraceString("result of method asString does not have " + 
                                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                                      return if7171;
                                                                                    };
                                                                                    func7170.paramCounts = [0];
                                                                                    obj7168.methods["asString"] = func7170;
                                                                                    func7170.definitionLine = 2105;
                                                                                    func7170.definitionModule = "objectdraw";
                                                                                    setLineNumber(2101);    // compilenode identifier
                                                                                    // call case 6: other requests
                                                                                    setLineNumber(0);    // compilenode member
                                                                                    // call case 3: self.outer request
                                                                                    var call7191 = callmethodChecked(superDepth, "outer", [0]);
                                                                                    onSelf = true;
                                                                                    var call7192 = callmethodChecked(call7191, "textFieldLabeled(1)$object(1)", [1, 1], var_lab, this);
                                                                                    obj7168.superobj = call7192;
                                                                                    if (call7192.data) obj7168.data = call7192.data;
                                                                                    if (call7192.hasOwnProperty('_value'))
                                                                                        obj7168._value = call7192._value;
                                                                                    setLineNumber(2103);    // compilenode string
                                                                                    var string7194 = new GraceString("type");
                                                                                    var string7195 = new GraceString("password");
                                                                                    // call case 6: other requests
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7197 = callmethodChecked(this, "element", []);
                                                                                    var call7198 = callmethodChecked(call7197, "setAttribute(2)", [2], string7194, string7195);
                                                                                    superDepth = origSuperDepth;
                                                                                  };
                                                                                  obj_init_7168.apply(obj7168, []);
                                                                                  setLineNumber(2098);    // return value
                                                                                  if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj7168)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method passwordFieldLabeled(_) does not have " + 
                                                                                              callmethod(var_Input, "asString", [0])._value + "."));
                                                                                  return obj7168;
                                                                                };
                                                                                func7167.paramTypes = [];
                                                                                func7167.paramTypes.push([type_String, "lab"]);
                                                                                func7167.paramCounts = [1];
                                                                                this.methods["passwordFieldLabeled(1)"] = func7167;
                                                                                func7167.definitionLine = 2098;
                                                                                func7167.definitionModule = "objectdraw";
                                                                                  var func7199 = function(argcv) {    // method passwordFieldLabeled(_)$object(_)
                                                                                    var curarg = 1;
                                                                                    var var_lab = arguments[curarg];
                                                                                    curarg++;
                                                                                    var inheritingObject = arguments[curarg++];
                                                                                    // Start argument processing
                                                                                    curarg = 1;
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("argument 1 in passwordFieldLabeled (arg list 1), which corresponds to parameter lab, does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    curarg++;
                                                                                    // End argument processing
                                                                                    setModuleName("objectdraw");
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var obj7200 = Grace_allocObject(null, "passwordFieldLabeled(1)");
                                                                                    obj7200.definitionModule = "objectdraw";
                                                                                    obj7200.definitionLine = 2098;
                                                                                    var inho7200 = inheritingObject;
                                                                                    while (inho7200.superobj) inho7200 = inho7200.superobj;
                                                                                    inho7200.superobj = obj7200;
                                                                                    obj7200.data = inheritingObject.data;
                                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                                      obj7200._value = inheritingObject._value;
                                                                                    obj7200.outer = this;
                                                                                    var reader_objectdraw_outer7201 = function() {
                                                                                      return this.outer;
                                                                                    };
                                                                                    obj7200.methods["outer"] = reader_objectdraw_outer7201;
                                                                                    var obj_init_7200 = function() {
                                                                                      var origSuperDepth = superDepth;
                                                                                      superDepth = obj7200;
                                                                                      var func7202 = function(argcv) {    // method asString
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var curarg = 1;
                                                                                        setModuleName("objectdraw");
                                                                                        var if7203 = GraceDone;
                                                                                        setLineNumber(2107);    // compilenode string
                                                                                        var string7204 = new GraceString("");
                                                                                        // call case 4: self request
                                                                                        onSelf = true;
                                                                                        var call7207 = callmethodChecked(this, "label", []);
                                                                                        var opresult7209 = callmethodChecked(call7207, "==(1)", [1], string7204);
                                                                                        if (Grace_isTrue(opresult7209)) {
                                                                                          setLineNumber(2108);    // compilenode string
                                                                                          var string7210 = new GraceString("a password field");
                                                                                          if7203 = string7210;
                                                                                        } else {
                                                                                          setLineNumber(2110);    // compilenode string
                                                                                          var string7211 = new GraceString("");
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7214 = callmethodChecked(this, "label", []);
                                                                                          var string7216 = new GraceString("a password field labeled: ");
                                                                                          var opresult7218 = callmethodChecked(string7216, "++(1)", [1], call7214);
                                                                                          var opresult7220 = callmethodChecked(opresult7218, "++(1)", [1], string7211);
                                                                                          if7203 = opresult7220;
                                                                                        }
                                                                                        setLineNumber(2107);    // return value
                                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7203)))
                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                new GraceString("result of method asString does not have " + 
                                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                                        return if7203;
                                                                                      };
                                                                                      func7202.paramCounts = [0];
                                                                                      obj7200.methods["asString"] = func7202;
                                                                                      func7202.definitionLine = 2105;
                                                                                      func7202.definitionModule = "objectdraw";
                                                                                      setLineNumber(2101);    // compilenode identifier
                                                                                      // call case 6: other requests
                                                                                      setLineNumber(0);    // compilenode member
                                                                                      // call case 3: self.outer request
                                                                                      var call7223 = callmethodChecked(superDepth, "outer", [0]);
                                                                                      onSelf = true;
                                                                                      var call7224 = callmethodChecked(call7223, "textFieldLabeled(1)$object(1)", [1, 1], var_lab, this);
                                                                                      obj7200.superobj = call7224;
                                                                                      if (call7224.data) obj7200.data = call7224.data;
                                                                                      if (call7224.hasOwnProperty('_value'))
                                                                                          obj7200._value = call7224._value;
                                                                                      setLineNumber(2103);    // compilenode string
                                                                                      var string7226 = new GraceString("type");
                                                                                      var string7227 = new GraceString("password");
                                                                                      // call case 6: other requests
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7229 = callmethodChecked(this, "element", []);
                                                                                      var call7230 = callmethodChecked(call7229, "setAttribute(2)", [2], string7226, string7227);
                                                                                      superDepth = origSuperDepth;
                                                                                    };
                                                                                    obj_init_7200.apply(inheritingObject, []);
                                                                                    return obj7200;
                                                                                    };
                                                                                    func7199.paramTypes = [];
                                                                                    func7199.paramTypes.push([type_String, "lab"]);
                                                                                    this.methods["passwordFieldLabeled(1)$object(1)"] = func7199;
                                                                                  setLineNumber(2116);    // compilenode method
                                                                                  var func7231 = function(argcv) {    // method passwordFieldUnlabeled
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    setModuleName("objectdraw");
                                                                                    var obj7232 = Grace_allocObject(null, "passwordFieldUnlabeled");
                                                                                    obj7232.definitionModule = "objectdraw";
                                                                                    obj7232.definitionLine = 2116;
                                                                                    obj7232.outer = this;
                                                                                    var reader_objectdraw_outer7233 = function() {
                                                                                      return this.outer;
                                                                                    };
                                                                                    obj7232.methods["outer"] = reader_objectdraw_outer7233;
                                                                                    var obj_init_7232 = function() {
                                                                                      var origSuperDepth = superDepth;
                                                                                      superDepth = obj7232;
                                                                                      setLineNumber(2117);    // compilenode string
                                                                                      var string7235 = new GraceString("");
                                                                                      setLineNumber(0);    // compilenode identifier
                                                                                      // call case 6: other requests
                                                                                      // call case 3: self.outer request
                                                                                      var call7237 = callmethodChecked(superDepth, "outer", [0]);
                                                                                      onSelf = true;
                                                                                      var call7238 = callmethodChecked(call7237, "passwordFieldLabeled(1)$object(1)", [1, 1], string7235, this);
                                                                                      obj7232.superobj = call7238;
                                                                                      if (call7238.data) obj7232.data = call7238.data;
                                                                                      if (call7238.hasOwnProperty('_value'))
                                                                                          obj7232._value = call7238._value;
                                                                                      superDepth = origSuperDepth;
                                                                                    };
                                                                                    obj_init_7232.apply(obj7232, []);
                                                                                    setLineNumber(2116);    // return value
                                                                                    if (!Grace_isTrue(callmethod(var_TextField, "match(1)", [1], obj7232)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method passwordFieldUnlabeled does not have " + 
                                                                                                callmethod(var_TextField, "asString", [0])._value + "."));
                                                                                    return obj7232;
                                                                                  };
                                                                                  func7231.paramCounts = [0];
                                                                                  this.methods["passwordFieldUnlabeled"] = func7231;
                                                                                  func7231.definitionLine = 2116;
                                                                                  func7231.definitionModule = "objectdraw";
                                                                                    var func7239 = function(argcv) {    // method passwordFieldUnlabeled$object(_)
                                                                                      var curarg = 1;
                                                                                      var inheritingObject = arguments[curarg++];
                                                                                      // Start argument processing
                                                                                      curarg = 1;
                                                                                      // End argument processing
                                                                                      setModuleName("objectdraw");
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var obj7240 = Grace_allocObject(null, "passwordFieldUnlabeled");
                                                                                      obj7240.definitionModule = "objectdraw";
                                                                                      obj7240.definitionLine = 2116;
                                                                                      var inho7240 = inheritingObject;
                                                                                      while (inho7240.superobj) inho7240 = inho7240.superobj;
                                                                                      inho7240.superobj = obj7240;
                                                                                      obj7240.data = inheritingObject.data;
                                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                                        obj7240._value = inheritingObject._value;
                                                                                      obj7240.outer = this;
                                                                                      var reader_objectdraw_outer7241 = function() {
                                                                                        return this.outer;
                                                                                      };
                                                                                      obj7240.methods["outer"] = reader_objectdraw_outer7241;
                                                                                      var obj_init_7240 = function() {
                                                                                        var origSuperDepth = superDepth;
                                                                                        superDepth = obj7240;
                                                                                        setLineNumber(2117);    // compilenode string
                                                                                        var string7243 = new GraceString("");
                                                                                        setLineNumber(0);    // compilenode identifier
                                                                                        // call case 6: other requests
                                                                                        // call case 3: self.outer request
                                                                                        var call7245 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onSelf = true;
                                                                                        var call7246 = callmethodChecked(call7245, "passwordFieldLabeled(1)$object(1)", [1, 1], string7243, this);
                                                                                        obj7240.superobj = call7246;
                                                                                        if (call7246.data) obj7240.data = call7246.data;
                                                                                        if (call7246.hasOwnProperty('_value'))
                                                                                            obj7240._value = call7246._value;
                                                                                        superDepth = origSuperDepth;
                                                                                      };
                                                                                      obj_init_7240.apply(inheritingObject, []);
                                                                                      return obj7240;
                                                                                      };
                                                                                      this.methods["passwordFieldUnlabeled$object(1)"] = func7239;
                                                                                    setLineNumber(2120);    // compilenode method
                                                                                    var func7247 = function(argcv) {    // method numberFieldLabeled(_)
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var curarg = 1;
                                                                                      var var_label__39__ = arguments[curarg];
                                                                                      curarg++;
                                                                                      // Start argument checking
                                                                                      curarg = 1;
                                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                              new GraceString("argument 1 in numberFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                                      curarg++;
                                                                                      // End argument checking
                                                                                      setModuleName("objectdraw");
                                                                                      var obj7248 = Grace_allocObject(null, "numberFieldLabeled(_)");
                                                                                      obj7248.definitionModule = "objectdraw";
                                                                                      obj7248.definitionLine = 2120;
                                                                                      obj7248.outer = this;
                                                                                      var reader_objectdraw_outer7249 = function() {
                                                                                        return this.outer;
                                                                                      };
                                                                                      obj7248.methods["outer"] = reader_objectdraw_outer7249;
                                                                                      var obj_init_7248 = function() {
                                                                                        var origSuperDepth = superDepth;
                                                                                        superDepth = obj7248;
                                                                                        var func7250 = function(argcv) {    // method number
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          setModuleName("objectdraw");
                                                                                          setLineNumber(2127);    // compilenode member
                                                                                          // call case 6: other requests
                                                                                          // call case 6: other requests
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7254 = callmethodChecked(this, "element", []);
                                                                                          var call7255 = callmethodChecked(call7254, "value", []);
                                                                                          var call7256 = callmethodChecked(call7255, "asNumber", []);
                                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7256)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method number does not have " + 
                                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                                          return call7256;
                                                                                        };
                                                                                        func7250.paramCounts = [0];
                                                                                        obj7248.methods["number"] = func7250;
                                                                                        func7250.definitionLine = 2126;
                                                                                        func7250.definitionModule = "objectdraw";
                                                                                        var func7257 = function(argcv) {    // method number:=(_)
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          var var_value = arguments[curarg];
                                                                                          curarg++;
                                                                                          // Start argument checking
                                                                                          curarg = 1;
                                                                                          setLineNumber(2131);    // compilenode identifier
                                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("argument 1 in number:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                                          curarg++;
                                                                                          // End argument checking
                                                                                          setModuleName("objectdraw");
                                                                                          setLineNumber(2132);    // compilenode identifier
                                                                                          // call case 6: other requests
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7260 = callmethodChecked(this, "element", []);
                                                                                          var call7261 = callmethodChecked(call7260, "value:=(1)", [1], var_value);
                                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7261)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method number:=(_) does not have " + 
                                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                                          return call7261;
                                                                                        };
                                                                                        func7257.paramTypes = [];
                                                                                        func7257.paramTypes.push([type_Number, "value"]);
                                                                                        func7257.paramCounts = [1];
                                                                                        obj7248.methods["number:=(1)"] = func7257;
                                                                                        func7257.definitionLine = 2131;
                                                                                        func7257.definitionModule = "objectdraw";
                                                                                        var func7262 = function(argcv) {    // method asString
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          setModuleName("objectdraw");
                                                                                          var if7263 = GraceDone;
                                                                                          setLineNumber(2137);    // compilenode string
                                                                                          var string7264 = new GraceString("");
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7267 = callmethodChecked(this, "label", []);
                                                                                          var opresult7269 = callmethodChecked(call7267, "==(1)", [1], string7264);
                                                                                          if (Grace_isTrue(opresult7269)) {
                                                                                            setLineNumber(2138);    // compilenode string
                                                                                            var string7270 = new GraceString("");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7273 = callmethodChecked(this, "number", []);
                                                                                            var string7275 = new GraceString("a number field holding ");
                                                                                            var opresult7277 = callmethodChecked(string7275, "++(1)", [1], call7273);
                                                                                            var opresult7279 = callmethodChecked(opresult7277, "++(1)", [1], string7270);
                                                                                            if7263 = opresult7279;
                                                                                          } else {
                                                                                            setLineNumber(2140);    // compilenode string
                                                                                            var string7280 = new GraceString("");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7283 = callmethodChecked(this, "number", []);
                                                                                            var string7285 = new GraceString(" holding ");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7288 = callmethodChecked(this, "label", []);
                                                                                            var string7290 = new GraceString("a number field labeled: ");
                                                                                            var opresult7292 = callmethodChecked(string7290, "++(1)", [1], call7288);
                                                                                            var opresult7294 = callmethodChecked(opresult7292, "++(1)", [1], string7285);
                                                                                            var opresult7296 = callmethodChecked(opresult7294, "++(1)", [1], call7283);
                                                                                            var opresult7298 = callmethodChecked(opresult7296, "++(1)", [1], string7280);
                                                                                            if7263 = opresult7298;
                                                                                          }
                                                                                          setLineNumber(2137);    // return value
                                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7263)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method asString does not have " + 
                                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                                          return if7263;
                                                                                        };
                                                                                        func7262.paramCounts = [0];
                                                                                        obj7248.methods["asString"] = func7262;
                                                                                        func7262.definitionLine = 2136;
                                                                                        func7262.definitionModule = "objectdraw";
                                                                                        setLineNumber(2123);    // compilenode string
                                                                                        var string7300 = new GraceString("number");
                                                                                        // call case 6: other requests
                                                                                        setLineNumber(0);    // compilenode member
                                                                                        // call case 3: self.outer request
                                                                                        var call7302 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onSelf = true;
                                                                                        var call7303 = callmethodChecked(call7302, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7300, var_label__39__, this);
                                                                                        obj7248.superobj = call7303;
                                                                                        if (call7303.data) obj7248.data = call7303.data;
                                                                                        if (call7303.hasOwnProperty('_value'))
                                                                                            obj7248._value = call7303._value;
                                                                                        superDepth = origSuperDepth;
                                                                                      };
                                                                                      obj_init_7248.apply(obj7248, []);
                                                                                      setLineNumber(2120);    // return value
                                                                                      if (!Grace_isTrue(callmethod(var_NumberField, "match(1)", [1], obj7248)))
                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                              new GraceString("result of method numberFieldLabeled(_) does not have " + 
                                                                                                  callmethod(var_NumberField, "asString", [0])._value + "."));
                                                                                      return obj7248;
                                                                                    };
                                                                                    func7247.paramTypes = [];
                                                                                    func7247.paramTypes.push([type_String, "label'"]);
                                                                                    func7247.paramCounts = [1];
                                                                                    this.methods["numberFieldLabeled(1)"] = func7247;
                                                                                    func7247.definitionLine = 2120;
                                                                                    func7247.definitionModule = "objectdraw";
                                                                                      var func7304 = function(argcv) {    // method numberFieldLabeled(_)$object(_)
                                                                                        var curarg = 1;
                                                                                        var var_label__39__ = arguments[curarg];
                                                                                        curarg++;
                                                                                        var inheritingObject = arguments[curarg++];
                                                                                        // Start argument processing
                                                                                        curarg = 1;
                                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                new GraceString("argument 1 in numberFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                                        curarg++;
                                                                                        // End argument processing
                                                                                        setModuleName("objectdraw");
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var obj7305 = Grace_allocObject(null, "numberFieldLabeled(1)");
                                                                                        obj7305.definitionModule = "objectdraw";
                                                                                        obj7305.definitionLine = 2120;
                                                                                        var inho7305 = inheritingObject;
                                                                                        while (inho7305.superobj) inho7305 = inho7305.superobj;
                                                                                        inho7305.superobj = obj7305;
                                                                                        obj7305.data = inheritingObject.data;
                                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                                          obj7305._value = inheritingObject._value;
                                                                                        obj7305.outer = this;
                                                                                        var reader_objectdraw_outer7306 = function() {
                                                                                          return this.outer;
                                                                                        };
                                                                                        obj7305.methods["outer"] = reader_objectdraw_outer7306;
                                                                                        var obj_init_7305 = function() {
                                                                                          var origSuperDepth = superDepth;
                                                                                          superDepth = obj7305;
                                                                                          var func7307 = function(argcv) {    // method number
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            setModuleName("objectdraw");
                                                                                            setLineNumber(2127);    // compilenode member
                                                                                            // call case 6: other requests
                                                                                            // call case 6: other requests
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7311 = callmethodChecked(this, "element", []);
                                                                                            var call7312 = callmethodChecked(call7311, "value", []);
                                                                                            var call7313 = callmethodChecked(call7312, "asNumber", []);
                                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7313)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method number does not have " + 
                                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                                            return call7313;
                                                                                          };
                                                                                          func7307.paramCounts = [0];
                                                                                          obj7305.methods["number"] = func7307;
                                                                                          func7307.definitionLine = 2126;
                                                                                          func7307.definitionModule = "objectdraw";
                                                                                          var func7314 = function(argcv) {    // method number:=(_)
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            var var_value = arguments[curarg];
                                                                                            curarg++;
                                                                                            // Start argument checking
                                                                                            curarg = 1;
                                                                                            setLineNumber(2131);    // compilenode identifier
                                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in number:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            // End argument checking
                                                                                            setModuleName("objectdraw");
                                                                                            setLineNumber(2132);    // compilenode identifier
                                                                                            // call case 6: other requests
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7317 = callmethodChecked(this, "element", []);
                                                                                            var call7318 = callmethodChecked(call7317, "value:=(1)", [1], var_value);
                                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7318)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method number:=(_) does not have " + 
                                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                                            return call7318;
                                                                                          };
                                                                                          func7314.paramTypes = [];
                                                                                          func7314.paramTypes.push([type_Number, "value"]);
                                                                                          func7314.paramCounts = [1];
                                                                                          obj7305.methods["number:=(1)"] = func7314;
                                                                                          func7314.definitionLine = 2131;
                                                                                          func7314.definitionModule = "objectdraw";
                                                                                          var func7319 = function(argcv) {    // method asString
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            setModuleName("objectdraw");
                                                                                            var if7320 = GraceDone;
                                                                                            setLineNumber(2137);    // compilenode string
                                                                                            var string7321 = new GraceString("");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7324 = callmethodChecked(this, "label", []);
                                                                                            var opresult7326 = callmethodChecked(call7324, "==(1)", [1], string7321);
                                                                                            if (Grace_isTrue(opresult7326)) {
                                                                                              setLineNumber(2138);    // compilenode string
                                                                                              var string7327 = new GraceString("");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7330 = callmethodChecked(this, "number", []);
                                                                                              var string7332 = new GraceString("a number field holding ");
                                                                                              var opresult7334 = callmethodChecked(string7332, "++(1)", [1], call7330);
                                                                                              var opresult7336 = callmethodChecked(opresult7334, "++(1)", [1], string7327);
                                                                                              if7320 = opresult7336;
                                                                                            } else {
                                                                                              setLineNumber(2140);    // compilenode string
                                                                                              var string7337 = new GraceString("");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7340 = callmethodChecked(this, "number", []);
                                                                                              var string7342 = new GraceString(" holding ");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7345 = callmethodChecked(this, "label", []);
                                                                                              var string7347 = new GraceString("a number field labeled: ");
                                                                                              var opresult7349 = callmethodChecked(string7347, "++(1)", [1], call7345);
                                                                                              var opresult7351 = callmethodChecked(opresult7349, "++(1)", [1], string7342);
                                                                                              var opresult7353 = callmethodChecked(opresult7351, "++(1)", [1], call7340);
                                                                                              var opresult7355 = callmethodChecked(opresult7353, "++(1)", [1], string7337);
                                                                                              if7320 = opresult7355;
                                                                                            }
                                                                                            setLineNumber(2137);    // return value
                                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7320)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method asString does not have " + 
                                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                                            return if7320;
                                                                                          };
                                                                                          func7319.paramCounts = [0];
                                                                                          obj7305.methods["asString"] = func7319;
                                                                                          func7319.definitionLine = 2136;
                                                                                          func7319.definitionModule = "objectdraw";
                                                                                          setLineNumber(2123);    // compilenode string
                                                                                          var string7357 = new GraceString("number");
                                                                                          // call case 6: other requests
                                                                                          setLineNumber(0);    // compilenode member
                                                                                          // call case 3: self.outer request
                                                                                          var call7359 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onSelf = true;
                                                                                          var call7360 = callmethodChecked(call7359, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7357, var_label__39__, this);
                                                                                          obj7305.superobj = call7360;
                                                                                          if (call7360.data) obj7305.data = call7360.data;
                                                                                          if (call7360.hasOwnProperty('_value'))
                                                                                              obj7305._value = call7360._value;
                                                                                          superDepth = origSuperDepth;
                                                                                        };
                                                                                        obj_init_7305.apply(inheritingObject, []);
                                                                                        return obj7305;
                                                                                        };
                                                                                        func7304.paramTypes = [];
                                                                                        func7304.paramTypes.push([type_String, "label'"]);
                                                                                        this.methods["numberFieldLabeled(1)$object(1)"] = func7304;
                                                                                      setLineNumber(2145);    // compilenode method
                                                                                      var func7361 = function(argcv) {    // method numberFieldUnlabeled
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var curarg = 1;
                                                                                        setModuleName("objectdraw");
                                                                                        var obj7362 = Grace_allocObject(null, "numberFieldUnlabeled");
                                                                                        obj7362.definitionModule = "objectdraw";
                                                                                        obj7362.definitionLine = 2145;
                                                                                        obj7362.outer = this;
                                                                                        var reader_objectdraw_outer7363 = function() {
                                                                                          return this.outer;
                                                                                        };
                                                                                        obj7362.methods["outer"] = reader_objectdraw_outer7363;
                                                                                        var obj_init_7362 = function() {
                                                                                          var origSuperDepth = superDepth;
                                                                                          superDepth = obj7362;
                                                                                          setLineNumber(2147);    // compilenode string
                                                                                          var string7365 = new GraceString("");
                                                                                          setLineNumber(0);    // compilenode identifier
                                                                                          // call case 6: other requests
                                                                                          // call case 3: self.outer request
                                                                                          var call7367 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onSelf = true;
                                                                                          var call7368 = callmethodChecked(call7367, "numberFieldLabeled(1)$object(1)", [1, 1], string7365, this);
                                                                                          obj7362.superobj = call7368;
                                                                                          if (call7368.data) obj7362.data = call7368.data;
                                                                                          if (call7368.hasOwnProperty('_value'))
                                                                                              obj7362._value = call7368._value;
                                                                                          superDepth = origSuperDepth;
                                                                                        };
                                                                                        obj_init_7362.apply(obj7362, []);
                                                                                        setLineNumber(2145);    // return value
                                                                                        if (!Grace_isTrue(callmethod(var_NumberField, "match(1)", [1], obj7362)))
                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                new GraceString("result of method numberFieldUnlabeled does not have " + 
                                                                                                    callmethod(var_NumberField, "asString", [0])._value + "."));
                                                                                        return obj7362;
                                                                                      };
                                                                                      func7361.paramCounts = [0];
                                                                                      this.methods["numberFieldUnlabeled"] = func7361;
                                                                                      func7361.definitionLine = 2145;
                                                                                      func7361.definitionModule = "objectdraw";
                                                                                        var func7369 = function(argcv) {    // method numberFieldUnlabeled$object(_)
                                                                                          var curarg = 1;
                                                                                          var inheritingObject = arguments[curarg++];
                                                                                          // Start argument processing
                                                                                          curarg = 1;
                                                                                          // End argument processing
                                                                                          setModuleName("objectdraw");
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var obj7370 = Grace_allocObject(null, "numberFieldUnlabeled");
                                                                                          obj7370.definitionModule = "objectdraw";
                                                                                          obj7370.definitionLine = 2145;
                                                                                          var inho7370 = inheritingObject;
                                                                                          while (inho7370.superobj) inho7370 = inho7370.superobj;
                                                                                          inho7370.superobj = obj7370;
                                                                                          obj7370.data = inheritingObject.data;
                                                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                                                            obj7370._value = inheritingObject._value;
                                                                                          obj7370.outer = this;
                                                                                          var reader_objectdraw_outer7371 = function() {
                                                                                            return this.outer;
                                                                                          };
                                                                                          obj7370.methods["outer"] = reader_objectdraw_outer7371;
                                                                                          var obj_init_7370 = function() {
                                                                                            var origSuperDepth = superDepth;
                                                                                            superDepth = obj7370;
                                                                                            setLineNumber(2147);    // compilenode string
                                                                                            var string7373 = new GraceString("");
                                                                                            setLineNumber(0);    // compilenode identifier
                                                                                            // call case 6: other requests
                                                                                            // call case 3: self.outer request
                                                                                            var call7375 = callmethodChecked(superDepth, "outer", [0]);
                                                                                            onSelf = true;
                                                                                            var call7376 = callmethodChecked(call7375, "numberFieldLabeled(1)$object(1)", [1, 1], string7373, this);
                                                                                            obj7370.superobj = call7376;
                                                                                            if (call7376.data) obj7370.data = call7376.data;
                                                                                            if (call7376.hasOwnProperty('_value'))
                                                                                                obj7370._value = call7376._value;
                                                                                            superDepth = origSuperDepth;
                                                                                          };
                                                                                          obj_init_7370.apply(inheritingObject, []);
                                                                                          return obj7370;
                                                                                          };
                                                                                          this.methods["numberFieldUnlabeled$object(1)"] = func7369;
                                                                                        setLineNumber(2160);    // compilenode method
                                                                                        var func7377 = function(argcv) {    // method menuWithOptions(_)labeled(_)
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          var var_options = arguments[curarg];
                                                                                          curarg++;
                                                                                          var var_label__39__ = arguments[curarg];
                                                                                          curarg++;
                                                                                          // Start argument checking
                                                                                          curarg = 1;
                                                                                          if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                      callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                          curarg++;
                                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                                          curarg++;
                                                                                          // End argument checking
                                                                                          setModuleName("objectdraw");
                                                                                          var obj7378 = Grace_allocObject(null, "menuWithOptions(_)labeled(_)");
                                                                                          obj7378.definitionModule = "objectdraw";
                                                                                          obj7378.definitionLine = 2160;
                                                                                          obj7378.outer = this;
                                                                                          var reader_objectdraw_outer7379 = function() {
                                                                                            return this.outer;
                                                                                          };
                                                                                          obj7378.methods["outer"] = reader_objectdraw_outer7379;
                                                                                          var obj_init_7378 = function() {
                                                                                            var origSuperDepth = superDepth;
                                                                                            superDepth = obj7378;
                                                                                            var func7380 = function(argcv) {    // method init
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("objectdraw");
                                                                                              setLineNumber(2167);    // compilenode string
                                                                                              var string7383 = new GraceString("option");
                                                                                              // call case 6: other requests
                                                                                              var call7384 = callmethodChecked(var_document, "createElement(1)", [1], string7383);
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7385 = callmethodChecked(this, "labeler:=(1)", [1], call7384);
                                                                                              setLineNumber(2168);    // compilenode string
                                                                                              var string7387 = new GraceString("");
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7389 = callmethodChecked(this, "labeler", []);
                                                                                              var call7390 = callmethodChecked(call7389, "value:=(1)", [1], string7387);
                                                                                              return call7390;
                                                                                            };
                                                                                            func7380.confidential = true;
                                                                                            func7380.paramCounts = [0];
                                                                                            obj7378.methods["init"] = func7380;
                                                                                            func7380.definitionLine = 2166;
                                                                                            func7380.definitionModule = "objectdraw";
                                                                                            var func7391 = function(argcv) {    // method labelElement
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("objectdraw");
                                                                                              setLineNumber(2172);    // compilenode member
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7393 = callmethodChecked(this, "labeler", []);
                                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call7393)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method labelElement does not have " + 
                                                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                                              return call7393;
                                                                                            };
                                                                                            func7391.paramCounts = [0];
                                                                                            obj7378.methods["labelElement"] = func7391;
                                                                                            func7391.definitionLine = 2171;
                                                                                            func7391.definitionModule = "objectdraw";
                                                                                            var func7394 = function(argcv) {    // method selected
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("objectdraw");
                                                                                              setLineNumber(2186);    // compilenode member
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7397 = callmethodChecked(this, "element", []);
                                                                                              var call7398 = callmethodChecked(call7397, "value", []);
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7398)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method selected does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              return call7398;
                                                                                            };
                                                                                            func7394.paramCounts = [0];
                                                                                            obj7378.methods["selected"] = func7394;
                                                                                            func7394.definitionLine = 2185;
                                                                                            func7394.definitionModule = "objectdraw";
                                                                                            var func7399 = function(argcv) {    // method selected:=(_)
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              var var_value = arguments[curarg];
                                                                                              curarg++;
                                                                                              // Start argument checking
                                                                                              curarg = 1;
                                                                                              setLineNumber(2190);    // compilenode identifier
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("argument 1 in selected:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              curarg++;
                                                                                              // End argument checking
                                                                                              setModuleName("objectdraw");
                                                                                              setLineNumber(2191);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7402 = callmethodChecked(this, "element", []);
                                                                                              var call7403 = callmethodChecked(call7402, "value:=(1)", [1], var_value);
                                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7403)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method selected:=(_) does not have " + 
                                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                                              return call7403;
                                                                                            };
                                                                                            func7399.paramTypes = [];
                                                                                            func7399.paramTypes.push([type_String, "value"]);
                                                                                            func7399.paramCounts = [1];
                                                                                            obj7378.methods["selected:=(1)"] = func7399;
                                                                                            func7399.definitionLine = 2190;
                                                                                            func7399.definitionModule = "objectdraw";
                                                                                            var func7404 = function(argcv) {    // method asString
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("objectdraw");
                                                                                              var if7405 = GraceDone;
                                                                                              setLineNumber(2196);    // compilenode string
                                                                                              var string7406 = new GraceString("");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7409 = callmethodChecked(this, "label", []);
                                                                                              var opresult7411 = callmethodChecked(call7409, "==(1)", [1], string7406);
                                                                                              if (Grace_isTrue(opresult7411)) {
                                                                                                setLineNumber(2197);    // compilenode string
                                                                                                var string7412 = new GraceString("a pop-up menu");
                                                                                                if7405 = string7412;
                                                                                              } else {
                                                                                                setLineNumber(2199);    // compilenode string
                                                                                                var string7413 = new GraceString("");
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7416 = callmethodChecked(this, "label", []);
                                                                                                var string7418 = new GraceString("a pop-up menu labeled: ");
                                                                                                var opresult7420 = callmethodChecked(string7418, "++(1)", [1], call7416);
                                                                                                var opresult7422 = callmethodChecked(opresult7420, "++(1)", [1], string7413);
                                                                                                if7405 = opresult7422;
                                                                                              }
                                                                                              setLineNumber(2196);    // return value
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7405)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method asString does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              return if7405;
                                                                                            };
                                                                                            func7404.paramCounts = [0];
                                                                                            obj7378.methods["asString"] = func7404;
                                                                                            func7404.definitionLine = 2195;
                                                                                            func7404.definitionModule = "objectdraw";
                                                                                            setLineNumber(2164);    // compilenode string
                                                                                            var string7424 = new GraceString("select");
                                                                                            // call case 6: other requests
                                                                                            setLineNumber(0);    // compilenode member
                                                                                            // call case 3: self.outer request
                                                                                            var call7426 = callmethodChecked(superDepth, "outer", [0]);
                                                                                            onSelf = true;
                                                                                            var call7427 = callmethodChecked(call7426, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7424, var_label__39__, this);
                                                                                            obj7378.superobj = call7427;
                                                                                            if (call7427.data) obj7378.data = call7427.data;
                                                                                            if (call7427.hasOwnProperty('_value'))
                                                                                                obj7378._value = call7427._value;
                                                                                            setLineNumber(2175);    // compilenode member
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7430 = callmethodChecked(this, "labeler", []);
                                                                                            // call case 6: other requests
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7432 = callmethodChecked(this, "element", []);
                                                                                            var call7433 = callmethodChecked(call7432, "appendChild(1)", [1], call7430);
                                                                                            setLineNumber(2177);    // compilenode block
                                                                                            var block7435 = new GraceBlock(this, 2177, 1);
                                                                                            setLineNumber(0);    // compilenode string
                                                                                            var string7438 = new GraceString("name");
                                                                                            // call case 6: other requests
                                                                                            // call case 5: prelude request
                                                                                            var call7440 = callmethodChecked(var_prelude, "VariablePattern", []);
                                                                                            var call7441 = callmethodChecked(call7440, "new(1)", [1], string7438);
                                                                                            setLineNumber(2177);    // compilenode identifier
                                                                                            // call case 6: other requests
                                                                                            setLineNumber(0);    // compilenode member
                                                                                            // call case 5: prelude request
                                                                                            var call7443 = callmethodChecked(var_prelude, "AndPattern", []);
                                                                                            var call7444 = callmethodChecked(call7443, "new(2)", [2], call7441, var_String);
                                                                                            block7435.pattern = call7444;
                                                                                            setLineNumber(2177);    // compilenode identifier
                                                                                            block7435.paramTypes = [var_String];
                                                                                            block7435.real = function(var_name) {
                                                                                              setLineNumber(2178);    // compilenode string
                                                                                              var string7446 = new GraceString("option");
                                                                                              // call case 6: other requests
                                                                                              var call7447 = callmethodChecked(var_document, "createElement(1)", [1], string7446);
                                                                                              var var_anOption = call7447;
                                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], var_anOption)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'anOption' is not of type Foreign"));
                                                                                              setLineNumber(2179);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              var call7449 = callmethodChecked(var_anOption, "value:=(1)", [1], var_name);
                                                                                              setLineNumber(2180);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              var call7451 = callmethodChecked(var_anOption, "textContent:=(1)", [1], var_name);
                                                                                              setLineNumber(2181);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7454 = callmethodChecked(this, "element", []);
                                                                                              var call7455 = callmethodChecked(call7454, "appendChild(1)", [1], var_anOption);
                                                                                              return call7455;
                                                                                            };
                                                                                            // call case 5: prelude request
                                                                                            var call7456 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], var_options, block7435);
                                                                                            superDepth = origSuperDepth;
                                                                                          };
                                                                                          obj_init_7378.apply(obj7378, []);
                                                                                          setLineNumber(2160);    // return value
                                                                                          if (!Grace_isTrue(callmethod(var_Choice, "match(1)", [1], obj7378)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method menuWithOptions(_)labeled(_) does not have " + 
                                                                                                      callmethod(var_Choice, "asString", [0])._value + "."));
                                                                                          return obj7378;
                                                                                        };
                                                                                        func7377.paramTypes = [];
                                                                                        func7377.paramTypes.push([]);
                                                                                        func7377.paramTypes.push([type_String, "label'"]);
                                                                                        func7377.confidential = true;
                                                                                        func7377.paramCounts = [1, 1];
                                                                                        this.methods["menuWithOptions(1)labeled(1)"] = func7377;
                                                                                        func7377.definitionLine = 2160;
                                                                                        func7377.definitionModule = "objectdraw";
                                                                                          var func7457 = function(argcv) {    // method menuWithOptions(_)labeled(_)$object(_)
                                                                                            var curarg = 1;
                                                                                            var var_options = arguments[curarg];
                                                                                            curarg++;
                                                                                            var var_label__39__ = arguments[curarg];
                                                                                            curarg++;
                                                                                            var inheritingObject = arguments[curarg++];
                                                                                            // Start argument processing
                                                                                            curarg = 1;
                                                                                            if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                        callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            // End argument processing
                                                                                            setModuleName("objectdraw");
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var obj7458 = Grace_allocObject(null, "menuWithOptions(1)labeled(1)");
                                                                                            obj7458.definitionModule = "objectdraw";
                                                                                            obj7458.definitionLine = 2160;
                                                                                            var inho7458 = inheritingObject;
                                                                                            while (inho7458.superobj) inho7458 = inho7458.superobj;
                                                                                            inho7458.superobj = obj7458;
                                                                                            obj7458.data = inheritingObject.data;
                                                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                                                              obj7458._value = inheritingObject._value;
                                                                                            obj7458.outer = this;
                                                                                            var reader_objectdraw_outer7459 = function() {
                                                                                              return this.outer;
                                                                                            };
                                                                                            obj7458.methods["outer"] = reader_objectdraw_outer7459;
                                                                                            var obj_init_7458 = function() {
                                                                                              var origSuperDepth = superDepth;
                                                                                              superDepth = obj7458;
                                                                                              var func7460 = function(argcv) {    // method init
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                setLineNumber(2167);    // compilenode string
                                                                                                var string7463 = new GraceString("option");
                                                                                                // call case 6: other requests
                                                                                                var call7464 = callmethodChecked(var_document, "createElement(1)", [1], string7463);
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7465 = callmethodChecked(this, "labeler:=(1)", [1], call7464);
                                                                                                setLineNumber(2168);    // compilenode string
                                                                                                var string7467 = new GraceString("");
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7469 = callmethodChecked(this, "labeler", []);
                                                                                                var call7470 = callmethodChecked(call7469, "value:=(1)", [1], string7467);
                                                                                                return call7470;
                                                                                              };
                                                                                              func7460.confidential = true;
                                                                                              func7460.paramCounts = [0];
                                                                                              obj7458.methods["init"] = func7460;
                                                                                              func7460.definitionLine = 2166;
                                                                                              func7460.definitionModule = "objectdraw";
                                                                                              var func7471 = function(argcv) {    // method labelElement
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                setLineNumber(2172);    // compilenode member
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7473 = callmethodChecked(this, "labeler", []);
                                                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call7473)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method labelElement does not have " + 
                                                                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                                                return call7473;
                                                                                              };
                                                                                              func7471.paramCounts = [0];
                                                                                              obj7458.methods["labelElement"] = func7471;
                                                                                              func7471.definitionLine = 2171;
                                                                                              func7471.definitionModule = "objectdraw";
                                                                                              var func7474 = function(argcv) {    // method selected
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                setLineNumber(2186);    // compilenode member
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7477 = callmethodChecked(this, "element", []);
                                                                                                var call7478 = callmethodChecked(call7477, "value", []);
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7478)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method selected does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                return call7478;
                                                                                              };
                                                                                              func7474.paramCounts = [0];
                                                                                              obj7458.methods["selected"] = func7474;
                                                                                              func7474.definitionLine = 2185;
                                                                                              func7474.definitionModule = "objectdraw";
                                                                                              var func7479 = function(argcv) {    // method selected:=(_)
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                var var_value = arguments[curarg];
                                                                                                curarg++;
                                                                                                // Start argument checking
                                                                                                curarg = 1;
                                                                                                setLineNumber(2190);    // compilenode identifier
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("argument 1 in selected:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                curarg++;
                                                                                                // End argument checking
                                                                                                setModuleName("objectdraw");
                                                                                                setLineNumber(2191);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7482 = callmethodChecked(this, "element", []);
                                                                                                var call7483 = callmethodChecked(call7482, "value:=(1)", [1], var_value);
                                                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7483)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method selected:=(_) does not have " + 
                                                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                return call7483;
                                                                                              };
                                                                                              func7479.paramTypes = [];
                                                                                              func7479.paramTypes.push([type_String, "value"]);
                                                                                              func7479.paramCounts = [1];
                                                                                              obj7458.methods["selected:=(1)"] = func7479;
                                                                                              func7479.definitionLine = 2190;
                                                                                              func7479.definitionModule = "objectdraw";
                                                                                              var func7484 = function(argcv) {    // method asString
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                var if7485 = GraceDone;
                                                                                                setLineNumber(2196);    // compilenode string
                                                                                                var string7486 = new GraceString("");
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7489 = callmethodChecked(this, "label", []);
                                                                                                var opresult7491 = callmethodChecked(call7489, "==(1)", [1], string7486);
                                                                                                if (Grace_isTrue(opresult7491)) {
                                                                                                  setLineNumber(2197);    // compilenode string
                                                                                                  var string7492 = new GraceString("a pop-up menu");
                                                                                                  if7485 = string7492;
                                                                                                } else {
                                                                                                  setLineNumber(2199);    // compilenode string
                                                                                                  var string7493 = new GraceString("");
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7496 = callmethodChecked(this, "label", []);
                                                                                                  var string7498 = new GraceString("a pop-up menu labeled: ");
                                                                                                  var opresult7500 = callmethodChecked(string7498, "++(1)", [1], call7496);
                                                                                                  var opresult7502 = callmethodChecked(opresult7500, "++(1)", [1], string7493);
                                                                                                  if7485 = opresult7502;
                                                                                                }
                                                                                                setLineNumber(2196);    // return value
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7485)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method asString does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                return if7485;
                                                                                              };
                                                                                              func7484.paramCounts = [0];
                                                                                              obj7458.methods["asString"] = func7484;
                                                                                              func7484.definitionLine = 2195;
                                                                                              func7484.definitionModule = "objectdraw";
                                                                                              setLineNumber(2164);    // compilenode string
                                                                                              var string7504 = new GraceString("select");
                                                                                              // call case 6: other requests
                                                                                              setLineNumber(0);    // compilenode member
                                                                                              // call case 3: self.outer request
                                                                                              var call7506 = callmethodChecked(superDepth, "outer", [0]);
                                                                                              onSelf = true;
                                                                                              var call7507 = callmethodChecked(call7506, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7504, var_label__39__, this);
                                                                                              obj7458.superobj = call7507;
                                                                                              if (call7507.data) obj7458.data = call7507.data;
                                                                                              if (call7507.hasOwnProperty('_value'))
                                                                                                  obj7458._value = call7507._value;
                                                                                              setLineNumber(2175);    // compilenode member
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7510 = callmethodChecked(this, "labeler", []);
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7512 = callmethodChecked(this, "element", []);
                                                                                              var call7513 = callmethodChecked(call7512, "appendChild(1)", [1], call7510);
                                                                                              setLineNumber(2177);    // compilenode block
                                                                                              var block7515 = new GraceBlock(this, 2177, 1);
                                                                                              setLineNumber(0);    // compilenode string
                                                                                              var string7518 = new GraceString("name");
                                                                                              // call case 6: other requests
                                                                                              // call case 5: prelude request
                                                                                              var call7520 = callmethodChecked(var_prelude, "VariablePattern", []);
                                                                                              var call7521 = callmethodChecked(call7520, "new(1)", [1], string7518);
                                                                                              setLineNumber(2177);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              setLineNumber(0);    // compilenode member
                                                                                              // call case 5: prelude request
                                                                                              var call7523 = callmethodChecked(var_prelude, "AndPattern", []);
                                                                                              var call7524 = callmethodChecked(call7523, "new(2)", [2], call7521, var_String);
                                                                                              block7515.pattern = call7524;
                                                                                              setLineNumber(2177);    // compilenode identifier
                                                                                              block7515.paramTypes = [var_String];
                                                                                              block7515.real = function(var_name) {
                                                                                                setLineNumber(2178);    // compilenode string
                                                                                                var string7526 = new GraceString("option");
                                                                                                // call case 6: other requests
                                                                                                var call7527 = callmethodChecked(var_document, "createElement(1)", [1], string7526);
                                                                                                var var_anOption = call7527;
                                                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], var_anOption)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("value of def 'anOption' is not of type Foreign"));
                                                                                                setLineNumber(2179);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                var call7529 = callmethodChecked(var_anOption, "value:=(1)", [1], var_name);
                                                                                                setLineNumber(2180);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                var call7531 = callmethodChecked(var_anOption, "textContent:=(1)", [1], var_name);
                                                                                                setLineNumber(2181);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7534 = callmethodChecked(this, "element", []);
                                                                                                var call7535 = callmethodChecked(call7534, "appendChild(1)", [1], var_anOption);
                                                                                                return call7535;
                                                                                              };
                                                                                              // call case 5: prelude request
                                                                                              var call7536 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], var_options, block7515);
                                                                                              superDepth = origSuperDepth;
                                                                                            };
                                                                                            obj_init_7458.apply(inheritingObject, []);
                                                                                            return obj7458;
                                                                                            };
                                                                                            func7457.paramTypes = [];
                                                                                            func7457.paramTypes.push([]);
                                                                                            func7457.paramTypes.push([type_String, "label'"]);
                                                                                            func7457.confidential = true;
                                                                                            this.methods["menuWithOptions(1)labeled(1)$object(1)"] = func7457;
                                                                                          setLineNumber(2204);    // compilenode method
                                                                                          var func7537 = function(argcv) {    // method menuWithOptions(_)
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            var var_options = arguments[curarg];
                                                                                            curarg++;
                                                                                            // Start argument checking
                                                                                            curarg = 1;
                                                                                            if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                        callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            // End argument checking
                                                                                            setModuleName("objectdraw");
                                                                                            var obj7538 = Grace_allocObject(null, "menuWithOptions(_)");
                                                                                            obj7538.definitionModule = "objectdraw";
                                                                                            obj7538.definitionLine = 2204;
                                                                                            obj7538.outer = this;
                                                                                            var reader_objectdraw_outer7539 = function() {
                                                                                              return this.outer;
                                                                                            };
                                                                                            obj7538.methods["outer"] = reader_objectdraw_outer7539;
                                                                                            var obj_init_7538 = function() {
                                                                                              var origSuperDepth = superDepth;
                                                                                              superDepth = obj7538;
                                                                                              setLineNumber(2207);    // compilenode string
                                                                                              var string7541 = new GraceString("");
                                                                                              // call case 6: other requests
                                                                                              setLineNumber(0);    // compilenode member
                                                                                              // call case 3: self.outer request
                                                                                              var call7543 = callmethodChecked(superDepth, "outer", [0]);
                                                                                              onSelf = true;
                                                                                              var call7544 = callmethodChecked(call7543, "menuWithOptions(1)labeled(1)$object(1)", [1, 1, 1], var_options, string7541, this);
                                                                                              obj7538.superobj = call7544;
                                                                                              if (call7544.data) obj7538.data = call7544.data;
                                                                                              if (call7544.hasOwnProperty('_value'))
                                                                                                  obj7538._value = call7544._value;
                                                                                              setLineNumber(2208);    // compilenode member
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7547 = callmethodChecked(this, "labelElement", []);
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7549 = callmethodChecked(this, "element", []);
                                                                                              var call7550 = callmethodChecked(call7549, "removeChild(1)", [1], call7547);
                                                                                              superDepth = origSuperDepth;
                                                                                            };
                                                                                            obj_init_7538.apply(obj7538, []);
                                                                                            setLineNumber(2204);    // return value
                                                                                            if (!Grace_isTrue(callmethod(var_Choice, "match(1)", [1], obj7538)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method menuWithOptions(_) does not have " + 
                                                                                                        callmethod(var_Choice, "asString", [0])._value + "."));
                                                                                            return obj7538;
                                                                                          };
                                                                                          func7537.paramCounts = [1];
                                                                                          this.methods["menuWithOptions(1)"] = func7537;
                                                                                          func7537.definitionLine = 2204;
                                                                                          func7537.definitionModule = "objectdraw";
                                                                                            var func7551 = function(argcv) {    // method menuWithOptions(_)$object(_)
                                                                                              var curarg = 1;
                                                                                              var var_options = arguments[curarg];
                                                                                              curarg++;
                                                                                              var inheritingObject = arguments[curarg++];
                                                                                              // Start argument processing
                                                                                              curarg = 1;
                                                                                              if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                          callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                              curarg++;
                                                                                              // End argument processing
                                                                                              setModuleName("objectdraw");
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var obj7552 = Grace_allocObject(null, "menuWithOptions(1)");
                                                                                              obj7552.definitionModule = "objectdraw";
                                                                                              obj7552.definitionLine = 2204;
                                                                                              var inho7552 = inheritingObject;
                                                                                              while (inho7552.superobj) inho7552 = inho7552.superobj;
                                                                                              inho7552.superobj = obj7552;
                                                                                              obj7552.data = inheritingObject.data;
                                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                                obj7552._value = inheritingObject._value;
                                                                                              obj7552.outer = this;
                                                                                              var reader_objectdraw_outer7553 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj7552.methods["outer"] = reader_objectdraw_outer7553;
                                                                                              var obj_init_7552 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj7552;
                                                                                                setLineNumber(2207);    // compilenode string
                                                                                                var string7555 = new GraceString("");
                                                                                                // call case 6: other requests
                                                                                                setLineNumber(0);    // compilenode member
                                                                                                // call case 3: self.outer request
                                                                                                var call7557 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                onSelf = true;
                                                                                                var call7558 = callmethodChecked(call7557, "menuWithOptions(1)labeled(1)$object(1)", [1, 1, 1], var_options, string7555, this);
                                                                                                obj7552.superobj = call7558;
                                                                                                if (call7558.data) obj7552.data = call7558.data;
                                                                                                if (call7558.hasOwnProperty('_value'))
                                                                                                    obj7552._value = call7558._value;
                                                                                                setLineNumber(2208);    // compilenode member
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7561 = callmethodChecked(this, "labelElement", []);
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7563 = callmethodChecked(this, "element", []);
                                                                                                var call7564 = callmethodChecked(call7563, "removeChild(1)", [1], call7561);
                                                                                                superDepth = origSuperDepth;
                                                                                              };
                                                                                              obj_init_7552.apply(inheritingObject, []);
                                                                                              return obj7552;
                                                                                              };
                                                                                              this.methods["menuWithOptions(1)$object(1)"] = func7551;
                                                                                            setLineNumber(2226);    // compilenode method
                                                                                            var func7565 = function(argcv) {    // method audioUrl(_)
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              var var_source__39__ = arguments[curarg];
                                                                                              curarg++;
                                                                                              // Start argument checking
                                                                                              curarg = 1;
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("argument 1 in audioUrl (arg list 1), which corresponds to parameter source', does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              curarg++;
                                                                                              // End argument checking
                                                                                              setModuleName("objectdraw");
                                                                                              var obj7566 = Grace_allocObject(GraceObject, "audioUrl(_)");
                                                                                              obj7566.definitionModule = "objectdraw";
                                                                                              obj7566.definitionLine = 2226;
                                                                                              obj7566.outer = this;
                                                                                              var reader_objectdraw_outer7567 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj7566.methods["outer"] = reader_objectdraw_outer7567;
                                                                                              var obj_init_7566 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj7566;
                                                                                                var func7568 = function(argcv) {    // method source
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2238);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7571 = callmethodChecked(this, "element", []);
                                                                                                  var call7572 = callmethodChecked(call7571, "src", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7572)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method source does not have " + 
                                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                                  return call7572;
                                                                                                };
                                                                                                func7568.paramCounts = [0];
                                                                                                obj7566.methods["source"] = func7568;
                                                                                                func7568.definitionLine = 2237;
                                                                                                func7568.definitionModule = "objectdraw";
                                                                                                var func7573 = function(argcv) {    // method source:=(_)
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  var var_value = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  // Start argument checking
                                                                                                  curarg = 1;
                                                                                                  setLineNumber(2242);    // compilenode identifier
                                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in source:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  // End argument checking
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2243);    // compilenode identifier
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7576 = callmethodChecked(this, "element", []);
                                                                                                  var call7577 = callmethodChecked(call7576, "src:=(1)", [1], var_value);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7577)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method source:=(_) does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7577;
                                                                                                };
                                                                                                func7573.paramTypes = [];
                                                                                                func7573.paramTypes.push([type_String, "value"]);
                                                                                                func7573.paramCounts = [1];
                                                                                                obj7566.methods["source:=(1)"] = func7573;
                                                                                                func7573.definitionLine = 2242;
                                                                                                func7573.definitionModule = "objectdraw";
                                                                                                var func7578 = function(argcv) {    // method play
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2248);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7581 = callmethodChecked(this, "element", []);
                                                                                                  var call7582 = callmethodChecked(call7581, "play", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7582)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method play does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7582;
                                                                                                };
                                                                                                func7578.paramCounts = [0];
                                                                                                obj7566.methods["play"] = func7578;
                                                                                                func7578.definitionLine = 2247;
                                                                                                func7578.definitionModule = "objectdraw";
                                                                                                var func7583 = function(argcv) {    // method pause
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2253);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7586 = callmethodChecked(this, "element", []);
                                                                                                  var call7587 = callmethodChecked(call7586, "pause", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7587)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method pause does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7587;
                                                                                                };
                                                                                                func7583.paramCounts = [0];
                                                                                                obj7566.methods["pause"] = func7583;
                                                                                                func7583.definitionLine = 2252;
                                                                                                func7583.definitionModule = "objectdraw";
                                                                                                var func7588 = function(argcv) {    // method isLooping
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2258);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7591 = callmethodChecked(this, "element", []);
                                                                                                  var call7592 = callmethodChecked(call7591, "loop", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7592)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method isLooping does not have " + 
                                                                                                              callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                  return call7592;
                                                                                                };
                                                                                                func7588.paramCounts = [0];
                                                                                                obj7566.methods["isLooping"] = func7588;
                                                                                                func7588.definitionLine = 2257;
                                                                                                func7588.definitionModule = "objectdraw";
                                                                                                var func7593 = function(argcv) {    // method looping:=(_)
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  var var_value = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  // Start argument checking
                                                                                                  curarg = 1;
                                                                                                  setLineNumber(2262);    // compilenode identifier
                                                                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in looping:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                              callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  // End argument checking
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2263);    // compilenode identifier
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7596 = callmethodChecked(this, "element", []);
                                                                                                  var call7597 = callmethodChecked(call7596, "loop:=(1)", [1], var_value);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7597)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method looping:=(_) does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7597;
                                                                                                };
                                                                                                func7593.paramTypes = [];
                                                                                                func7593.paramTypes.push([type_Boolean, "value"]);
                                                                                                func7593.paramCounts = [1];
                                                                                                obj7566.methods["looping:=(1)"] = func7593;
                                                                                                func7593.definitionLine = 2262;
                                                                                                func7593.definitionModule = "objectdraw";
                                                                                                var func7598 = function(argcv) {    // method isEnded
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2268);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7601 = callmethodChecked(this, "element", []);
                                                                                                  var call7602 = callmethodChecked(call7601, "ended", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7602)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method isEnded does not have " + 
                                                                                                              callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                  return call7602;
                                                                                                };
                                                                                                func7598.paramCounts = [0];
                                                                                                obj7566.methods["isEnded"] = func7598;
                                                                                                func7598.definitionLine = 2267;
                                                                                                func7598.definitionModule = "objectdraw";
                                                                                                var func7603 = function(argcv) {    // method asString
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  setLineNumber(2273);    // compilenode string
                                                                                                  var string7604 = new GraceString("");
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7607 = callmethodChecked(this, "source", []);
                                                                                                  var string7609 = new GraceString("audio from ");
                                                                                                  var opresult7611 = callmethodChecked(string7609, "++(1)", [1], call7607);
                                                                                                  var opresult7613 = callmethodChecked(opresult7611, "++(1)", [1], string7604);
                                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7613)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method asString does not have " + 
                                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                                  return opresult7613;
                                                                                                };
                                                                                                func7603.paramCounts = [0];
                                                                                                obj7566.methods["asString"] = func7603;
                                                                                                func7603.definitionLine = 2272;
                                                                                                func7603.definitionModule = "objectdraw";
                                                                                                setLineNumber(2228);    // compilenode string
                                                                                                var string7615 = new GraceString("audio");
                                                                                                // call case 6: other requests
                                                                                                var call7616 = callmethodChecked(var_document, "createElement(1)", [1], string7615);
                                                                                                obj7566.data["element"] = call7616;
                                                                                                var reader_objectdraw_element7617 = function() {
                                                                                                  return this.data["element"];
                                                                                                };
                                                                                                reader_objectdraw_element7617.def = true;
                                                                                                reader_objectdraw_element7617.confidential = true;
                                                                                                obj7566.methods["element"] = reader_objectdraw_element7617;
                                                                                                setLineNumber(2230);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7620 = callmethodChecked(this, "element", []);
                                                                                                var call7621 = callmethodChecked(call7620, "src:=(1)", [1], var_source__39__);
                                                                                                var if7622 = GraceDone;
                                                                                                setLineNumber(2232);    // compilenode member
                                                                                                // call case 6: other requests
                                                                                                var call7625 = callmethodChecked(var_dom, "window", []);
                                                                                                var string7626 = new GraceString("graceRegisterAudio");
                                                                                                // call case 6: other requests
                                                                                                var call7627 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call7625, string7626);
                                                                                                if (Grace_isTrue(call7627)) {
                                                                                                  setLineNumber(2233);    // compilenode member
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7630 = callmethodChecked(this, "element", []);
                                                                                                  // call case 6: other requests
                                                                                                  // call case 6: other requests
                                                                                                  var call7632 = callmethodChecked(var_dom, "window", []);
                                                                                                  var call7633 = callmethodChecked(call7632, "graceRegisterAudio(1)", [1], call7630);
                                                                                                  if7622 = call7633;
                                                                                                }
                                                                                                superDepth = origSuperDepth;
                                                                                              };
                                                                                              obj_init_7566.apply(obj7566, []);
                                                                                              setLineNumber(2226);    // return value
                                                                                              if (!Grace_isTrue(callmethod(var_Audio, "match(1)", [1], obj7566)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method audioUrl(_) does not have " + 
                                                                                                          callmethod(var_Audio, "asString", [0])._value + "."));
                                                                                              return obj7566;
                                                                                            };
                                                                                            func7565.paramTypes = [];
                                                                                            func7565.paramTypes.push([type_String, "source'"]);
                                                                                            func7565.paramCounts = [1];
                                                                                            this.methods["audioUrl(1)"] = func7565;
                                                                                            func7565.definitionLine = 2226;
                                                                                            func7565.definitionModule = "objectdraw";
                                                                                              var func7634 = function(argcv) {    // method audioUrl(_)$object(_)
                                                                                                var curarg = 1;
                                                                                                var var_source__39__ = arguments[curarg];
                                                                                                curarg++;
                                                                                                var inheritingObject = arguments[curarg++];
                                                                                                // Start argument processing
                                                                                                curarg = 1;
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("argument 1 in audioUrl (arg list 1), which corresponds to parameter source', does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                curarg++;
                                                                                                // End argument processing
                                                                                                setModuleName("objectdraw");
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var obj7635 = Grace_allocObject(GraceObject, "audioUrl(1)");
                                                                                                obj7635.definitionModule = "objectdraw";
                                                                                                obj7635.definitionLine = 2226;
                                                                                                var inho7635 = inheritingObject;
                                                                                                while (inho7635.superobj) inho7635 = inho7635.superobj;
                                                                                                inho7635.superobj = obj7635;
                                                                                                obj7635.data = inheritingObject.data;
                                                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                                                  obj7635._value = inheritingObject._value;
                                                                                                obj7635.outer = this;
                                                                                                var reader_objectdraw_outer7636 = function() {
                                                                                                  return this.outer;
                                                                                                };
                                                                                                obj7635.methods["outer"] = reader_objectdraw_outer7636;
                                                                                                var obj_init_7635 = function() {
                                                                                                  var origSuperDepth = superDepth;
                                                                                                  superDepth = obj7635;
                                                                                                  var func7637 = function(argcv) {    // method source
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2238);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7640 = callmethodChecked(this, "element", []);
                                                                                                    var call7641 = callmethodChecked(call7640, "src", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7641)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method source does not have " + 
                                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                                    return call7641;
                                                                                                  };
                                                                                                  func7637.paramCounts = [0];
                                                                                                  obj7635.methods["source"] = func7637;
                                                                                                  func7637.definitionLine = 2237;
                                                                                                  func7637.definitionModule = "objectdraw";
                                                                                                  var func7642 = function(argcv) {    // method source:=(_)
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    var var_value = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    // Start argument checking
                                                                                                    curarg = 1;
                                                                                                    setLineNumber(2242);    // compilenode identifier
                                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in source:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    // End argument checking
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2243);    // compilenode identifier
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7645 = callmethodChecked(this, "element", []);
                                                                                                    var call7646 = callmethodChecked(call7645, "src:=(1)", [1], var_value);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7646)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method source:=(_) does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7646;
                                                                                                  };
                                                                                                  func7642.paramTypes = [];
                                                                                                  func7642.paramTypes.push([type_String, "value"]);
                                                                                                  func7642.paramCounts = [1];
                                                                                                  obj7635.methods["source:=(1)"] = func7642;
                                                                                                  func7642.definitionLine = 2242;
                                                                                                  func7642.definitionModule = "objectdraw";
                                                                                                  var func7647 = function(argcv) {    // method play
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2248);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7650 = callmethodChecked(this, "element", []);
                                                                                                    var call7651 = callmethodChecked(call7650, "play", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7651)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method play does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7651;
                                                                                                  };
                                                                                                  func7647.paramCounts = [0];
                                                                                                  obj7635.methods["play"] = func7647;
                                                                                                  func7647.definitionLine = 2247;
                                                                                                  func7647.definitionModule = "objectdraw";
                                                                                                  var func7652 = function(argcv) {    // method pause
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2253);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7655 = callmethodChecked(this, "element", []);
                                                                                                    var call7656 = callmethodChecked(call7655, "pause", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7656)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method pause does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7656;
                                                                                                  };
                                                                                                  func7652.paramCounts = [0];
                                                                                                  obj7635.methods["pause"] = func7652;
                                                                                                  func7652.definitionLine = 2252;
                                                                                                  func7652.definitionModule = "objectdraw";
                                                                                                  var func7657 = function(argcv) {    // method isLooping
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2258);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7660 = callmethodChecked(this, "element", []);
                                                                                                    var call7661 = callmethodChecked(call7660, "loop", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7661)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method isLooping does not have " + 
                                                                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                    return call7661;
                                                                                                  };
                                                                                                  func7657.paramCounts = [0];
                                                                                                  obj7635.methods["isLooping"] = func7657;
                                                                                                  func7657.definitionLine = 2257;
                                                                                                  func7657.definitionModule = "objectdraw";
                                                                                                  var func7662 = function(argcv) {    // method looping:=(_)
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    var var_value = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    // Start argument checking
                                                                                                    curarg = 1;
                                                                                                    setLineNumber(2262);    // compilenode identifier
                                                                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in looping:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    // End argument checking
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2263);    // compilenode identifier
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7665 = callmethodChecked(this, "element", []);
                                                                                                    var call7666 = callmethodChecked(call7665, "loop:=(1)", [1], var_value);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7666)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method looping:=(_) does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7666;
                                                                                                  };
                                                                                                  func7662.paramTypes = [];
                                                                                                  func7662.paramTypes.push([type_Boolean, "value"]);
                                                                                                  func7662.paramCounts = [1];
                                                                                                  obj7635.methods["looping:=(1)"] = func7662;
                                                                                                  func7662.definitionLine = 2262;
                                                                                                  func7662.definitionModule = "objectdraw";
                                                                                                  var func7667 = function(argcv) {    // method isEnded
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2268);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7670 = callmethodChecked(this, "element", []);
                                                                                                    var call7671 = callmethodChecked(call7670, "ended", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7671)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method isEnded does not have " + 
                                                                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                    return call7671;
                                                                                                  };
                                                                                                  func7667.paramCounts = [0];
                                                                                                  obj7635.methods["isEnded"] = func7667;
                                                                                                  func7667.definitionLine = 2267;
                                                                                                  func7667.definitionModule = "objectdraw";
                                                                                                  var func7672 = function(argcv) {    // method asString
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(2273);    // compilenode string
                                                                                                    var string7673 = new GraceString("");
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7676 = callmethodChecked(this, "source", []);
                                                                                                    var string7678 = new GraceString("audio from ");
                                                                                                    var opresult7680 = callmethodChecked(string7678, "++(1)", [1], call7676);
                                                                                                    var opresult7682 = callmethodChecked(opresult7680, "++(1)", [1], string7673);
                                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7682)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method asString does not have " + 
                                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                                    return opresult7682;
                                                                                                  };
                                                                                                  func7672.paramCounts = [0];
                                                                                                  obj7635.methods["asString"] = func7672;
                                                                                                  func7672.definitionLine = 2272;
                                                                                                  func7672.definitionModule = "objectdraw";
                                                                                                  setLineNumber(2228);    // compilenode string
                                                                                                  var string7684 = new GraceString("audio");
                                                                                                  // call case 6: other requests
                                                                                                  var call7685 = callmethodChecked(var_document, "createElement(1)", [1], string7684);
                                                                                                  obj7635.data["element"] = call7685;
                                                                                                  var reader_objectdraw_element7686 = function() {
                                                                                                    return this.data["element"];
                                                                                                  };
                                                                                                  reader_objectdraw_element7686.def = true;
                                                                                                  reader_objectdraw_element7686.confidential = true;
                                                                                                  obj7635.methods["element"] = reader_objectdraw_element7686;
                                                                                                  setLineNumber(2230);    // compilenode identifier
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7689 = callmethodChecked(this, "element", []);
                                                                                                  var call7690 = callmethodChecked(call7689, "src:=(1)", [1], var_source__39__);
                                                                                                  var if7691 = GraceDone;
                                                                                                  setLineNumber(2232);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  var call7694 = callmethodChecked(var_dom, "window", []);
                                                                                                  var string7695 = new GraceString("graceRegisterAudio");
                                                                                                  // call case 6: other requests
                                                                                                  var call7696 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call7694, string7695);
                                                                                                  if (Grace_isTrue(call7696)) {
                                                                                                    setLineNumber(2233);    // compilenode member
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7699 = callmethodChecked(this, "element", []);
                                                                                                    // call case 6: other requests
                                                                                                    // call case 6: other requests
                                                                                                    var call7701 = callmethodChecked(var_dom, "window", []);
                                                                                                    var call7702 = callmethodChecked(call7701, "graceRegisterAudio(1)", [1], call7699);
                                                                                                    if7691 = call7702;
                                                                                                  }
                                                                                                  superDepth = origSuperDepth;
                                                                                                };
                                                                                                obj_init_7635.apply(inheritingObject, []);
                                                                                                return obj7635;
                                                                                                };
                                                                                                func7634.paramTypes = [];
                                                                                                func7634.paramTypes.push([type_String, "source'"]);
                                                                                                this.methods["audioUrl(1)$object(1)"] = func7634;
                                                                                              setLineNumber(3);    // compilenode typedec
                                                                                              // Type decl Point
                                                                                              // call case 6: other requests
                                                                                              var call7705 = callmethodChecked(var___95__prelude, "Point", []);
                                                                                              var var_Point = call7705;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7706 = function(argcv) {    // method Point
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Point is a simple accessor - elide try ... catch
                                                                                                setLineNumber(3);    // compilenode identifier
                                                                                                return var_Point;
                                                                                              };
                                                                                              func7706.paramCounts = [0];
                                                                                              this.methods["Point"] = func7706;
                                                                                              func7706.definitionLine = 1;
                                                                                              func7706.definitionModule = "objectdraw";
                                                                                              setLineNumber(4);    // compilenode typedec
                                                                                              // Type decl Iterable
                                                                                              // call case 6: other requests
                                                                                              var call7709 = callmethodChecked(var___95__prelude, "Iterable", []);
                                                                                              var var_Iterable = call7709;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7710 = function(argcv) {    // method Iterable
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Iterable is a simple accessor - elide try ... catch
                                                                                                setLineNumber(4);    // compilenode identifier
                                                                                                return var_Iterable;
                                                                                              };
                                                                                              func7710.paramCounts = [0];
                                                                                              this.methods["Iterable"] = func7710;
                                                                                              func7710.definitionLine = 1;
                                                                                              func7710.definitionModule = "objectdraw";
                                                                                              setLineNumber(13);    // compilenode num
                                                                                              var var_frameRate = new GraceNum(30);
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7711 = function(argcv) {    // method frameRate
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // frameRate is a simple accessor - elide try ... catch
                                                                                                setLineNumber(13);    // compilenode identifier
                                                                                                return var_frameRate;
                                                                                              };
                                                                                              func7711.paramCounts = [0];
                                                                                              this.methods["frameRate"] = func7711;
                                                                                              func7711.definitionLine = 1;
                                                                                              func7711.definitionModule = "objectdraw";
                                                                                              this.methods["frameRate"].debug = "def";
                                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_frameRate)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'frameRate' is not of type Number"));
                                                                                              setLineNumber(26);    // compilenode member
                                                                                              // call case 5: prelude request
                                                                                              var call7713 = callmethodChecked(var_prelude, "\u03c0", []);
                                                                                              var var_pi = call7713;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7714 = function(argcv) {    // method pi
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // pi is a simple accessor - elide try ... catch
                                                                                                setLineNumber(26);    // compilenode identifier
                                                                                                return var_pi;
                                                                                              };
                                                                                              func7714.paramCounts = [0];
                                                                                              this.methods["pi"] = func7714;
                                                                                              func7714.definitionLine = 1;
                                                                                              func7714.definitionModule = "objectdraw";
                                                                                              this.methods["pi"].debug = "def";
                                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_pi)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'pi' is not of type Number"));
                                                                                              setLineNumber(28);    // compilenode typedec
                                                                                              // Type decl Foreign
                                                                                              var var_Foreign = var_Unknown;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7716 = function(argcv) {    // method Foreign
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Foreign is a simple accessor - elide try ... catch
                                                                                                setLineNumber(28);    // compilenode identifier
                                                                                                return var_Foreign;
                                                                                              };
                                                                                              func7716.paramCounts = [0];
                                                                                              this.methods["Foreign"] = func7716;
                                                                                              func7716.definitionLine = 1;
                                                                                              func7716.definitionModule = "objectdraw";
                                                                                              setLineNumber(30);    // compilenode member
                                                                                              // call case 6: other requests
                                                                                              var call7718 = callmethodChecked(var_dom, "document", []);
                                                                                              var var_document = call7718;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7719 = function(argcv) {    // method document
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // document is a simple accessor - elide try ... catch
                                                                                                setLineNumber(30);    // compilenode identifier
                                                                                                return var_document;
                                                                                              };
                                                                                              func7719.paramCounts = [0];
                                                                                              this.methods["document"] = func7719;
                                                                                              func7719.definitionLine = 1;
                                                                                              func7719.definitionModule = "objectdraw";
                                                                                              this.methods["document"].debug = "def";
                                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], var_document)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'document' is not of type Foreign"));
                                                                                              setLineNumber(34);    // compilenode typedec
                                                                                              // Type decl Function
                                                                                              // call case 5: prelude request
                                                                                              var call7722 = callmethodChecked(var_prelude, "Block1", []);
                                                                                              var var_Function = call7722;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7723 = function(argcv) {    // method Function
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Function is a simple accessor - elide try ... catch
                                                                                                setLineNumber(34);    // compilenode identifier
                                                                                                return var_Function;
                                                                                              };
                                                                                              func7723.paramCounts = [0];
                                                                                              this.methods["Function"] = func7723;
                                                                                              func7723.definitionLine = 1;
                                                                                              func7723.definitionModule = "objectdraw";
                                                                                              setLineNumber(38);    // compilenode typedec
                                                                                              // Type decl Function2
                                                                                              // call case 5: prelude request
                                                                                              var call7726 = callmethodChecked(var_prelude, "Block2", []);
                                                                                              var var_Function2 = call7726;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7727 = function(argcv) {    // method Function2
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Function2 is a simple accessor - elide try ... catch
                                                                                                setLineNumber(38);    // compilenode identifier
                                                                                                return var_Function2;
                                                                                              };
                                                                                              func7727.paramCounts = [0];
                                                                                              this.methods["Function2"] = func7727;
                                                                                              func7727.definitionLine = 1;
                                                                                              func7727.definitionModule = "objectdraw";
                                                                                              setLineNumber(41);    // compilenode typedec
                                                                                              // Type decl Procedure
                                                                                              // call case 5: prelude request
                                                                                              var call7730 = callmethodChecked(var_prelude, "Block1", []);
                                                                                              var var_Procedure = call7730;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7731 = function(argcv) {    // method Procedure
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Procedure is a simple accessor - elide try ... catch
                                                                                                setLineNumber(41);    // compilenode identifier
                                                                                                return var_Procedure;
                                                                                              };
                                                                                              func7731.paramCounts = [0];
                                                                                              this.methods["Procedure"] = func7731;
                                                                                              func7731.definitionLine = 1;
                                                                                              func7731.definitionModule = "objectdraw";
                                                                                              setLineNumber(46);    // compilenode typedec
                                                                                              // Type decl Component
                                                                                              //   Type literal 
                                                                                              var type7733 = new GraceType("Component");
                                                                                              type7733.typeMethods.push("element");
                                                                                              type7733.typeMethods.push("width");
                                                                                              type7733.typeMethods.push("height");
                                                                                              type7733.typeMethods.push("size");
                                                                                              type7733.typeMethods.push("onMouseClickDo(1)");
                                                                                              type7733.typeMethods.push("onMousePressDo(1)");
                                                                                              type7733.typeMethods.push("onMouseReleaseDo(1)");
                                                                                              type7733.typeMethods.push("onMouseMoveDo(1)");
                                                                                              type7733.typeMethods.push("onMouseDragDo(1)");
                                                                                              type7733.typeMethods.push("onMouseEnterDo(1)");
                                                                                              type7733.typeMethods.push("onMouseExitDo(1)");
                                                                                              type7733.typeMethods.push("onKeyTypeDo(1)");
                                                                                              type7733.typeMethods.push("onKeyPressDo(1)");
                                                                                              type7733.typeMethods.push("onKeyReleaseDo(1)");
                                                                                              type7733.typeMethods.push("isFlexible");
                                                                                              type7733.typeMethods.push("flexible:=(1)");
                                                                                              var var_Component = type7733;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7734 = function(argcv) {    // method Component
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Component is a simple accessor - elide try ... catch
                                                                                                setLineNumber(46);    // compilenode identifier
                                                                                                return var_Component;
                                                                                              };
                                                                                              func7734.paramCounts = [0];
                                                                                              this.methods["Component"] = func7734;
                                                                                              func7734.definitionLine = 1;
                                                                                              func7734.definitionModule = "objectdraw";
                                                                                              setLineNumber(103);    // compilenode typedec
                                                                                              // Type decl Container
                                                                                              //   Type literal 
                                                                                              var type7736 = new GraceType("\u2039anon\u203a");
                                                                                              type7736.typeMethods.push("size");
                                                                                              type7736.typeMethods.push("at(1)");
                                                                                              type7736.typeMethods.push("at(1)put(1)");
                                                                                              type7736.typeMethods.push("append(1)");
                                                                                              type7736.typeMethods.push("prepend(1)");
                                                                                              type7736.typeMethods.push("do(1)");
                                                                                              type7736.typeMethods.push("arrangeHorizontal");
                                                                                              type7736.typeMethods.push("arrangeVertical");
                                                                                              var opresult7739 = callmethodChecked(var_Component, "&(1)", [1], type7736);
                                                                                              var var_Container = opresult7739;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7740 = function(argcv) {    // method Container
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Container is a simple accessor - elide try ... catch
                                                                                                setLineNumber(103);    // compilenode identifier
                                                                                                return var_Container;
                                                                                              };
                                                                                              func7740.paramCounts = [0];
                                                                                              this.methods["Container"] = func7740;
                                                                                              func7740.definitionLine = 1;
                                                                                              func7740.definitionModule = "objectdraw";
                                                                                              setLineNumber(134);    // compilenode typedec
                                                                                              // Type decl Application
                                                                                              //   Type literal 
                                                                                              var type7742 = new GraceType("\u2039anon\u203a");
                                                                                              type7742.typeMethods.push("windowTitle");
                                                                                              type7742.typeMethods.push("windowTitle:=(1)");
                                                                                              type7742.typeMethods.push("startApplication");
                                                                                              type7742.typeMethods.push("stopApplication");
                                                                                              var opresult7745 = callmethodChecked(var_Container, "&(1)", [1], type7742);
                                                                                              var var_Application = opresult7745;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7746 = function(argcv) {    // method Application
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Application is a simple accessor - elide try ... catch
                                                                                                setLineNumber(134);    // compilenode identifier
                                                                                                return var_Application;
                                                                                              };
                                                                                              func7746.paramCounts = [0];
                                                                                              this.methods["Application"] = func7746;
                                                                                              func7746.definitionLine = 1;
                                                                                              func7746.definitionModule = "objectdraw";
                                                                                              setLineNumber(150);    // compilenode typedec
                                                                                              // Type decl Graphic
                                                                                              //   Type literal 
                                                                                              var type7748 = new GraceType("Graphic");
                                                                                              type7748.typeMethods.push("location");
                                                                                              type7748.typeMethods.push("x");
                                                                                              type7748.typeMethods.push("y");
                                                                                              type7748.typeMethods.push("addToCanvas(1)");
                                                                                              type7748.typeMethods.push("removeFromCanvas");
                                                                                              type7748.typeMethods.push("isVisible");
                                                                                              type7748.typeMethods.push("visible:=(1)");
                                                                                              type7748.typeMethods.push("moveTo(1)");
                                                                                              type7748.typeMethods.push("moveBy(2)");
                                                                                              type7748.typeMethods.push("contains(1)");
                                                                                              type7748.typeMethods.push("overlaps(1)");
                                                                                              type7748.typeMethods.push("color:=(1)");
                                                                                              type7748.typeMethods.push("color");
                                                                                              type7748.typeMethods.push("sendForward");
                                                                                              type7748.typeMethods.push("sendBackward");
                                                                                              type7748.typeMethods.push("sendToFront");
                                                                                              type7748.typeMethods.push("sendToBack");
                                                                                              var var_Graphic = type7748;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7749 = function(argcv) {    // method Graphic
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Graphic is a simple accessor - elide try ... catch
                                                                                                setLineNumber(150);    // compilenode identifier
                                                                                                return var_Graphic;
                                                                                              };
                                                                                              func7749.paramCounts = [0];
                                                                                              this.methods["Graphic"] = func7749;
                                                                                              func7749.definitionLine = 1;
                                                                                              func7749.definitionModule = "objectdraw";
                                                                                              setLineNumber(208);    // compilenode typedec
                                                                                              // Type decl DrawingCanvas
                                                                                              //   Type literal 
                                                                                              var type7751 = new GraceType("\u2039anon\u203a");
                                                                                              type7751.typeMethods.push("startDrawing");
                                                                                              type7751.typeMethods.push("add(1)");
                                                                                              type7751.typeMethods.push("remove(1)");
                                                                                              type7751.typeMethods.push("notifyRedraw");
                                                                                              type7751.typeMethods.push("clear");
                                                                                              type7751.typeMethods.push("sendToFront(1)");
                                                                                              type7751.typeMethods.push("sendToBack(1)");
                                                                                              type7751.typeMethods.push("sendForward(1)");
                                                                                              type7751.typeMethods.push("sendBackward(1)");
                                                                                              type7751.typeMethods.push("width");
                                                                                              type7751.typeMethods.push("height");
                                                                                              type7751.typeMethods.push("size");
                                                                                              var opresult7754 = callmethodChecked(var_Component, "&(1)", [1], type7751);
                                                                                              var var_DrawingCanvas = opresult7754;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7755 = function(argcv) {    // method DrawingCanvas
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // DrawingCanvas is a simple accessor - elide try ... catch
                                                                                                setLineNumber(208);    // compilenode identifier
                                                                                                return var_DrawingCanvas;
                                                                                              };
                                                                                              func7755.paramCounts = [0];
                                                                                              this.methods["DrawingCanvas"] = func7755;
                                                                                              func7755.definitionLine = 1;
                                                                                              func7755.definitionModule = "objectdraw";
                                                                                              setLineNumber(245);    // compilenode typedec
                                                                                              // Type decl GraphicApplication
                                                                                              //   Type literal 
                                                                                              var type7757 = new GraceType("\u2039anon\u203a");
                                                                                              type7757.typeMethods.push("canvas");
                                                                                              type7757.typeMethods.push("onMouseClick(1)");
                                                                                              type7757.typeMethods.push("onMousePress(1)");
                                                                                              type7757.typeMethods.push("onMouseRelease(1)");
                                                                                              type7757.typeMethods.push("onMouseMove(1)");
                                                                                              type7757.typeMethods.push("onMouseDrag(1)");
                                                                                              type7757.typeMethods.push("onMouseEnter(1)");
                                                                                              type7757.typeMethods.push("onMouseExit(1)");
                                                                                              type7757.typeMethods.push("startGraphics");
                                                                                              var opresult7760 = callmethodChecked(var_Application, "&(1)", [1], type7757);
                                                                                              var var_GraphicApplication = opresult7760;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7761 = function(argcv) {    // method GraphicApplication
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // GraphicApplication is a simple accessor - elide try ... catch
                                                                                                setLineNumber(245);    // compilenode identifier
                                                                                                return var_GraphicApplication;
                                                                                              };
                                                                                              func7761.paramCounts = [0];
                                                                                              this.methods["GraphicApplication"] = func7761;
                                                                                              func7761.definitionLine = 1;
                                                                                              func7761.definitionModule = "objectdraw";
                                                                                              setLineNumber(278);    // compilenode typedec
                                                                                              // Type decl Graphic2D
                                                                                              //   Type literal 
                                                                                              var type7763 = new GraceType("\u2039anon\u203a");
                                                                                              type7763.typeMethods.push("width");
                                                                                              type7763.typeMethods.push("height");
                                                                                              type7763.typeMethods.push("size");
                                                                                              type7763.typeMethods.push("size:=(1)");
                                                                                              type7763.typeMethods.push("width:=(1)");
                                                                                              type7763.typeMethods.push("height:=(1)");
                                                                                              var opresult7766 = callmethodChecked(var_Graphic, "&(1)", [1], type7763);
                                                                                              var var_Graphic2D = opresult7766;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7767 = function(argcv) {    // method Graphic2D
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Graphic2D is a simple accessor - elide try ... catch
                                                                                                setLineNumber(278);    // compilenode identifier
                                                                                                return var_Graphic2D;
                                                                                              };
                                                                                              func7767.paramCounts = [0];
                                                                                              this.methods["Graphic2D"] = func7767;
                                                                                              func7767.definitionLine = 1;
                                                                                              func7767.definitionModule = "objectdraw";
                                                                                              setLineNumber(292);    // compilenode typedec
                                                                                              // Type decl Line
                                                                                              //   Type literal 
                                                                                              var type7769 = new GraceType("\u2039anon\u203a");
                                                                                              type7769.typeMethods.push("start");
                                                                                              type7769.typeMethods.push("end");
                                                                                              type7769.typeMethods.push("start:=(1)");
                                                                                              type7769.typeMethods.push("end:=(1)");
                                                                                              type7769.typeMethods.push("setEndPoints(2)");
                                                                                              var opresult7772 = callmethodChecked(var_Graphic, "&(1)", [1], type7769);
                                                                                              var var_Line = opresult7772;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7773 = function(argcv) {    // method Line
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Line is a simple accessor - elide try ... catch
                                                                                                setLineNumber(292);    // compilenode identifier
                                                                                                return var_Line;
                                                                                              };
                                                                                              func7773.paramCounts = [0];
                                                                                              this.methods["Line"] = func7773;
                                                                                              func7773.definitionLine = 1;
                                                                                              func7773.definitionModule = "objectdraw";
                                                                                              setLineNumber(304);    // compilenode typedec
                                                                                              // Type decl Text
                                                                                              //   Type literal 
                                                                                              var type7775 = new GraceType("\u2039anon\u203a");
                                                                                              type7775.typeMethods.push("contents");
                                                                                              type7775.typeMethods.push("contents:=(1)");
                                                                                              type7775.typeMethods.push("width");
                                                                                              type7775.typeMethods.push("fontSize");
                                                                                              type7775.typeMethods.push("fontSize:=(1)");
                                                                                              var opresult7778 = callmethodChecked(var_Graphic, "&(1)", [1], type7775);
                                                                                              var var_Text = opresult7778;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7779 = function(argcv) {    // method Text
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Text is a simple accessor - elide try ... catch
                                                                                                setLineNumber(304);    // compilenode identifier
                                                                                                return var_Text;
                                                                                              };
                                                                                              func7779.paramCounts = [0];
                                                                                              this.methods["Text"] = func7779;
                                                                                              func7779.definitionLine = 1;
                                                                                              func7779.definitionModule = "objectdraw";
                                                                                              setLineNumber(324);    // compilenode typedec
                                                                                              // Type decl TextBox
                                                                                              //   Type literal 
                                                                                              var type7781 = new GraceType("\u2039anon\u203a");
                                                                                              type7781.typeMethods.push("contents");
                                                                                              type7781.typeMethods.push("contents:=(1)");
                                                                                              var opresult7784 = callmethodChecked(var_Component, "&(1)", [1], type7781);
                                                                                              var var_TextBox = opresult7784;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7785 = function(argcv) {    // method TextBox
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // TextBox is a simple accessor - elide try ... catch
                                                                                                setLineNumber(324);    // compilenode identifier
                                                                                                return var_TextBox;
                                                                                              };
                                                                                              func7785.paramCounts = [0];
                                                                                              this.methods["TextBox"] = func7785;
                                                                                              func7785.definitionLine = 1;
                                                                                              func7785.definitionModule = "objectdraw";
                                                                                              setLineNumber(333);    // compilenode typedec
                                                                                              // Type decl Labeled
                                                                                              //   Type literal 
                                                                                              var type7787 = new GraceType("\u2039anon\u203a");
                                                                                              type7787.typeMethods.push("label");
                                                                                              type7787.typeMethods.push("label:=(1)");
                                                                                              var opresult7790 = callmethodChecked(var_Component, "&(1)", [1], type7787);
                                                                                              var var_Labeled = opresult7790;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7791 = function(argcv) {    // method Labeled
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Labeled is a simple accessor - elide try ... catch
                                                                                                setLineNumber(333);    // compilenode identifier
                                                                                                return var_Labeled;
                                                                                              };
                                                                                              func7791.paramCounts = [0];
                                                                                              this.methods["Labeled"] = func7791;
                                                                                              func7791.definitionLine = 1;
                                                                                              func7791.definitionModule = "objectdraw";
                                                                                              setLineNumber(342);    // compilenode typedec
                                                                                              // Type decl Button
                                                                                              var var_Button = var_Labeled;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7793 = function(argcv) {    // method Button
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Button is a simple accessor - elide try ... catch
                                                                                                setLineNumber(342);    // compilenode identifier
                                                                                                return var_Button;
                                                                                              };
                                                                                              func7793.paramCounts = [0];
                                                                                              this.methods["Button"] = func7793;
                                                                                              func7793.definitionLine = 1;
                                                                                              func7793.definitionModule = "objectdraw";
                                                                                              setLineNumber(345);    // compilenode typedec
                                                                                              // Type decl Input
                                                                                              //   Type literal 
                                                                                              var type7795 = new GraceType("\u2039anon\u203a");
                                                                                              type7795.typeMethods.push("onFocusDo(1)");
                                                                                              type7795.typeMethods.push("onBlurDo(1)");
                                                                                              type7795.typeMethods.push("onChangeDo(1)");
                                                                                              var opresult7798 = callmethodChecked(var_Labeled, "&(1)", [1], type7795);
                                                                                              var var_Input = opresult7798;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7799 = function(argcv) {    // method Input
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Input is a simple accessor - elide try ... catch
                                                                                                setLineNumber(345);    // compilenode identifier
                                                                                                return var_Input;
                                                                                              };
                                                                                              func7799.paramCounts = [0];
                                                                                              this.methods["Input"] = func7799;
                                                                                              func7799.definitionLine = 1;
                                                                                              func7799.definitionModule = "objectdraw";
                                                                                              setLineNumber(359);    // compilenode typedec
                                                                                              // Type decl TextField
                                                                                              //   Type literal 
                                                                                              var type7801 = new GraceType("\u2039anon\u203a");
                                                                                              type7801.typeMethods.push("text");
                                                                                              type7801.typeMethods.push("text:=(1)");
                                                                                              var opresult7804 = callmethodChecked(var_Input, "&(1)", [1], type7801);
                                                                                              var var_TextField = opresult7804;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7805 = function(argcv) {    // method TextField
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // TextField is a simple accessor - elide try ... catch
                                                                                                setLineNumber(359);    // compilenode identifier
                                                                                                return var_TextField;
                                                                                              };
                                                                                              func7805.paramCounts = [0];
                                                                                              this.methods["TextField"] = func7805;
                                                                                              func7805.definitionLine = 1;
                                                                                              func7805.definitionModule = "objectdraw";
                                                                                              setLineNumber(368);    // compilenode typedec
                                                                                              // Type decl NumberField
                                                                                              //   Type literal 
                                                                                              var type7807 = new GraceType("\u2039anon\u203a");
                                                                                              type7807.typeMethods.push("number");
                                                                                              type7807.typeMethods.push("number:=(1)");
                                                                                              var opresult7810 = callmethodChecked(var_Input, "&(1)", [1], type7807);
                                                                                              var var_NumberField = opresult7810;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7811 = function(argcv) {    // method NumberField
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // NumberField is a simple accessor - elide try ... catch
                                                                                                setLineNumber(368);    // compilenode identifier
                                                                                                return var_NumberField;
                                                                                              };
                                                                                              func7811.paramCounts = [0];
                                                                                              this.methods["NumberField"] = func7811;
                                                                                              func7811.definitionLine = 1;
                                                                                              func7811.definitionModule = "objectdraw";
                                                                                              setLineNumber(377);    // compilenode typedec
                                                                                              // Type decl Choice
                                                                                              //   Type literal 
                                                                                              var type7813 = new GraceType("\u2039anon\u203a");
                                                                                              type7813.typeMethods.push("selected");
                                                                                              type7813.typeMethods.push("selected:=(1)");
                                                                                              var opresult7816 = callmethodChecked(var_Input, "&(1)", [1], type7813);
                                                                                              var var_Choice = opresult7816;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7817 = function(argcv) {    // method Choice
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Choice is a simple accessor - elide try ... catch
                                                                                                setLineNumber(377);    // compilenode identifier
                                                                                                return var_Choice;
                                                                                              };
                                                                                              func7817.paramCounts = [0];
                                                                                              this.methods["Choice"] = func7817;
                                                                                              func7817.definitionLine = 1;
                                                                                              func7817.definitionModule = "objectdraw";
                                                                                              setLineNumber(386);    // compilenode typedec
                                                                                              // Type decl Color
                                                                                              //   Type literal 
                                                                                              var type7819 = new GraceType("Color");
                                                                                              type7819.typeMethods.push("red");
                                                                                              type7819.typeMethods.push("green");
                                                                                              type7819.typeMethods.push("blue");
                                                                                              var var_Color = type7819;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7820 = function(argcv) {    // method Color
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // Color is a simple accessor - elide try ... catch
                                                                                                setLineNumber(386);    // compilenode identifier
                                                                                                return var_Color;
                                                                                              };
                                                                                              func7820.paramCounts = [0];
                                                                                              this.methods["Color"] = func7820;
                                                                                              func7820.definitionLine = 1;
                                                                                              func7820.definitionModule = "objectdraw";
                                                                                              setLineNumber(392);    // compilenode typedec
                                                                                              // Type decl ColorFactory
                                                                                              //   Type literal 
                                                                                              var type7822 = new GraceType("ColorFactory");
                                                                                              type7822.typeMethods.push("r(1)g(1)b(1)");
                                                                                              type7822.typeMethods.push("random");
                                                                                              type7822.typeMethods.push("white");
                                                                                              type7822.typeMethods.push("black");
                                                                                              type7822.typeMethods.push("green");
                                                                                              type7822.typeMethods.push("red");
                                                                                              type7822.typeMethods.push("gray");
                                                                                              type7822.typeMethods.push("blue");
                                                                                              type7822.typeMethods.push("cyan");
                                                                                              type7822.typeMethods.push("magenta");
                                                                                              type7822.typeMethods.push("yellow");
                                                                                              type7822.typeMethods.push("neutral");
                                                                                              var var_ColorFactory = type7822;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7823 = function(argcv) {    // method ColorFactory
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // ColorFactory is a simple accessor - elide try ... catch
                                                                                                setLineNumber(392);    // compilenode identifier
                                                                                                return var_ColorFactory;
                                                                                              };
                                                                                              func7823.paramCounts = [0];
                                                                                              this.methods["ColorFactory"] = func7823;
                                                                                              func7823.definitionLine = 1;
                                                                                              func7823.definitionModule = "objectdraw";
                                                                                              setLineNumber(410);    // compilenode string
                                                                                              var string7825 = new GraceString("ColorOutOfRange");
                                                                                              // call case 6: other requests
                                                                                              // call case 5: prelude request
                                                                                              var call7827 = callmethodChecked(var_prelude, "ProgrammingError", []);
                                                                                              var call7828 = callmethodChecked(call7827, "refine(1)", [1], string7825);
                                                                                              var var_ColorOutOfRange = call7828;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7829 = function(argcv) {    // method ColorOutOfRange
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("objectdraw");
                                                                                                // ColorOutOfRange is a simple accessor - elide try ... catch
                                                                                                setLineNumber(409);    // compilenode identifier
                                                                                                return var_ColorOutOfRange;
                                                                                              };
                                                                                              func7829.paramCounts = [0];
                                                                                              this.methods["ColorOutOfRange"] = func7829;
                                                                                              func7829.definitionLine = 1;
                                                                                              func7829.definitionModule = "objectdraw";
                                                                                              this.methods["ColorOutOfRange"].debug = "def";
                                                                                              // call case 5: prelude request
                                                                                              var call7831 = callmethodChecked(var_prelude, "ExceptionKind", []);
                                                                                              if (!Grace_isTrue(callmethod(call7831, "match(1)", [1], var_ColorOutOfRange)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'ColorOutOfRange' is not of type prelude.ExceptionKind"));
                                                                                              setLineNumber(413);    // compilenode object
                                                                                              var obj7832 = Grace_allocObject(GraceObject, "color");
                                                                                              obj7832.definitionModule = "objectdraw";
                                                                                              obj7832.definitionLine = 413;
                                                                                              obj7832.outer = this;
                                                                                              var reader_objectdraw_outer7833 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj7832.methods["outer"] = reader_objectdraw_outer7833;
                                                                                              var obj_init_7832 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj7832;
                                                                                                var func7834 = function(argcv) {    // method r(_)g(_)b(_)
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  var var_r__39__ = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  var var_g__39__ = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  var var_b__39__ = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  // Start argument checking
                                                                                                  curarg = 1;
                                                                                                  setLineNumber(414);    // compilenode identifier
                                                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in r (arg list 1), which corresponds to parameter r', does not have " + 
                                                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in g (arg list 2), which corresponds to parameter g', does not have " + 
                                                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in b (arg list 3), which corresponds to parameter b', does not have " + 
                                                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  // End argument checking
                                                                                                  setModuleName("objectdraw");
                                                                                                  var obj7835 = Grace_allocObject(GraceObject, "color.r(_)g(_)b(_)");
                                                                                                  obj7835.definitionModule = "objectdraw";
                                                                                                  obj7835.definitionLine = 414;
                                                                                                  obj7835.outer = this;
                                                                                                  var reader_objectdraw_outer7836 = function() {
                                                                                                    return this.outer;
                                                                                                  };
                                                                                                  obj7835.methods["outer"] = reader_objectdraw_outer7836;
                                                                                                  var obj_init_7835 = function() {
                                                                                                    var origSuperDepth = superDepth;
                                                                                                    superDepth = obj7835;
                                                                                                    var func7837 = function(argcv) {    // method ==(_)
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      var var_c = arguments[curarg];
                                                                                                      curarg++;
                                                                                                      // Start argument checking
                                                                                                      curarg = 1;
                                                                                                      setLineNumber(432);    // compilenode identifier
                                                                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                              new GraceString("argument 1 in == (arg list 1), which corresponds to parameter c, does not have " + 
                                                                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                      curarg++;
                                                                                                      // End argument checking
                                                                                                      setModuleName("objectdraw");
                                                                                                      setLineNumber(433);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call7839 = callmethodChecked(var_c, "blue", []);
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7842 = callmethodChecked(this, "blue", []);
                                                                                                      var opresult7844 = callmethodChecked(call7842, "==(1)", [1], call7839);
                                                                                                      // call case 6: other requests
                                                                                                      var call7847 = callmethodChecked(var_c, "green", []);
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7850 = callmethodChecked(this, "green", []);
                                                                                                      var opresult7852 = callmethodChecked(call7850, "==(1)", [1], call7847);
                                                                                                      // call case 6: other requests
                                                                                                      var call7855 = callmethodChecked(var_c, "red", []);
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7858 = callmethodChecked(this, "red", []);
                                                                                                      var opresult7860 = callmethodChecked(call7858, "==(1)", [1], call7855);
                                                                                                      var opresult7862 = callmethodChecked(opresult7860, "&&(1)", [1], opresult7852);
                                                                                                      var opresult7864 = callmethodChecked(opresult7862, "&&(1)", [1], opresult7844);
                                                                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult7864)))
                                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                              new GraceString("result of method ==(_) does not have " + 
                                                                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                      return opresult7864;
                                                                                                    };
                                                                                                    func7837.paramTypes = [];
                                                                                                    func7837.paramTypes.push([]);
                                                                                                    func7837.paramCounts = [1];
                                                                                                    obj7835.methods["==(1)"] = func7837;
                                                                                                    func7837.definitionLine = 432;
                                                                                                    func7837.definitionModule = "objectdraw";
                                                                                                    var func7865 = function(argcv) {    // method asString
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      setModuleName("objectdraw");
                                                                                                      setLineNumber(437);    // compilenode string
                                                                                                      var string7866 = new GraceString(")");
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7869 = callmethodChecked(this, "blue", []);
                                                                                                      var string7871 = new GraceString(", ");
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7874 = callmethodChecked(this, "green", []);
                                                                                                      var string7876 = new GraceString(", ");
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7879 = callmethodChecked(this, "red", []);
                                                                                                      var string7881 = new GraceString("color w/ rgb(");
                                                                                                      var opresult7883 = callmethodChecked(string7881, "++(1)", [1], call7879);
                                                                                                      var opresult7885 = callmethodChecked(opresult7883, "++(1)", [1], string7876);
                                                                                                      var opresult7887 = callmethodChecked(opresult7885, "++(1)", [1], call7874);
                                                                                                      var opresult7889 = callmethodChecked(opresult7887, "++(1)", [1], string7871);
                                                                                                      var opresult7891 = callmethodChecked(opresult7889, "++(1)", [1], call7869);
                                                                                                      var opresult7893 = callmethodChecked(opresult7891, "++(1)", [1], string7866);
                                                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7893)))
                                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                              new GraceString("result of method asString does not have " + 
                                                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                                                      return opresult7893;
                                                                                                    };
                                                                                                    func7865.paramCounts = [0];
                                                                                                    obj7835.methods["asString"] = func7865;
                                                                                                    func7865.definitionLine = 436;
                                                                                                    func7865.definitionModule = "objectdraw";
                                                                                                    var if7894 = GraceDone;
                                                                                                    setLineNumber(416);    // compilenode identifier
                                                                                                    var opresult7897 = callmethodChecked(var_r__39__, ">(1)", [1], new GraceNum(255));
                                                                                                    var opresult7901 = callmethodChecked(var_r__39__, "<(1)", [1], new GraceNum(0));
                                                                                                    var opresult7903 = callmethodChecked(opresult7901, "||(1)", [1], opresult7897);
                                                                                                    if (Grace_isTrue(opresult7903)) {
                                                                                                      setLineNumber(417);    // compilenode string
                                                                                                      var string7905 = new GraceString(" out of bounds 0..255");
                                                                                                      var string7908 = new GraceString("red index ");
                                                                                                      var opresult7910 = callmethodChecked(string7908, "++(1)", [1], var_r__39__);
                                                                                                      var opresult7912 = callmethodChecked(opresult7910, "++(1)", [1], string7905);
                                                                                                      // call case 6: other requests
                                                                                                      var call7913 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult7912);
                                                                                                      if7894 = call7913;
                                                                                                    }
                                                                                                    var if7914 = GraceDone;
                                                                                                    setLineNumber(420);    // compilenode identifier
                                                                                                    var opresult7917 = callmethodChecked(var_g__39__, ">(1)", [1], new GraceNum(255));
                                                                                                    var opresult7921 = callmethodChecked(var_g__39__, "<(1)", [1], new GraceNum(0));
                                                                                                    var opresult7923 = callmethodChecked(opresult7921, "||(1)", [1], opresult7917);
                                                                                                    if (Grace_isTrue(opresult7923)) {
                                                                                                      setLineNumber(421);    // compilenode string
                                                                                                      var string7925 = new GraceString(" out of bounds 0..255");
                                                                                                      var string7928 = new GraceString("green index ");
                                                                                                      var opresult7930 = callmethodChecked(string7928, "++(1)", [1], var_g__39__);
                                                                                                      var opresult7932 = callmethodChecked(opresult7930, "++(1)", [1], string7925);
                                                                                                      // call case 6: other requests
                                                                                                      var call7933 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult7932);
                                                                                                      if7914 = call7933;
                                                                                                    }
                                                                                                    var if7934 = GraceDone;
                                                                                                    setLineNumber(424);    // compilenode identifier
                                                                                                    var opresult7937 = callmethodChecked(var_b__39__, ">(1)", [1], new GraceNum(255));
                                                                                                    var opresult7941 = callmethodChecked(var_b__39__, "<(1)", [1], new GraceNum(0));
                                                                                                    var opresult7943 = callmethodChecked(opresult7941, "||(1)", [1], opresult7937);
                                                                                                    if (Grace_isTrue(opresult7943)) {
                                                                                                      setLineNumber(425);    // compilenode string
                                                                                                      var string7945 = new GraceString(" out of bounds 0..255");
                                                                                                      var string7948 = new GraceString("blue index ");
                                                                                                      var opresult7950 = callmethodChecked(string7948, "++(1)", [1], var_b__39__);
                                                                                                      var opresult7952 = callmethodChecked(opresult7950, "++(1)", [1], string7945);
                                                                                                      // call case 6: other requests
                                                                                                      var call7953 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult7952);
                                                                                                      if7934 = call7953;
                                                                                                    }
                                                                                                    setLineNumber(428);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    var call7955 = callmethodChecked(var_r__39__, "truncated", []);
                                                                                                    obj7835.data["red"] = call7955;
                                                                                                    var reader_objectdraw_red7956 = function() {
                                                                                                      return this.data["red"];
                                                                                                    };
                                                                                                    reader_objectdraw_red7956.def = true;
                                                                                                    obj7835.methods["red"] = reader_objectdraw_red7956;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7955)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("value of def 'red' is not of type Number"));
                                                                                                    setLineNumber(429);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    var call7958 = callmethodChecked(var_g__39__, "truncated", []);
                                                                                                    obj7835.data["green"] = call7958;
                                                                                                    var reader_objectdraw_green7959 = function() {
                                                                                                      return this.data["green"];
                                                                                                    };
                                                                                                    reader_objectdraw_green7959.def = true;
                                                                                                    obj7835.methods["green"] = reader_objectdraw_green7959;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7958)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("value of def 'green' is not of type Number"));
                                                                                                    setLineNumber(430);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    var call7961 = callmethodChecked(var_b__39__, "truncated", []);
                                                                                                    obj7835.data["blue"] = call7961;
                                                                                                    var reader_objectdraw_blue7962 = function() {
                                                                                                      return this.data["blue"];
                                                                                                    };
                                                                                                    reader_objectdraw_blue7962.def = true;
                                                                                                    obj7835.methods["blue"] = reader_objectdraw_blue7962;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7961)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("value of def 'blue' is not of type Number"));
                                                                                                    superDepth = origSuperDepth;
                                                                                                  };
                                                                                                  obj_init_7835.apply(obj7835, []);
                                                                                                  setLineNumber(414);    // return value
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], obj7835)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method r(_)g(_)b(_) does not have " + 
                                                                                                              callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                  return obj7835;
                                                                                                };
                                                                                                func7834.paramTypes = [];
                                                                                                func7834.paramTypes.push([type_Number, "r'"]);
                                                                                                func7834.paramTypes.push([type_Number, "g'"]);
                                                                                                func7834.paramTypes.push([type_Number, "b'"]);
                                                                                                func7834.paramCounts = [1, 1, 1];
                                                                                                obj7832.methods["r(1)g(1)b(1)"] = func7834;
                                                                                                func7834.definitionLine = 414;
                                                                                                func7834.definitionModule = "objectdraw";
                                                                                                  var func7963 = function(argcv) {    // method r(_)g(_)b(_)$object(_)
                                                                                                    var curarg = 1;
                                                                                                    var var_r__39__ = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    var var_g__39__ = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    var var_b__39__ = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    var inheritingObject = arguments[curarg++];
                                                                                                    // Start argument processing
                                                                                                    curarg = 1;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in r (arg list 1), which corresponds to parameter r', does not have " + 
                                                                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in g (arg list 2), which corresponds to parameter g', does not have " + 
                                                                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in b (arg list 3), which corresponds to parameter b', does not have " + 
                                                                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    // End argument processing
                                                                                                    setModuleName("objectdraw");
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var obj7964 = Grace_allocObject(GraceObject, "r(1)g(1)b(1)");
                                                                                                    obj7964.definitionModule = "objectdraw";
                                                                                                    obj7964.definitionLine = 414;
                                                                                                    var inho7964 = inheritingObject;
                                                                                                    while (inho7964.superobj) inho7964 = inho7964.superobj;
                                                                                                    inho7964.superobj = obj7964;
                                                                                                    obj7964.data = inheritingObject.data;
                                                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                                                      obj7964._value = inheritingObject._value;
                                                                                                    obj7964.outer = this;
                                                                                                    var reader_objectdraw_outer7965 = function() {
                                                                                                      return this.outer;
                                                                                                    };
                                                                                                    obj7964.methods["outer"] = reader_objectdraw_outer7965;
                                                                                                    var obj_init_7964 = function() {
                                                                                                      var origSuperDepth = superDepth;
                                                                                                      superDepth = obj7964;
                                                                                                      var func7966 = function(argcv) {    // method ==(_)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_c = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        // Start argument checking
                                                                                                        curarg = 1;
                                                                                                        setLineNumber(432);    // compilenode identifier
                                                                                                        if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                                new GraceString("argument 1 in == (arg list 1), which corresponds to parameter c, does not have " + 
                                                                                                                    callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                        curarg++;
                                                                                                        // End argument checking
                                                                                                        setModuleName("objectdraw");
                                                                                                        setLineNumber(433);    // compilenode member
                                                                                                        // call case 6: other requests
                                                                                                        var call7968 = callmethodChecked(var_c, "blue", []);
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7971 = callmethodChecked(this, "blue", []);
                                                                                                        var opresult7973 = callmethodChecked(call7971, "==(1)", [1], call7968);
                                                                                                        // call case 6: other requests
                                                                                                        var call7976 = callmethodChecked(var_c, "green", []);
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7979 = callmethodChecked(this, "green", []);
                                                                                                        var opresult7981 = callmethodChecked(call7979, "==(1)", [1], call7976);
                                                                                                        // call case 6: other requests
                                                                                                        var call7984 = callmethodChecked(var_c, "red", []);
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7987 = callmethodChecked(this, "red", []);
                                                                                                        var opresult7989 = callmethodChecked(call7987, "==(1)", [1], call7984);
                                                                                                        var opresult7991 = callmethodChecked(opresult7989, "&&(1)", [1], opresult7981);
                                                                                                        var opresult7993 = callmethodChecked(opresult7991, "&&(1)", [1], opresult7973);
                                                                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult7993)))
                                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                                new GraceString("result of method ==(_) does not have " + 
                                                                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                        return opresult7993;
                                                                                                      };
                                                                                                      func7966.paramTypes = [];
                                                                                                      func7966.paramTypes.push([]);
                                                                                                      func7966.paramCounts = [1];
                                                                                                      obj7964.methods["==(1)"] = func7966;
                                                                                                      func7966.definitionLine = 432;
                                                                                                      func7966.definitionModule = "objectdraw";
                                                                                                      var func7994 = function(argcv) {    // method asString
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        setModuleName("objectdraw");
                                                                                                        setLineNumber(437);    // compilenode string
                                                                                                        var string7995 = new GraceString(")");
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7998 = callmethodChecked(this, "blue", []);
                                                                                                        var string8000 = new GraceString(", ");
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call8003 = callmethodChecked(this, "green", []);
                                                                                                        var string8005 = new GraceString(", ");
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call8008 = callmethodChecked(this, "red", []);
                                                                                                        var string8010 = new GraceString("color w/ rgb(");
                                                                                                        var opresult8012 = callmethodChecked(string8010, "++(1)", [1], call8008);
                                                                                                        var opresult8014 = callmethodChecked(opresult8012, "++(1)", [1], string8005);
                                                                                                        var opresult8016 = callmethodChecked(opresult8014, "++(1)", [1], call8003);
                                                                                                        var opresult8018 = callmethodChecked(opresult8016, "++(1)", [1], string8000);
                                                                                                        var opresult8020 = callmethodChecked(opresult8018, "++(1)", [1], call7998);
                                                                                                        var opresult8022 = callmethodChecked(opresult8020, "++(1)", [1], string7995);
                                                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult8022)))
                                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                                new GraceString("result of method asString does not have " + 
                                                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                                                        return opresult8022;
                                                                                                      };
                                                                                                      func7994.paramCounts = [0];
                                                                                                      obj7964.methods["asString"] = func7994;
                                                                                                      func7994.definitionLine = 436;
                                                                                                      func7994.definitionModule = "objectdraw";
                                                                                                      var if8023 = GraceDone;
                                                                                                      setLineNumber(416);    // compilenode identifier
                                                                                                      var opresult8026 = callmethodChecked(var_r__39__, ">(1)", [1], new GraceNum(255));
                                                                                                      var opresult8030 = callmethodChecked(var_r__39__, "<(1)", [1], new GraceNum(0));
                                                                                                      var opresult8032 = callmethodChecked(opresult8030, "||(1)", [1], opresult8026);
                                                                                                      if (Grace_isTrue(opresult8032)) {
                                                                                                        setLineNumber(417);    // compilenode string
                                                                                                        var string8034 = new GraceString(" out of bounds 0..255");
                                                                                                        var string8037 = new GraceString("red index ");
                                                                                                        var opresult8039 = callmethodChecked(string8037, "++(1)", [1], var_r__39__);
                                                                                                        var opresult8041 = callmethodChecked(opresult8039, "++(1)", [1], string8034);
                                                                                                        // call case 6: other requests
                                                                                                        var call8042 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult8041);
                                                                                                        if8023 = call8042;
                                                                                                      }
                                                                                                      var if8043 = GraceDone;
                                                                                                      setLineNumber(420);    // compilenode identifier
                                                                                                      var opresult8046 = callmethodChecked(var_g__39__, ">(1)", [1], new GraceNum(255));
                                                                                                      var opresult8050 = callmethodChecked(var_g__39__, "<(1)", [1], new GraceNum(0));
                                                                                                      var opresult8052 = callmethodChecked(opresult8050, "||(1)", [1], opresult8046);
                                                                                                      if (Grace_isTrue(opresult8052)) {
                                                                                                        setLineNumber(421);    // compilenode string
                                                                                                        var string8054 = new GraceString(" out of bounds 0..255");
                                                                                                        var string8057 = new GraceString("green index ");
                                                                                                        var opresult8059 = callmethodChecked(string8057, "++(1)", [1], var_g__39__);
                                                                                                        var opresult8061 = callmethodChecked(opresult8059, "++(1)", [1], string8054);
                                                                                                        // call case 6: other requests
                                                                                                        var call8062 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult8061);
                                                                                                        if8043 = call8062;
                                                                                                      }
                                                                                                      var if8063 = GraceDone;
                                                                                                      setLineNumber(424);    // compilenode identifier
                                                                                                      var opresult8066 = callmethodChecked(var_b__39__, ">(1)", [1], new GraceNum(255));
                                                                                                      var opresult8070 = callmethodChecked(var_b__39__, "<(1)", [1], new GraceNum(0));
                                                                                                      var opresult8072 = callmethodChecked(opresult8070, "||(1)", [1], opresult8066);
                                                                                                      if (Grace_isTrue(opresult8072)) {
                                                                                                        setLineNumber(425);    // compilenode string
                                                                                                        var string8074 = new GraceString(" out of bounds 0..255");
                                                                                                        var string8077 = new GraceString("blue index ");
                                                                                                        var opresult8079 = callmethodChecked(string8077, "++(1)", [1], var_b__39__);
                                                                                                        var opresult8081 = callmethodChecked(opresult8079, "++(1)", [1], string8074);
                                                                                                        // call case 6: other requests
                                                                                                        var call8082 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult8081);
                                                                                                        if8063 = call8082;
                                                                                                      }
                                                                                                      setLineNumber(428);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call8084 = callmethodChecked(var_r__39__, "truncated", []);
                                                                                                      obj7964.data["red"] = call8084;
                                                                                                      var reader_objectdraw_red8085 = function() {
                                                                                                        return this.data["red"];
                                                                                                      };
                                                                                                      reader_objectdraw_red8085.def = true;
                                                                                                      obj7964.methods["red"] = reader_objectdraw_red8085;
                                                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call8084)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("value of def 'red' is not of type Number"));
                                                                                                      setLineNumber(429);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call8087 = callmethodChecked(var_g__39__, "truncated", []);
                                                                                                      obj7964.data["green"] = call8087;
                                                                                                      var reader_objectdraw_green8088 = function() {
                                                                                                        return this.data["green"];
                                                                                                      };
                                                                                                      reader_objectdraw_green8088.def = true;
                                                                                                      obj7964.methods["green"] = reader_objectdraw_green8088;
                                                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call8087)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("value of def 'green' is not of type Number"));
                                                                                                      setLineNumber(430);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call8090 = callmethodChecked(var_b__39__, "truncated", []);
                                                                                                      obj7964.data["blue"] = call8090;
                                                                                                      var reader_objectdraw_blue8091 = function() {
                                                                                                        return this.data["blue"];
                                                                                                      };
                                                                                                      reader_objectdraw_blue8091.def = true;
                                                                                                      obj7964.methods["blue"] = reader_objectdraw_blue8091;
                                                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call8090)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("value of def 'blue' is not of type Number"));
                                                                                                      superDepth = origSuperDepth;
                                                                                                    };
                                                                                                    obj_init_7964.apply(inheritingObject, []);
                                                                                                    return obj7964;
                                                                                                    };
                                                                                                    func7963.paramTypes = [];
                                                                                                    func7963.paramTypes.push([type_Number, "r'"]);
                                                                                                    func7963.paramTypes.push([type_Number, "g'"]);
                                                                                                    func7963.paramTypes.push([type_Number, "b'"]);
                                                                                                    obj7832.methods["r(1)g(1)b(1)$object(1)"] = func7963;
                                                                                                  var func8092 = function(argcv) {    // method random
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("objectdraw");
                                                                                                    setLineNumber(443);    // compilenode num
                                                                                                    // call case 6: other requests
                                                                                                    setLineNumber(414);    // compilenode member
                                                                                                    // call case 3: self.outer request
                                                                                                    var call8096 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onSelf = true;
                                                                                                    var call8097 = callmethodChecked(call8096, "randomIntFrom(1)to(1)", [1, 1], new GraceNum(0), new GraceNum(255));
                                                                                                    setLineNumber(444);    // compilenode num
                                                                                                    // call case 6: other requests
                                                                                                    setLineNumber(414);    // compilenode member
                                                                                                    // call case 3: self.outer request
                                                                                                    var call8100 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onSelf = true;
                                                                                                    var call8101 = callmethodChecked(call8100, "randomIntFrom(1)to(1)", [1, 1], new GraceNum(0), new GraceNum(255));
                                                                                                    setLineNumber(445);    // compilenode num
                                                                                                    // call case 6: other requests
                                                                                                    setLineNumber(414);    // compilenode member
                                                                                                    // call case 3: self.outer request
                                                                                                    var call8104 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onSelf = true;
                                                                                                    var call8105 = callmethodChecked(call8104, "randomIntFrom(1)to(1)", [1, 1], new GraceNum(0), new GraceNum(255));
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call8106 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], call8097, call8101, call8105);
                                                                                                    setLineNumber(443);    // return value
                                                                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8106)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method random does not have " + 
                                                                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                    return call8106;
                                                                                                  };
                                                                                                  func8092.paramCounts = [0];
                                                                                                  obj7832.methods["random"] = func8092;
                                                                                                  func8092.definitionLine = 441;
                                                                                                  func8092.definitionModule = "objectdraw";
                                                                                                  setLineNumber(448);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8108 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(255), new GraceNum(255));
                                                                                                  obj7832.data["white"] = call8108;
                                                                                                  var reader_objectdraw_white8109 = function() {
                                                                                                    return this.data["white"];
                                                                                                  };
                                                                                                  reader_objectdraw_white8109.def = true;
                                                                                                  obj7832.methods["white"] = reader_objectdraw_white8109;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8108)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'white' is not of type Color"));
                                                                                                  setLineNumber(449);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8111 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(0), new GraceNum(0));
                                                                                                  obj7832.data["black"] = call8111;
                                                                                                  var reader_objectdraw_black8112 = function() {
                                                                                                    return this.data["black"];
                                                                                                  };
                                                                                                  reader_objectdraw_black8112.def = true;
                                                                                                  obj7832.methods["black"] = reader_objectdraw_black8112;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8111)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'black' is not of type Color"));
                                                                                                  setLineNumber(450);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8114 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(255), new GraceNum(0));
                                                                                                  obj7832.data["green"] = call8114;
                                                                                                  var reader_objectdraw_green8115 = function() {
                                                                                                    return this.data["green"];
                                                                                                  };
                                                                                                  reader_objectdraw_green8115.def = true;
                                                                                                  obj7832.methods["green"] = reader_objectdraw_green8115;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8114)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'green' is not of type Color"));
                                                                                                  setLineNumber(451);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8117 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(0), new GraceNum(0));
                                                                                                  obj7832.data["red"] = call8117;
                                                                                                  var reader_objectdraw_red8118 = function() {
                                                                                                    return this.data["red"];
                                                                                                  };
                                                                                                  reader_objectdraw_red8118.def = true;
                                                                                                  obj7832.methods["red"] = reader_objectdraw_red8118;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8117)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'red' is not of type Color"));
                                                                                                  setLineNumber(452);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8120 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(60), new GraceNum(60), new GraceNum(60));
                                                                                                  obj7832.data["gray"] = call8120;
                                                                                                  var reader_objectdraw_gray8121 = function() {
                                                                                                    return this.data["gray"];
                                                                                                  };
                                                                                                  reader_objectdraw_gray8121.def = true;
                                                                                                  obj7832.methods["gray"] = reader_objectdraw_gray8121;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8120)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'gray' is not of type Color"));
                                                                                                  setLineNumber(453);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8123 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(0), new GraceNum(255));
                                                                                                  obj7832.data["blue"] = call8123;
                                                                                                  var reader_objectdraw_blue8124 = function() {
                                                                                                    return this.data["blue"];
                                                                                                  };
                                                                                                  reader_objectdraw_blue8124.def = true;
                                                                                                  obj7832.methods["blue"] = reader_objectdraw_blue8124;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8123)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'blue' is not of type Color"));
                                                                                                  setLineNumber(454);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8126 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(255), new GraceNum(255));
                                                                                                  obj7832.data["cyan"] = call8126;
                                                                                                  var reader_objectdraw_cyan8127 = function() {
                                                                                                    return this.data["cyan"];
                                                                                                  };
                                                                                                  reader_objectdraw_cyan8127.def = true;
                                                                                                  obj7832.methods["cyan"] = reader_objectdraw_cyan8127;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8126)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'cyan' is not of type Color"));
                                                                                                  setLineNumber(455);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8129 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(0), new GraceNum(255));
                                                                                                  obj7832.data["magenta"] = call8129;
                                                                                                  var reader_objectdraw_magenta8130 = function() {
                                                                                                    return this.data["magenta"];
                                                                                                  };
                                                                                                  reader_objectdraw_magenta8130.def = true;
                                                                                                  obj7832.methods["magenta"] = reader_objectdraw_magenta8130;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8129)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'magenta' is not of type Color"));
                                                                                                  setLineNumber(456);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8132 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(255), new GraceNum(0));
                                                                                                  obj7832.data["yellow"] = call8132;
                                                                                                  var reader_objectdraw_yellow8133 = function() {
                                                                                                    return this.data["yellow"];
                                                                                                  };
                                                                                                  reader_objectdraw_yellow8133.def = true;
                                                                                                  obj7832.methods["yellow"] = reader_objectdraw_yellow8133;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8132)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'yellow' is not of type Color"));
                                                                                                  setLineNumber(457);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8135 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(220), new GraceNum(220), new GraceNum(220));
                                                                                                  obj7832.data["neutral"] = call8135;
                                                                                                  var reader_objectdraw_neutral8136 = function() {
                                                                                                    return this.data["neutral"];
                                                                                                  };
                                                                                                  reader_objectdraw_neutral8136.def = true;
                                                                                                  obj7832.methods["neutral"] = reader_objectdraw_neutral8136;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8135)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'neutral' is not of type Color"));
                                                                                                  superDepth = origSuperDepth;
                                                                                                };
                                                                                                obj_init_7832.apply(obj7832, []);
                                                                                                var var_color = obj7832;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8137 = function(argcv) {    // method color
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // color is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(413);    // compilenode identifier
                                                                                                  return var_color;
                                                                                                };
                                                                                                func8137.paramCounts = [0];
                                                                                                this.methods["color"] = func8137;
                                                                                                func8137.definitionLine = 1;
                                                                                                func8137.definitionModule = "objectdraw";
                                                                                                this.methods["color"].debug = "def";
                                                                                                setLineNumber(462);    // compilenode num
                                                                                                // call case 6: other requests
                                                                                                var call8139 = callmethodChecked(var_color, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(0), new GraceNum(0));
                                                                                                var var_black = call8139;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8140 = function(argcv) {    // method black
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // black is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(462);    // compilenode identifier
                                                                                                  return var_black;
                                                                                                };
                                                                                                func8140.paramCounts = [0];
                                                                                                this.methods["black"] = func8140;
                                                                                                func8140.definitionLine = 1;
                                                                                                func8140.definitionModule = "objectdraw";
                                                                                                this.methods["black"].debug = "def";
                                                                                                if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("value of def 'black' is not of type Color"));
                                                                                                setLineNumber(478);    // compilenode typedec
                                                                                                // Type decl Event
                                                                                                //   Type literal 
                                                                                                var type8142 = new GraceType("Event");
                                                                                                type8142.typeMethods.push("source");
                                                                                                var var_Event = type8142;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8143 = function(argcv) {    // method Event
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // Event is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(478);    // compilenode identifier
                                                                                                  return var_Event;
                                                                                                };
                                                                                                func8143.paramCounts = [0];
                                                                                                this.methods["Event"] = func8143;
                                                                                                func8143.definitionLine = 1;
                                                                                                func8143.definitionModule = "objectdraw";
                                                                                                setLineNumber(483);    // compilenode typedec
                                                                                                // Type decl MouseEvent
                                                                                                //   Type literal 
                                                                                                var type8145 = new GraceType("\u2039anon\u203a");
                                                                                                type8145.typeMethods.push("at");
                                                                                                var opresult8148 = callmethodChecked(var_Event, "&(1)", [1], type8145);
                                                                                                var var_MouseEvent = opresult8148;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8149 = function(argcv) {    // method MouseEvent
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // MouseEvent is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(483);    // compilenode identifier
                                                                                                  return var_MouseEvent;
                                                                                                };
                                                                                                func8149.paramCounts = [0];
                                                                                                this.methods["MouseEvent"] = func8149;
                                                                                                func8149.definitionLine = 1;
                                                                                                func8149.definitionModule = "objectdraw";
                                                                                                setLineNumber(488);    // compilenode typedec
                                                                                                // Type decl KeyEvent
                                                                                                //   Type literal 
                                                                                                var type8151 = new GraceType("\u2039anon\u203a");
                                                                                                type8151.typeMethods.push("code");
                                                                                                var opresult8154 = callmethodChecked(var_Event, "&(1)", [1], type8151);
                                                                                                var var_KeyEvent = opresult8154;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8155 = function(argcv) {    // method KeyEvent
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // KeyEvent is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(488);    // compilenode identifier
                                                                                                  return var_KeyEvent;
                                                                                                };
                                                                                                func8155.paramCounts = [0];
                                                                                                this.methods["KeyEvent"] = func8155;
                                                                                                func8155.definitionLine = 1;
                                                                                                func8155.definitionModule = "objectdraw";
                                                                                                setLineNumber(495);    // compilenode typedec
                                                                                                // Type decl Response
                                                                                                var var_Response = var_Procedure;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8157 = function(argcv) {    // method Response
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // Response is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(495);    // compilenode identifier
                                                                                                  return var_Response;
                                                                                                };
                                                                                                func8157.paramCounts = [0];
                                                                                                this.methods["Response"] = func8157;
                                                                                                func8157.definitionLine = 1;
                                                                                                func8157.definitionModule = "objectdraw";
                                                                                                setLineNumber(498);    // compilenode typedec
                                                                                                // Type decl MouseResponse
                                                                                                var var_MouseResponse = var_Procedure;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8159 = function(argcv) {    // method MouseResponse
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // MouseResponse is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(498);    // compilenode identifier
                                                                                                  return var_MouseResponse;
                                                                                                };
                                                                                                func8159.paramCounts = [0];
                                                                                                this.methods["MouseResponse"] = func8159;
                                                                                                func8159.definitionLine = 1;
                                                                                                func8159.definitionModule = "objectdraw";
                                                                                                setLineNumber(501);    // compilenode typedec
                                                                                                // Type decl KeyResponse
                                                                                                var var_KeyResponse = var_Procedure;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8161 = function(argcv) {    // method KeyResponse
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // KeyResponse is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(501);    // compilenode identifier
                                                                                                  return var_KeyResponse;
                                                                                                };
                                                                                                func8161.paramCounts = [0];
                                                                                                this.methods["KeyResponse"] = func8161;
                                                                                                func8161.definitionLine = 1;
                                                                                                func8161.definitionModule = "objectdraw";
                                                                                                setLineNumber(543);    // compilenode typedec
                                                                                                // Type decl ComponentFactory
                                                                                                //   Type literal 
                                                                                                var type8163 = new GraceType("ComponentFactory");
                                                                                                type8163.typeMethods.push("fromElement(1)");
                                                                                                type8163.typeMethods.push("ofElementType(1)");
                                                                                                var var_ComponentFactory = type8163;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8164 = function(argcv) {    // method ComponentFactory
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // ComponentFactory is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(543);    // compilenode identifier
                                                                                                  return var_ComponentFactory;
                                                                                                };
                                                                                                func8164.paramCounts = [0];
                                                                                                this.methods["ComponentFactory"] = func8164;
                                                                                                func8164.definitionLine = 1;
                                                                                                func8164.definitionModule = "objectdraw";
                                                                                                setLineNumber(553);    // compilenode num
                                                                                                var var_maxClickTime = new GraceNum(200);
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8165 = function(argcv) {    // method maxClickTime
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // maxClickTime is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(553);    // compilenode identifier
                                                                                                  return var_maxClickTime;
                                                                                                };
                                                                                                func8165.paramCounts = [0];
                                                                                                this.methods["maxClickTime"] = func8165;
                                                                                                func8165.definitionLine = 1;
                                                                                                func8165.definitionModule = "objectdraw";
                                                                                                this.methods["maxClickTime"].debug = "def";
                                                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_maxClickTime)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("value of def 'maxClickTime' is not of type Number"));
                                                                                                setLineNumber(2213);    // compilenode typedec
                                                                                                // Type decl Audio
                                                                                                //   Type literal 
                                                                                                var type8167 = new GraceType("Audio");
                                                                                                type8167.typeMethods.push("source");
                                                                                                type8167.typeMethods.push("source:=(1)");
                                                                                                type8167.typeMethods.push("play");
                                                                                                type8167.typeMethods.push("pause");
                                                                                                type8167.typeMethods.push("isLooping");
                                                                                                type8167.typeMethods.push("looping:=(1)");
                                                                                                type8167.typeMethods.push("isEnded");
                                                                                                var var_Audio = type8167;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8168 = function(argcv) {    // method Audio
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("objectdraw");
                                                                                                  // Audio is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(2213);    // compilenode identifier
                                                                                                  return var_Audio;
                                                                                                };
                                                                                                func8168.paramCounts = [0];
                                                                                                this.methods["Audio"] = func8168;
                                                                                                func8168.definitionLine = 1;
                                                                                                func8168.definitionModule = "objectdraw";
                                                                                                return this;
                                                                                              }
                                                                                              gracecode_objectdraw.imports = ['dom', 'math'];
                                                                                              if (typeof gctCache !== "undefined")
                                                                                                gctCache['objectdraw'] = "classes:\n color\nconfidential:\n eventLogKind(1)response(1)\n menuWithOptions(1)labeled(1)\nconstructors-of:color:\n r(1)g(1)b(1)\nfresh-methods:\n applicationTitle(1)size(1)\n audioUrl(1)\n buttonLabeled(1)\n componentFromElement(1)\n componentOfElementType(1)\n containerFromElement(1)\n containerOfElementType(1)\n containerSize(2)\n drawable2DAt(1)size(1)on(1)\n drawableAt(1)on(1)\n drawableImageAt(1)size(1)url(1)on(1)\n drawingCanvasSize(1)\n emptyContainer\n eventLogKind(1)response(1)\n eventSource(1)\n fieldOfType(1)labeled(1)\n filledArcAt(1)size(1)from(1)to(1)on(1)\n filledOvalAt(1)size(1)on(1)\n filledRectAt(1)size(1)on(1)\n framedArcAt(1)size(1)from(1)to(1)on(1)\n framedOvalAt(1)size(1)on(1)\n framedRectAt(1)size(1)on(1)\n graphicApplicationSize(1)\n inputFromElement(1)\n inputOfElementType(1)\n inputOfType(1)\n keyEventSource(1)event(1)\n labeledWidgetFromElement(1)\n labeledWidgetOfElementType(1)\n labeledWidgetOfElementType(1)labeled(1)\n lineFrom(1)length(1)direction(1)on(1)\n lineFrom(1)to(1)on(1)\n menuWithOptions(1)\n menuWithOptions(1)labeled(1)\n mouseEventSource(1)event(1)\n numberFieldLabeled(1)\n numberFieldUnlabeled\n passwordFieldLabeled(1)\n passwordFieldUnlabeled\n resizable2DAt(1)size(1)on(1)\n textAt(1)with(1)on(1)\n textBoxWith(1)\n textFieldLabeled(1)\n textFieldUnlabeled\nfresh:applicationTitle(1)size(1):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n events\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isHorizontal\n isMe(1)\n isOpened\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouse(1)do(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n startApplication\n stopApplication\n theHeight\n theTitle\n theWidth\n theWindow\n width\n windowTitle\n windowTitle:=(1)\n \u2260(1)\nfresh:audioUrl(1):\n asString\n element\n isEnded\n isLooping\n looping:=(1)\n pause\n play\n source\n source:=(1)\nfresh:buttonLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:componentFromElement(1):\n asString\n element\n flexible:=(1)\n height\n isFlexible\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\nfresh:componentOfElementType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:containerFromElement(1):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:containerOfElementType(1):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:containerSize(2):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:drawable2DAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n x\n y\n \u2260(1)\nfresh:drawableAt(1)on(1):\n ==(1)\n addToCanvas(1)\n asString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n theColor\n theFrameColor\n visible:=(1)\n x\n y\nfresh:drawableImageAt(1)size(1)url(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theImage\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:drawingCanvasSize(1):\n ::(1)\n add(1)\n asDebugString\n asString\n basicAsString\n clear\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n notifyRedraw\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n printObjects\n redraw\n remove(1)\n sendBackward(1)\n sendForward(1)\n sendToBack(1)\n sendToFront(1)\n size\n startDrawing\n theContext\n theGraphics\n width\n \u2260(1)\nfresh:emptyContainer:\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:eventLogKind(1)response(1):\n kind\n response\nfresh:eventSource(1):\n asString\n source\nfresh:fieldOfType(1)labeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:filledArcAt(1)size(1)from(1)to(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:filledOvalAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:filledRectAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:framedArcAt(1)size(1)from(1)to(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:framedOvalAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:framedRectAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:graphicApplicationSize(1):\n ::(1)\n after\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n before\n canvas\n children\n do(1)\n element\n events\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isHorizontal\n isMe(1)\n isOpened\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouse(1)do(1)\n onMouseClick(1)\n onMouseClickDo(1)\n onMouseDrag(1)\n onMouseDragDo(1)\n onMouseEnter(1)\n onMouseEnterDo(1)\n onMouseExit(1)\n onMouseExitDo(1)\n onMouseMove(1)\n onMouseMoveDo(1)\n onMousePress(1)\n onMousePressDo(1)\n onMouseRelease(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n startApplication\n startGraphics\n stopApplication\n theHeight\n theTitle\n theWidth\n theWindow\n width\n windowTitle\n windowTitle:=(1)\n \u2260(1)\nfresh:inputFromElement(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:inputOfElementType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:inputOfType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:keyEventSource(1)event(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n code\n isMe(1)\n source\n \u2260(1)\nfresh:labeledWidgetFromElement(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:labeledWidgetOfElementType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:labeledWidgetOfElementType(1)labeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:lineFrom(1)length(1)direction(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n dist2(2)\n distToSegment(3)\n distToSegmentSquared(3)\n draw(1)\n end\n end:=(1)\n frameColor\n frameColor:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n setEndPoints(2)\n start\n start:=(1)\n theColor\n theEnd\n theFrameColor\n visible:=(1)\n x\n y\n \u2260(1)\nfresh:lineFrom(1)to(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n dist2(2)\n distToSegment(3)\n distToSegmentSquared(3)\n draw(1)\n end\n end:=(1)\n frameColor\n frameColor:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n setEndPoints(2)\n start\n start:=(1)\n theColor\n theEnd\n theFrameColor\n visible:=(1)\n x\n y\n \u2260(1)\nfresh:menuWithOptions(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n selected\n selected:=(1)\n size\n width\n \u2260(1)\nfresh:menuWithOptions(1)labeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n selected\n selected:=(1)\n size\n width\n \u2260(1)\nfresh:mouseEventSource(1)event(1):\n ::(1)\n asDebugString\n asString\n at\n basicAsString\n isMe(1)\n source\n \u2260(1)\nfresh:numberFieldLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n number\n number:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:numberFieldUnlabeled:\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n number\n number:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:passwordFieldLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nfresh:passwordFieldUnlabeled:\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nfresh:resizable2DAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:textAt(1)with(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n contents\n contents:=(1)\n draw(1)\n fontSize\n fontSize:=(1)\n frameColor\n frameColor:=(1)\n fsize\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n theColor\n theContents\n theFrameColor\n visible:=(1)\n wid\n width\n x\n y\n \u2260(1)\nfresh:textBoxWith(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n contents\n contents:=(1)\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:textFieldLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nfresh:textFieldUnlabeled:\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nmethods-of:color.r(1)g(1)b(1):\n ==(1)\n asString\n blue\n green\n red\nmethodtypes-of:Application:\n & 3\n & Container\n 3 startApplication -> Done\n 3 stopApplication -> Done\n 3 windowTitle -> String\n 3 windowTitle:=(value : String) -> Done\nmethodtypes-of:Audio:\n 16 isEnded -> Boolean\n 16 isLooping -> Boolean\n 16 looping:=(value : Boolean) -> Done\n 16 pause -> Done\n 16 play -> Done\n 16 source -> String\n 16 source:=(value : String) -> Done\nmethodtypes-of:Button:\nmethodtypes-of:Choice:\n & 14\n & Input\n 14 selected -> String\n 14 selected:=(value : String) -> Done\nmethodtypes-of:Color:\n 14 blue -> Number\n 14 green -> Number\n 14 red -> Number\nmethodtypes-of:ColorFactory:\n 14 black -> Color\n 14 blue -> Color\n 14 cyan -> Color\n 14 gray -> Color\n 14 green -> Color\n 14 magenta -> Color\n 14 neutral -> Color\n 14 r(r' : Number)g(g' : Number)b(b' : Number) -> Color\n 14 random -> Color\n 14 red -> Color\n 14 white -> Color\n 14 yellow -> Color\nmethodtypes-of:Component:\n 1 element -> Done\n 1 flexible:=(value : Boolean) -> Done\n 1 height -> Number\n 1 isFlexible -> Boolean\n 1 onKeyPressDo(f : KeyResponse) -> Done\n 1 onKeyReleaseDo(f : KeyResponse) -> Done\n 1 onKeyTypeDo(f : KeyResponse) -> Done\n 1 onMouseClickDo(f : MouseResponse) -> Done\n 1 onMouseDragDo(f : MouseResponse) -> Done\n 1 onMouseEnterDo(f : MouseResponse) -> Done\n 1 onMouseExitDo(f : MouseResponse) -> Done\n 1 onMouseMoveDo(f : MouseResponse) -> Done\n 1 onMousePressDo(f : MouseResponse) -> Done\n 1 onMouseReleaseDo(f : MouseResponse) -> Done\n 1 size -> Point\n 1 width -> Number\nmethodtypes-of:ComponentFactory<T>:\n 16 fromElement(element : Unknown) -> T\n 16 ofElementType(tagName : String) -> T\nmethodtypes-of:Container:\n & 2\n & Component\n 2 append(component : Component) -> Done\n 2 arrangeHorizontal -> Done\n 2 arrangeVertical -> Done\n 2 at(index : Number) -> Component\n 2 at(index : Number)put(component : Component) -> Done\n 2 do(f : Procedure<Component>) -> Done\n 2 prepend(component : Component) -> Done\n 2 size -> Number\nmethodtypes-of:DrawingCanvas:\n & 4\n & Component\n 4 add(d : Graphic) -> Done\n 4 clear -> Done\n 4 height -> Number\n 4 notifyRedraw -> Done\n 4 remove(d : Graphic) -> Done\n 4 sendBackward(d : Graphic) -> Done\n 4 sendForward(d : Graphic) -> Done\n 4 sendToBack(d : Graphic) -> Done\n 4 sendToFront(d : Graphic) -> Done\n 4 size -> Point\n 4 startDrawing -> Done\n 4 width -> Number\nmethodtypes-of:Event:\n 14 source -> Component\nmethodtypes-of:Foreign:\nmethodtypes-of:Function2<T, U, R>:\nmethodtypes-of:Function<T, R>:\nmethodtypes-of:Graphic:\n 3 addToCanvas(canvas : DrawingCanvas) -> Done\n 3 color -> Color\n 3 color:=(c : Color) -> Done\n 3 contains(location : Point) -> Boolean\n 3 isVisible -> Boolean\n 3 location -> Point\n 3 moveBy(dx : Number, dy : Number) -> Done\n 3 moveTo(location : Point) -> Done\n 3 overlaps(graphic : Graphic2D) -> Boolean\n 3 removeFromCanvas -> Done\n 3 sendBackward -> Done\n 3 sendForward -> Done\n 3 sendToBack -> Done\n 3 sendToFront -> Done\n 3 visible:=(value : Boolean) -> Done\n 3 x -> Number\n 3 y -> Number\nmethodtypes-of:Graphic2D:\n & 6\n & Graphic\n 6 height -> Number\n 6 height:=(height : Number) -> Done\n 6 size -> Point\n 6 size:=(dimensions : Point) -> Done\n 6 width -> Number\n 6 width:=(width : Number) -> Done\nmethodtypes-of:GraphicApplication:\n & 5\n & Application\n 5 canvas -> DrawingCanvas\n 5 onMouseClick(mouse : Point) -> Done\n 5 onMouseDrag(mouse : Point) -> Done\n 5 onMouseEnter(mouse : Point) -> Done\n 5 onMouseExit(mouse : Point) -> Done\n 5 onMouseMove(mouse : Point) -> Done\n 5 onMousePress(mouse : Point) -> Done\n 5 onMouseRelease(mouse : Point) -> Done\n 5 startGraphics -> Done\nmethodtypes-of:Input:\n & 11\n & Labeled\n 11 onBlurDo(f : Response) -> Done\n 11 onChangeDo(f : Response) -> Done\n 11 onFocusDo(f : Response) -> Done\nmethodtypes-of:Iterable:\nmethodtypes-of:KeyEvent:\n & 16\n & Event\n 16 code -> Number\nmethodtypes-of:KeyResponse:\nmethodtypes-of:Labeled:\n & 10\n & Component\n 10 label -> String\n 10 label:=(value : String) -> Done\nmethodtypes-of:Line:\n & 7\n & Graphic\n 7 end -> Point\n 7 end:=(end' : Point) -> Done\n 7 setEndPoints(start' : Point, end' : Point) -> Done\n 7 start -> Point\n 7 start:=(start' : Point) -> Done\nmethodtypes-of:MouseEvent:\n & 15\n & Event\n 15 at -> Point\nmethodtypes-of:MouseResponse:\nmethodtypes-of:NumberField:\n & 13\n & Input\n 13 number -> Number\n 13 number:=(value : Number) -> Done\nmethodtypes-of:Point:\nmethodtypes-of:Procedure<T>:\nmethodtypes-of:Response:\nmethodtypes-of:Text:\n & 8\n & Graphic\n 8 contents -> String\n 8 contents:=(s : String) -> Done\n 8 fontSize -> Number\n 8 fontSize:=(size : Number) -> Done\n 8 width -> Number\nmethodtypes-of:TextBox:\n & 9\n & Component\n 9 contents -> String\n 9 contents:=(value : String) -> Done\nmethodtypes-of:TextField:\n & 12\n & Input\n 12 text -> String\n 12 text:=(value : String) -> Done\nmodules:\n dom\n math\npath:\n objectdraw\npublic:\n AndPattern\n Application\n Audio\n BaseType\n BasicPattern\n Binding\n BindingPattern\n Block0\n Block1\n Block2\n Block3\n BoundsError\n Button\n Choice\n Cmd\n Collection\n Color\n ColorFactory\n ColorOutOfRange\n Component\n ComponentFactory\n ConcurrentModification\n Container\n Dictionary\n DrawingCanvas\n Enumerable\n Event\n ExceptionKind\n Expandable\n Extractable\n FailedMatch\n Foreign\n Fun\n Fun2\n Fun3\n Function\n Function2\n Graphic\n Graphic2D\n GraphicApplication\n Input\n Iterable\n Iterable\n Iterator\n IteratorExhausted\n KeyEvent\n KeyResponse\n Labeled\n Line\n List\n MatchAndDestructuringPattern\n MatchResult\n MouseEvent\n MouseResponse\n NoSuchObject\n NumberField\n OrPattern\n Pattern\n Point\n Point\n Proc\n Proc2\n Proc3\n Procedure\n RequestError\n Response\n Sequence\n Set\n Singleton\n SubobjectResponsibility\n SuccessfulMatch\n Text\n TextBox\n TextField\n TypeIntersection\n TypeSubtraction\n TypeUnion\n TypeVariant\n UninitializedVariable\n VariablePattern\n WildcardPattern\n abstract\n alwaysEqual\n applicationTitle(1)size(1)\n audioUrl(1)\n binding\n black\n buttonLabeled(1)\n collection\n collections\n color\n componentFromElement(1)\n componentOfElementType(1)\n containerFromElement(1)\n containerOfElementType(1)\n containerSize(2)\n dictionary(1)\n do(1)while(1)\n drawable2DAt(1)size(1)on(1)\n drawableAt(1)on(1)\n drawableImageAt(1)size(1)url(1)on(1)\n drawingCanvasSize(1)\n emptyContainer\n emptyDictionary\n emptyList\n emptySequence\n emptySet\n enumerable\n eventSource(1)\n fieldOfType(1)labeled(1)\n filledArcAt(1)size(1)from(1)to(1)on(1)\n filledOvalAt(1)size(1)on(1)\n filledRectAt(1)size(1)on(1)\n for(1)and(1)do(1)\n framedArcAt(1)size(1)from(1)to(1)on(1)\n framedOvalAt(1)size(1)on(1)\n framedRectAt(1)size(1)on(1)\n graphicApplicationSize(1)\n indexable\n inputFromElement(1)\n inputOfElementType(1)\n inputOfType(1)\n keyEventSource(1)event(1)\n labeledWidgetFromElement(1)\n labeledWidgetOfElementType(1)\n labeledWidgetOfElementType(1)labeled(1)\n lineFrom(1)length(1)direction(1)on(1)\n lineFrom(1)to(1)on(1)\n list(1)\n max(2)\n menuWithOptions(1)\n methods\n min(2)\n mouseEventSource(1)event(1)\n numberFieldLabeled(1)\n numberFieldUnlabeled\n passwordFieldLabeled(1)\n passwordFieldUnlabeled\n pi\n point2Dx(1)y(1)\n randomIntFrom(1)to(1)\n randomNumberFrom(1)to(1)\n range\n repeat(1)times(1)\n required\n resizable2DAt(1)size(1)on(1)\n sequence(1)\n set(1)\n textAt(1)with(1)on(1)\n textBoxWith(1)\n textFieldLabeled(1)\n textFieldUnlabeled\n valueOf(1)\ntypes:\n Application\n Audio\n Button\n Choice\n Color\n ColorFactory\n Component\n ComponentFactory\n Container\n DrawingCanvas\n Event\n Foreign\n Function\n Function2\n Graphic\n Graphic2D\n GraphicApplication\n Input\n Iterable\n KeyEvent\n KeyResponse\n Labeled\n Line\n MouseEvent\n MouseResponse\n NumberField\n Point\n Procedure\n Response\n Text\n TextBox\n TextField\n";
                                                                                              if (typeof originalSourceLines !== "undefined") {
                                                                                                originalSourceLines["objectdraw"] = [
                                                                                                  "#pragma ExtendedLineups",
                                                                                                  "inherit _prelude.methods",
                                                                                                  "type Point = _prelude.Point",
                                                                                                  "type Iterable = _prelude.Iterable",
                                                                                                  "",
                                                                                                  "import \"dom\" as dom",
                                                                                                  "import \"math\" as math",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// ** Helpers ***************************************************",
                                                                                                  "",
                                                                                                  "// The frame rate of the drawing.",
                                                                                                  "def frameRate: Number = 30",
                                                                                                  "",
                                                                                                  "// A random number from m to n, inclusive.",
                                                                                                  "method randomNumberFrom (m: Number) to (n: Number) -> Number {",
                                                                                                  "    ((n - m) * math.random) + m",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A random integer from m to n, inclusive.",
                                                                                                  "method randomIntFrom (m: Number) to (n: Number) -> Number {",
                                                                                                  "    (((n - m + 1) * math.random).truncated % (n - m + 1)) + m",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A rough approximation of the value of pi.",
                                                                                                  "def pi: Number is public = π",
                                                                                                  "",
                                                                                                  "type Foreign = Unknown",
                                                                                                  "",
                                                                                                  "def document: Foreign = dom.document",
                                                                                                  "",
                                                                                                  "// Types of blocks representing functions taking an argument of type T",
                                                                                                  "// and returning a value of type R",
                                                                                                  "type Function<T, R> = prelude.Block1<T,R>",
                                                                                                  "",
                                                                                                  "// Types of blocks representing functions taking two arguments of type T and U",
                                                                                                  "// and returning a value of type R",
                                                                                                  "type Function2<T, U, R> = prelude.Block2<T, U, R>",
                                                                                                  "",
                                                                                                  "// Type of block taking argument of type T and returning Done",
                                                                                                  "type Procedure<T> = prelude.Block1<T,Done>",
                                                                                                  "",
                                                                                                  "// ** Types ********************************************************************",
                                                                                                  "",
                                                                                                  "// The super-type of all components in a GUI.",
                                                                                                  "type Component = {",
                                                                                                  "",
                                                                                                  "    // The underlying DOM element of the component.",
                                                                                                  "    element",
                                                                                                  "",
                                                                                                  "    // The width of this component.",
                                                                                                  "    width -> Number",
                                                                                                  "",
                                                                                                  "    // The height of this component.",
                                                                                                  "    height -> Number",
                                                                                                  "",
                                                                                                  "    // The size (width, height) of this component",
                                                                                                  "    size -> Point",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse click (press and release) in this component with the",
                                                                                                  "    // given event.",
                                                                                                  "    onMouseClickDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse press in this component with the response f.",
                                                                                                  "    onMousePressDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse release in this component with the response f.",
                                                                                                  "    onMouseReleaseDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse move in this component with the response f.",
                                                                                                  "    onMouseMoveDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse drag (move during press) in this component with the",
                                                                                                  "    // response f.",
                                                                                                  "    onMouseDragDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse entering this component with the response f.",
                                                                                                  "    onMouseEnterDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse exiting this component with the response f.",
                                                                                                  "    onMouseExitDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a key type (press and release) in this component with the response f.",
                                                                                                  "    onKeyTypeDo (f: KeyResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a key press in this component with the response f.",
                                                                                                  "    onKeyPressDo (f: KeyResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a key release in this component with the response f.",
                                                                                                  "    onKeyReleaseDo (f: KeyResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Whether this component will dynamically fill up any empty space in the",
                                                                                                  "    // direction of its parent container.",
                                                                                                  "    isFlexible -> Boolean",
                                                                                                  "",
                                                                                                  "    // Set whether this component will dynamically fill up any empty space in the",
                                                                                                  "    // direction of its parent container.",
                                                                                                  "    flexible := (value: Boolean) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// The type of components that contain other components.",
                                                                                                  "type Container = Component & type {",
                                                                                                  "",
                                                                                                  "    // The number of components inside this container.",
                                                                                                  "    size -> Number",
                                                                                                  "",
                                                                                                  "    // Retrieve the component at the given index.",
                                                                                                  "    at (index: Number) -> Component",
                                                                                                  "",
                                                                                                  "    // Put the given component at the given index.",
                                                                                                  "    at (index: Number) put(component: Component) -> Done",
                                                                                                  "",
                                                                                                  "    // Add a component to the end of the container.",
                                                                                                  "    append (component: Component) -> Done",
                                                                                                  "",
                                                                                                  "    // Add a component to the start of the container.",
                                                                                                  "    prepend (component: Component) -> Done",
                                                                                                  "",
                                                                                                  "    // Perform an action for every component inside this container.",
                                                                                                  "    do (f: Procedure[[Component]]) -> Done",
                                                                                                  "",
                                                                                                  "    // Arrange the contents of this container along the horizontal axis.",
                                                                                                  "    // Components which exceed the width of the container will wrap around.",
                                                                                                  "    arrangeHorizontal -> Done",
                                                                                                  "",
                                                                                                  "    // Arrange the contents of this container along the vertical axis.",
                                                                                                  "    // Components which exceed the height of the container will wrap around.",
                                                                                                  "    arrangeVertical -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A standalone window which contains other components.",
                                                                                                  "type Application = Container & type {",
                                                                                                  "",
                                                                                                  "    // The title of the application window.",
                                                                                                  "    windowTitle -> String",
                                                                                                  "",
                                                                                                  "    // Set the title of the application window.",
                                                                                                  "    windowTitle:= (value: String) -> Done",
                                                                                                  "",
                                                                                                  "    // Create window with listeners for mouse enter and exit actions",
                                                                                                  "    startApplication -> Done",
                                                                                                  "",
                                                                                                  "    // Close the window",
                                                                                                  "    stopApplication -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Objects that can be drawn on a canvas and moved around.",
                                                                                                  "type Graphic = {",
                                                                                                  "",
                                                                                                  "    // The location of this object from the top-left corner of the screen.",
                                                                                                  "    location -> Point",
                                                                                                  "",
                                                                                                  "    // The horizontal location of this object from the top-left corner of the",
                                                                                                  "    // screen.",
                                                                                                  "    x -> Number",
                                                                                                  "",
                                                                                                  "    // The vertical location of this object from the top-left corner of the",
                                                                                                  "    // screen.",
                                                                                                  "    y -> Number",
                                                                                                  "",
                                                                                                  "    // Add this object to the given canvas.",
                                                                                                  "    addToCanvas (canvas: DrawingCanvas) -> Done",
                                                                                                  "",
                                                                                                  "    // Remove this object from its canvas.",
                                                                                                  "    removeFromCanvas -> Done",
                                                                                                  "",
                                                                                                  "    // Whether this object is currently set to be visible on the canvas.",
                                                                                                  "    isVisible -> Boolean",
                                                                                                  "",
                                                                                                  "    // Set whether this object is currently visible on the canvas.",
                                                                                                  "    visible:= (value: Boolean) -> Done",
                                                                                                  "",
                                                                                                  "    // Move this object to the given point on the canvas.",
                                                                                                  "    moveTo(location: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Move this object by the given distances on the canvas.",
                                                                                                  "    moveBy(dx: Number, dy: Number) -> Done",
                                                                                                  "",
                                                                                                  "    // Whether the given location is inside this object.",
                                                                                                  "    contains(location: Point) -> Boolean",
                                                                                                  "",
                                                                                                  "    // Whether any point in the given graphic is inside this object.",
                                                                                                  "    overlaps(graphic: Graphic2D) -> Boolean",
                                                                                                  "",
                                                                                                  "    // set the color of this object to c",
                                                                                                  "    color := (c: Color)->Done",
                                                                                                  "",
                                                                                                  "    // return the color of this object",
                                                                                                  "    color -> Color",
                                                                                                  "",
                                                                                                  "    // Send this object up one layer on the screen",
                                                                                                  "    sendForward -> Done",
                                                                                                  "",
                                                                                                  "    // send this object down one layer on the screen",
                                                                                                  "    sendBackward -> Done",
                                                                                                  "",
                                                                                                  "    // send this object to the top layer on the screen",
                                                                                                  "    sendToFront -> Done",
                                                                                                  "",
                                                                                                  "    // send this object to the bottom layer on the screen",
                                                                                                  "    sendToBack -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// DrawingCanvas holding graphic objects",
                                                                                                  "type DrawingCanvas = Component & type {",
                                                                                                  "",
                                                                                                  "    // redraws the canvas and its contents regularly as needed",
                                                                                                  "    startDrawing -> Done",
                                                                                                  "",
                                                                                                  "    // add d to canvas",
                                                                                                  "    add (d: Graphic)->Done",
                                                                                                  "",
                                                                                                  "    // remove d from canvas",
                                                                                                  "    remove (d: Graphic)->Done",
                                                                                                  "",
                                                                                                  "    // Inform canvas that it needs to be redrawn",
                                                                                                  "    notifyRedraw -> Done",
                                                                                                  "",
                                                                                                  "    // clear the canvas",
                                                                                                  "    clear -> Done",
                                                                                                  "",
                                                                                                  "    // Send d to top layer of graphics",
                                                                                                  "    sendToFront (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // send d to bottom layer of graphics",
                                                                                                  "    sendToBack (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // send d up one layer in graphics",
                                                                                                  "    sendForward (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // send d down one layer in graphics",
                                                                                                  "    sendBackward (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // return the current dimensions of the canvas",
                                                                                                  "    width -> Number",
                                                                                                  "    height -> Number",
                                                                                                  "    size -> Point",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type of object that runs a graphical application that draws",
                                                                                                  "// objects on a canvas included in the window and responds to mouse actions",
                                                                                                  "type GraphicApplication = Application & type {",
                                                                                                  "    // canvas holds graphic objects on screen",
                                                                                                  "    canvas -> DrawingCanvas",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse click (press and release) in the canvas at the given",
                                                                                                  "    // point.",
                                                                                                  "    onMouseClick (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse press in the canvas at the given point.",
                                                                                                  "    onMousePress (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse release in the canvas at the given point.",
                                                                                                  "    onMouseRelease (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse move in the canvas at the given point.",
                                                                                                  "    onMouseMove (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse drag (move during press) in the canvas at the given",
                                                                                                  "    // point.",
                                                                                                  "    onMouseDrag (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse entering the canvas at the given point.",
                                                                                                  "    onMouseEnter (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse exiting the canvas at the given point.",
                                                                                                  "    onMouseExit (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // must be invoked to create window and its contents as well as prepare the",
                                                                                                  "    // window to handle mouse events",
                                                                                                  "    startGraphics -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Two-dimensional objects that can also be resized",
                                                                                                  "type Graphic2D = Graphic & type {",
                                                                                                  "",
                                                                                                  "    // dimensions of object",
                                                                                                  "    width -> Number",
                                                                                                  "    height -> Number",
                                                                                                  "    size -> Point",
                                                                                                  "",
                                                                                                  "    // Change dimensions of object",
                                                                                                  "    size := (dimensions: Point) -> Done",
                                                                                                  "    width := (width: Number) -> Done",
                                                                                                  "    height := (height: Number) -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// One-dimensional objects",
                                                                                                  "type Line = Graphic & type {",
                                                                                                  "    // start and end of line",
                                                                                                  "    start -> Point",
                                                                                                  "    end -> Point",
                                                                                                  "",
                                                                                                  "    // set start and end of line",
                                                                                                  "    start := (start': Point) -> Done",
                                                                                                  "    end := (end': Point) -> Done",
                                                                                                  "    setEndPoints (start': Point, end': Point) -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Text that can be drawn on a canvas.",
                                                                                                  "type Text = Graphic & type {",
                                                                                                  "",
                                                                                                  "    // return the contents displayed in the item",
                                                                                                  "    contents -> String",
                                                                                                  "",
                                                                                                  "    // reset the contents displayed to be s",
                                                                                                  "    contents := (s: String) -> Done",
                                                                                                  "",
                                                                                                  "    // return width of text item (currently inaccurate)",
                                                                                                  "    width -> Number",
                                                                                                  "",
                                                                                                  "    // return size of the font used to display the contents",
                                                                                                  "    fontSize -> Number",
                                                                                                  "",
                                                                                                  "    // Set the size of the font used to display the contents",
                                                                                                  "    fontSize := (size: Number) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component of window that holds text",
                                                                                                  "type TextBox = Component & type {",
                                                                                                  "",
                                                                                                  "    // The text contents of the box.",
                                                                                                  "    contents -> String",
                                                                                                  "    contents:= (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component of window that holds text",
                                                                                                  "type Labeled = Component & type {",
                                                                                                  "",
                                                                                                  "    // The label name.",
                                                                                                  "    label -> String",
                                                                                                  "    label:= (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// type of button component in window",
                                                                                                  "type Button = Labeled",
                                                                                                  "",
                                                                                                  "// Component that can take input and respond to an event",
                                                                                                  "type Input = Labeled & type {",
                                                                                                  "",
                                                                                                  "    // Respond to this input gaining focus with the given event.",
                                                                                                  "    onFocusDo(f: Response) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to this input losing focus with the given event.",
                                                                                                  "    onBlurDo(f: Response) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to this input having its value changed.",
                                                                                                  "    onChangeDo(f: Response) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component in window taking user text input",
                                                                                                  "type TextField = Input & type {",
                                                                                                  "",
                                                                                                  "    // The contents of the text field.",
                                                                                                  "    text -> String",
                                                                                                  "    text := (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component in window taking user numeric input",
                                                                                                  "type NumberField = Input & type {",
                                                                                                  "",
                                                                                                  "    // The contents of the number field.",
                                                                                                  "    number -> Number",
                                                                                                  "    number := (value: Number) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type for pop-up menus",
                                                                                                  "type Choice = Input & type {",
                                                                                                  "",
                                                                                                  "    // The currently selected option.",
                                                                                                  "    selected -> String",
                                                                                                  "    selected := (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// ** Colors *******************************************************************",
                                                                                                  "type Color = {",
                                                                                                  "    red -> Number     // The red component of the color.",
                                                                                                  "    green -> Number   // The green component of the color.",
                                                                                                  "    blue -> Number    // The blue component of the color.",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "type ColorFactory = {",
                                                                                                  "    r (r': Number) g (g': Number) b (b': Number) -> Color",
                                                                                                  "    random -> Color",
                                                                                                  "    white -> Color",
                                                                                                  "    black -> Color",
                                                                                                  "    green -> Color",
                                                                                                  "    red -> Color",
                                                                                                  "    gray -> Color",
                                                                                                  "    blue -> Color",
                                                                                                  "    cyan -> Color",
                                                                                                  "    magenta -> Color",
                                                                                                  "    yellow -> Color",
                                                                                                  "    neutral -> Color",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Exception that may be thrown if the r, b, or g components",
                                                                                                  "// are not between 0 and 255 (inclusive)",
                                                                                                  "def ColorOutOfRange: prelude.ExceptionKind is public =",
                                                                                                  "    prelude.ProgrammingError.refine \"ColorOutOfRange\"",
                                                                                                  "",
                                                                                                  "// Simple color class",
                                                                                                  "def color is public = object {",
                                                                                                  "    class r (r': Number) g (g': Number) b (b': Number) -> Color {",
                                                                                                  "        // Creates a color with rgb coordinates r', g', and b'",
                                                                                                  "        if ((r' < 0) || (r' > 255)) then {",
                                                                                                  "            ColorOutOfRange.raise \"red index {r'} out of bounds 0..255\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        if ((g' < 0) || (g' > 255)) then {",
                                                                                                  "            ColorOutOfRange.raise \"green index {g'} out of bounds 0..255\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        if ((b' < 0) || (b' > 255)) then {",
                                                                                                  "            ColorOutOfRange.raise \"blue index {b'} out of bounds 0..255\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        def red:Number is public = r'.truncated",
                                                                                                  "        def green:Number is public = g'.truncated",
                                                                                                  "        def blue:Number is public = b'.truncated",
                                                                                                  "",
                                                                                                  "        method == (c: Color) -> Boolean {",
                                                                                                  "             (red == c.red) && (green == c.green) && (blue == c.blue)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"color w/ rgb({red}, {green}, {blue})\"",
                                                                                                  "        }",
                                                                                                  "    }",
                                                                                                  "",
                                                                                                  "    method random -> Color {",
                                                                                                  "        // Produce a random color.",
                                                                                                  "        r (randomIntFrom (0) to (255))",
                                                                                                  "            g (randomIntFrom (0) to (255))",
                                                                                                  "            b (randomIntFrom (0) to (255))",
                                                                                                  "    }",
                                                                                                  "",
                                                                                                  "    def white:Color is public = r (255) g (255) b (255)",
                                                                                                  "    def black:Color is public = r (0) g (0) b (0)",
                                                                                                  "    def green:Color is public = r (0) g (255) b (0)",
                                                                                                  "    def red:Color is public = r (255) g (0) b (0)",
                                                                                                  "    def gray:Color is public = r (60) g (60) b (60)",
                                                                                                  "    def blue:Color is public = r (0) g (0) b (255)",
                                                                                                  "    def cyan:Color is public = r (0) g (255) b (255)",
                                                                                                  "    def magenta:Color is public = r (255) g (0) b (255)",
                                                                                                  "    def yellow:Color is public = r (255) g (255) b (0)",
                                                                                                  "    def neutral:Color is public = r (220) g (220) b (220)",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "//// Predefined colors.  Deprecated: use color.white, etc.",
                                                                                                  "//def white:Color is public = color.r (255) g (255) b (255)",
                                                                                                  "def black:Color is public = color.r (0) g (0) b (0)",
                                                                                                  "//def green:Color is public = color.r (0) g (255) b (0)",
                                                                                                  "//def red:Color is public = color.r (255) g (0) b (0)",
                                                                                                  "//def gray:Color is public = color.r (60) g (60) b (60)",
                                                                                                  "//def blue:Color is public = color.r (0) g (0) b (255)",
                                                                                                  "//def cyan:Color is public = color.r (0) g (255) b (255)",
                                                                                                  "//def magenta:Color is public = color.r (255) g (0) b (255)",
                                                                                                  "//def yellow:Color is public = color.r (255) g (255) b (0)",
                                                                                                  "//def neutral:Color is public = color.r (220) g (220) b (220)",
                                                                                                  "",
                                                                                                  "// A random color.  Deprecated: use color.random",
                                                                                                  "//method randomColor -> Color { color.random }",
                                                                                                  "",
                                                                                                  "// ** Events *******************************************************************",
                                                                                                  "",
                                                                                                  "// Generic event containing source of the event.",
                                                                                                  "type Event = {",
                                                                                                  "    source -> Component",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Mouse event containing mouse location when event generated",
                                                                                                  "type MouseEvent = Event & type {",
                                                                                                  "    at -> Point",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type of an event associated with a key press",
                                                                                                  "type KeyEvent = Event & type {",
                                                                                                  "    //character -> String",
                                                                                                  "    code -> Number",
                                                                                                  "    //modifiers -> Modifiers",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// type of an action taking an Event as a paramter",
                                                                                                  "type Response = Procedure[[Event]]",
                                                                                                  "",
                                                                                                  "// type of an action taking a MouseEvent as a parameter",
                                                                                                  "type MouseResponse = Procedure[[MouseEvent]]",
                                                                                                  "",
                                                                                                  "// type of an action taking a KeyEvent as a parameter",
                                                                                                  "type KeyResponse = Procedure[[KeyEvent]]",
                                                                                                  "",
                                                                                                  "class eventSource (source':Component) -> Event {",
                                                                                                  "    // Creates an event generated by source'",
                                                                                                  "",
                                                                                                  "    def source: Component is public = source'",
                                                                                                  "",
                                                                                                  "    method asString -> String {",
                                                                                                  "        \"Event on {source}\"",
                                                                                                  "    }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class mouseEventSource (source':Component) event (event':Foreign) -> MouseEvent {",
                                                                                                  "    // Creates a mouseEvent with the mouse location from event'",
                                                                                                  "",
                                                                                                  "    inherit eventSource (source')",
                                                                                                  "    def at: Point is public = (event'.pageX - source.element.offsetLeft) @",
                                                                                                  "        (event'.pageY - source.element.offsetTop)",
                                                                                                  "",
                                                                                                  "    // String representation of the mouse event",
                                                                                                  "    method asString -> String {",
                                                                                                  "        \"Mouse event on {source} at {at}\"",
                                                                                                  "    }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class keyEventSource (source':Component) event(event':Foreign) -> KeyEvent {",
                                                                                                  "    // Creates an event with the key-code from event'",
                                                                                                  "    inherit eventSource(source')",
                                                                                                  "    def code: Number is public = event'.which",
                                                                                                  "    //def character is public = dom.window.String.fromCharCode(event'.which)",
                                                                                                  "",
                                                                                                  "    // String representation of the key event",
                                                                                                  "    method asString -> String {",
                                                                                                  "        \"Event on {source} for key-code {code}\"",
                                                                                                  "    }",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// ** Internal factories *******************************************************",
                                                                                                  "",
                                                                                                  "// where T <: Component",
                                                                                                  "type ComponentFactory[[T]] = {",
                                                                                                  "",
                                                                                                  "    // Build a component around an existing element.",
                                                                                                  "    fromElement (element) -> T",
                                                                                                  "",
                                                                                                  "    // Build a component around a new element of the given tag name.",
                                                                                                  "    ofElementType (tagName: String) -> T",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "def maxClickTime: Number = 200",
                                                                                                  "// The maximum number of milliseconds for which the mouse-button can be held",
                                                                                                  "// down in order for the event to be registered as a click.",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class componentFromElement (element') -> Component {",
                                                                                                  "        def element is public = element'",
                                                                                                  "",
                                                                                                  "        // width of component",
                                                                                                  "        method width -> Number {",
                                                                                                  "            element.width",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // height of component",
                                                                                                  "        method height -> Number {",
                                                                                                  "            element.height",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // dimensions of component",
                                                                                                  "        method size -> Point {",
                                                                                                  "            print \"component is {element}\"",
                                                                                                  "            element.width @ element.height",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // assocate action f with event' on component",
                                                                                                  "        method on(event': String)",
                                                                                                  "              do(f: Procedure[[Foreign]]) -> Done is confidential {",
                                                                                                  "            element.addEventListener(event', f)",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method on (kind: String)",
                                                                                                  "              withPointDo (f:MouseResponse) -> Done is confidential {",
                                                                                                  "            // associate response f with mouse event of kind",
                                                                                                  "            on (kind) do { event' ->",
                                                                                                  "                f.apply (mouseEventSource (self) event (event'))",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method onMouseClickDo (f:MouseResponse) -> Done {",
                                                                                                  "            // associates action f with mouse click",
                                                                                                  "            var lastDown: Foreign",
                                                                                                  "",
                                                                                                  "            on \"mousedown\" do {event': Foreign ->",
                                                                                                  "                lastDown:= event'.timeStamp",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            on \"click\" do {event': Foreign ->",
                                                                                                  "                if ((event'.timeStamp - lastDown) <= maxClickTime) then {",
                                                                                                  "                    f.apply (mouseEventSource(self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse press event",
                                                                                                  "        method onMousePressDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mousedown\" withPointDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse release event",
                                                                                                  "        method onMouseReleaseDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseup\" withPointDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse move event",
                                                                                                  "        method onMouseMoveDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mousemove\" do { event' ->",
                                                                                                  "                if (if (dom.doesObject (event') haveProperty (\"buttons\")) then {",
                                                                                                  "                    event'.buttons == 0",
                                                                                                  "                } else {",
                                                                                                  "                    event'.which == 0",
                                                                                                  "                }) then {",
                                                                                                  "                    f.apply(mouseEventSource (self) event (event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse drag event",
                                                                                                  "        method onMouseDragDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mousemove\" do { event' ->",
                                                                                                  "                if (if (dom.doesObject (event') haveProperty (\"buttons\")) then {",
                                                                                                  "                    event'.buttons == 1",
                                                                                                  "                } else {",
                                                                                                  "                    event'.which == 1",
                                                                                                  "                }) then {",
                                                                                                  "                    f.apply(mouseEventSource (self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse enter (of window) event",
                                                                                                  "        method onMouseEnterDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseover\" do { event' ->",
                                                                                                  "                def from = event'.relatedTarget",
                                                                                                  "                if ((dom.noObject == from) || {!element.contains(from)}) then {",
                                                                                                  "                    f.apply (mouseEventSource (self) event (event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse exit event",
                                                                                                  "        method onMouseExitDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseout\" do {event' ->",
                                                                                                  "                def to = event'.relatedTarget",
                                                                                                  "",
                                                                                                  "                if ((dom.noObject == to) || {!element.contains (to)}) then {",
                                                                                                  "                    f.apply (mouseEventSource (self) event (event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        class keyEventSource (source':Component) event(event':Foreign) -> KeyEvent {",
                                                                                                  "            // Creates an event with the key-code from event'",
                                                                                                  "            inherit eventSource(source')",
                                                                                                  "            def code: Number is public = event'.which",
                                                                                                  "            //def character is public = dom.window.String.fromCharCode(event'.which)",
                                                                                                  "",
                                                                                                  "            // String representation of the key event",
                                                                                                  "            method asString -> String {",
                                                                                                  "                \"Event on {source} for key-code {code}\"",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to key event of kind",
                                                                                                  "        method on (kind: String)",
                                                                                                  "              withKeyDo (f: KeyResponse) -> Done is confidential {",
                                                                                                  "            on (kind) do {event' ->",
                                                                                                  "                f.apply (keyEventSource (self) event (event'))",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to key press event",
                                                                                                  "        method onKeyPressDo(f: KeyResponse) -> Done {",
                                                                                                  "            on \"keydown\" withKeyDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to key release event",
                                                                                                  "        method onKeyReleaseDo (f: KeyResponse) -> Done {",
                                                                                                  "            on \"keyup\" withKeyDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f tokey type (press & release) event",
                                                                                                  "        method onKeyTypeDo (f: KeyResponse) -> Done {",
                                                                                                  "            on \"keypress\" withKeyDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Does component have some flex in size",
                                                                                                  "        method isFlexible -> Boolean {",
                                                                                                  "            element.style.flexGrow.asNumber > 0",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Set whether component is flexibile",
                                                                                                  "        method flexible:= (value: Boolean) -> Done {",
                                                                                                  "            element.style.flexGrow := if (value) then {",
                                                                                                  "                1",
                                                                                                  "            } else {",
                                                                                                  "                0",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of component",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a component\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class componentOfElementType (tagName:String) -> Component {",
                                                                                                  "        // Creates a component with type tagName",
                                                                                                  "",
                                                                                                  "        inherit componentFromElement (document.createElement (tagName))",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class containerOfElementType (tagName: String) -> Component {",
                                                                                                  "        inherit containerFromElement (document.createElement (tagName))",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create a new Component from element'",
                                                                                                  "class containerFromElement (element') -> Container {",
                                                                                                  "        inherit componentFromElement (element')",
                                                                                                  "",
                                                                                                  "        def children = []",
                                                                                                  "",
                                                                                                  "        // Number of children",
                                                                                                  "        method size -> Number {",
                                                                                                  "            children.size",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Is it empty?",
                                                                                                  "        method isEmpty -> Boolean {",
                                                                                                  "            size == 0",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Subcomponent at position index",
                                                                                                  "        method at (index: Number) -> Component {",
                                                                                                  "            if ((index < 1) || (index > size)) then {",
                                                                                                  "                collections.BoundsError.raiseForIndex (index)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            children.at (index)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Replace subcomponent at index by aComponent",
                                                                                                  "        method at (index: Number) put (aComponent: Component) -> Done {",
                                                                                                  "            if ((index < 1) || (index > (size + 1))) then {",
                                                                                                  "                BoundsError.raiseForIndex (index)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            if (index == (size + 1)) then {",
                                                                                                  "                element.appendChild (aComponent.element)",
                                                                                                  "            } else {",
                                                                                                  "                element.insertBefore (aComponent.element, children.at (index).element)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            children.at (index) put (aComponent)",
                                                                                                  "",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add aComponent after all existing components in the container",
                                                                                                  "        method append (aComponent: Component) -> Done {",
                                                                                                  "            element.appendChild (aComponent.element)",
                                                                                                  "",
                                                                                                  "            children.push (aComponent)",
                                                                                                  "",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add aComponent before all existing components in the container",
                                                                                                  "        method prepend (aComponent: Component) -> Done {",
                                                                                                  "            if (isEmpty) then {",
                                                                                                  "                element.appendChild (aComponent.element)",
                                                                                                  "            } else {",
                                                                                                  "                element.insertBefore (aComponent.element, element.firstChild)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            children.unshift (aComponent)",
                                                                                                  "",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Apply f to all children of container.",
                                                                                                  "        method do (f: Procedure[[Component]]) -> Done {",
                                                                                                  "            for (children) do {aComponent: Component ->",
                                                                                                  "                f.apply(aComponent)",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Generalize binary function f to apply to all children of container.",
                                                                                                  "        // Value if no children is initial",
                                                                                                  "        method fold[[T]](f: Function2[[T, Component, T]])",
                                                                                                  "              startingWith (initial: T) -> T {",
                                                                                                  "            var value: T:= initial",
                                                                                                  "",
                                                                                                  "            for (children) do {aComponent: Component ->",
                                                                                                  "                value:= f.apply (value, aComponent)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Make container more flexible",
                                                                                                  "        method flex -> Done is confidential {",
                                                                                                  "            element.style.display := \"inline-flex\"",
                                                                                                  "            element.style.justifyContent := \"center\"",
                                                                                                  "            element.style.flexFlow := \"row wrap\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Arrange elements in rows",
                                                                                                  "        method arrangeHorizontal -> Done {",
                                                                                                  "            flex",
                                                                                                  "            element.style.flexDirection:= \"row\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Arrange elements in columns",
                                                                                                  "        method arrangeVertical -> Done {",
                                                                                                  "            flex",
                                                                                                  "            element.style.flexDirection := \"column\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // return description of container",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"container: with {size} children\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create an empty container ready to add in row",
                                                                                                  "class emptyContainer -> Container {",
                                                                                                  "        inherit containerOfElementType (\"div\")",
                                                                                                  "",
                                                                                                  "        self.arrangeHorizontal",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Set empty container with given width' and height'",
                                                                                                  "class containerSize (width': Number, height': Number) -> Container {",
                                                                                                  "        inherit emptyContainer",
                                                                                                  "",
                                                                                                  "        self.element.style.width:= \"{width'}px\"",
                                                                                                  "        self.element.style.height:= \"{height'}px\"",
                                                                                                  "        self.element.style.overflow:= \"auto\"",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A factory building components that take input",
                                                                                                  "class inputFromElement (element') -> Input {",
                                                                                                  "        inherit componentFromElement(element')",
                                                                                                  "",
                                                                                                  "        // Respond with action f to this input gaining focus with the given event.",
                                                                                                  "        method onFocusDo (f: Response) -> Done {",
                                                                                                  "            element.addEventListener (\"focus\", { _ ->",
                                                                                                  "                f.apply (eventSource (self))",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond with action f to this input losing focus with the given event.",
                                                                                                  "        method onBlurDo (f: Response) -> Done {",
                                                                                                  "            element.addEventListener(\"blur\", { _ ->",
                                                                                                  "                f.apply(eventSource(self))",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond with action f to this input having its value changed.",
                                                                                                  "        method onChangeDo (f: Response) -> Done {",
                                                                                                  "            element.addEventListener (\"change\", { _ ->",
                                                                                                  "                f.apply(eventSource(self))",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // return description of component",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"an input\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create component of type elementType to handle input",
                                                                                                  "class inputOfElementType(elementType: String) -> Input {",
                                                                                                  "        inherit inputFromElement (document.createElement (elementType))",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create component of type inputType to handle input",
                                                                                                  "class inputOfType (inputType: String) -> Input {",
                                                                                                  "        inherit inputOfElementType(\"input\")",
                                                                                                  "",
                                                                                                  "        self.element.setAttribute (\"type\", inputType)",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class labeledWidgetFromElement (element') -> Labeled {",
                                                                                                  "        // create labeled input from element'",
                                                                                                  "",
                                                                                                  "        inherit inputFromElement (element')",
                                                                                                  "",
                                                                                                  "        var labeler:Foreign  // debug -- work around for selectBox",
                                                                                                  "",
                                                                                                  "        method labelElement -> Foreign is confidential {",
                                                                                                  "            self.element",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method label -> String {",
                                                                                                  "            // answers the Text of the label",
                                                                                                  "            labelElement.textContent",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method label:= (value: String) -> Done {",
                                                                                                  "            // sets the label to value",
                                                                                                  "            labelElement.textContent:= value",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            // a human-readable description of this object",
                                                                                                  "            \"an input labeled: {label}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class labeledWidgetOfElementType (elementType:String) -> Labeled {",
                                                                                                  "        // creates labeled input a new document of elementType",
                                                                                                  "",
                                                                                                  "        inherit labeledWidgetFromElement (document.createElement (elementType))",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class labeledWidgetOfElementType (elementType: String)",
                                                                                                  "          labeled(newLabel: String) -> Labeled {",
                                                                                                  "        // Create labeled element from elementType with newLabel",
                                                                                                  "",
                                                                                                  "        inherit labeledWidgetOfElementType(elementType)",
                                                                                                  "",
                                                                                                  "        // method to help get initialization code right in choice elements",
                                                                                                  "        method init -> Done is confidential {}",
                                                                                                  "        init",
                                                                                                  "",
                                                                                                  "        self.label := newLabel",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class fieldOfType(inputType: String) labeled(label': String) -> Input {",
                                                                                                  "        // Create input field of type inputType showing label'",
                                                                                                  "",
                                                                                                  "        inherit inputOfType(inputType)",
                                                                                                  "",
                                                                                                  "        // label on the field",
                                                                                                  "        method label -> String {",
                                                                                                  "            self.element.placeholder",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // reset the label on the field",
                                                                                                  "        method label:= (value: String) -> Done {",
                                                                                                  "            self.element.placeholder:= value",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representing the labeled field (including label)",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a field labeled: {label}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        label:= label'",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// ** External factories *******************************************************",
                                                                                                  "",
                                                                                                  "// Log entry to keep take of response to an event",
                                                                                                  "class eventLogKind(kind': String)",
                                                                                                  "      response(response': Procedure) is confidential {",
                                                                                                  "    def kind: String is public = kind'",
                                                                                                  "    def response: Procedure is public = response'",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class applicationTitle(initialTitle: String)",
                                                                                                  "          size (dimensions': Point) -> Application {",
                                                                                                  "        // Create an application with window titled initialTitle and",
                                                                                                  "        // size dimensions'",
                                                                                                  "",
                                                                                                  "        inherit containerFromElement(document.createDocumentFragment)",
                                                                                                  "",
                                                                                                  "        var isOpened: Boolean:= false  // whether window is visible",
                                                                                                  "        var theWindow: Foreign",
                                                                                                  "",
                                                                                                  "        var theTitle: String:= initialTitle",
                                                                                                  "        var theWidth: Number:= dimensions'.x",
                                                                                                  "        var theHeight: Number:= dimensions'.y",
                                                                                                  "",
                                                                                                  "        def events = []",
                                                                                                  "",
                                                                                                  "        method element -> Foreign {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.document.body",
                                                                                                  "            } else {",
                                                                                                  "                super.element",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether new items are added to window from left to right or top to bottom",
                                                                                                  "        var isHorizontal: Boolean:= true",
                                                                                                  "",
                                                                                                  "        // Arrange the contents of this container along the horizontal axis.",
                                                                                                  "        // Components which exceed the width of the container will wrap around.",
                                                                                                  "        method arrangeHorizontal -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                super.arrangeHorizontal",
                                                                                                  "            } else {",
                                                                                                  "                isHorizontal:= true",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Arrange the contents of this container along the vertical axis.",
                                                                                                  "        // Components which exceed the height of the container will wrap around.",
                                                                                                  "        method arrangeVertical -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                super.arrangeVertical",
                                                                                                  "            } else {",
                                                                                                  "                isHorizontal:= false",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate response with event kind",
                                                                                                  "        method on (kind: String)",
                                                                                                  "              do (response: Procedure[[Event]]) -> Done is confidential {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.addEventListener (kind, response)",
                                                                                                  "            } else {",
                                                                                                  "                events.push (eventLogKind (kind) response (response))",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The title of the application window.",
                                                                                                  "        method windowTitle -> String {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.title",
                                                                                                  "            } else {",
                                                                                                  "                theTitle",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Set the title of the application window.",
                                                                                                  "        method windowTitle:= (value: String) -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.title:= value",
                                                                                                  "            } else {",
                                                                                                  "                theTitle:= value",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The current width of the window",
                                                                                                  "        method width -> Number {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.width",
                                                                                                  "            } else {",
                                                                                                  "                theWidth",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // the current height of the window",
                                                                                                  "        method height -> Number {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.height",
                                                                                                  "            } else {",
                                                                                                  "                theHeight",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The enter/exit events need to be redefined to account for the body element",
                                                                                                  "        // not necessarily accounting for all of the space in the window. If we only",
                                                                                                  "        // consider cases where relatedTarget is null, then it represents only enter",
                                                                                                  "        // and exit of the whole window.",
                                                                                                  "",
                                                                                                  "        // Respond to a mouse entering this window with the response f.",
                                                                                                  "        method onMouseEnterDo(f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseover\" do { event' ->",
                                                                                                  "                def from = event'.relatedTarget",
                                                                                                  "",
                                                                                                  "                if (dom.noObject == from) then {",
                                                                                                  "                    f.apply(mouseEventSource(self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond to a mouse exiting this window with the response f.",
                                                                                                  "        method onMouseExitDo(f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseout\" do { event' ->",
                                                                                                  "                def to = event'.relatedTarget",
                                                                                                  "",
                                                                                                  "                if (dom.noObject == to) then {",
                                                                                                  "                    f.apply(mouseEventSource(self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond to mouse action of kind with response bl",
                                                                                                  "        method onMouse (kind: String) do (bl: MouseResponse) -> Done is confidential {",
                                                                                                  "            theWindow.addEventListener(kind, {evt ->",
                                                                                                  "                bl.apply(evt.pageX @ evt.pageY)",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Create window with listeners for mouse enter and exit actions",
                                                                                                  "        method startApplication -> Done {",
                                                                                                  "            if (!isOpened) then {",
                                                                                                  "                theWindow:= dom.window.open(\"\", \"\", \"width={theWidth},height={theHeight}\")",
                                                                                                  "                theWindow.document.title:= theTitle",
                                                                                                  "                theWindow.document.body.appendChild(element)",
                                                                                                  "",
                                                                                                  "                if (dom.doesObject(dom.window) haveProperty(\"graceRegisterWindow\")) then {",
                                                                                                  "                    dom.window.graceRegisterWindow(theWindow)",
                                                                                                  "                }",
                                                                                                  "",
                                                                                                  "                isOpened:= true",
                                                                                                  "",
                                                                                                  "                element.style.width:= \"100%\"",
                                                                                                  "                element.style.margin:= \"0px\"",
                                                                                                  "",
                                                                                                  "                if (isHorizontal) then {",
                                                                                                  "                    arrangeHorizontal",
                                                                                                  "                } else {",
                                                                                                  "                    arrangeVertical",
                                                                                                  "                }",
                                                                                                  "",
                                                                                                  "                for (events) do { anEvent ->",
                                                                                                  "                    on(anEvent.kind) do(anEvent.response)",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Close the window",
                                                                                                  "        method stopApplication  -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.close",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representing the application",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"application titled {windowTitle}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class drawingCanvasSize (dimensions': Point) -> DrawingCanvas {",
                                                                                                  "        // class representing a window panel that manages graphics on screen",
                                                                                                  "        // The window containing the canvas has dimensions width' x height'",
                                                                                                  "",
                                                                                                  "        inherit componentFromElement(document.createElement(\"canvas\"))",
                                                                                                  "",
                                                                                                  "        element.width:= dimensions'.x",
                                                                                                  "        element.height:= dimensions'.y",
                                                                                                  "        element.style.alignSelf:= \"center\"",
                                                                                                  "",
                                                                                                  "        def theContext: Foreign = element.getContext(\"2d\")",
                                                                                                  "        theContext.lineWidth:= 2",
                                                                                                  "",
                                                                                                  "        // Current width of the canvas",
                                                                                                  "        method width -> Number {",
                                                                                                  "            element.width",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Current height of the canvas",
                                                                                                  "        method height -> Number {",
                                                                                                  "            element.height",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method size -> Point {element.width @ element.height}",
                                                                                                  "",
                                                                                                  "        // list of all objects on canvas (hidden or not)",
                                                                                                  "        var theGraphics:= [ ] // emptyList",
                                                                                                  "",
                                                                                                  "        var redraw: Boolean:= false",
                                                                                                  "",
                                                                                                  "        // Inform canvas that it needs to be redrawn",
                                                                                                  "        method notifyRedraw -> Done {",
                                                                                                  "            redraw:= true",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // redraws the canvas and its contents regularly as needed",
                                                                                                  "        method startDrawing -> Done {",
                                                                                                  "            element.ownerDocument.defaultView.setInterval ({",
                                                                                                  "                if (redraw) then {",
                                                                                                  "                    dom.draw (theContext, theGraphics, width, height)",
                                                                                                  "                }",
                                                                                                  "            }, 1000 / frameRate)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // remove all items from canvas",
                                                                                                  "        method clear -> Done {",
                                                                                                  "            theGraphics:= []",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add new item d to canvas",
                                                                                                  "        method add (d:Graphic) -> Done {",
                                                                                                  "            theGraphics.push(d)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // remove aGraphic from items on canvas",
                                                                                                  "        method remove (aGraphic: Graphic) -> Done {",
                                                                                                  "            if (theGraphics.contains(aGraphic)) then {",
                                                                                                  "                theGraphics.remove (aGraphic)",
                                                                                                  "                notifyRedraw",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d to front/top layer of canvas",
                                                                                                  "        method sendToFront (aGraphic: Graphic) -> Done {",
                                                                                                  "            theGraphics.remove (aGraphic)",
                                                                                                  "            theGraphics.push (aGraphic)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d to back/bottom layer of canvas",
                                                                                                  "        method sendToBack (aGraphic: Graphic) -> Done {",
                                                                                                  "            theGraphics.remove (aGraphic)",
                                                                                                  "            theGraphics.unshift (aGraphic)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d one layer higher on canvas",
                                                                                                  "        method sendForward (aGraphic: Graphic) -> Done {",
                                                                                                  "            def theIndex = theGraphics.indexOf (aGraphic)",
                                                                                                  "",
                                                                                                  "            if (theIndex != theGraphics.size) then {",
                                                                                                  "                theGraphics.remove (aGraphic)",
                                                                                                  "                theGraphics.at (theIndex + 1) add (aGraphic)",
                                                                                                  "                notifyRedraw",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d one layer lower on canvas",
                                                                                                  "        method sendBackward (aGraphic: Graphic)->Done {",
                                                                                                  "            def theIndex = theGraphics.indexOf(aGraphic)",
                                                                                                  "",
                                                                                                  "            if (theIndex != 1) then {",
                                                                                                  "                theGraphics.remove (aGraphic)",
                                                                                                  "                theGraphics.at (theIndex - 1) add (aGraphic)",
                                                                                                  "                notifyRedraw",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // debug method to print all objects on canvas",
                                                                                                  "        method printObjects -> Done {",
                                                                                                  "            for (theGraphics) do { aGraphic ->",
                                                                                                  "                print (aGraphic)",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of canvas",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"canvas: with {theGraphics.size} objects\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class graphicApplicationSize (theDimension':Point) -> GraphicApplication {",
                                                                                                  "        // Create window with dimensions theDimension', with canvas",
                                                                                                  "        // installed, and that responds to mouse actions",
                                                                                                  "",
                                                                                                  "        inherit applicationTitle (\"Simple graphics\") size (theDimension')",
                                                                                                  "",
                                                                                                  "        def canvas: DrawingCanvas is public = drawingCanvasSize (theDimension')",
                                                                                                  "",
                                                                                                  "        children.push (canvas)",
                                                                                                  "",
                                                                                                  "        def before: Container = emptyContainer",
                                                                                                  "        def after: Container = emptyContainer",
                                                                                                  "",
                                                                                                  "        arrangeVertical",
                                                                                                  "        element.appendChild (before.element)",
                                                                                                  "        element.appendChild (canvas.element)",
                                                                                                  "        element.appendChild (after.element)",
                                                                                                  "",
                                                                                                  "        // Add a component to the top of the window.",
                                                                                                  "        method prepend (aComponent: Component) -> Done {",
                                                                                                  "            before.prepend (aComponent)",
                                                                                                  "            children.unshift (aComponent)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add a component to the bottom of the window.",
                                                                                                  "        method append (aComponent: Component) -> Done {",
                                                                                                  "            after.append (aComponent)",
                                                                                                  "            children.push (aComponent)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The following methods are defind to be called in response to mouse",
                                                                                                  "        // actions.  They will be overridden in subclasses to provide appropriate",
                                                                                                  "        // behavior, as now they do nothing!",
                                                                                                  "        // Method to handle mouse click at pt",
                                                                                                  "        method onMouseClick (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse press at pt",
                                                                                                  "        method onMousePress (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse release at pt",
                                                                                                  "        method onMouseRelease (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse move at pt",
                                                                                                  "        method onMouseMove (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse drag at pt",
                                                                                                  "        method onMouseDrag (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse enter of canvas at pt",
                                                                                                  "        method onMouseEnter (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse exit of canvas at pt",
                                                                                                  "        method onMouseExit (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Create window and its contents as well as prepare the",
                                                                                                  "        // window to handle mouse events",
                                                                                                  "        method startGraphics -> Done {",
                                                                                                  "            def parentElement = document.createElement (\"div\")",
                                                                                                  "            parentElement.className := \"height-calculator\"",
                                                                                                  "            parentElement.style.width := \"{theDimension'.x}px\"",
                                                                                                  "            parentElement.appendChild (element.cloneNode (true))",
                                                                                                  "            document.body.appendChild (parentElement)",
                                                                                                  "            theHeight:= parentElement.offsetHeight",
                                                                                                  "            document.body.removeChild (parentElement)",
                                                                                                  "",
                                                                                                  "            startApplication",
                                                                                                  "            canvas.startDrawing",
                                                                                                  "",
                                                                                                  "            theWindow.document.documentElement.style.overflow := \"hidden\"",
                                                                                                  "",
                                                                                                  "            canvas.onMouseClickDo { event' ->",
                                                                                                  "                onMouseClick (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMousePressDo { event' ->",
                                                                                                  "                onMousePress (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseReleaseDo { event' ->",
                                                                                                  "                onMouseRelease (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseMoveDo { event' ->",
                                                                                                  "                onMouseMove (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseDragDo { event' ->",
                                                                                                  "                onMouseDrag (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseEnterDo { event' ->",
                                                                                                  "                onMouseEnter (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseExitDo { event' ->",
                                                                                                  "                onMouseExit (event'.at)",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"graphic application of {canvas}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class drawableAt (location':Point) on (canvas':DrawingCanvas) -> Graphic {",
                                                                                                  "        // abstract superclass for drawable objects (of type Graphic)",
                                                                                                  "",
                                                                                                  "        // location of object on screen",
                                                                                                  "        var location: Point is readable:= location'",
                                                                                                  "",
                                                                                                  "        // x coordinate of object",
                                                                                                  "        method x -> Number {",
                                                                                                  "            location.x",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // y coordinate of object",
                                                                                                  "        method y -> Number {",
                                                                                                  "            location.y",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method == (other) {",
                                                                                                  "            // Object identity.",
                                                                                                  "            // This doesn't seem right to apb, but it's what the rest of the code assumes.",
                                                                                                  "            self.isMe(other)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The canvas this object is part of",
                                                                                                  "        var canvas: DrawingCanvas := canvas'",
                                                                                                  "",
                                                                                                  "        // the color of this object",
                                                                                                  "        var theColor: Color:= black",
                                                                                                  "",
                                                                                                  "        method color -> Color {theColor}",
                                                                                                  "",
                                                                                                  "        method color:= (newColor: Color) -> Done {",
                                                                                                  "            theColor:= newColor",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        var theFrameColor: Color := black",
                                                                                                  "",
                                                                                                  "        method frameColor -> Color { theFrameColor }",
                                                                                                  "        method frameColor := (newfColor:Color) -> Done {",
                                                                                                  "            theFrameColor:= newfColor",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Determine if object is shown on screen",
                                                                                                  "        var isVisible: Boolean is readable := true",
                                                                                                  "",
                                                                                                  "        // Set whether object is visible or hidden",
                                                                                                  "        method visible := (b:Boolean) -> Done {",
                                                                                                  "            isVisible := b",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add this object to canvas c",
                                                                                                  "        method addToCanvas (c: DrawingCanvas) -> Done {",
                                                                                                  "            removeFromCanvas",
                                                                                                  "            canvas := c",
                                                                                                  "            c.add (self)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Remove this object from its canvas",
                                                                                                  "        method removeFromCanvas -> Done {",
                                                                                                  "            canvas.remove (self)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // move this object to newLocn",
                                                                                                  "        method moveTo (newLocn: Point) -> Done{",
                                                                                                  "            location := newLocn",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // move this object dx to the right and dy down",
                                                                                                  "        method moveBy (dx: Number, dy: Number) -> Done {",
                                                                                                  "            location := location + (dx @ dy)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Determine whether this object contains the point at locn",
                                                                                                  "        method contains (locn: Point) -> Boolean {",
                                                                                                  "            SubobjectResponsibility.raise \"contains not implemented for {self}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Determine whether this object overlaps otherObject",
                                                                                                  "        method overlaps (otherObject: Graphic2D) -> Boolean {",
                                                                                                  "            SubobjectResponsibility.raise \"overlaps not implemented for {self}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Send this object up one layer on the screen",
                                                                                                  "        method sendForward -> Done {",
                                                                                                  "            canvas.sendForward (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send this object down one layer on the screen",
                                                                                                  "        method sendBackward -> Done {",
                                                                                                  "            canvas.sendBackward (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send this object to the top layer on the screen",
                                                                                                  "        method sendToFront -> Done {",
                                                                                                  "            canvas.sendToFront (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send this object to the bottom layer on the screen",
                                                                                                  "        method sendToBack -> Done {",
                                                                                                  "            canvas.sendToBack (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Tell the canvas that the screen needs to be repainted",
                                                                                                  "        method notifyRedraw -> Done is confidential {",
                                                                                                  "            canvas.notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Draw this object on the applet !! confidential",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            SubobjectResponsibility.raise \"draw not implemented for {self}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return a string representation of the object",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"Graphic object\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class drawable2DAt (location': Point)",
                                                                                                  "          size (dimension': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // abstract class for two-dimensional objects",
                                                                                                  "",
                                                                                                  "        inherit drawableAt (location') on (canvas')",
                                                                                                  "        var theWidth: Number:= dimension'.x",
                                                                                                  "",
                                                                                                  "        // Width of the object",
                                                                                                  "        method width -> Number {theWidth}",
                                                                                                  "        var theHeight: Number:= dimension'.y",
                                                                                                  "",
                                                                                                  "        // Height of the object",
                                                                                                  "        method height -> Number {theHeight}",
                                                                                                  "",
                                                                                                  "        method size -> Point {theWidth @ theHeight}",
                                                                                                  "",
                                                                                                  "        // whether the object contains locn",
                                                                                                  "        // Only checks whether is in the bounding box of the object!!",
                                                                                                  "        method contains(locn:Point)->Boolean{",
                                                                                                  "            (x <= locn.x) && (locn.x <= (x + width))",
                                                                                                  "                  && (y <= locn.y) && (locn.y <= (y + height))",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether bounding box of object overlaps bounding box of other",
                                                                                                  "        method overlaps (other:Graphic2D) -> Boolean {",
                                                                                                  "            def itemleft = other.x",
                                                                                                  "            def itemright = other.x + other.width",
                                                                                                  "            def itemtop = other.y",
                                                                                                  "            def itembottom = other.y + other.height",
                                                                                                  "            def disjoint: Boolean = ((x + width) < itemleft) || (itemright < x)",
                                                                                                  "                  || ((y + height) < itemtop) || (itembottom < y)",
                                                                                                  "            !disjoint",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the object",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"drawable2D object at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class resizable2DAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // abstract class for 2 dimensional objects that can be resized.",
                                                                                                  "",
                                                                                                  "        inherit drawable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        // Reset width of object to w",
                                                                                                  "        method width:= (w: Number) -> Done {",
                                                                                                  "            theWidth := w",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset height of object to h",
                                                                                                  "        method height := (h: Number) -> Done {",
                                                                                                  "            theHeight := h",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset size of object to w x h",
                                                                                                  "        method size:= (dimensions: Point) -> Done {",
                                                                                                  "            width := dimensions.x",
                                                                                                  "            height := dimensions.y",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of object",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"Resizable2D object at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class framedRectAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate framed rectangle at (x',y') with size dimensions'",
                                                                                                  "        // created on canvas'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw the framed rectangle on the canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.strokeRect (x, y, width, height)",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return description of framed rectangle",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FramedRect at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class filledRectAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "",
                                                                                                  "        // class to generate filled rectangle at (x', y') with size width' x height'",
                                                                                                  "        // created on canvas'",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw filled rectangle on the canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fillRect (x, y, width, height)",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the filled rectangle",
                                                                                                  "        method asString -> String {",
                                                                                                  "            print \"called asString with {x},{y}\"",
                                                                                                  "            \"FilledRect at ({x}, {y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class framedOvalAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate framed oval at (x',y') with size width' x height'",
                                                                                                  "        // created on canvas'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // draw framed oval on canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            ctx.arc (0, 0, 1, 0, 2 * pi)",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle := \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.stroke",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of oval",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FramedOval at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class filledOvalAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate filled oval at (x',y') with size width' x height'",
                                                                                                  "        // created on canvas'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw filled oval on canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            ctx.arc (0, 0, 1, 0, 2*pi)",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fill",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of oval",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FilledOval at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class framedArcAt (location': Point) size (dimensions': Point)",
                                                                                                  "          from (startAngle: Number) to (endAngle: Number)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate framed arc at (x',y') with size width' x height'",
                                                                                                  "        // from startAngle radians to endAngle radians created on canvas'",
                                                                                                  "        // Note that angle 0 is in direction of positive x axis and increases in",
                                                                                                  "        // angles go clockwise.",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw framed arc",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            if (startAngle <= endAngle) then {",
                                                                                                  "                ctx.arc (0, 0, 1, (startAngle * pi) / 180, (endAngle * pi) / 180)",
                                                                                                  "            } else {",
                                                                                                  "                ctx.arc (0, 0, 1, (endAngle * pi) / 180, (startAngle * pi) / 180)",
                                                                                                  "            }",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.stroke",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representation of framed arc",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FramedArc at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color} going \"++",
                                                                                                  "                  \"from {startAngle} degrees to {endAngle} degrees\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class filledArcAt (location': Point) size (dimensions': Point)",
                                                                                                  "          from (startAngle: Number) to (endAngle: Number)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate filled arc at (x',y') with size width' x height'",
                                                                                                  "        // from startAngle degrees to endAngle degrees created on canvas'",
                                                                                                  "        // Note that angle 0 is in direction of positive x axis and increases in",
                                                                                                  "        // angles go clockwise.",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw filled arc on canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            if (startAngle <= endAngle) then {",
                                                                                                  "                ctx.arc (0, 0, 1, (startAngle * pi) / 180, (endAngle * pi) / 180)",
                                                                                                  "            } else {",
                                                                                                  "                ctx.arc (0, 0, 1, (endAngle * pi) / 180, (startAngle * pi) / 180)",
                                                                                                  "            }",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fill",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representation of filled arc",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FilledArc at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color} going \"++",
                                                                                                  "                  \"from {startAngle} degrees to {endAngle} degrees\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "//type DrawableImageFactory = {",
                                                                                                  "    // type of factory for creating images on canvas",
                                                                                                  "",
                                                                                                  "    //at(location: Point) size (width: Number, height: Number)",
                                                                                                  "          //file(fileName: String) on (canvas: DrawingCanvas) -> Graphic2D",
                                                                                                  "",
                                                                                                  "  //  at (location: Point) dimensions (width: Number, height: Number)",
                                                                                                  "    //      url (url: String) on (canvas: DrawingCanvas) -> Graphic2D",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "//def drawableImage: DrawableImageFactory is public = object {",
                                                                                                  "",
                                                                                                  "//  class at(location': Point)   // doesn't work - can't find image?",
                                                                                                  "//      dimensions(width': Number, height': Number)",
                                                                                                  "//      file(fileName: String)",
                                                                                                  "//      on(canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "//    // class to generate an image on canvas' at location' with size width' x height'",
                                                                                                  "//    // The image is taken from the file fileName and must be in \"png\" format.",
                                                                                                  "//",
                                                                                                  "//    inherit resizable2D.at(location')dimensions(width',height')on(canvas')",
                                                                                                  "//",
                                                                                                  "//    if (!dom.window.graceHasFile(fileName)) then {",
                                                                                                  "//      NoSuchFile.raise \"The file '{fileName}' could not be found\"",
                                                                                                  "//    }",
                                                                                                  "//",
                                                                                                  "//    def theImage = dom.document.createElement(\"img\")",
                                                                                                  "//    theImage.src:= dom.window.graceReadFile(fileName)",
                                                                                                  "//",
                                                                                                  "//    method draw(ctx: Foreign) -> Done {",
                                                                                                  "//      ctx.drawImage(theImage, x, y, width, height)",
                                                                                                  "//    }",
                                                                                                  "//",
                                                                                                  "//    method asString -> String {",
                                                                                                  "//      \"DrawableImage at ({x},{y}) \"++",
                                                                                                  "//           \"with height {height}, width {width}, \"++",
                                                                                                  "//           \"from file {fileName}\"",
                                                                                                  "//    }",
                                                                                                  "//",
                                                                                                  "//    addToCanvas(canvas')",
                                                                                                  "//  }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class drawableImageAt (location': Point)",
                                                                                                  "          size (dimensions': Point)",
                                                                                                  "          url (url: String)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // Creates image from url and places on",
                                                                                                  "        // canvas' at location' with size width' x height'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        var theImage:= document.createElement(\"img\")",
                                                                                                  "        theImage.src:= url",
                                                                                                  "",
                                                                                                  "        theImage.addEventListener(\"load\", { _ ->",
                                                                                                  "            addToCanvas(canvas')",
                                                                                                  "        })",
                                                                                                  "",
                                                                                                  "        // draw the image",
                                                                                                  "        method draw(ctx: Foreign) -> Done {",
                                                                                                  "            ctx.drawImage(theImage, x, y, width, height)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of image",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"DrawableImage at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, \"++",
                                                                                                  "                  \"from url {url}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type of factory for creating line segments",
                                                                                                  "//type LineFactory = {",
                                                                                                  "//",
                                                                                                  "//    from (start:Point) to (end:Point) on (canvas: DrawingCanvas) -> Line",
                                                                                                  "//    // Creates a line from start to end on canvas",
                                                                                                  "//",
                                                                                                  "//    from (pt:Point) length (len:Number) direction (radians:Number)",
                                                                                                  "//          on (canvas:DrawingCanvas) -> Line",
                                                                                                  "//    // Creates a line from pt, of length len, in direction radians, on canvas",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class lineFrom (start': Point) to (end': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Line {",
                                                                                                  "        // Create a line from start' to end' on canvas'",
                                                                                                  "        inherit drawableAt (start') on (canvas')",
                                                                                                  "",
                                                                                                  "        var theEnd: Point:= end'",
                                                                                                  "",
                                                                                                  "        method start -> Point {",
                                                                                                  "            // position of start of line",
                                                                                                  "",
                                                                                                  "            location",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method end -> Point {",
                                                                                                  "            // position of end of line",
                                                                                                  "",
                                                                                                  "            theEnd",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        method start := (newStart: Point) -> Done {",
                                                                                                  "            // set start of line",
                                                                                                  "",
                                                                                                  "            location := newStart",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method end := (newEnd: Point) -> Done {",
                                                                                                  "            // Set end of line",
                                                                                                  "",
                                                                                                  "            theEnd := newEnd",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method setEndPoints (newStart: Point,newEnd: Point) -> Done {",
                                                                                                  "            // Set start and end of line",
                                                                                                  "",
                                                                                                  "            start := newStart",
                                                                                                  "            end := newEnd",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            // Draw the line on the canvas",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.moveTo (location.x, location.y)",
                                                                                                  "            ctx.lineTo (theEnd.x, theEnd.y)",
                                                                                                  "            ctx.stroke",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method moveBy (dx: Number, dy: Number) -> Done {",
                                                                                                  "            // Moves the line by (dx, dy)",
                                                                                                  "",
                                                                                                  "            location := location + (dx @ dy)  //.translate(dx,dy)",
                                                                                                  "            theEnd:= theEnd + (dx @ dy) //.translate(dx,dy)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method moveTo (newLocn:Point) -> Done {",
                                                                                                  "            // Moves this object to newLocn",
                                                                                                  "",
                                                                                                  "            def dx: Number = (newLocn - location).x",
                                                                                                  "            def dy: Number = (newLocn - location).y",
                                                                                                  "            location := newLocn",
                                                                                                  "            theEnd := theEnd + (dx @ dy)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "        method dist2 (v: Point, w: Point) -> Number is confidential {",
                                                                                                  "            // answers the square of the distance between v and w",
                                                                                                  "            ((v.x - w.x) ^ 2) + ((v.y - w.y) ^ 2)",
                                                                                                  "",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method distToSegmentSquared (p: Point, v: Point, w: Point) -> Number",
                                                                                                  "              is confidential {",
                                                                                                  "            // returns the square of the distance between p and the line through v and w",
                                                                                                  "",
                                                                                                  "            var l2: Number:= dist2 (v, w)",
                                                                                                  "            if (l2 == 0) then {return dist2 (p, v)}",
                                                                                                  "            var t: Number:= ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2",
                                                                                                  "            if (t < 0) then {return dist2 (p, v)}",
                                                                                                  "            if (t > 1) then {return dist2 (p, w)}",
                                                                                                  "            dist2 (p, ( (v.x + t * (w.x - v.x)) @",
                                                                                                  "                  (v.y + t * (w.y - v.y) )))",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method distToSegment (p: Point, v: Point, w: Point) -> Number {",
                                                                                                  "            // Return the distance from p to the line through v and w",
                                                                                                  "            distToSegmentSquared (p, v, w).sqrt",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method contains(pt:Point) -> Boolean {",
                                                                                                  "            // Answers whether the line contains pt.  Returns true if pt is within",
                                                                                                  "            // 2 pixels of the line",
                                                                                                  "",
                                                                                                  "            def tolerance: Number = 2",
                                                                                                  "            distToSegment(pt,start,end) < tolerance",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            // Answers a string representation of this line",
                                                                                                  "            \"Line from {start} to {end} with color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class lineFrom (pt: Point) length (len: Number) direction (radians: Number)",
                                                                                                  "          on (canvas':DrawingCanvas) -> Line {",
                                                                                                  "        // Creates a line from pt that has length len, and in direction radians on canvas'",
                                                                                                  "",
                                                                                                  "      //  def endpt = pt + ((len * math.cos (radians)) @ (-len * math.sin (radians)))",
                                                                                                  "        inherit lineFrom (pt) to (pt + ((len * math.cos (radians)) @",
                                                                                                  "                                        (-len * math.sin (radians)))) on (canvas')",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class textAt (location': Point) with (contents': String)",
                                                                                                  "          on(canvas': DrawingCanvas) -> Text {",
                                                                                                  "        // class to generate text at location' on canvas' initially showing",
                                                                                                  "        // contents'",
                                                                                                  "        inherit drawableAt (location') on (canvas')",
                                                                                                  "",
                                                                                                  "        var theContents: String:= contents'",
                                                                                                  "        var fsize: Number is readable:= 10",
                                                                                                  "        var wid: Number := theContents.size * fsize / 2",
                                                                                                  "        // Return approximation of the width of the text",
                                                                                                  "        method width -> Number {",
                                                                                                  "            wid",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Draw the text",
                                                                                                  "        method draw(ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.font:= \"{fontSize}pt sans-serif\"",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fillText (contents, location.x, location.y)",
                                                                                                  "            wid := ctx.measureText(theContents).width",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return the string held in the text item (i.e., its contents)",
                                                                                                  "        method contents -> String {",
                                                                                                  "            theContents",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset the contents to newContents",
                                                                                                  "        method contents := (newContents: String) -> Done {",
                                                                                                  "            theContents := newContents",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset the font size to size'",
                                                                                                  "        method fontSize := (size': Number) -> Done {",
                                                                                                  "            fsize := size'",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return the size of the font",
                                                                                                  "        method fontSize -> Number {",
                                                                                                  "            fsize",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the text item",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"Text at ({x},{y}) with value {contents} and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        addToCanvas(canvas')",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class textBoxWith (contents': String) -> TextBox {",
                                                                                                  "        // Create a component in window that holds the string contents'",
                                                                                                  "        // It cannot respond to user actions",
                                                                                                  "",
                                                                                                  "        inherit componentOfElementType (\"span\")",
                                                                                                  "",
                                                                                                  "        method contents -> String {",
                                                                                                  "            // Return string contents of the text box",
                                                                                                  "            self.element.textContent",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method contents:= (value: String) -> Done {",
                                                                                                  "            // Reset the contents of the text box to value",
                                                                                                  "            self.element.textContent:= value",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Text representation of the text box",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a text box showing {contents}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        contents:= contents'",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class buttonLabeled (label': String) -> Button {",
                                                                                                  "        // Creates a button with label'",
                                                                                                  "        inherit labeledWidgetOfElementType (\"button\") labeled (label')",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a button labeled: {self.label}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "//type FieldFactory = {",
                                                                                                  "//    // Type of object that generates text fields",
                                                                                                  "//    // Text fields can respond to user actions",
                                                                                                  "//",
                                                                                                  "//    labeled (label: String) -> Input",
                                                                                                  "//    // Generates text field with initial contents given by label",
                                                                                                  "//",
                                                                                                  "//    unlabeled -> Input",
                                                                                                  "//    // Generates text field with no initial contents",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class textFieldLabeled (label':String) -> TextField {",
                                                                                                  "        // Generates a text field with label'",
                                                                                                  "",
                                                                                                  "        inherit fieldOfType (\"text\") labeled (label')",
                                                                                                  "",
                                                                                                  "        method text -> String {",
                                                                                                  "            // answer the text",
                                                                                                  "            self.element.value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method text:= (value: String) -> Done {",
                                                                                                  "            // Updates the text",
                                                                                                  "            self.element.value:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the text field",
                                                                                                  "        method asString -> String {",
                                                                                                  "            if (self.label == \"\") then {",
                                                                                                  "                \"a text field with {text}\"",
                                                                                                  "            } else {",
                                                                                                  "                \"a text field labeled: {self.label} with {text}\"",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class textFieldUnlabeled -> TextField {",
                                                                                                  "        // Generates a text field without initial contents",
                                                                                                  "",
                                                                                                  "        inherit textFieldLabeled \"\"",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class passwordFieldLabeled (lab: String) -> Input {",
                                                                                                  "        // Generates password field with initial contents lab",
                                                                                                  "",
                                                                                                  "        inherit textFieldLabeled (lab)",
                                                                                                  "",
                                                                                                  "        self.element.setAttribute (\"type\", \"password\")",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            // Return string representation of password field",
                                                                                                  "            if (self.label == \"\") then {",
                                                                                                  "                \"a password field\"",
                                                                                                  "            } else {",
                                                                                                  "                \"a password field labeled: {self.label}\"",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Generate an unlabeled password field",
                                                                                                  "class passwordFieldUnlabeled -> TextField {",
                                                                                                  "        inherit passwordFieldLabeled \"\"",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class numberFieldLabeled (label': String) -> NumberField {",
                                                                                                  "        // Generates a number field with initial contents label'",
                                                                                                  "",
                                                                                                  "        inherit fieldOfType(\"number\") labeled (label')",
                                                                                                  "",
                                                                                                  "        // Return the number in the field",
                                                                                                  "        method number -> Number {",
                                                                                                  "            self.element.value.asNumber",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // update the number in the field",
                                                                                                  "        method number:= (value: Number) -> Done {",
                                                                                                  "            self.element.value:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return description of the number field",
                                                                                                  "        method asString -> String {",
                                                                                                  "            if (self.label == \"\") then {",
                                                                                                  "                \"a number field holding {number}\"",
                                                                                                  "            } else {",
                                                                                                  "                \"a number field labeled: {self.label} holding {number}\"",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class numberFieldUnlabeled -> NumberField {",
                                                                                                  "        // Creates an unlabeled number field",
                                                                                                  "        inherit numberFieldLabeled \"\"",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "//type ChoiceFactory = {",
                                                                                                  "//    // Type of factory to generate choice boxes (pop-up menus)",
                                                                                                  "//",
                                                                                                  "//    optionsFrom (options: Iterable[[String]]) -> Choice",
                                                                                                  "//    // Creates choice box with items from options;",
                                                                                                  "//    // initially shows first item in options",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "class menuWithOptions(options:Iterable[[String]]) labeled (label':String)",
                                                                                                  "          -> Choice is confidential {",
                                                                                                  "        // Creates choice box with list of items from options; initially shows label'",
                                                                                                  "",
                                                                                                  "        inherit labeledWidgetOfElementType(\"select\") labeled(label')",
                                                                                                  "//        def labeler:Foreign",
                                                                                                  "        method init is override, confidential {",
                                                                                                  "            self.labeler := document.createElement(\"option\")",
                                                                                                  "            labeler.value:= \"\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method labelElement -> Foreign {",
                                                                                                  "                labeler",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        self.element.appendChild(labeler)",
                                                                                                  "",
                                                                                                  "        for (options) do { name: String ->",
                                                                                                  "                def anOption: Foreign = document.createElement(\"option\")",
                                                                                                  "                anOption.value:= name",
                                                                                                  "                anOption.textContent:= name",
                                                                                                  "                self.element.appendChild(anOption)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return selected item in menu",
                                                                                                  "        method selected -> String {",
                                                                                                  "                self.element.value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Sets selected item in menu to value",
                                                                                                  "        method selected:= (value: String) -> Done {",
                                                                                                  "                self.element.value:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the menu",
                                                                                                  "        method asString -> String {",
                                                                                                  "                if (self.label == \"\") then {",
                                                                                                  "                    \"a pop-up menu\"",
                                                                                                  "                } else {",
                                                                                                  "                    \"a pop-up menu labeled: {self.label}\"",
                                                                                                  "                }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class menuWithOptions (options: Iterable[[String]]) -> Choice {",
                                                                                                  "        // Creates choice box with list of items from options",
                                                                                                  "        // Initially shows first item in options",
                                                                                                  "        inherit menuWithOptions (options) labeled \"\"",
                                                                                                  "        self.element.removeChild (self.labelElement)",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "type Audio = {",
                                                                                                  "    // An audio file that can be played",
                                                                                                  "",
                                                                                                  "    source -> String        // The source URL of the audio.",
                                                                                                  "    source:= (value: String) -> Done",
                                                                                                  "    play -> Done            // Play the audio.",
                                                                                                  "    pause -> Done           // Pause playing the audio.",
                                                                                                  "    isLooping -> Boolean    // does the audio loop back to the start?",
                                                                                                  "    looping:= (value: Boolean) -> Done  // determine whether the audio will loop",
                                                                                                  "    isEnded -> Boolean      // whether the audio has finished",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class audioUrl(source': String) -> Audio {",
                                                                                                  "        // Creates an audio file from source', which is a web URL",
                                                                                                  "        def element = document.createElement(\"audio\")",
                                                                                                  "",
                                                                                                  "        element.src:= source'",
                                                                                                  "",
                                                                                                  "        if (dom.doesObject(dom.window) haveProperty(\"graceRegisterAudio\")) then {",
                                                                                                  "            dom.window.graceRegisterAudio(element)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // URL of the audio file",
                                                                                                  "        method source -> String {",
                                                                                                  "            element.src",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset the source URL of the audio file",
                                                                                                  "        method source:= (value: String) -> Done {",
                                                                                                  "            element.src:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Play the audio.",
                                                                                                  "        method play -> Done {",
                                                                                                  "            element.play",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Pause the audio.",
                                                                                                  "        method pause -> Done {",
                                                                                                  "            element.pause",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether the audio will loop back to the start when it ends.",
                                                                                                  "        method isLooping -> Boolean {",
                                                                                                  "                  element.loop",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Set whether audio loops back to start when it end",
                                                                                                  "        method looping:= (value: Boolean) -> Done {",
                                                                                                  "            element.loop:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether the audio has finished playing.",
                                                                                                  "        method isEnded -> Boolean {",
                                                                                                  "            element.ended",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representation of audio file",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"audio from {source}\"",
                                                                                                  "        }",
                                                                                                  "}" ];
                                                                                              }
                                                                                              if (typeof global !== "undefined")
                                                                                                global.gracecode_objectdraw = gracecode_objectdraw;
                                                                                              if (typeof window !== "undefined")
                                                                                                window.gracecode_objectdraw = gracecode_objectdraw;
