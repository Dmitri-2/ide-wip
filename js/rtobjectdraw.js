"use strict";
var___95__prelude = do_import("StandardPrelude", gracecode_StandardPrelude);
function gracecode_rtobjectdraw() {
  setModuleName("rtobjectdraw");
  this.definitionModule = "rtobjectdraw";
  this.definitionLine = 0;
  var var_prelude = var___95__prelude;
  this.outer = var_prelude;
  var reader_rtobjectdraw_outer0 = function() {
    return this.outer;
  };
  this.methods["outer"] = reader_rtobjectdraw_outer0;
  setLineNumber(6);    // compilenode import
  // Import of dom as dom
  if (typeof gracecode_dom == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module dom'));
  var var_dom = do_import("dom", gracecode_dom);
  var func1 = function(argcv) {    // method dom
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    setModuleName("rtobjectdraw");
    // dom is a simple accessor - elide try ... catch
    return var_dom;
  };
  func1.paramCounts = [0];
  this.methods["dom"] = func1;
  func1.definitionLine = 6;
  func1.definitionModule = "rtobjectdraw";
  func1.debug = "import";
  func1.confidential = true;
  setModuleName("rtobjectdraw");
  setLineNumber(7);    // compilenode import
  // Import of math as math
  if (typeof gracecode_math == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module math'));
  var var_math = do_import("math", gracecode_math);
  var func2 = function(argcv) {    // method math
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    setModuleName("rtobjectdraw");
    // math is a simple accessor - elide try ... catch
    return var_math;
  };
  func2.paramCounts = [0];
  this.methods["math"] = func2;
  func2.definitionLine = 7;
  func2.definitionModule = "rtobjectdraw";
  func2.debug = "import";
  func2.confidential = true;
  setModuleName("rtobjectdraw");
  setLineNumber(8);    // compilenode import
  // Import of modules/requireTypes as rt
  if (typeof gracecode_requireTypes == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module modules/requireTypes'));
  var var_rt = do_import("modules/requireTypes", gracecode_requireTypes);
  var func3 = function(argcv) {    // method rt
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    setModuleName("rtobjectdraw");
    // rt is a simple accessor - elide try ... catch
    return var_rt;
  };
  func3.paramCounts = [0];
  this.methods["rt"] = func3;
  func3.definitionLine = 8;
  func3.definitionModule = "rtobjectdraw";
  func3.debug = "import";
  func3.confidential = true;
  setModuleName("rtobjectdraw");
  setLineNumber(2);    // compilenode identifier
  // call case 6: other requests
  var call5 = callmethodChecked(var___95__prelude, "methods$object(1)", [0, 1], this);
  this.superobj = call5;
  if (call5.data) this.data = call5.data;
  if (call5.hasOwnProperty('_value'))
      this._value = call5._value;
  setLineNumber(9);    // compilenode method
  var func6 = function(argcv) {    // method checker(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_ast = arguments[curarg];
    curarg++;
    setModuleName("rtobjectdraw");
    // call case 6: other requests
    var call8 = callmethodChecked(var_rt, "checker(1)", [1], var_ast);
    return call8;
  };
  func6.paramCounts = [1];
  this.methods["checker(1)"] = func6;
  func6.definitionLine = 9;
  func6.definitionModule = "rtobjectdraw";
  setLineNumber(18);    // compilenode method
  var func9 = function(argcv) {    // method randomNumberFrom(_)to(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_m = arguments[curarg];
    curarg++;
    var var_n = arguments[curarg];
    curarg++;
    // Start argument checking
    curarg = 1;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in randomNumberFrom (arg list 1), which corresponds to parameter m, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in to (arg list 2), which corresponds to parameter n, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    // End argument checking
    setModuleName("rtobjectdraw");
    setLineNumber(19);    // compilenode member
    // call case 6: other requests
    var call12 = callmethodChecked(var_math, "random", []);
    var diff16 = callmethodChecked(var_n, "-(1)", [1], var_m);
    var prod18 = callmethodChecked(diff16, "*(1)", [1], call12);
    var opresult20 = callmethodChecked(prod18, "+(1)", [1], var_m);
    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult20)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("result of method randomNumberFrom(_)to(_) does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    return opresult20;
  };
  func9.paramTypes = [];
  func9.paramTypes.push([type_Number, "m"]);
  func9.paramTypes.push([type_Number, "n"]);
  func9.paramCounts = [1, 1];
  this.methods["randomNumberFrom(1)to(1)"] = func9;
  func9.definitionLine = 18;
  func9.definitionModule = "rtobjectdraw";
  setLineNumber(23);    // compilenode method
  var func21 = function(argcv) {    // method randomIntFrom(_)to(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_m = arguments[curarg];
    curarg++;
    var var_n = arguments[curarg];
    curarg++;
    // Start argument checking
    curarg = 1;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in randomIntFrom (arg list 1), which corresponds to parameter m, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in to (arg list 2), which corresponds to parameter n, does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    curarg++;
    // End argument checking
    setModuleName("rtobjectdraw");
    setLineNumber(24);    // compilenode identifier
    var diff26 = callmethodChecked(var_n, "-(1)", [1], var_m);
    var opresult28 = callmethodChecked(diff26, "+(1)", [1], new GraceNum(1));
    // call case 6: other requests
    // call case 6: other requests
    var call32 = callmethodChecked(var_math, "random", []);
    var diff37 = callmethodChecked(var_n, "-(1)", [1], var_m);
    var opresult39 = callmethodChecked(diff37, "+(1)", [1], new GraceNum(1));
    var prod41 = callmethodChecked(opresult39, "*(1)", [1], call32);
    var call42 = callmethodChecked(prod41, "truncated", []);
    var modulus44 = callmethodChecked(call42, "%(1)", [1], opresult28);
    var opresult46 = callmethodChecked(modulus44, "+(1)", [1], var_m);
    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult46)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("result of method randomIntFrom(_)to(_) does not have " + 
                callmethod(var_Number, "asString", [0])._value + "."));
    return opresult46;
  };
  func21.paramTypes = [];
  func21.paramTypes.push([type_Number, "m"]);
  func21.paramTypes.push([type_Number, "n"]);
  func21.paramCounts = [1, 1];
  this.methods["randomIntFrom(1)to(1)"] = func21;
  func21.definitionLine = 23;
  func21.definitionModule = "rtobjectdraw";
  setLineNumber(505);    // compilenode method
  var func47 = function(argcv) {    // method eventSource(_)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_source__39__ = arguments[curarg];
    curarg++;
    // Start argument checking
    curarg = 1;
    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("argument 1 in eventSource (arg list 1), which corresponds to parameter source', does not have " + 
                callmethod(var_Component, "asString", [0])._value + "."));
    curarg++;
    // End argument checking
    setModuleName("rtobjectdraw");
    var obj48 = Grace_allocObject(GraceObject, "eventSource(_)");
    obj48.definitionModule = "rtobjectdraw";
    obj48.definitionLine = 505;
    obj48.outer = this;
    var reader_rtobjectdraw_outer49 = function() {
      return this.outer;
    };
    obj48.methods["outer"] = reader_rtobjectdraw_outer49;
    var obj_init_48 = function() {
      var origSuperDepth = superDepth;
      superDepth = obj48;
      var func50 = function(argcv) {    // method asString
        var returnTarget = invocationCount;
        invocationCount++;
        var curarg = 1;
        setModuleName("rtobjectdraw");
        setLineNumber(511);    // compilenode string
        var string51 = new GraceString("");
        // call case 4: self request
        onSelf = true;
        var call54 = callmethodChecked(this, "source", []);
        var string56 = new GraceString("Event on ");
        var opresult58 = callmethodChecked(string56, "++(1)", [1], call54);
        var opresult60 = callmethodChecked(opresult58, "++(1)", [1], string51);
        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult60)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("result of method asString does not have " + 
                    callmethod(var_String, "asString", [0])._value + "."));
        return opresult60;
      };
      func50.paramCounts = [0];
      obj48.methods["asString"] = func50;
      func50.definitionLine = 510;
      func50.definitionModule = "rtobjectdraw";
      setLineNumber(508);    // compilenode identifier
      obj48.data["source"] = var_source__39__;
      var reader_rtobjectdraw_source61 = function() {
        return this.data["source"];
      };
      reader_rtobjectdraw_source61.def = true;
      obj48.methods["source"] = reader_rtobjectdraw_source61;
      if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], var_source__39__)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("value of def 'source' is not of type Component"));
      superDepth = origSuperDepth;
    };
    obj_init_48.apply(obj48, []);
    setLineNumber(505);    // return value
    if (!Grace_isTrue(callmethod(var_Event, "match(1)", [1], obj48)))
        throw new GraceExceptionPacket(TypeErrorObject,
            new GraceString("result of method eventSource(_) does not have " + 
                callmethod(var_Event, "asString", [0])._value + "."));
    return obj48;
  };
  func47.paramTypes = [];
  func47.paramTypes.push([]);
  func47.paramCounts = [1];
  this.methods["eventSource(1)"] = func47;
  func47.definitionLine = 505;
  func47.definitionModule = "rtobjectdraw";
    var func62 = function(argcv) {    // method eventSource(_)$object(_)
      var curarg = 1;
      var var_source__39__ = arguments[curarg];
      curarg++;
      var inheritingObject = arguments[curarg++];
      // Start argument processing
      curarg = 1;
      if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("argument 1 in eventSource (arg list 1), which corresponds to parameter source', does not have " + 
                  callmethod(var_Component, "asString", [0])._value + "."));
      curarg++;
      // End argument processing
      setModuleName("rtobjectdraw");
      var returnTarget = invocationCount;
      invocationCount++;
      var obj63 = Grace_allocObject(GraceObject, "eventSource(1)");
      obj63.definitionModule = "rtobjectdraw";
      obj63.definitionLine = 505;
      var inho63 = inheritingObject;
      while (inho63.superobj) inho63 = inho63.superobj;
      inho63.superobj = obj63;
      obj63.data = inheritingObject.data;
      if (inheritingObject.hasOwnProperty('_value'))
        obj63._value = inheritingObject._value;
      obj63.outer = this;
      var reader_rtobjectdraw_outer64 = function() {
        return this.outer;
      };
      obj63.methods["outer"] = reader_rtobjectdraw_outer64;
      var obj_init_63 = function() {
        var origSuperDepth = superDepth;
        superDepth = obj63;
        var func65 = function(argcv) {    // method asString
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          setModuleName("rtobjectdraw");
          setLineNumber(511);    // compilenode string
          var string66 = new GraceString("");
          // call case 4: self request
          onSelf = true;
          var call69 = callmethodChecked(this, "source", []);
          var string71 = new GraceString("Event on ");
          var opresult73 = callmethodChecked(string71, "++(1)", [1], call69);
          var opresult75 = callmethodChecked(opresult73, "++(1)", [1], string66);
          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult75)))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("result of method asString does not have " + 
                      callmethod(var_String, "asString", [0])._value + "."));
          return opresult75;
        };
        func65.paramCounts = [0];
        obj63.methods["asString"] = func65;
        func65.definitionLine = 510;
        func65.definitionModule = "rtobjectdraw";
        setLineNumber(508);    // compilenode identifier
        obj63.data["source"] = var_source__39__;
        var reader_rtobjectdraw_source76 = function() {
          return this.data["source"];
        };
        reader_rtobjectdraw_source76.def = true;
        obj63.methods["source"] = reader_rtobjectdraw_source76;
        if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], var_source__39__)))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("value of def 'source' is not of type Component"));
        superDepth = origSuperDepth;
      };
      obj_init_63.apply(inheritingObject, []);
      return obj63;
      };
      func62.paramTypes = [];
      func62.paramTypes.push([]);
      this.methods["eventSource(1)$object(1)"] = func62;
    setLineNumber(515);    // compilenode method
    var func77 = function(argcv) {    // method mouseEventSource(_)event(_)
      var returnTarget = invocationCount;
      invocationCount++;
      var curarg = 1;
      var var_source__39__ = arguments[curarg];
      curarg++;
      var var_event__39__ = arguments[curarg];
      curarg++;
      // Start argument checking
      curarg = 1;
      if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("argument 1 in mouseEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                  callmethod(var_Component, "asString", [0])._value + "."));
      curarg++;
      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                  callmethod(var_Foreign, "asString", [0])._value + "."));
      curarg++;
      // End argument checking
      setModuleName("rtobjectdraw");
      var obj78 = Grace_allocObject(null, "mouseEventSource(_)event(_)");
      obj78.definitionModule = "rtobjectdraw";
      obj78.definitionLine = 515;
      obj78.outer = this;
      var reader_rtobjectdraw_outer79 = function() {
        return this.outer;
      };
      obj78.methods["outer"] = reader_rtobjectdraw_outer79;
      var obj_init_78 = function() {
        var origSuperDepth = superDepth;
        superDepth = obj78;
        var func80 = function(argcv) {    // method asString
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          setModuleName("rtobjectdraw");
          setLineNumber(524);    // compilenode string
          var string81 = new GraceString("");
          // call case 4: self request
          onSelf = true;
          var call84 = callmethodChecked(this, "at", []);
          var string86 = new GraceString(" at ");
          // call case 4: self request
          onSelf = true;
          var call89 = callmethodChecked(this, "source", []);
          var string91 = new GraceString("Mouse event on ");
          var opresult93 = callmethodChecked(string91, "++(1)", [1], call89);
          var opresult95 = callmethodChecked(opresult93, "++(1)", [1], string86);
          var opresult97 = callmethodChecked(opresult95, "++(1)", [1], call84);
          var opresult99 = callmethodChecked(opresult97, "++(1)", [1], string81);
          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult99)))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("result of method asString does not have " + 
                      callmethod(var_String, "asString", [0])._value + "."));
          return opresult99;
        };
        func80.paramCounts = [0];
        obj78.methods["asString"] = func80;
        func80.definitionLine = 523;
        func80.definitionModule = "rtobjectdraw";
        setLineNumber(518);    // compilenode identifier
        // call case 6: other requests
        setLineNumber(0);    // compilenode member
        // call case 3: self.outer request
        var call102 = callmethodChecked(superDepth, "outer", [0]);
        onSelf = true;
        var call103 = callmethodChecked(call102, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
        obj78.superobj = call103;
        if (call103.data) obj78.data = call103.data;
        if (call103.hasOwnProperty('_value'))
            obj78._value = call103._value;
        setLineNumber(520);    // compilenode member
        // call case 6: other requests
        // call case 6: other requests
        // call case 4: self request
        onSelf = true;
        var call107 = callmethodChecked(this, "source", []);
        var call108 = callmethodChecked(call107, "element", []);
        var call109 = callmethodChecked(call108, "offsetTop", []);
        // call case 6: other requests
        var call112 = callmethodChecked(var_event__39__, "pageY", []);
        var diff114 = callmethodChecked(call112, "-(1)", [1], call109);
        setLineNumber(519);    // compilenode member
        // call case 6: other requests
        // call case 6: other requests
        // call case 4: self request
        onSelf = true;
        var call119 = callmethodChecked(this, "source", []);
        var call120 = callmethodChecked(call119, "element", []);
        var call121 = callmethodChecked(call120, "offsetLeft", []);
        // call case 6: other requests
        var call124 = callmethodChecked(var_event__39__, "pageX", []);
        var diff126 = callmethodChecked(call124, "-(1)", [1], call121);
        var opresult128 = callmethodChecked(diff126, "@(1)", [1], diff114);
        obj78.data["at"] = opresult128;
        var reader_rtobjectdraw_at129 = function() {
          return this.data["at"];
        };
        reader_rtobjectdraw_at129.def = true;
        obj78.methods["at"] = reader_rtobjectdraw_at129;
        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult128)))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("value of def 'at' is not of type Point"));
        superDepth = origSuperDepth;
      };
      obj_init_78.apply(obj78, []);
      setLineNumber(515);    // return value
      if (!Grace_isTrue(callmethod(var_MouseEvent, "match(1)", [1], obj78)))
          throw new GraceExceptionPacket(TypeErrorObject,
              new GraceString("result of method mouseEventSource(_)event(_) does not have " + 
                  callmethod(var_MouseEvent, "asString", [0])._value + "."));
      return obj78;
    };
    func77.paramTypes = [];
    func77.paramTypes.push([]);
    func77.paramTypes.push([]);
    func77.paramCounts = [1, 1];
    this.methods["mouseEventSource(1)event(1)"] = func77;
    func77.definitionLine = 515;
    func77.definitionModule = "rtobjectdraw";
      var func130 = function(argcv) {    // method mouseEventSource(_)event(_)$object(_)
        var curarg = 1;
        var var_source__39__ = arguments[curarg];
        curarg++;
        var var_event__39__ = arguments[curarg];
        curarg++;
        var inheritingObject = arguments[curarg++];
        // Start argument processing
        curarg = 1;
        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in mouseEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                    callmethod(var_Component, "asString", [0])._value + "."));
        curarg++;
        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                    callmethod(var_Foreign, "asString", [0])._value + "."));
        curarg++;
        // End argument processing
        setModuleName("rtobjectdraw");
        var returnTarget = invocationCount;
        invocationCount++;
        var obj131 = Grace_allocObject(null, "mouseEventSource(1)event(1)");
        obj131.definitionModule = "rtobjectdraw";
        obj131.definitionLine = 515;
        var inho131 = inheritingObject;
        while (inho131.superobj) inho131 = inho131.superobj;
        inho131.superobj = obj131;
        obj131.data = inheritingObject.data;
        if (inheritingObject.hasOwnProperty('_value'))
          obj131._value = inheritingObject._value;
        obj131.outer = this;
        var reader_rtobjectdraw_outer132 = function() {
          return this.outer;
        };
        obj131.methods["outer"] = reader_rtobjectdraw_outer132;
        var obj_init_131 = function() {
          var origSuperDepth = superDepth;
          superDepth = obj131;
          var func133 = function(argcv) {    // method asString
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            setModuleName("rtobjectdraw");
            setLineNumber(524);    // compilenode string
            var string134 = new GraceString("");
            // call case 4: self request
            onSelf = true;
            var call137 = callmethodChecked(this, "at", []);
            var string139 = new GraceString(" at ");
            // call case 4: self request
            onSelf = true;
            var call142 = callmethodChecked(this, "source", []);
            var string144 = new GraceString("Mouse event on ");
            var opresult146 = callmethodChecked(string144, "++(1)", [1], call142);
            var opresult148 = callmethodChecked(opresult146, "++(1)", [1], string139);
            var opresult150 = callmethodChecked(opresult148, "++(1)", [1], call137);
            var opresult152 = callmethodChecked(opresult150, "++(1)", [1], string134);
            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult152)))
                throw new GraceExceptionPacket(TypeErrorObject,
                    new GraceString("result of method asString does not have " + 
                        callmethod(var_String, "asString", [0])._value + "."));
            return opresult152;
          };
          func133.paramCounts = [0];
          obj131.methods["asString"] = func133;
          func133.definitionLine = 523;
          func133.definitionModule = "rtobjectdraw";
          setLineNumber(518);    // compilenode identifier
          // call case 6: other requests
          setLineNumber(0);    // compilenode member
          // call case 3: self.outer request
          var call155 = callmethodChecked(superDepth, "outer", [0]);
          onSelf = true;
          var call156 = callmethodChecked(call155, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
          obj131.superobj = call156;
          if (call156.data) obj131.data = call156.data;
          if (call156.hasOwnProperty('_value'))
              obj131._value = call156._value;
          setLineNumber(520);    // compilenode member
          // call case 6: other requests
          // call case 6: other requests
          // call case 4: self request
          onSelf = true;
          var call160 = callmethodChecked(this, "source", []);
          var call161 = callmethodChecked(call160, "element", []);
          var call162 = callmethodChecked(call161, "offsetTop", []);
          // call case 6: other requests
          var call165 = callmethodChecked(var_event__39__, "pageY", []);
          var diff167 = callmethodChecked(call165, "-(1)", [1], call162);
          setLineNumber(519);    // compilenode member
          // call case 6: other requests
          // call case 6: other requests
          // call case 4: self request
          onSelf = true;
          var call172 = callmethodChecked(this, "source", []);
          var call173 = callmethodChecked(call172, "element", []);
          var call174 = callmethodChecked(call173, "offsetLeft", []);
          // call case 6: other requests
          var call177 = callmethodChecked(var_event__39__, "pageX", []);
          var diff179 = callmethodChecked(call177, "-(1)", [1], call174);
          var opresult181 = callmethodChecked(diff179, "@(1)", [1], diff167);
          obj131.data["at"] = opresult181;
          var reader_rtobjectdraw_at182 = function() {
            return this.data["at"];
          };
          reader_rtobjectdraw_at182.def = true;
          obj131.methods["at"] = reader_rtobjectdraw_at182;
          if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult181)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("value of def 'at' is not of type Point"));
          superDepth = origSuperDepth;
        };
        obj_init_131.apply(inheritingObject, []);
        return obj131;
        };
        func130.paramTypes = [];
        func130.paramTypes.push([]);
        func130.paramTypes.push([]);
        this.methods["mouseEventSource(1)event(1)$object(1)"] = func130;
      setLineNumber(528);    // compilenode method
      var func183 = function(argcv) {    // method keyEventSource(_)event(_)
        var returnTarget = invocationCount;
        invocationCount++;
        var curarg = 1;
        var var_source__39__ = arguments[curarg];
        curarg++;
        var var_event__39__ = arguments[curarg];
        curarg++;
        // Start argument checking
        curarg = 1;
        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                    callmethod(var_Component, "asString", [0])._value + "."));
        curarg++;
        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                    callmethod(var_Foreign, "asString", [0])._value + "."));
        curarg++;
        // End argument checking
        setModuleName("rtobjectdraw");
        var obj184 = Grace_allocObject(null, "keyEventSource(_)event(_)");
        obj184.definitionModule = "rtobjectdraw";
        obj184.definitionLine = 528;
        obj184.outer = this;
        var reader_rtobjectdraw_outer185 = function() {
          return this.outer;
        };
        obj184.methods["outer"] = reader_rtobjectdraw_outer185;
        var obj_init_184 = function() {
          var origSuperDepth = superDepth;
          superDepth = obj184;
          var func186 = function(argcv) {    // method asString
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            setModuleName("rtobjectdraw");
            setLineNumber(536);    // compilenode string
            var string187 = new GraceString("");
            // call case 4: self request
            onSelf = true;
            var call190 = callmethodChecked(this, "code", []);
            var string192 = new GraceString(" for key-code ");
            // call case 4: self request
            onSelf = true;
            var call195 = callmethodChecked(this, "source", []);
            var string197 = new GraceString("Event on ");
            var opresult199 = callmethodChecked(string197, "++(1)", [1], call195);
            var opresult201 = callmethodChecked(opresult199, "++(1)", [1], string192);
            var opresult203 = callmethodChecked(opresult201, "++(1)", [1], call190);
            var opresult205 = callmethodChecked(opresult203, "++(1)", [1], string187);
            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult205)))
                throw new GraceExceptionPacket(TypeErrorObject,
                    new GraceString("result of method asString does not have " + 
                        callmethod(var_String, "asString", [0])._value + "."));
            return opresult205;
          };
          func186.paramCounts = [0];
          obj184.methods["asString"] = func186;
          func186.definitionLine = 535;
          func186.definitionModule = "rtobjectdraw";
          setLineNumber(530);    // compilenode identifier
          // call case 6: other requests
          setLineNumber(0);    // compilenode member
          // call case 3: self.outer request
          var call208 = callmethodChecked(superDepth, "outer", [0]);
          onSelf = true;
          var call209 = callmethodChecked(call208, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
          obj184.superobj = call209;
          if (call209.data) obj184.data = call209.data;
          if (call209.hasOwnProperty('_value'))
              obj184._value = call209._value;
          setLineNumber(531);    // compilenode member
          // call case 6: other requests
          var call211 = callmethodChecked(var_event__39__, "which", []);
          obj184.data["code"] = call211;
          var reader_rtobjectdraw_code212 = function() {
            return this.data["code"];
          };
          reader_rtobjectdraw_code212.def = true;
          obj184.methods["code"] = reader_rtobjectdraw_code212;
          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call211)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("value of def 'code' is not of type Number"));
          superDepth = origSuperDepth;
        };
        obj_init_184.apply(obj184, []);
        setLineNumber(528);    // return value
        if (!Grace_isTrue(callmethod(var_KeyEvent, "match(1)", [1], obj184)))
            throw new GraceExceptionPacket(TypeErrorObject,
                new GraceString("result of method keyEventSource(_)event(_) does not have " + 
                    callmethod(var_KeyEvent, "asString", [0])._value + "."));
        return obj184;
      };
      func183.paramTypes = [];
      func183.paramTypes.push([]);
      func183.paramTypes.push([]);
      func183.paramCounts = [1, 1];
      this.methods["keyEventSource(1)event(1)"] = func183;
      func183.definitionLine = 528;
      func183.definitionModule = "rtobjectdraw";
        var func213 = function(argcv) {    // method keyEventSource(_)event(_)$object(_)
          var curarg = 1;
          var var_source__39__ = arguments[curarg];
          curarg++;
          var var_event__39__ = arguments[curarg];
          curarg++;
          var inheritingObject = arguments[curarg++];
          // Start argument processing
          curarg = 1;
          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                      callmethod(var_Component, "asString", [0])._value + "."));
          curarg++;
          if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                      callmethod(var_Foreign, "asString", [0])._value + "."));
          curarg++;
          // End argument processing
          setModuleName("rtobjectdraw");
          var returnTarget = invocationCount;
          invocationCount++;
          var obj214 = Grace_allocObject(null, "keyEventSource(1)event(1)");
          obj214.definitionModule = "rtobjectdraw";
          obj214.definitionLine = 528;
          var inho214 = inheritingObject;
          while (inho214.superobj) inho214 = inho214.superobj;
          inho214.superobj = obj214;
          obj214.data = inheritingObject.data;
          if (inheritingObject.hasOwnProperty('_value'))
            obj214._value = inheritingObject._value;
          obj214.outer = this;
          var reader_rtobjectdraw_outer215 = function() {
            return this.outer;
          };
          obj214.methods["outer"] = reader_rtobjectdraw_outer215;
          var obj_init_214 = function() {
            var origSuperDepth = superDepth;
            superDepth = obj214;
            var func216 = function(argcv) {    // method asString
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("rtobjectdraw");
              setLineNumber(536);    // compilenode string
              var string217 = new GraceString("");
              // call case 4: self request
              onSelf = true;
              var call220 = callmethodChecked(this, "code", []);
              var string222 = new GraceString(" for key-code ");
              // call case 4: self request
              onSelf = true;
              var call225 = callmethodChecked(this, "source", []);
              var string227 = new GraceString("Event on ");
              var opresult229 = callmethodChecked(string227, "++(1)", [1], call225);
              var opresult231 = callmethodChecked(opresult229, "++(1)", [1], string222);
              var opresult233 = callmethodChecked(opresult231, "++(1)", [1], call220);
              var opresult235 = callmethodChecked(opresult233, "++(1)", [1], string217);
              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult235)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method asString does not have " + 
                          callmethod(var_String, "asString", [0])._value + "."));
              return opresult235;
            };
            func216.paramCounts = [0];
            obj214.methods["asString"] = func216;
            func216.definitionLine = 535;
            func216.definitionModule = "rtobjectdraw";
            setLineNumber(530);    // compilenode identifier
            // call case 6: other requests
            setLineNumber(0);    // compilenode member
            // call case 3: self.outer request
            var call238 = callmethodChecked(superDepth, "outer", [0]);
            onSelf = true;
            var call239 = callmethodChecked(call238, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
            obj214.superobj = call239;
            if (call239.data) obj214.data = call239.data;
            if (call239.hasOwnProperty('_value'))
                obj214._value = call239._value;
            setLineNumber(531);    // compilenode member
            // call case 6: other requests
            var call241 = callmethodChecked(var_event__39__, "which", []);
            obj214.data["code"] = call241;
            var reader_rtobjectdraw_code242 = function() {
              return this.data["code"];
            };
            reader_rtobjectdraw_code242.def = true;
            obj214.methods["code"] = reader_rtobjectdraw_code242;
            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call241)))
              throw new GraceExceptionPacket(TypeErrorObject,
                  new GraceString("value of def 'code' is not of type Number"));
            superDepth = origSuperDepth;
          };
          obj_init_214.apply(inheritingObject, []);
          return obj214;
          };
          func213.paramTypes = [];
          func213.paramTypes.push([]);
          func213.paramTypes.push([]);
          this.methods["keyEventSource(1)event(1)$object(1)"] = func213;
        setLineNumber(560);    // compilenode method
        var func243 = function(argcv) {    // method componentFromElement(_)
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          var var_element__39__ = arguments[curarg];
          curarg++;
          setModuleName("rtobjectdraw");
          var obj244 = Grace_allocObject(GraceObject, "componentFromElement(_)");
          obj244.definitionModule = "rtobjectdraw";
          obj244.definitionLine = 560;
          obj244.outer = this;
          var reader_rtobjectdraw_outer245 = function() {
            return this.outer;
          };
          obj244.methods["outer"] = reader_rtobjectdraw_outer245;
          var obj_init_244 = function() {
            var origSuperDepth = superDepth;
            superDepth = obj244;
            var func246 = function(argcv) {    // method width
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("rtobjectdraw");
              setLineNumber(565);    // compilenode member
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call249 = callmethodChecked(this, "element", []);
              var call250 = callmethodChecked(call249, "width", []);
              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call250)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method width does not have " + 
                          callmethod(var_Number, "asString", [0])._value + "."));
              return call250;
            };
            func246.paramCounts = [0];
            obj244.methods["width"] = func246;
            func246.definitionLine = 564;
            func246.definitionModule = "rtobjectdraw";
            var func251 = function(argcv) {    // method height
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("rtobjectdraw");
              setLineNumber(570);    // compilenode member
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call254 = callmethodChecked(this, "element", []);
              var call255 = callmethodChecked(call254, "height", []);
              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call255)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method height does not have " + 
                          callmethod(var_Number, "asString", [0])._value + "."));
              return call255;
            };
            func251.paramCounts = [0];
            obj244.methods["height"] = func251;
            func251.definitionLine = 569;
            func251.definitionModule = "rtobjectdraw";
            var func256 = function(argcv) {    // method size
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              setModuleName("rtobjectdraw");
              setLineNumber(575);    // compilenode string
              var string257 = new GraceString("");
              // call case 4: self request
              onSelf = true;
              var call260 = callmethodChecked(this, "element", []);
              var string262 = new GraceString("component is ");
              var opresult264 = callmethodChecked(string262, "++(1)", [1], call260);
              var opresult266 = callmethodChecked(opresult264, "++(1)", [1], string257);
              var call267 = Grace_print(opresult266);
              setLineNumber(576);    // compilenode member
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call270 = callmethodChecked(this, "element", []);
              var call271 = callmethodChecked(call270, "height", []);
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call275 = callmethodChecked(this, "element", []);
              var call276 = callmethodChecked(call275, "width", []);
              var opresult278 = callmethodChecked(call276, "@(1)", [1], call271);
              if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult278)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method size does not have " + 
                          callmethod(var_Point, "asString", [0])._value + "."));
              return opresult278;
            };
            func256.paramCounts = [0];
            obj244.methods["size"] = func256;
            func256.definitionLine = 574;
            func256.definitionModule = "rtobjectdraw";
            var func279 = function(argcv) {    // method on(_)do(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_event__39__ = arguments[curarg];
              curarg++;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(580);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in on (arg list 1), which corresponds to parameter event', does not have " + 
                          callmethod(var_String, "asString", [0])._value + "."));
              curarg++;
              setLineNumber(581);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in do (arg list 2), which corresponds to parameter f, does not have " + 
                          callmethod(var_Procedure, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(582);    // compilenode identifier
              // call case 6: other requests
              // call case 4: self request
              onSelf = true;
              var call282 = callmethodChecked(this, "element", []);
              var call283 = callmethodChecked(call282, "addEventListener(2)", [2], var_event__39__, var_f);
              setLineNumber(583);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method on(_)do(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return var_done;
            };
            func279.paramTypes = [];
            func279.paramTypes.push([type_String, "event'"]);
            func279.paramTypes.push([]);
            func279.confidential = true;
            func279.paramCounts = [1, 1];
            obj244.methods["on(1)do(1)"] = func279;
            func279.definitionLine = 580;
            func279.definitionModule = "rtobjectdraw";
            var func284 = function(argcv) {    // method on(_)withPointDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_kind = arguments[curarg];
              curarg++;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(586);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                          callmethod(var_String, "asString", [0])._value + "."));
              curarg++;
              setLineNumber(587);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in withPointDo (arg list 2), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(589);    // compilenode block
              var block286 = new GraceBlock(this, 589, 1);
              setLineNumber(1);    // compilenode identifier
              block286.real = function(var_event__39__) {
                setLineNumber(590);    // compilenode identifier
                // call case 6: other requests
                // call case 3: self.outer request
                var call290 = callmethodChecked(superDepth, "outer", [0]);
                onSelf = true;
                var call291 = callmethodChecked(call290, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                // call case 6: other requests
                var call292 = callmethodChecked(var_f, "apply(1)", [1], call291);
                return call292;
              };
              // call case 4: self request
              onSelf = true;
              var call293 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block286);
              setLineNumber(589);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call293)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method on(_)withPointDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call293;
            };
            func284.paramTypes = [];
            func284.paramTypes.push([type_String, "kind"]);
            func284.paramTypes.push([]);
            func284.confidential = true;
            func284.paramCounts = [1, 1];
            obj244.methods["on(1)withPointDo(1)"] = func284;
            func284.definitionLine = 586;
            func284.definitionModule = "rtobjectdraw";
            var func294 = function(argcv) {    // method onMouseClickDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(594);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseClickDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(596);    // compilenode vardec
              var var_lastDown;
              setLineNumber(598);    // compilenode string
              var string296 = new GraceString("mousedown");
              var block297 = new GraceBlock(this, 598, 1);
              setLineNumber(0);    // compilenode string
              var string300 = new GraceString("event'");
              // call case 6: other requests
              // call case 5: prelude request
              var call302 = callmethodChecked(var_prelude, "VariablePattern", []);
              var call303 = callmethodChecked(call302, "new(1)", [1], string300);
              setLineNumber(598);    // compilenode identifier
              // call case 6: other requests
              setLineNumber(0);    // compilenode member
              // call case 5: prelude request
              var call305 = callmethodChecked(var_prelude, "AndPattern", []);
              var call306 = callmethodChecked(call305, "new(2)", [2], call303, var_Foreign);
              block297.pattern = call306;
              setLineNumber(598);    // compilenode identifier
              block297.paramTypes = [var_Foreign];
              block297.real = function(var_event__39__) {
                setLineNumber(599);    // compilenode member
                // call case 6: other requests
                var call308 = callmethodChecked(var_event__39__, "timeStamp", []);
                var_lastDown = call308;
                return GraceDone;
              };
              // call case 4: self request
              onSelf = true;
              var call309 = callmethodChecked(this, "on(1)do(1)", [1, 1], string296, block297);
              setLineNumber(602);    // compilenode string
              var string311 = new GraceString("click");
              var block312 = new GraceBlock(this, 602, 1);
              setLineNumber(0);    // compilenode string
              var string315 = new GraceString("event'");
              // call case 6: other requests
              // call case 5: prelude request
              var call317 = callmethodChecked(var_prelude, "VariablePattern", []);
              var call318 = callmethodChecked(call317, "new(1)", [1], string315);
              setLineNumber(602);    // compilenode identifier
              // call case 6: other requests
              setLineNumber(0);    // compilenode member
              // call case 5: prelude request
              var call320 = callmethodChecked(var_prelude, "AndPattern", []);
              var call321 = callmethodChecked(call320, "new(2)", [2], call318, var_Foreign);
              block312.pattern = call321;
              setLineNumber(602);    // compilenode identifier
              block312.paramTypes = [var_Foreign];
              block312.real = function(var_event__39__) {
                var if322 = GraceDone;
                setLineNumber(603);    // compilenode member
                // call case 6: other requests
                var call326 = callmethodChecked(var_event__39__, "timeStamp", []);
                var diff328 = callmethodChecked(call326, "-(1)", [1], var_lastDown);
                var opresult330 = callmethodChecked(diff328, "\u2264(1)", [1], var_maxClickTime);
                if (Grace_isTrue(opresult330)) {
                  setLineNumber(604);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call334 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call335 = callmethodChecked(call334, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call336 = callmethodChecked(var_f, "apply(1)", [1], call335);
                  if322 = call336;
                }
                return if322;
              };
              // call case 4: self request
              onSelf = true;
              var call337 = callmethodChecked(this, "on(1)do(1)", [1, 1], string311, block312);
              setLineNumber(602);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call337)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseClickDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call337;
            };
            func294.paramTypes = [];
            func294.paramTypes.push([]);
            func294.paramCounts = [1];
            obj244.methods["onMouseClickDo(1)"] = func294;
            func294.definitionLine = 594;
            func294.definitionModule = "rtobjectdraw";
            var func338 = function(argcv) {    // method onMousePressDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(610);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMousePressDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(611);    // compilenode string
              var string340 = new GraceString("mousedown");
              // call case 4: self request
              onSelf = true;
              var call341 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string340, var_f);
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call341)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMousePressDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call341;
            };
            func338.paramTypes = [];
            func338.paramTypes.push([]);
            func338.paramCounts = [1];
            obj244.methods["onMousePressDo(1)"] = func338;
            func338.definitionLine = 610;
            func338.definitionModule = "rtobjectdraw";
            var func342 = function(argcv) {    // method onMouseReleaseDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(615);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(616);    // compilenode string
              var string344 = new GraceString("mouseup");
              // call case 4: self request
              onSelf = true;
              var call345 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string344, var_f);
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call345)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseReleaseDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call345;
            };
            func342.paramTypes = [];
            func342.paramTypes.push([]);
            func342.paramCounts = [1];
            obj244.methods["onMouseReleaseDo(1)"] = func342;
            func342.definitionLine = 615;
            func342.definitionModule = "rtobjectdraw";
            var func346 = function(argcv) {    // method onMouseMoveDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(620);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseMoveDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(621);    // compilenode string
              var string348 = new GraceString("mousemove");
              var block349 = new GraceBlock(this, 621, 1);
              setLineNumber(1);    // compilenode identifier
              block349.real = function(var_event__39__) {
                var if350 = GraceDone;
                var if351 = GraceDone;
                setLineNumber(622);    // compilenode string
                var string353 = new GraceString("buttons");
                // call case 6: other requests
                var call354 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string353);
                if (Grace_isTrue(call354)) {
                  setLineNumber(623);    // compilenode member
                  // call case 6: other requests
                  var call357 = callmethodChecked(var_event__39__, "buttons", []);
                  var opresult359 = callmethodChecked(call357, "==(1)", [1], new GraceNum(0));
                  if351 = opresult359;
                } else {
                  setLineNumber(625);    // compilenode member
                  // call case 6: other requests
                  var call362 = callmethodChecked(var_event__39__, "which", []);
                  var opresult364 = callmethodChecked(call362, "==(1)", [1], new GraceNum(0));
                  if351 = opresult364;
                }
                if (Grace_isTrue(if351)) {
                  setLineNumber(627);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call368 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call369 = callmethodChecked(call368, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call370 = callmethodChecked(var_f, "apply(1)", [1], call369);
                  if350 = call370;
                }
                return if350;
              };
              // call case 4: self request
              onSelf = true;
              var call371 = callmethodChecked(this, "on(1)do(1)", [1, 1], string348, block349);
              setLineNumber(621);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call371)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseMoveDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call371;
            };
            func346.paramTypes = [];
            func346.paramTypes.push([]);
            func346.paramCounts = [1];
            obj244.methods["onMouseMoveDo(1)"] = func346;
            func346.definitionLine = 620;
            func346.definitionModule = "rtobjectdraw";
            var func372 = function(argcv) {    // method onMouseDragDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(633);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseDragDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(634);    // compilenode string
              var string374 = new GraceString("mousemove");
              var block375 = new GraceBlock(this, 634, 1);
              setLineNumber(1);    // compilenode identifier
              block375.real = function(var_event__39__) {
                var if376 = GraceDone;
                var if377 = GraceDone;
                setLineNumber(635);    // compilenode string
                var string379 = new GraceString("buttons");
                // call case 6: other requests
                var call380 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string379);
                if (Grace_isTrue(call380)) {
                  setLineNumber(636);    // compilenode member
                  // call case 6: other requests
                  var call383 = callmethodChecked(var_event__39__, "buttons", []);
                  var opresult385 = callmethodChecked(call383, "==(1)", [1], new GraceNum(1));
                  if377 = opresult385;
                } else {
                  setLineNumber(638);    // compilenode member
                  // call case 6: other requests
                  var call388 = callmethodChecked(var_event__39__, "which", []);
                  var opresult390 = callmethodChecked(call388, "==(1)", [1], new GraceNum(1));
                  if377 = opresult390;
                }
                if (Grace_isTrue(if377)) {
                  setLineNumber(640);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call394 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call395 = callmethodChecked(call394, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call396 = callmethodChecked(var_f, "apply(1)", [1], call395);
                  if376 = call396;
                }
                return if376;
              };
              // call case 4: self request
              onSelf = true;
              var call397 = callmethodChecked(this, "on(1)do(1)", [1, 1], string374, block375);
              setLineNumber(634);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call397)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseDragDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call397;
            };
            func372.paramTypes = [];
            func372.paramTypes.push([]);
            func372.paramCounts = [1];
            obj244.methods["onMouseDragDo(1)"] = func372;
            func372.definitionLine = 633;
            func372.definitionModule = "rtobjectdraw";
            var func398 = function(argcv) {    // method onMouseEnterDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(646);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(647);    // compilenode string
              var string400 = new GraceString("mouseover");
              var block401 = new GraceBlock(this, 647, 1);
              setLineNumber(1);    // compilenode identifier
              block401.real = function(var_event__39__) {
                setLineNumber(648);    // compilenode member
                // call case 6: other requests
                var call403 = callmethodChecked(var_event__39__, "relatedTarget", []);
                var var_from = call403;
                var if404 = GraceDone;
                setLineNumber(649);    // compilenode block
                var block405 = new GraceBlock(this, 649, 0);
                block405.real = function() {
                  // call case 6: other requests
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call409 = callmethodChecked(this, "element", []);
                  var call410 = callmethodChecked(call409, "contains(1)", [1], var_from);
                  var call411 = callmethodChecked(call410, "prefix!", [0]);
                  return call411;
                };
                // call case 6: other requests
                var call415 = callmethodChecked(var_dom, "noObject", []);
                var opresult417 = callmethodChecked(call415, "==(1)", [1], var_from);
                var opresult419 = callmethodChecked(opresult417, "||(1)", [1], block405);
                if (Grace_isTrue(opresult419)) {
                  setLineNumber(650);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call423 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call424 = callmethodChecked(call423, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call425 = callmethodChecked(var_f, "apply(1)", [1], call424);
                  if404 = call425;
                }
                return if404;
              };
              // call case 4: self request
              onSelf = true;
              var call426 = callmethodChecked(this, "on(1)do(1)", [1, 1], string400, block401);
              setLineNumber(647);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call426)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseEnterDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call426;
            };
            func398.paramTypes = [];
            func398.paramTypes.push([]);
            func398.paramCounts = [1];
            obj244.methods["onMouseEnterDo(1)"] = func398;
            func398.definitionLine = 646;
            func398.definitionModule = "rtobjectdraw";
            var func427 = function(argcv) {    // method onMouseExitDo(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_f = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(656);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              setLineNumber(657);    // compilenode string
              var string429 = new GraceString("mouseout");
              var block430 = new GraceBlock(this, 657, 1);
              setLineNumber(1);    // compilenode identifier
              block430.real = function(var_event__39__) {
                setLineNumber(658);    // compilenode member
                // call case 6: other requests
                var call432 = callmethodChecked(var_event__39__, "relatedTarget", []);
                var var_to = call432;
                var if433 = GraceDone;
                setLineNumber(660);    // compilenode block
                var block434 = new GraceBlock(this, 660, 0);
                block434.real = function() {
                  // call case 6: other requests
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call438 = callmethodChecked(this, "element", []);
                  var call439 = callmethodChecked(call438, "contains(1)", [1], var_to);
                  var call440 = callmethodChecked(call439, "prefix!", [0]);
                  return call440;
                };
                // call case 6: other requests
                var call444 = callmethodChecked(var_dom, "noObject", []);
                var opresult446 = callmethodChecked(call444, "==(1)", [1], var_to);
                var opresult448 = callmethodChecked(opresult446, "||(1)", [1], block434);
                if (Grace_isTrue(opresult448)) {
                  setLineNumber(661);    // compilenode identifier
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call452 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call453 = callmethodChecked(call452, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call454 = callmethodChecked(var_f, "apply(1)", [1], call453);
                  if433 = call454;
                }
                return if433;
              };
              // call case 4: self request
              onSelf = true;
              var call455 = callmethodChecked(this, "on(1)do(1)", [1, 1], string429, block430);
              setLineNumber(657);    // return value
              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call455)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method onMouseExitDo(_) does not have " + 
                          callmethod(var_Done, "asString", [0])._value + "."));
              return call455;
            };
            func427.paramTypes = [];
            func427.paramTypes.push([]);
            func427.paramCounts = [1];
            obj244.methods["onMouseExitDo(1)"] = func427;
            func427.definitionLine = 656;
            func427.definitionModule = "rtobjectdraw";
            var func456 = function(argcv) {    // method keyEventSource(_)event(_)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_source__39__ = arguments[curarg];
              curarg++;
              var var_event__39__ = arguments[curarg];
              curarg++;
              // Start argument checking
              curarg = 1;
              setLineNumber(666);    // compilenode identifier
              if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                          callmethod(var_Component, "asString", [0])._value + "."));
              curarg++;
              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                          callmethod(var_Foreign, "asString", [0])._value + "."));
              curarg++;
              // End argument checking
              setModuleName("rtobjectdraw");
              var obj457 = Grace_allocObject(null, "componentFromElement(_).keyEventSource(_)event(_)");
              obj457.definitionModule = "rtobjectdraw";
              obj457.definitionLine = 666;
              obj457.outer = this;
              var reader_rtobjectdraw_outer458 = function() {
                return this.outer;
              };
              obj457.methods["outer"] = reader_rtobjectdraw_outer458;
              var obj_init_457 = function() {
                var origSuperDepth = superDepth;
                superDepth = obj457;
                var func459 = function(argcv) {    // method asString
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("rtobjectdraw");
                  setLineNumber(674);    // compilenode string
                  var string460 = new GraceString("");
                  // call case 4: self request
                  onSelf = true;
                  var call463 = callmethodChecked(this, "code", []);
                  var string465 = new GraceString(" for key-code ");
                  // call case 4: self request
                  onSelf = true;
                  var call468 = callmethodChecked(this, "source", []);
                  var string470 = new GraceString("Event on ");
                  var opresult472 = callmethodChecked(string470, "++(1)", [1], call468);
                  var opresult474 = callmethodChecked(opresult472, "++(1)", [1], string465);
                  var opresult476 = callmethodChecked(opresult474, "++(1)", [1], call463);
                  var opresult478 = callmethodChecked(opresult476, "++(1)", [1], string460);
                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult478)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method asString does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  return opresult478;
                };
                func459.paramCounts = [0];
                obj457.methods["asString"] = func459;
                func459.definitionLine = 673;
                func459.definitionModule = "rtobjectdraw";
                setLineNumber(668);    // compilenode identifier
                // call case 6: other requests
                setLineNumber(0);    // compilenode member
                // call case 6: other requests
                // call case 3: self.outer request
                var call482 = callmethodChecked(superDepth, "outer", [0]);
                var call483 = callmethodChecked(call482, "outer", []);
                onSelf = true;
                var call484 = callmethodChecked(call483, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                obj457.superobj = call484;
                if (call484.data) obj457.data = call484.data;
                if (call484.hasOwnProperty('_value'))
                    obj457._value = call484._value;
                setLineNumber(669);    // compilenode member
                // call case 6: other requests
                var call486 = callmethodChecked(var_event__39__, "which", []);
                obj457.data["code"] = call486;
                var reader_rtobjectdraw_code487 = function() {
                  return this.data["code"];
                };
                reader_rtobjectdraw_code487.def = true;
                obj457.methods["code"] = reader_rtobjectdraw_code487;
                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call486)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("value of def 'code' is not of type Number"));
                superDepth = origSuperDepth;
              };
              obj_init_457.apply(obj457, []);
              setLineNumber(666);    // return value
              if (!Grace_isTrue(callmethod(var_KeyEvent, "match(1)", [1], obj457)))
                  throw new GraceExceptionPacket(TypeErrorObject,
                      new GraceString("result of method keyEventSource(_)event(_) does not have " + 
                          callmethod(var_KeyEvent, "asString", [0])._value + "."));
              return obj457;
            };
            func456.paramTypes = [];
            func456.paramTypes.push([]);
            func456.paramTypes.push([]);
            func456.paramCounts = [1, 1];
            obj244.methods["keyEventSource(1)event(1)"] = func456;
            func456.definitionLine = 666;
            func456.definitionModule = "rtobjectdraw";
              var func488 = function(argcv) {    // method keyEventSource(_)event(_)$object(_)
                var curarg = 1;
                var var_source__39__ = arguments[curarg];
                curarg++;
                var var_event__39__ = arguments[curarg];
                curarg++;
                var inheritingObject = arguments[curarg++];
                // Start argument processing
                curarg = 1;
                if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                            callmethod(var_Component, "asString", [0])._value + "."));
                curarg++;
                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                            callmethod(var_Foreign, "asString", [0])._value + "."));
                curarg++;
                // End argument processing
                setModuleName("rtobjectdraw");
                var returnTarget = invocationCount;
                invocationCount++;
                var obj489 = Grace_allocObject(null, "keyEventSource(1)event(1)");
                obj489.definitionModule = "rtobjectdraw";
                obj489.definitionLine = 666;
                var inho489 = inheritingObject;
                while (inho489.superobj) inho489 = inho489.superobj;
                inho489.superobj = obj489;
                obj489.data = inheritingObject.data;
                if (inheritingObject.hasOwnProperty('_value'))
                  obj489._value = inheritingObject._value;
                obj489.outer = this;
                var reader_rtobjectdraw_outer490 = function() {
                  return this.outer;
                };
                obj489.methods["outer"] = reader_rtobjectdraw_outer490;
                var obj_init_489 = function() {
                  var origSuperDepth = superDepth;
                  superDepth = obj489;
                  var func491 = function(argcv) {    // method asString
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    setModuleName("rtobjectdraw");
                    setLineNumber(674);    // compilenode string
                    var string492 = new GraceString("");
                    // call case 4: self request
                    onSelf = true;
                    var call495 = callmethodChecked(this, "code", []);
                    var string497 = new GraceString(" for key-code ");
                    // call case 4: self request
                    onSelf = true;
                    var call500 = callmethodChecked(this, "source", []);
                    var string502 = new GraceString("Event on ");
                    var opresult504 = callmethodChecked(string502, "++(1)", [1], call500);
                    var opresult506 = callmethodChecked(opresult504, "++(1)", [1], string497);
                    var opresult508 = callmethodChecked(opresult506, "++(1)", [1], call495);
                    var opresult510 = callmethodChecked(opresult508, "++(1)", [1], string492);
                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult510)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method asString does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    return opresult510;
                  };
                  func491.paramCounts = [0];
                  obj489.methods["asString"] = func491;
                  func491.definitionLine = 673;
                  func491.definitionModule = "rtobjectdraw";
                  setLineNumber(668);    // compilenode identifier
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 6: other requests
                  // call case 3: self.outer request
                  var call514 = callmethodChecked(superDepth, "outer", [0]);
                  var call515 = callmethodChecked(call514, "outer", []);
                  onSelf = true;
                  var call516 = callmethodChecked(call515, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                  obj489.superobj = call516;
                  if (call516.data) obj489.data = call516.data;
                  if (call516.hasOwnProperty('_value'))
                      obj489._value = call516._value;
                  setLineNumber(669);    // compilenode member
                  // call case 6: other requests
                  var call518 = callmethodChecked(var_event__39__, "which", []);
                  obj489.data["code"] = call518;
                  var reader_rtobjectdraw_code519 = function() {
                    return this.data["code"];
                  };
                  reader_rtobjectdraw_code519.def = true;
                  obj489.methods["code"] = reader_rtobjectdraw_code519;
                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call518)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("value of def 'code' is not of type Number"));
                  superDepth = origSuperDepth;
                };
                obj_init_489.apply(inheritingObject, []);
                return obj489;
                };
                func488.paramTypes = [];
                func488.paramTypes.push([]);
                func488.paramTypes.push([]);
                obj244.methods["keyEventSource(1)event(1)$object(1)"] = func488;
              var func520 = function(argcv) {    // method on(_)withKeyDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_kind = arguments[curarg];
                curarg++;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(680);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                            callmethod(var_String, "asString", [0])._value + "."));
                curarg++;
                setLineNumber(681);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in withKeyDo (arg list 2), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("rtobjectdraw");
                setLineNumber(682);    // compilenode block
                var block522 = new GraceBlock(this, 682, 1);
                setLineNumber(1);    // compilenode identifier
                block522.real = function(var_event__39__) {
                  setLineNumber(683);    // compilenode identifier
                  // call case 4: self request
                  onSelf = true;
                  var call525 = callmethodChecked(this, "keyEventSource(1)event(1)", [1, 1], this, var_event__39__);
                  // call case 6: other requests
                  var call526 = callmethodChecked(var_f, "apply(1)", [1], call525);
                  return call526;
                };
                // call case 4: self request
                onSelf = true;
                var call527 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block522);
                setLineNumber(682);    // return value
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call527)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method on(_)withKeyDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call527;
              };
              func520.paramTypes = [];
              func520.paramTypes.push([type_String, "kind"]);
              func520.paramTypes.push([]);
              func520.confidential = true;
              func520.paramCounts = [1, 1];
              obj244.methods["on(1)withKeyDo(1)"] = func520;
              func520.definitionLine = 680;
              func520.definitionModule = "rtobjectdraw";
              var func528 = function(argcv) {    // method onKeyPressDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(688);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in onKeyPressDo (arg list 1), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("rtobjectdraw");
                setLineNumber(689);    // compilenode string
                var string530 = new GraceString("keydown");
                // call case 4: self request
                onSelf = true;
                var call531 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string530, var_f);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call531)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method onKeyPressDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call531;
              };
              func528.paramTypes = [];
              func528.paramTypes.push([]);
              func528.paramCounts = [1];
              obj244.methods["onKeyPressDo(1)"] = func528;
              func528.definitionLine = 688;
              func528.definitionModule = "rtobjectdraw";
              var func532 = function(argcv) {    // method onKeyReleaseDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(693);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in onKeyReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("rtobjectdraw");
                setLineNumber(694);    // compilenode string
                var string534 = new GraceString("keyup");
                // call case 4: self request
                onSelf = true;
                var call535 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string534, var_f);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call535)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method onKeyReleaseDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call535;
              };
              func532.paramTypes = [];
              func532.paramTypes.push([]);
              func532.paramCounts = [1];
              obj244.methods["onKeyReleaseDo(1)"] = func532;
              func532.definitionLine = 693;
              func532.definitionModule = "rtobjectdraw";
              var func536 = function(argcv) {    // method onKeyTypeDo(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_f = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(698);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in onKeyTypeDo (arg list 1), which corresponds to parameter f, does not have " + 
                            callmethod(var_KeyResponse, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("rtobjectdraw");
                setLineNumber(699);    // compilenode string
                var string538 = new GraceString("keypress");
                // call case 4: self request
                onSelf = true;
                var call539 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string538, var_f);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call539)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method onKeyTypeDo(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call539;
              };
              func536.paramTypes = [];
              func536.paramTypes.push([]);
              func536.paramCounts = [1];
              obj244.methods["onKeyTypeDo(1)"] = func536;
              func536.definitionLine = 698;
              func536.definitionModule = "rtobjectdraw";
              var func540 = function(argcv) {    // method isFlexible
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                setModuleName("rtobjectdraw");
                setLineNumber(704);    // compilenode member
                // call case 6: other requests
                // call case 6: other requests
                // call case 6: other requests
                // call case 4: self request
                onSelf = true;
                var call546 = callmethodChecked(this, "element", []);
                var call547 = callmethodChecked(call546, "style", []);
                var call548 = callmethodChecked(call547, "flexGrow", []);
                var call549 = callmethodChecked(call548, "asNumber", []);
                var opresult551 = callmethodChecked(call549, ">(1)", [1], new GraceNum(0));
                if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult551)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method isFlexible does not have " + 
                            callmethod(var_Boolean, "asString", [0])._value + "."));
                return opresult551;
              };
              func540.paramCounts = [0];
              obj244.methods["isFlexible"] = func540;
              func540.definitionLine = 703;
              func540.definitionModule = "rtobjectdraw";
              var func552 = function(argcv) {    // method flexible:=(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_value = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                setLineNumber(708);    // compilenode identifier
                if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in flexible:= (arg list 1), which corresponds to parameter value, does not have " + 
                            callmethod(var_Boolean, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("rtobjectdraw");
                var if554 = GraceDone;
                setLineNumber(709);    // compilenode identifier
                if (Grace_isTrue(var_value)) {
                  setLineNumber(710);    // compilenode num
                  if554 = new GraceNum(1);
                } else {
                  setLineNumber(712);    // compilenode num
                  if554 = new GraceNum(0);
                }
                // call case 6: other requests
                setLineNumber(709);    // compilenode member
                // call case 6: other requests
                // call case 4: self request
                onSelf = true;
                var call557 = callmethodChecked(this, "element", []);
                var call558 = callmethodChecked(call557, "style", []);
                var call559 = callmethodChecked(call558, "flexGrow:=(1)", [1], if554);
                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call559)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method flexible:=(_) does not have " + 
                            callmethod(var_Done, "asString", [0])._value + "."));
                return call559;
              };
              func552.paramTypes = [];
              func552.paramTypes.push([type_Boolean, "value"]);
              func552.paramCounts = [1];
              obj244.methods["flexible:=(1)"] = func552;
              func552.definitionLine = 708;
              func552.definitionModule = "rtobjectdraw";
              var func560 = function(argcv) {    // method asString
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                setModuleName("rtobjectdraw");
                setLineNumber(718);    // compilenode string
                var string561 = new GraceString("a component");
                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string561)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method asString does not have " + 
                            callmethod(var_String, "asString", [0])._value + "."));
                return string561;
              };
              func560.paramCounts = [0];
              obj244.methods["asString"] = func560;
              func560.definitionLine = 717;
              func560.definitionModule = "rtobjectdraw";
              setLineNumber(561);    // compilenode identifier
              obj244.data["element"] = var_element__39__;
              var reader_rtobjectdraw_element562 = function() {
                return this.data["element"];
              };
              reader_rtobjectdraw_element562.def = true;
              obj244.methods["element"] = reader_rtobjectdraw_element562;
              superDepth = origSuperDepth;
            };
            obj_init_244.apply(obj244, []);
            setLineNumber(560);    // return value
            if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], obj244)))
                throw new GraceExceptionPacket(TypeErrorObject,
                    new GraceString("result of method componentFromElement(_) does not have " + 
                        callmethod(var_Component, "asString", [0])._value + "."));
            return obj244;
          };
          func243.paramCounts = [1];
          this.methods["componentFromElement(1)"] = func243;
          func243.definitionLine = 560;
          func243.definitionModule = "rtobjectdraw";
            var func563 = function(argcv) {    // method componentFromElement(_)$object(_)
              var curarg = 1;
              var var_element__39__ = arguments[curarg];
              curarg++;
              var inheritingObject = arguments[curarg++];
              // Start argument processing
              curarg = 1;
              curarg++;
              // End argument processing
              setModuleName("rtobjectdraw");
              var returnTarget = invocationCount;
              invocationCount++;
              var obj564 = Grace_allocObject(GraceObject, "componentFromElement(1)");
              obj564.definitionModule = "rtobjectdraw";
              obj564.definitionLine = 560;
              var inho564 = inheritingObject;
              while (inho564.superobj) inho564 = inho564.superobj;
              inho564.superobj = obj564;
              obj564.data = inheritingObject.data;
              if (inheritingObject.hasOwnProperty('_value'))
                obj564._value = inheritingObject._value;
              obj564.outer = this;
              var reader_rtobjectdraw_outer565 = function() {
                return this.outer;
              };
              obj564.methods["outer"] = reader_rtobjectdraw_outer565;
              var obj_init_564 = function() {
                var origSuperDepth = superDepth;
                superDepth = obj564;
                var func566 = function(argcv) {    // method width
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("rtobjectdraw");
                  setLineNumber(565);    // compilenode member
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call569 = callmethodChecked(this, "element", []);
                  var call570 = callmethodChecked(call569, "width", []);
                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call570)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method width does not have " + 
                              callmethod(var_Number, "asString", [0])._value + "."));
                  return call570;
                };
                func566.paramCounts = [0];
                obj564.methods["width"] = func566;
                func566.definitionLine = 564;
                func566.definitionModule = "rtobjectdraw";
                var func571 = function(argcv) {    // method height
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("rtobjectdraw");
                  setLineNumber(570);    // compilenode member
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call574 = callmethodChecked(this, "element", []);
                  var call575 = callmethodChecked(call574, "height", []);
                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call575)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method height does not have " + 
                              callmethod(var_Number, "asString", [0])._value + "."));
                  return call575;
                };
                func571.paramCounts = [0];
                obj564.methods["height"] = func571;
                func571.definitionLine = 569;
                func571.definitionModule = "rtobjectdraw";
                var func576 = function(argcv) {    // method size
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  setModuleName("rtobjectdraw");
                  setLineNumber(575);    // compilenode string
                  var string577 = new GraceString("");
                  // call case 4: self request
                  onSelf = true;
                  var call580 = callmethodChecked(this, "element", []);
                  var string582 = new GraceString("component is ");
                  var opresult584 = callmethodChecked(string582, "++(1)", [1], call580);
                  var opresult586 = callmethodChecked(opresult584, "++(1)", [1], string577);
                  var call587 = Grace_print(opresult586);
                  setLineNumber(576);    // compilenode member
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call590 = callmethodChecked(this, "element", []);
                  var call591 = callmethodChecked(call590, "height", []);
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call595 = callmethodChecked(this, "element", []);
                  var call596 = callmethodChecked(call595, "width", []);
                  var opresult598 = callmethodChecked(call596, "@(1)", [1], call591);
                  if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult598)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method size does not have " + 
                              callmethod(var_Point, "asString", [0])._value + "."));
                  return opresult598;
                };
                func576.paramCounts = [0];
                obj564.methods["size"] = func576;
                func576.definitionLine = 574;
                func576.definitionModule = "rtobjectdraw";
                var func599 = function(argcv) {    // method on(_)do(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_event__39__ = arguments[curarg];
                  curarg++;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(580);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in on (arg list 1), which corresponds to parameter event', does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  setLineNumber(581);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in do (arg list 2), which corresponds to parameter f, does not have " + 
                              callmethod(var_Procedure, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(582);    // compilenode identifier
                  // call case 6: other requests
                  // call case 4: self request
                  onSelf = true;
                  var call602 = callmethodChecked(this, "element", []);
                  var call603 = callmethodChecked(call602, "addEventListener(2)", [2], var_event__39__, var_f);
                  setLineNumber(583);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method on(_)do(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return var_done;
                };
                func599.paramTypes = [];
                func599.paramTypes.push([type_String, "event'"]);
                func599.paramTypes.push([]);
                func599.confidential = true;
                func599.paramCounts = [1, 1];
                obj564.methods["on(1)do(1)"] = func599;
                func599.definitionLine = 580;
                func599.definitionModule = "rtobjectdraw";
                var func604 = function(argcv) {    // method on(_)withPointDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_kind = arguments[curarg];
                  curarg++;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(586);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  setLineNumber(587);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in withPointDo (arg list 2), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(589);    // compilenode block
                  var block606 = new GraceBlock(this, 589, 1);
                  setLineNumber(1);    // compilenode identifier
                  block606.real = function(var_event__39__) {
                    setLineNumber(590);    // compilenode identifier
                    // call case 6: other requests
                    // call case 3: self.outer request
                    var call610 = callmethodChecked(superDepth, "outer", [0]);
                    onSelf = true;
                    var call611 = callmethodChecked(call610, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                    // call case 6: other requests
                    var call612 = callmethodChecked(var_f, "apply(1)", [1], call611);
                    return call612;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call613 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block606);
                  setLineNumber(589);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call613)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method on(_)withPointDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call613;
                };
                func604.paramTypes = [];
                func604.paramTypes.push([type_String, "kind"]);
                func604.paramTypes.push([]);
                func604.confidential = true;
                func604.paramCounts = [1, 1];
                obj564.methods["on(1)withPointDo(1)"] = func604;
                func604.definitionLine = 586;
                func604.definitionModule = "rtobjectdraw";
                var func614 = function(argcv) {    // method onMouseClickDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(594);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseClickDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(596);    // compilenode vardec
                  var var_lastDown;
                  setLineNumber(598);    // compilenode string
                  var string616 = new GraceString("mousedown");
                  var block617 = new GraceBlock(this, 598, 1);
                  setLineNumber(0);    // compilenode string
                  var string620 = new GraceString("event'");
                  // call case 6: other requests
                  // call case 5: prelude request
                  var call622 = callmethodChecked(var_prelude, "VariablePattern", []);
                  var call623 = callmethodChecked(call622, "new(1)", [1], string620);
                  setLineNumber(598);    // compilenode identifier
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 5: prelude request
                  var call625 = callmethodChecked(var_prelude, "AndPattern", []);
                  var call626 = callmethodChecked(call625, "new(2)", [2], call623, var_Foreign);
                  block617.pattern = call626;
                  setLineNumber(598);    // compilenode identifier
                  block617.paramTypes = [var_Foreign];
                  block617.real = function(var_event__39__) {
                    setLineNumber(599);    // compilenode member
                    // call case 6: other requests
                    var call628 = callmethodChecked(var_event__39__, "timeStamp", []);
                    var_lastDown = call628;
                    return GraceDone;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call629 = callmethodChecked(this, "on(1)do(1)", [1, 1], string616, block617);
                  setLineNumber(602);    // compilenode string
                  var string631 = new GraceString("click");
                  var block632 = new GraceBlock(this, 602, 1);
                  setLineNumber(0);    // compilenode string
                  var string635 = new GraceString("event'");
                  // call case 6: other requests
                  // call case 5: prelude request
                  var call637 = callmethodChecked(var_prelude, "VariablePattern", []);
                  var call638 = callmethodChecked(call637, "new(1)", [1], string635);
                  setLineNumber(602);    // compilenode identifier
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 5: prelude request
                  var call640 = callmethodChecked(var_prelude, "AndPattern", []);
                  var call641 = callmethodChecked(call640, "new(2)", [2], call638, var_Foreign);
                  block632.pattern = call641;
                  setLineNumber(602);    // compilenode identifier
                  block632.paramTypes = [var_Foreign];
                  block632.real = function(var_event__39__) {
                    var if642 = GraceDone;
                    setLineNumber(603);    // compilenode member
                    // call case 6: other requests
                    var call646 = callmethodChecked(var_event__39__, "timeStamp", []);
                    var diff648 = callmethodChecked(call646, "-(1)", [1], var_lastDown);
                    var opresult650 = callmethodChecked(diff648, "\u2264(1)", [1], var_maxClickTime);
                    if (Grace_isTrue(opresult650)) {
                      setLineNumber(604);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call654 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call655 = callmethodChecked(call654, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call656 = callmethodChecked(var_f, "apply(1)", [1], call655);
                      if642 = call656;
                    }
                    return if642;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call657 = callmethodChecked(this, "on(1)do(1)", [1, 1], string631, block632);
                  setLineNumber(602);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call657)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseClickDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call657;
                };
                func614.paramTypes = [];
                func614.paramTypes.push([]);
                func614.paramCounts = [1];
                obj564.methods["onMouseClickDo(1)"] = func614;
                func614.definitionLine = 594;
                func614.definitionModule = "rtobjectdraw";
                var func658 = function(argcv) {    // method onMousePressDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(610);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMousePressDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(611);    // compilenode string
                  var string660 = new GraceString("mousedown");
                  // call case 4: self request
                  onSelf = true;
                  var call661 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string660, var_f);
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call661)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMousePressDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call661;
                };
                func658.paramTypes = [];
                func658.paramTypes.push([]);
                func658.paramCounts = [1];
                obj564.methods["onMousePressDo(1)"] = func658;
                func658.definitionLine = 610;
                func658.definitionModule = "rtobjectdraw";
                var func662 = function(argcv) {    // method onMouseReleaseDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(615);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(616);    // compilenode string
                  var string664 = new GraceString("mouseup");
                  // call case 4: self request
                  onSelf = true;
                  var call665 = callmethodChecked(this, "on(1)withPointDo(1)", [1, 1], string664, var_f);
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call665)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseReleaseDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call665;
                };
                func662.paramTypes = [];
                func662.paramTypes.push([]);
                func662.paramCounts = [1];
                obj564.methods["onMouseReleaseDo(1)"] = func662;
                func662.definitionLine = 615;
                func662.definitionModule = "rtobjectdraw";
                var func666 = function(argcv) {    // method onMouseMoveDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(620);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseMoveDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(621);    // compilenode string
                  var string668 = new GraceString("mousemove");
                  var block669 = new GraceBlock(this, 621, 1);
                  setLineNumber(1);    // compilenode identifier
                  block669.real = function(var_event__39__) {
                    var if670 = GraceDone;
                    var if671 = GraceDone;
                    setLineNumber(622);    // compilenode string
                    var string673 = new GraceString("buttons");
                    // call case 6: other requests
                    var call674 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string673);
                    if (Grace_isTrue(call674)) {
                      setLineNumber(623);    // compilenode member
                      // call case 6: other requests
                      var call677 = callmethodChecked(var_event__39__, "buttons", []);
                      var opresult679 = callmethodChecked(call677, "==(1)", [1], new GraceNum(0));
                      if671 = opresult679;
                    } else {
                      setLineNumber(625);    // compilenode member
                      // call case 6: other requests
                      var call682 = callmethodChecked(var_event__39__, "which", []);
                      var opresult684 = callmethodChecked(call682, "==(1)", [1], new GraceNum(0));
                      if671 = opresult684;
                    }
                    if (Grace_isTrue(if671)) {
                      setLineNumber(627);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call688 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call689 = callmethodChecked(call688, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call690 = callmethodChecked(var_f, "apply(1)", [1], call689);
                      if670 = call690;
                    }
                    return if670;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call691 = callmethodChecked(this, "on(1)do(1)", [1, 1], string668, block669);
                  setLineNumber(621);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call691)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseMoveDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call691;
                };
                func666.paramTypes = [];
                func666.paramTypes.push([]);
                func666.paramCounts = [1];
                obj564.methods["onMouseMoveDo(1)"] = func666;
                func666.definitionLine = 620;
                func666.definitionModule = "rtobjectdraw";
                var func692 = function(argcv) {    // method onMouseDragDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(633);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseDragDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(634);    // compilenode string
                  var string694 = new GraceString("mousemove");
                  var block695 = new GraceBlock(this, 634, 1);
                  setLineNumber(1);    // compilenode identifier
                  block695.real = function(var_event__39__) {
                    var if696 = GraceDone;
                    var if697 = GraceDone;
                    setLineNumber(635);    // compilenode string
                    var string699 = new GraceString("buttons");
                    // call case 6: other requests
                    var call700 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], var_event__39__, string699);
                    if (Grace_isTrue(call700)) {
                      setLineNumber(636);    // compilenode member
                      // call case 6: other requests
                      var call703 = callmethodChecked(var_event__39__, "buttons", []);
                      var opresult705 = callmethodChecked(call703, "==(1)", [1], new GraceNum(1));
                      if697 = opresult705;
                    } else {
                      setLineNumber(638);    // compilenode member
                      // call case 6: other requests
                      var call708 = callmethodChecked(var_event__39__, "which", []);
                      var opresult710 = callmethodChecked(call708, "==(1)", [1], new GraceNum(1));
                      if697 = opresult710;
                    }
                    if (Grace_isTrue(if697)) {
                      setLineNumber(640);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call714 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call715 = callmethodChecked(call714, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call716 = callmethodChecked(var_f, "apply(1)", [1], call715);
                      if696 = call716;
                    }
                    return if696;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call717 = callmethodChecked(this, "on(1)do(1)", [1, 1], string694, block695);
                  setLineNumber(634);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call717)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseDragDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call717;
                };
                func692.paramTypes = [];
                func692.paramTypes.push([]);
                func692.paramCounts = [1];
                obj564.methods["onMouseDragDo(1)"] = func692;
                func692.definitionLine = 633;
                func692.definitionModule = "rtobjectdraw";
                var func718 = function(argcv) {    // method onMouseEnterDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(646);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(647);    // compilenode string
                  var string720 = new GraceString("mouseover");
                  var block721 = new GraceBlock(this, 647, 1);
                  setLineNumber(1);    // compilenode identifier
                  block721.real = function(var_event__39__) {
                    setLineNumber(648);    // compilenode member
                    // call case 6: other requests
                    var call723 = callmethodChecked(var_event__39__, "relatedTarget", []);
                    var var_from = call723;
                    var if724 = GraceDone;
                    setLineNumber(649);    // compilenode block
                    var block725 = new GraceBlock(this, 649, 0);
                    block725.real = function() {
                      // call case 6: other requests
                      // call case 6: other requests
                      // call case 4: self request
                      onSelf = true;
                      var call729 = callmethodChecked(this, "element", []);
                      var call730 = callmethodChecked(call729, "contains(1)", [1], var_from);
                      var call731 = callmethodChecked(call730, "prefix!", [0]);
                      return call731;
                    };
                    // call case 6: other requests
                    var call735 = callmethodChecked(var_dom, "noObject", []);
                    var opresult737 = callmethodChecked(call735, "==(1)", [1], var_from);
                    var opresult739 = callmethodChecked(opresult737, "||(1)", [1], block725);
                    if (Grace_isTrue(opresult739)) {
                      setLineNumber(650);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call743 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call744 = callmethodChecked(call743, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call745 = callmethodChecked(var_f, "apply(1)", [1], call744);
                      if724 = call745;
                    }
                    return if724;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call746 = callmethodChecked(this, "on(1)do(1)", [1, 1], string720, block721);
                  setLineNumber(647);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call746)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseEnterDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call746;
                };
                func718.paramTypes = [];
                func718.paramTypes.push([]);
                func718.paramCounts = [1];
                obj564.methods["onMouseEnterDo(1)"] = func718;
                func718.definitionLine = 646;
                func718.definitionModule = "rtobjectdraw";
                var func747 = function(argcv) {    // method onMouseExitDo(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_f = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(656);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                              callmethod(var_MouseResponse, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  setLineNumber(657);    // compilenode string
                  var string749 = new GraceString("mouseout");
                  var block750 = new GraceBlock(this, 657, 1);
                  setLineNumber(1);    // compilenode identifier
                  block750.real = function(var_event__39__) {
                    setLineNumber(658);    // compilenode member
                    // call case 6: other requests
                    var call752 = callmethodChecked(var_event__39__, "relatedTarget", []);
                    var var_to = call752;
                    var if753 = GraceDone;
                    setLineNumber(660);    // compilenode block
                    var block754 = new GraceBlock(this, 660, 0);
                    block754.real = function() {
                      // call case 6: other requests
                      // call case 6: other requests
                      // call case 4: self request
                      onSelf = true;
                      var call758 = callmethodChecked(this, "element", []);
                      var call759 = callmethodChecked(call758, "contains(1)", [1], var_to);
                      var call760 = callmethodChecked(call759, "prefix!", [0]);
                      return call760;
                    };
                    // call case 6: other requests
                    var call764 = callmethodChecked(var_dom, "noObject", []);
                    var opresult766 = callmethodChecked(call764, "==(1)", [1], var_to);
                    var opresult768 = callmethodChecked(opresult766, "||(1)", [1], block754);
                    if (Grace_isTrue(opresult768)) {
                      setLineNumber(661);    // compilenode identifier
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call772 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call773 = callmethodChecked(call772, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call774 = callmethodChecked(var_f, "apply(1)", [1], call773);
                      if753 = call774;
                    }
                    return if753;
                  };
                  // call case 4: self request
                  onSelf = true;
                  var call775 = callmethodChecked(this, "on(1)do(1)", [1, 1], string749, block750);
                  setLineNumber(657);    // return value
                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call775)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method onMouseExitDo(_) does not have " + 
                              callmethod(var_Done, "asString", [0])._value + "."));
                  return call775;
                };
                func747.paramTypes = [];
                func747.paramTypes.push([]);
                func747.paramCounts = [1];
                obj564.methods["onMouseExitDo(1)"] = func747;
                func747.definitionLine = 656;
                func747.definitionModule = "rtobjectdraw";
                var func776 = function(argcv) {    // method keyEventSource(_)event(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_source__39__ = arguments[curarg];
                  curarg++;
                  var var_event__39__ = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  setLineNumber(666);    // compilenode identifier
                  if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                              callmethod(var_Component, "asString", [0])._value + "."));
                  curarg++;
                  if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                              callmethod(var_Foreign, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  var obj777 = Grace_allocObject(null, "keyEventSource(1)event(1)");
                  obj777.definitionModule = "rtobjectdraw";
                  obj777.definitionLine = 666;
                  obj777.outer = this;
                  var reader_rtobjectdraw_outer778 = function() {
                    return this.outer;
                  };
                  obj777.methods["outer"] = reader_rtobjectdraw_outer778;
                  var obj_init_777 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj777;
                    var func779 = function(argcv) {    // method asString
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var curarg = 1;
                      setModuleName("rtobjectdraw");
                      setLineNumber(674);    // compilenode string
                      var string780 = new GraceString("");
                      // call case 4: self request
                      onSelf = true;
                      var call783 = callmethodChecked(this, "code", []);
                      var string785 = new GraceString(" for key-code ");
                      // call case 4: self request
                      onSelf = true;
                      var call788 = callmethodChecked(this, "source", []);
                      var string790 = new GraceString("Event on ");
                      var opresult792 = callmethodChecked(string790, "++(1)", [1], call788);
                      var opresult794 = callmethodChecked(opresult792, "++(1)", [1], string785);
                      var opresult796 = callmethodChecked(opresult794, "++(1)", [1], call783);
                      var opresult798 = callmethodChecked(opresult796, "++(1)", [1], string780);
                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult798)))
                          throw new GraceExceptionPacket(TypeErrorObject,
                              new GraceString("result of method asString does not have " + 
                                  callmethod(var_String, "asString", [0])._value + "."));
                      return opresult798;
                    };
                    func779.paramCounts = [0];
                    obj777.methods["asString"] = func779;
                    func779.definitionLine = 673;
                    func779.definitionModule = "rtobjectdraw";
                    setLineNumber(668);    // compilenode identifier
                    // call case 6: other requests
                    setLineNumber(0);    // compilenode member
                    // call case 6: other requests
                    // call case 3: self.outer request
                    var call802 = callmethodChecked(superDepth, "outer", [0]);
                    var call803 = callmethodChecked(call802, "outer", []);
                    onSelf = true;
                    var call804 = callmethodChecked(call803, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                    obj777.superobj = call804;
                    if (call804.data) obj777.data = call804.data;
                    if (call804.hasOwnProperty('_value'))
                        obj777._value = call804._value;
                    setLineNumber(669);    // compilenode member
                    // call case 6: other requests
                    var call806 = callmethodChecked(var_event__39__, "which", []);
                    obj777.data["code"] = call806;
                    var reader_rtobjectdraw_code807 = function() {
                      return this.data["code"];
                    };
                    reader_rtobjectdraw_code807.def = true;
                    obj777.methods["code"] = reader_rtobjectdraw_code807;
                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call806)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("value of def 'code' is not of type Number"));
                    superDepth = origSuperDepth;
                  };
                  obj_init_777.apply(obj777, []);
                  setLineNumber(666);    // return value
                  if (!Grace_isTrue(callmethod(var_KeyEvent, "match(1)", [1], obj777)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method keyEventSource(_)event(_) does not have " + 
                              callmethod(var_KeyEvent, "asString", [0])._value + "."));
                  return obj777;
                };
                func776.paramTypes = [];
                func776.paramTypes.push([]);
                func776.paramTypes.push([]);
                func776.paramCounts = [1, 1];
                obj564.methods["keyEventSource(1)event(1)"] = func776;
                func776.definitionLine = 666;
                func776.definitionModule = "rtobjectdraw";
                  var func808 = function(argcv) {    // method keyEventSource(_)event(_)$object(_)
                    var curarg = 1;
                    var var_source__39__ = arguments[curarg];
                    curarg++;
                    var var_event__39__ = arguments[curarg];
                    curarg++;
                    var inheritingObject = arguments[curarg++];
                    // Start argument processing
                    curarg = 1;
                    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in keyEventSource (arg list 1), which corresponds to parameter source', does not have " + 
                                callmethod(var_Component, "asString", [0])._value + "."));
                    curarg++;
                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in event (arg list 2), which corresponds to parameter event', does not have " + 
                                callmethod(var_Foreign, "asString", [0])._value + "."));
                    curarg++;
                    // End argument processing
                    setModuleName("rtobjectdraw");
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var obj809 = Grace_allocObject(null, "keyEventSource(1)event(1)");
                    obj809.definitionModule = "rtobjectdraw";
                    obj809.definitionLine = 666;
                    var inho809 = inheritingObject;
                    while (inho809.superobj) inho809 = inho809.superobj;
                    inho809.superobj = obj809;
                    obj809.data = inheritingObject.data;
                    if (inheritingObject.hasOwnProperty('_value'))
                      obj809._value = inheritingObject._value;
                    obj809.outer = this;
                    var reader_rtobjectdraw_outer810 = function() {
                      return this.outer;
                    };
                    obj809.methods["outer"] = reader_rtobjectdraw_outer810;
                    var obj_init_809 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj809;
                      var func811 = function(argcv) {    // method asString
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(674);    // compilenode string
                        var string812 = new GraceString("");
                        // call case 4: self request
                        onSelf = true;
                        var call815 = callmethodChecked(this, "code", []);
                        var string817 = new GraceString(" for key-code ");
                        // call case 4: self request
                        onSelf = true;
                        var call820 = callmethodChecked(this, "source", []);
                        var string822 = new GraceString("Event on ");
                        var opresult824 = callmethodChecked(string822, "++(1)", [1], call820);
                        var opresult826 = callmethodChecked(opresult824, "++(1)", [1], string817);
                        var opresult828 = callmethodChecked(opresult826, "++(1)", [1], call815);
                        var opresult830 = callmethodChecked(opresult828, "++(1)", [1], string812);
                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult830)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method asString does not have " + 
                                    callmethod(var_String, "asString", [0])._value + "."));
                        return opresult830;
                      };
                      func811.paramCounts = [0];
                      obj809.methods["asString"] = func811;
                      func811.definitionLine = 673;
                      func811.definitionModule = "rtobjectdraw";
                      setLineNumber(668);    // compilenode identifier
                      // call case 6: other requests
                      setLineNumber(0);    // compilenode member
                      // call case 6: other requests
                      // call case 3: self.outer request
                      var call834 = callmethodChecked(superDepth, "outer", [0]);
                      var call835 = callmethodChecked(call834, "outer", []);
                      onSelf = true;
                      var call836 = callmethodChecked(call835, "eventSource(1)$object(1)", [1, 1], var_source__39__, this);
                      obj809.superobj = call836;
                      if (call836.data) obj809.data = call836.data;
                      if (call836.hasOwnProperty('_value'))
                          obj809._value = call836._value;
                      setLineNumber(669);    // compilenode member
                      // call case 6: other requests
                      var call838 = callmethodChecked(var_event__39__, "which", []);
                      obj809.data["code"] = call838;
                      var reader_rtobjectdraw_code839 = function() {
                        return this.data["code"];
                      };
                      reader_rtobjectdraw_code839.def = true;
                      obj809.methods["code"] = reader_rtobjectdraw_code839;
                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call838)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("value of def 'code' is not of type Number"));
                      superDepth = origSuperDepth;
                    };
                    obj_init_809.apply(inheritingObject, []);
                    return obj809;
                    };
                    func808.paramTypes = [];
                    func808.paramTypes.push([]);
                    func808.paramTypes.push([]);
                    obj564.methods["keyEventSource(1)event(1)$object(1)"] = func808;
                  var func840 = function(argcv) {    // method on(_)withKeyDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_kind = arguments[curarg];
                    curarg++;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(680);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    curarg++;
                    setLineNumber(681);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in withKeyDo (arg list 2), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("rtobjectdraw");
                    setLineNumber(682);    // compilenode block
                    var block842 = new GraceBlock(this, 682, 1);
                    setLineNumber(1);    // compilenode identifier
                    block842.real = function(var_event__39__) {
                      setLineNumber(683);    // compilenode identifier
                      // call case 4: self request
                      onSelf = true;
                      var call845 = callmethodChecked(this, "keyEventSource(1)event(1)", [1, 1], this, var_event__39__);
                      // call case 6: other requests
                      var call846 = callmethodChecked(var_f, "apply(1)", [1], call845);
                      return call846;
                    };
                    // call case 4: self request
                    onSelf = true;
                    var call847 = callmethodChecked(this, "on(1)do(1)", [1, 1], var_kind, block842);
                    setLineNumber(682);    // return value
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call847)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method on(_)withKeyDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call847;
                  };
                  func840.paramTypes = [];
                  func840.paramTypes.push([type_String, "kind"]);
                  func840.paramTypes.push([]);
                  func840.confidential = true;
                  func840.paramCounts = [1, 1];
                  obj564.methods["on(1)withKeyDo(1)"] = func840;
                  func840.definitionLine = 680;
                  func840.definitionModule = "rtobjectdraw";
                  var func848 = function(argcv) {    // method onKeyPressDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(688);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in onKeyPressDo (arg list 1), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("rtobjectdraw");
                    setLineNumber(689);    // compilenode string
                    var string850 = new GraceString("keydown");
                    // call case 4: self request
                    onSelf = true;
                    var call851 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string850, var_f);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call851)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method onKeyPressDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call851;
                  };
                  func848.paramTypes = [];
                  func848.paramTypes.push([]);
                  func848.paramCounts = [1];
                  obj564.methods["onKeyPressDo(1)"] = func848;
                  func848.definitionLine = 688;
                  func848.definitionModule = "rtobjectdraw";
                  var func852 = function(argcv) {    // method onKeyReleaseDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(693);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in onKeyReleaseDo (arg list 1), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("rtobjectdraw");
                    setLineNumber(694);    // compilenode string
                    var string854 = new GraceString("keyup");
                    // call case 4: self request
                    onSelf = true;
                    var call855 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string854, var_f);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call855)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method onKeyReleaseDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call855;
                  };
                  func852.paramTypes = [];
                  func852.paramTypes.push([]);
                  func852.paramCounts = [1];
                  obj564.methods["onKeyReleaseDo(1)"] = func852;
                  func852.definitionLine = 693;
                  func852.definitionModule = "rtobjectdraw";
                  var func856 = function(argcv) {    // method onKeyTypeDo(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_f = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(698);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_KeyResponse, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in onKeyTypeDo (arg list 1), which corresponds to parameter f, does not have " + 
                                callmethod(var_KeyResponse, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("rtobjectdraw");
                    setLineNumber(699);    // compilenode string
                    var string858 = new GraceString("keypress");
                    // call case 4: self request
                    onSelf = true;
                    var call859 = callmethodChecked(this, "on(1)withKeyDo(1)", [1, 1], string858, var_f);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call859)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method onKeyTypeDo(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call859;
                  };
                  func856.paramTypes = [];
                  func856.paramTypes.push([]);
                  func856.paramCounts = [1];
                  obj564.methods["onKeyTypeDo(1)"] = func856;
                  func856.definitionLine = 698;
                  func856.definitionModule = "rtobjectdraw";
                  var func860 = function(argcv) {    // method isFlexible
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    setModuleName("rtobjectdraw");
                    setLineNumber(704);    // compilenode member
                    // call case 6: other requests
                    // call case 6: other requests
                    // call case 6: other requests
                    // call case 4: self request
                    onSelf = true;
                    var call866 = callmethodChecked(this, "element", []);
                    var call867 = callmethodChecked(call866, "style", []);
                    var call868 = callmethodChecked(call867, "flexGrow", []);
                    var call869 = callmethodChecked(call868, "asNumber", []);
                    var opresult871 = callmethodChecked(call869, ">(1)", [1], new GraceNum(0));
                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult871)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method isFlexible does not have " + 
                                callmethod(var_Boolean, "asString", [0])._value + "."));
                    return opresult871;
                  };
                  func860.paramCounts = [0];
                  obj564.methods["isFlexible"] = func860;
                  func860.definitionLine = 703;
                  func860.definitionModule = "rtobjectdraw";
                  var func872 = function(argcv) {    // method flexible:=(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_value = arguments[curarg];
                    curarg++;
                    // Start argument checking
                    curarg = 1;
                    setLineNumber(708);    // compilenode identifier
                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in flexible:= (arg list 1), which corresponds to parameter value, does not have " + 
                                callmethod(var_Boolean, "asString", [0])._value + "."));
                    curarg++;
                    // End argument checking
                    setModuleName("rtobjectdraw");
                    var if874 = GraceDone;
                    setLineNumber(709);    // compilenode identifier
                    if (Grace_isTrue(var_value)) {
                      setLineNumber(710);    // compilenode num
                      if874 = new GraceNum(1);
                    } else {
                      setLineNumber(712);    // compilenode num
                      if874 = new GraceNum(0);
                    }
                    // call case 6: other requests
                    setLineNumber(709);    // compilenode member
                    // call case 6: other requests
                    // call case 4: self request
                    onSelf = true;
                    var call877 = callmethodChecked(this, "element", []);
                    var call878 = callmethodChecked(call877, "style", []);
                    var call879 = callmethodChecked(call878, "flexGrow:=(1)", [1], if874);
                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call879)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method flexible:=(_) does not have " + 
                                callmethod(var_Done, "asString", [0])._value + "."));
                    return call879;
                  };
                  func872.paramTypes = [];
                  func872.paramTypes.push([type_Boolean, "value"]);
                  func872.paramCounts = [1];
                  obj564.methods["flexible:=(1)"] = func872;
                  func872.definitionLine = 708;
                  func872.definitionModule = "rtobjectdraw";
                  var func880 = function(argcv) {    // method asString
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    setModuleName("rtobjectdraw");
                    setLineNumber(718);    // compilenode string
                    var string881 = new GraceString("a component");
                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string881)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method asString does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    return string881;
                  };
                  func880.paramCounts = [0];
                  obj564.methods["asString"] = func880;
                  func880.definitionLine = 717;
                  func880.definitionModule = "rtobjectdraw";
                  setLineNumber(561);    // compilenode identifier
                  obj564.data["element"] = var_element__39__;
                  var reader_rtobjectdraw_element882 = function() {
                    return this.data["element"];
                  };
                  reader_rtobjectdraw_element882.def = true;
                  obj564.methods["element"] = reader_rtobjectdraw_element882;
                  superDepth = origSuperDepth;
                };
                obj_init_564.apply(inheritingObject, []);
                return obj564;
                };
                this.methods["componentFromElement(1)$object(1)"] = func563;
              setLineNumber(722);    // compilenode method
              var func883 = function(argcv) {    // method componentOfElementType(_)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_tagName = arguments[curarg];
                curarg++;
                // Start argument checking
                curarg = 1;
                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("argument 1 in componentOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                            callmethod(var_String, "asString", [0])._value + "."));
                curarg++;
                // End argument checking
                setModuleName("rtobjectdraw");
                var obj884 = Grace_allocObject(null, "componentOfElementType(_)");
                obj884.definitionModule = "rtobjectdraw";
                obj884.definitionLine = 722;
                obj884.outer = this;
                var reader_rtobjectdraw_outer885 = function() {
                  return this.outer;
                };
                obj884.methods["outer"] = reader_rtobjectdraw_outer885;
                var obj_init_884 = function() {
                  var origSuperDepth = superDepth;
                  superDepth = obj884;
                  setLineNumber(725);    // compilenode identifier
                  // call case 6: other requests
                  var call888 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                  // call case 6: other requests
                  setLineNumber(0);    // compilenode member
                  // call case 3: self.outer request
                  var call890 = callmethodChecked(superDepth, "outer", [0]);
                  onSelf = true;
                  var call891 = callmethodChecked(call890, "componentFromElement(1)$object(1)", [1, 1], call888, this);
                  obj884.superobj = call891;
                  if (call891.data) obj884.data = call891.data;
                  if (call891.hasOwnProperty('_value'))
                      obj884._value = call891._value;
                  superDepth = origSuperDepth;
                };
                obj_init_884.apply(obj884, []);
                setLineNumber(722);    // return value
                if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], obj884)))
                    throw new GraceExceptionPacket(TypeErrorObject,
                        new GraceString("result of method componentOfElementType(_) does not have " + 
                            callmethod(var_Component, "asString", [0])._value + "."));
                return obj884;
              };
              func883.paramTypes = [];
              func883.paramTypes.push([type_String, "tagName"]);
              func883.paramCounts = [1];
              this.methods["componentOfElementType(1)"] = func883;
              func883.definitionLine = 722;
              func883.definitionModule = "rtobjectdraw";
                var func892 = function(argcv) {    // method componentOfElementType(_)$object(_)
                  var curarg = 1;
                  var var_tagName = arguments[curarg];
                  curarg++;
                  var inheritingObject = arguments[curarg++];
                  // Start argument processing
                  curarg = 1;
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in componentOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  // End argument processing
                  setModuleName("rtobjectdraw");
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var obj893 = Grace_allocObject(null, "componentOfElementType(1)");
                  obj893.definitionModule = "rtobjectdraw";
                  obj893.definitionLine = 722;
                  var inho893 = inheritingObject;
                  while (inho893.superobj) inho893 = inho893.superobj;
                  inho893.superobj = obj893;
                  obj893.data = inheritingObject.data;
                  if (inheritingObject.hasOwnProperty('_value'))
                    obj893._value = inheritingObject._value;
                  obj893.outer = this;
                  var reader_rtobjectdraw_outer894 = function() {
                    return this.outer;
                  };
                  obj893.methods["outer"] = reader_rtobjectdraw_outer894;
                  var obj_init_893 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj893;
                    setLineNumber(725);    // compilenode identifier
                    // call case 6: other requests
                    var call897 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                    // call case 6: other requests
                    setLineNumber(0);    // compilenode member
                    // call case 3: self.outer request
                    var call899 = callmethodChecked(superDepth, "outer", [0]);
                    onSelf = true;
                    var call900 = callmethodChecked(call899, "componentFromElement(1)$object(1)", [1, 1], call897, this);
                    obj893.superobj = call900;
                    if (call900.data) obj893.data = call900.data;
                    if (call900.hasOwnProperty('_value'))
                        obj893._value = call900._value;
                    superDepth = origSuperDepth;
                  };
                  obj_init_893.apply(inheritingObject, []);
                  return obj893;
                  };
                  func892.paramTypes = [];
                  func892.paramTypes.push([type_String, "tagName"]);
                  this.methods["componentOfElementType(1)$object(1)"] = func892;
                setLineNumber(730);    // compilenode method
                var func901 = function(argcv) {    // method containerOfElementType(_)
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  var var_tagName = arguments[curarg];
                  curarg++;
                  // Start argument checking
                  curarg = 1;
                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("argument 1 in containerOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                              callmethod(var_String, "asString", [0])._value + "."));
                  curarg++;
                  // End argument checking
                  setModuleName("rtobjectdraw");
                  var obj902 = Grace_allocObject(null, "containerOfElementType(_)");
                  obj902.definitionModule = "rtobjectdraw";
                  obj902.definitionLine = 730;
                  obj902.outer = this;
                  var reader_rtobjectdraw_outer903 = function() {
                    return this.outer;
                  };
                  obj902.methods["outer"] = reader_rtobjectdraw_outer903;
                  var obj_init_902 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj902;
                    setLineNumber(731);    // compilenode identifier
                    // call case 6: other requests
                    var call906 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                    // call case 6: other requests
                    setLineNumber(0);    // compilenode member
                    // call case 3: self.outer request
                    var call908 = callmethodChecked(superDepth, "outer", [0]);
                    onSelf = true;
                    var call909 = callmethodChecked(call908, "containerFromElement(1)$object(1)", [1, 1], call906, this);
                    obj902.superobj = call909;
                    if (call909.data) obj902.data = call909.data;
                    if (call909.hasOwnProperty('_value'))
                        obj902._value = call909._value;
                    superDepth = origSuperDepth;
                  };
                  obj_init_902.apply(obj902, []);
                  setLineNumber(730);    // return value
                  if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], obj902)))
                      throw new GraceExceptionPacket(TypeErrorObject,
                          new GraceString("result of method containerOfElementType(_) does not have " + 
                              callmethod(var_Component, "asString", [0])._value + "."));
                  return obj902;
                };
                func901.paramTypes = [];
                func901.paramTypes.push([type_String, "tagName"]);
                func901.paramCounts = [1];
                this.methods["containerOfElementType(1)"] = func901;
                func901.definitionLine = 730;
                func901.definitionModule = "rtobjectdraw";
                  var func910 = function(argcv) {    // method containerOfElementType(_)$object(_)
                    var curarg = 1;
                    var var_tagName = arguments[curarg];
                    curarg++;
                    var inheritingObject = arguments[curarg++];
                    // Start argument processing
                    curarg = 1;
                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("argument 1 in containerOfElementType (arg list 1), which corresponds to parameter tagName, does not have " + 
                                callmethod(var_String, "asString", [0])._value + "."));
                    curarg++;
                    // End argument processing
                    setModuleName("rtobjectdraw");
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var obj911 = Grace_allocObject(null, "containerOfElementType(1)");
                    obj911.definitionModule = "rtobjectdraw";
                    obj911.definitionLine = 730;
                    var inho911 = inheritingObject;
                    while (inho911.superobj) inho911 = inho911.superobj;
                    inho911.superobj = obj911;
                    obj911.data = inheritingObject.data;
                    if (inheritingObject.hasOwnProperty('_value'))
                      obj911._value = inheritingObject._value;
                    obj911.outer = this;
                    var reader_rtobjectdraw_outer912 = function() {
                      return this.outer;
                    };
                    obj911.methods["outer"] = reader_rtobjectdraw_outer912;
                    var obj_init_911 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj911;
                      setLineNumber(731);    // compilenode identifier
                      // call case 6: other requests
                      var call915 = callmethodChecked(var_document, "createElement(1)", [1], var_tagName);
                      // call case 6: other requests
                      setLineNumber(0);    // compilenode member
                      // call case 3: self.outer request
                      var call917 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call918 = callmethodChecked(call917, "containerFromElement(1)$object(1)", [1, 1], call915, this);
                      obj911.superobj = call918;
                      if (call918.data) obj911.data = call918.data;
                      if (call918.hasOwnProperty('_value'))
                          obj911._value = call918._value;
                      superDepth = origSuperDepth;
                    };
                    obj_init_911.apply(inheritingObject, []);
                    return obj911;
                    };
                    func910.paramTypes = [];
                    func910.paramTypes.push([type_String, "tagName"]);
                    this.methods["containerOfElementType(1)$object(1)"] = func910;
                  setLineNumber(735);    // compilenode method
                  var func919 = function(argcv) {    // method containerFromElement(_)
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    var var_element__39__ = arguments[curarg];
                    curarg++;
                    setModuleName("rtobjectdraw");
                    var obj920 = Grace_allocObject(null, "containerFromElement(_)");
                    obj920.definitionModule = "rtobjectdraw";
                    obj920.definitionLine = 735;
                    obj920.outer = this;
                    var reader_rtobjectdraw_outer921 = function() {
                      return this.outer;
                    };
                    obj920.methods["outer"] = reader_rtobjectdraw_outer921;
                    var obj_init_920 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj920;
                      var func922 = function(argcv) {    // method size
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(742);    // compilenode member
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call925 = callmethodChecked(this, "children", []);
                        var call926 = callmethodChecked(call925, "size", []);
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call926)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method size does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        return call926;
                      };
                      func922.paramCounts = [0];
                      obj920.methods["size"] = func922;
                      func922.definitionLine = 741;
                      func922.definitionModule = "rtobjectdraw";
                      var func927 = function(argcv) {    // method isEmpty
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(747);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call930 = callmethodChecked(this, "size", []);
                        var opresult932 = callmethodChecked(call930, "==(1)", [1], new GraceNum(0));
                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult932)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method isEmpty does not have " + 
                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                        return opresult932;
                      };
                      func927.paramCounts = [0];
                      obj920.methods["isEmpty"] = func927;
                      func927.definitionLine = 746;
                      func927.definitionModule = "rtobjectdraw";
                      var func933 = function(argcv) {    // method at(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_index = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(751);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        var if934 = GraceDone;
                        setLineNumber(752);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call936 = callmethodChecked(this, "size", []);
                        var opresult939 = callmethodChecked(var_index, ">(1)", [1], call936);
                        var opresult943 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                        var opresult945 = callmethodChecked(opresult943, "||(1)", [1], opresult939);
                        if (Grace_isTrue(opresult945)) {
                          setLineNumber(753);    // compilenode identifier
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call950 = callmethodChecked(superDepth, "outer", [0]);
                          onSelf = true;
                          var call951 = callmethodChecked(call950, "collections", []);
                          var call952 = callmethodChecked(call951, "BoundsError", []);
                          var call953 = callmethodChecked(call952, "raiseForIndex(1)", [1], var_index);
                          if934 = call953;
                        }
                        setLineNumber(756);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call956 = callmethodChecked(this, "children", []);
                        var call957 = callmethodChecked(call956, "at(1)", [1], var_index);
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], call957)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method at(_) does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        return call957;
                      };
                      func933.paramTypes = [];
                      func933.paramTypes.push([type_Number, "index"]);
                      func933.paramCounts = [1];
                      obj920.methods["at(1)"] = func933;
                      func933.definitionLine = 751;
                      func933.definitionModule = "rtobjectdraw";
                      var func958 = function(argcv) {    // method at(_)put(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_index = arguments[curarg];
                        curarg++;
                        var var_aComponent = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(760);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in put (arg list 2), which corresponds to parameter aComponent, does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        var if959 = GraceDone;
                        setLineNumber(761);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call962 = callmethodChecked(this, "size", []);
                        var opresult964 = callmethodChecked(call962, "+(1)", [1], new GraceNum(1));
                        var opresult967 = callmethodChecked(var_index, ">(1)", [1], opresult964);
                        var opresult971 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                        var opresult973 = callmethodChecked(opresult971, "||(1)", [1], opresult967);
                        if (Grace_isTrue(opresult973)) {
                          setLineNumber(762);    // compilenode identifier
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call977 = callmethodChecked(superDepth, "outer", [0]);
                          onSelf = true;
                          var call978 = callmethodChecked(call977, "BoundsError", []);
                          var call979 = callmethodChecked(call978, "raiseForIndex(1)", [1], var_index);
                          if959 = call979;
                        }
                        var if980 = GraceDone;
                        setLineNumber(765);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call983 = callmethodChecked(this, "size", []);
                        var opresult985 = callmethodChecked(call983, "+(1)", [1], new GraceNum(1));
                        var opresult988 = callmethodChecked(var_index, "==(1)", [1], opresult985);
                        if (Grace_isTrue(opresult988)) {
                          setLineNumber(766);    // compilenode member
                          // call case 6: other requests
                          var call991 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call993 = callmethodChecked(this, "element", []);
                          var call994 = callmethodChecked(call993, "appendChild(1)", [1], call991);
                          if980 = call994;
                        } else {
                          setLineNumber(768);    // compilenode member
                          // call case 6: other requests
                          var call997 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1001 = callmethodChecked(this, "children", []);
                          var call1002 = callmethodChecked(call1001, "at(1)", [1], var_index);
                          var call1003 = callmethodChecked(call1002, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1005 = callmethodChecked(this, "element", []);
                          var call1006 = callmethodChecked(call1005, "insertBefore(2)", [2], call997, call1003);
                          if980 = call1006;
                        }
                        setLineNumber(771);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1009 = callmethodChecked(this, "children", []);
                        var call1010 = callmethodChecked(call1009, "at(1)put(1)", [1, 1], var_index, var_aComponent);
                        setLineNumber(773);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method at(_)put(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return var_done;
                      };
                      func958.paramTypes = [];
                      func958.paramTypes.push([type_Number, "index"]);
                      func958.paramTypes.push([]);
                      func958.paramCounts = [1, 1];
                      obj920.methods["at(1)put(1)"] = func958;
                      func958.definitionLine = 760;
                      func958.definitionModule = "rtobjectdraw";
                      var func1011 = function(argcv) {    // method append(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_aComponent = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(777);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        setLineNumber(778);    // compilenode member
                        // call case 6: other requests
                        var call1014 = callmethodChecked(var_aComponent, "element", []);
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1016 = callmethodChecked(this, "element", []);
                        var call1017 = callmethodChecked(call1016, "appendChild(1)", [1], call1014);
                        setLineNumber(780);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1020 = callmethodChecked(this, "children", []);
                        var call1021 = callmethodChecked(call1020, "push(1)", [1], var_aComponent);
                        setLineNumber(782);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method append(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return var_done;
                      };
                      func1011.paramTypes = [];
                      func1011.paramTypes.push([]);
                      func1011.paramCounts = [1];
                      obj920.methods["append(1)"] = func1011;
                      func1011.definitionLine = 777;
                      func1011.definitionModule = "rtobjectdraw";
                      var func1022 = function(argcv) {    // method prepend(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_aComponent = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(786);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                    callmethod(var_Component, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        var if1023 = GraceDone;
                        setLineNumber(787);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1025 = callmethodChecked(this, "isEmpty", []);
                        if (Grace_isTrue(call1025)) {
                          setLineNumber(788);    // compilenode member
                          // call case 6: other requests
                          var call1028 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1030 = callmethodChecked(this, "element", []);
                          var call1031 = callmethodChecked(call1030, "appendChild(1)", [1], call1028);
                          if1023 = call1031;
                        } else {
                          setLineNumber(790);    // compilenode member
                          // call case 6: other requests
                          var call1034 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1037 = callmethodChecked(this, "element", []);
                          var call1038 = callmethodChecked(call1037, "firstChild", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1040 = callmethodChecked(this, "element", []);
                          var call1041 = callmethodChecked(call1040, "insertBefore(2)", [2], call1034, call1038);
                          if1023 = call1041;
                        }
                        setLineNumber(793);    // compilenode identifier
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1044 = callmethodChecked(this, "children", []);
                        var call1045 = callmethodChecked(call1044, "unshift(1)", [1], var_aComponent);
                        setLineNumber(795);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method prepend(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return var_done;
                      };
                      func1022.paramTypes = [];
                      func1022.paramTypes.push([]);
                      func1022.paramCounts = [1];
                      obj920.methods["prepend(1)"] = func1022;
                      func1022.definitionLine = 786;
                      func1022.definitionModule = "rtobjectdraw";
                      var func1046 = function(argcv) {    // method do(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_f = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(799);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in do (arg list 1), which corresponds to parameter f, does not have " + 
                                    callmethod(var_Procedure, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        setLineNumber(800);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1049 = callmethodChecked(this, "children", []);
                        var block1050 = new GraceBlock(this, 800, 1);
                        setLineNumber(0);    // compilenode string
                        var string1053 = new GraceString("aComponent");
                        // call case 6: other requests
                        // call case 5: prelude request
                        var call1055 = callmethodChecked(var_prelude, "VariablePattern", []);
                        var call1056 = callmethodChecked(call1055, "new(1)", [1], string1053);
                        setLineNumber(800);    // compilenode identifier
                        // call case 6: other requests
                        setLineNumber(0);    // compilenode member
                        // call case 5: prelude request
                        var call1058 = callmethodChecked(var_prelude, "AndPattern", []);
                        var call1059 = callmethodChecked(call1058, "new(2)", [2], call1056, var_Component);
                        block1050.pattern = call1059;
                        setLineNumber(800);    // compilenode identifier
                        block1050.paramTypes = [var_Component];
                        block1050.real = function(var_aComponent) {
                          setLineNumber(801);    // compilenode identifier
                          // call case 6: other requests
                          var call1061 = callmethodChecked(var_f, "apply(1)", [1], var_aComponent);
                          return call1061;
                        };
                        // call case 5: prelude request
                        var call1062 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1049, block1050);
                        setLineNumber(800);    // return value
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1062)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method do(_) does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1062;
                      };
                      func1046.paramCounts = [1];
                      obj920.methods["do(1)"] = func1046;
                      func1046.definitionLine = 799;
                      func1046.definitionModule = "rtobjectdraw";
                      var func1063 = function(argcv) {    // method fold(_)startingWith(_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_f = arguments[curarg];
                        curarg++;
                        var var_initial = arguments[curarg];
                        curarg++;
                        // Start type arguments
                        var var_T = var_Unknown;
                        if (argcv.length == 3) {
                          if (argcv[2] !== 1) {
                            throw new GraceExceptionPacket(ProgrammingErrorObject, 
                                new GraceString("wrong number of type arguments for fold(_)startingWith(_)"));
                          }
                          var_T = arguments[curarg++];
                        }
                        // End type arguments
                        // Start argument checking
                        curarg = 1;
                        setLineNumber(807);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_Function2, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in fold (arg list 1), which corresponds to parameter f, does not have " + 
                                    callmethod(var_Function2, "asString", [0])._value + "."));
                        curarg++;
                        setLineNumber(808);    // compilenode identifier
                        if (!Grace_isTrue(callmethod(var_T, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in startingWith (arg list 2), which corresponds to parameter initial, does not have " + 
                                    callmethod(var_T, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        setLineNumber(809);    // compilenode identifier
                        var var_value = var_initial;
                        if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                          throw new GraceExceptionPacket(TypeErrorObject,
                              new GraceString("initial value of var 'value' is not of type T"));
                        setLineNumber(811);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1066 = callmethodChecked(this, "children", []);
                        var block1067 = new GraceBlock(this, 811, 1);
                        setLineNumber(0);    // compilenode string
                        var string1070 = new GraceString("aComponent");
                        // call case 6: other requests
                        // call case 5: prelude request
                        var call1072 = callmethodChecked(var_prelude, "VariablePattern", []);
                        var call1073 = callmethodChecked(call1072, "new(1)", [1], string1070);
                        setLineNumber(811);    // compilenode identifier
                        // call case 6: other requests
                        setLineNumber(0);    // compilenode member
                        // call case 5: prelude request
                        var call1075 = callmethodChecked(var_prelude, "AndPattern", []);
                        var call1076 = callmethodChecked(call1075, "new(2)", [2], call1073, var_Component);
                        block1067.pattern = call1076;
                        setLineNumber(811);    // compilenode identifier
                        block1067.paramTypes = [var_Component];
                        block1067.real = function(var_aComponent) {
                          setLineNumber(812);    // compilenode identifier
                          // call case 6: other requests
                          var call1078 = callmethodChecked(var_f, "apply(2)", [2], var_value, var_aComponent);
                          var_value = call1078;
                          return GraceDone;
                        };
                        // call case 5: prelude request
                        var call1079 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1066, block1067);
                        setLineNumber(815);    // return value
                        if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method fold(_)startingWith(_) does not have " + 
                                    callmethod(var_T, "asString", [0])._value + "."));
                        return var_value;
                      };
                      func1063.paramTypes = [];
                      func1063.paramTypes.push([]);
                      func1063.paramTypes.push([]);
                      func1063.paramCounts = [1, 1];
                      obj920.methods["fold(1)startingWith(1)"] = func1063;
                      func1063.definitionLine = 807;
                      func1063.definitionModule = "rtobjectdraw";
                      var func1080 = function(argcv) {    // method flex
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(820);    // compilenode string
                        var string1082 = new GraceString("inline-flex");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1085 = callmethodChecked(this, "element", []);
                        var call1086 = callmethodChecked(call1085, "style", []);
                        var call1087 = callmethodChecked(call1086, "display:=(1)", [1], string1082);
                        setLineNumber(821);    // compilenode string
                        var string1089 = new GraceString("center");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1092 = callmethodChecked(this, "element", []);
                        var call1093 = callmethodChecked(call1092, "style", []);
                        var call1094 = callmethodChecked(call1093, "justifyContent:=(1)", [1], string1089);
                        setLineNumber(822);    // compilenode string
                        var string1096 = new GraceString("row wrap");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1099 = callmethodChecked(this, "element", []);
                        var call1100 = callmethodChecked(call1099, "style", []);
                        var call1101 = callmethodChecked(call1100, "flexFlow:=(1)", [1], string1096);
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1101)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method flex does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1101;
                      };
                      func1080.confidential = true;
                      func1080.paramCounts = [0];
                      obj920.methods["flex"] = func1080;
                      func1080.definitionLine = 819;
                      func1080.definitionModule = "rtobjectdraw";
                      var func1102 = function(argcv) {    // method arrangeHorizontal
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(827);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1104 = callmethodChecked(this, "flex", []);
                        setLineNumber(828);    // compilenode string
                        var string1106 = new GraceString("row");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1109 = callmethodChecked(this, "element", []);
                        var call1110 = callmethodChecked(call1109, "style", []);
                        var call1111 = callmethodChecked(call1110, "flexDirection:=(1)", [1], string1106);
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1111)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method arrangeHorizontal does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1111;
                      };
                      func1102.paramCounts = [0];
                      obj920.methods["arrangeHorizontal"] = func1102;
                      func1102.definitionLine = 826;
                      func1102.definitionModule = "rtobjectdraw";
                      var func1112 = function(argcv) {    // method arrangeVertical
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(833);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1114 = callmethodChecked(this, "flex", []);
                        setLineNumber(834);    // compilenode string
                        var string1116 = new GraceString("column");
                        // call case 6: other requests
                        // call case 6: other requests
                        // call case 4: self request
                        onSelf = true;
                        var call1119 = callmethodChecked(this, "element", []);
                        var call1120 = callmethodChecked(call1119, "style", []);
                        var call1121 = callmethodChecked(call1120, "flexDirection:=(1)", [1], string1116);
                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1121)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method arrangeVertical does not have " + 
                                    callmethod(var_Done, "asString", [0])._value + "."));
                        return call1121;
                      };
                      func1112.paramCounts = [0];
                      obj920.methods["arrangeVertical"] = func1112;
                      func1112.definitionLine = 832;
                      func1112.definitionModule = "rtobjectdraw";
                      var func1122 = function(argcv) {    // method asString
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        setModuleName("rtobjectdraw");
                        setLineNumber(839);    // compilenode string
                        var string1123 = new GraceString(" children");
                        // call case 4: self request
                        onSelf = true;
                        var call1126 = callmethodChecked(this, "size", []);
                        var string1128 = new GraceString("container: with ");
                        var opresult1130 = callmethodChecked(string1128, "++(1)", [1], call1126);
                        var opresult1132 = callmethodChecked(opresult1130, "++(1)", [1], string1123);
                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1132)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method asString does not have " + 
                                    callmethod(var_String, "asString", [0])._value + "."));
                        return opresult1132;
                      };
                      func1122.paramCounts = [0];
                      obj920.methods["asString"] = func1122;
                      func1122.definitionLine = 838;
                      func1122.definitionModule = "rtobjectdraw";
                      setLineNumber(736);    // compilenode identifier
                      // call case 6: other requests
                      setLineNumber(0);    // compilenode member
                      // call case 3: self.outer request
                      var call1135 = callmethodChecked(superDepth, "outer", [0]);
                      onSelf = true;
                      var call1136 = callmethodChecked(call1135, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                      obj920.superobj = call1136;
                      if (call1136.data) obj920.data = call1136.data;
                      if (call1136.hasOwnProperty('_value'))
                          obj920._value = call1136._value;
                      setLineNumber(738);    // compilenode array
                      var array1137 = new PrimitiveGraceList([]);
                      obj920.data["children"] = array1137;
                      var reader_rtobjectdraw_children1138 = function() {
                        return this.data["children"];
                      };
                      reader_rtobjectdraw_children1138.def = true;
                      reader_rtobjectdraw_children1138.confidential = true;
                      obj920.methods["children"] = reader_rtobjectdraw_children1138;
                      superDepth = origSuperDepth;
                    };
                    obj_init_920.apply(obj920, []);
                    setLineNumber(735);    // return value
                    if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], obj920)))
                        throw new GraceExceptionPacket(TypeErrorObject,
                            new GraceString("result of method containerFromElement(_) does not have " + 
                                callmethod(var_Container, "asString", [0])._value + "."));
                    return obj920;
                  };
                  func919.paramCounts = [1];
                  this.methods["containerFromElement(1)"] = func919;
                  func919.definitionLine = 735;
                  func919.definitionModule = "rtobjectdraw";
                    var func1139 = function(argcv) {    // method containerFromElement(_)$object(_)
                      var curarg = 1;
                      var var_element__39__ = arguments[curarg];
                      curarg++;
                      var inheritingObject = arguments[curarg++];
                      // Start argument processing
                      curarg = 1;
                      curarg++;
                      // End argument processing
                      setModuleName("rtobjectdraw");
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var obj1140 = Grace_allocObject(null, "containerFromElement(1)");
                      obj1140.definitionModule = "rtobjectdraw";
                      obj1140.definitionLine = 735;
                      var inho1140 = inheritingObject;
                      while (inho1140.superobj) inho1140 = inho1140.superobj;
                      inho1140.superobj = obj1140;
                      obj1140.data = inheritingObject.data;
                      if (inheritingObject.hasOwnProperty('_value'))
                        obj1140._value = inheritingObject._value;
                      obj1140.outer = this;
                      var reader_rtobjectdraw_outer1141 = function() {
                        return this.outer;
                      };
                      obj1140.methods["outer"] = reader_rtobjectdraw_outer1141;
                      var obj_init_1140 = function() {
                        var origSuperDepth = superDepth;
                        superDepth = obj1140;
                        var func1142 = function(argcv) {    // method size
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("rtobjectdraw");
                          setLineNumber(742);    // compilenode member
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1145 = callmethodChecked(this, "children", []);
                          var call1146 = callmethodChecked(call1145, "size", []);
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call1146)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method size does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          return call1146;
                        };
                        func1142.paramCounts = [0];
                        obj1140.methods["size"] = func1142;
                        func1142.definitionLine = 741;
                        func1142.definitionModule = "rtobjectdraw";
                        var func1147 = function(argcv) {    // method isEmpty
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("rtobjectdraw");
                          setLineNumber(747);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1150 = callmethodChecked(this, "size", []);
                          var opresult1152 = callmethodChecked(call1150, "==(1)", [1], new GraceNum(0));
                          if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult1152)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method isEmpty does not have " + 
                                      callmethod(var_Boolean, "asString", [0])._value + "."));
                          return opresult1152;
                        };
                        func1147.paramCounts = [0];
                        obj1140.methods["isEmpty"] = func1147;
                        func1147.definitionLine = 746;
                        func1147.definitionModule = "rtobjectdraw";
                        var func1153 = function(argcv) {    // method at(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_index = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(751);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("rtobjectdraw");
                          var if1154 = GraceDone;
                          setLineNumber(752);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1156 = callmethodChecked(this, "size", []);
                          var opresult1159 = callmethodChecked(var_index, ">(1)", [1], call1156);
                          var opresult1163 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                          var opresult1165 = callmethodChecked(opresult1163, "||(1)", [1], opresult1159);
                          if (Grace_isTrue(opresult1165)) {
                            setLineNumber(753);    // compilenode identifier
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 3: self.outer request
                            var call1170 = callmethodChecked(superDepth, "outer", [0]);
                            onSelf = true;
                            var call1171 = callmethodChecked(call1170, "collections", []);
                            var call1172 = callmethodChecked(call1171, "BoundsError", []);
                            var call1173 = callmethodChecked(call1172, "raiseForIndex(1)", [1], var_index);
                            if1154 = call1173;
                          }
                          setLineNumber(756);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1176 = callmethodChecked(this, "children", []);
                          var call1177 = callmethodChecked(call1176, "at(1)", [1], var_index);
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)", [1], call1177)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method at(_) does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          return call1177;
                        };
                        func1153.paramTypes = [];
                        func1153.paramTypes.push([type_Number, "index"]);
                        func1153.paramCounts = [1];
                        obj1140.methods["at(1)"] = func1153;
                        func1153.definitionLine = 751;
                        func1153.definitionModule = "rtobjectdraw";
                        var func1178 = function(argcv) {    // method at(_)put(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_index = arguments[curarg];
                          curarg++;
                          var var_aComponent = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(760);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in at (arg list 1), which corresponds to parameter index, does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in put (arg list 2), which corresponds to parameter aComponent, does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("rtobjectdraw");
                          var if1179 = GraceDone;
                          setLineNumber(761);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1182 = callmethodChecked(this, "size", []);
                          var opresult1184 = callmethodChecked(call1182, "+(1)", [1], new GraceNum(1));
                          var opresult1187 = callmethodChecked(var_index, ">(1)", [1], opresult1184);
                          var opresult1191 = callmethodChecked(var_index, "<(1)", [1], new GraceNum(1));
                          var opresult1193 = callmethodChecked(opresult1191, "||(1)", [1], opresult1187);
                          if (Grace_isTrue(opresult1193)) {
                            setLineNumber(762);    // compilenode identifier
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 3: self.outer request
                            var call1197 = callmethodChecked(superDepth, "outer", [0]);
                            onSelf = true;
                            var call1198 = callmethodChecked(call1197, "BoundsError", []);
                            var call1199 = callmethodChecked(call1198, "raiseForIndex(1)", [1], var_index);
                            if1179 = call1199;
                          }
                          var if1200 = GraceDone;
                          setLineNumber(765);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1203 = callmethodChecked(this, "size", []);
                          var opresult1205 = callmethodChecked(call1203, "+(1)", [1], new GraceNum(1));
                          var opresult1208 = callmethodChecked(var_index, "==(1)", [1], opresult1205);
                          if (Grace_isTrue(opresult1208)) {
                            setLineNumber(766);    // compilenode member
                            // call case 6: other requests
                            var call1211 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1213 = callmethodChecked(this, "element", []);
                            var call1214 = callmethodChecked(call1213, "appendChild(1)", [1], call1211);
                            if1200 = call1214;
                          } else {
                            setLineNumber(768);    // compilenode member
                            // call case 6: other requests
                            var call1217 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1221 = callmethodChecked(this, "children", []);
                            var call1222 = callmethodChecked(call1221, "at(1)", [1], var_index);
                            var call1223 = callmethodChecked(call1222, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1225 = callmethodChecked(this, "element", []);
                            var call1226 = callmethodChecked(call1225, "insertBefore(2)", [2], call1217, call1223);
                            if1200 = call1226;
                          }
                          setLineNumber(771);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1229 = callmethodChecked(this, "children", []);
                          var call1230 = callmethodChecked(call1229, "at(1)put(1)", [1, 1], var_index, var_aComponent);
                          setLineNumber(773);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method at(_)put(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return var_done;
                        };
                        func1178.paramTypes = [];
                        func1178.paramTypes.push([type_Number, "index"]);
                        func1178.paramTypes.push([]);
                        func1178.paramCounts = [1, 1];
                        obj1140.methods["at(1)put(1)"] = func1178;
                        func1178.definitionLine = 760;
                        func1178.definitionModule = "rtobjectdraw";
                        var func1231 = function(argcv) {    // method append(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_aComponent = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(777);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("rtobjectdraw");
                          setLineNumber(778);    // compilenode member
                          // call case 6: other requests
                          var call1234 = callmethodChecked(var_aComponent, "element", []);
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1236 = callmethodChecked(this, "element", []);
                          var call1237 = callmethodChecked(call1236, "appendChild(1)", [1], call1234);
                          setLineNumber(780);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1240 = callmethodChecked(this, "children", []);
                          var call1241 = callmethodChecked(call1240, "push(1)", [1], var_aComponent);
                          setLineNumber(782);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method append(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return var_done;
                        };
                        func1231.paramTypes = [];
                        func1231.paramTypes.push([]);
                        func1231.paramCounts = [1];
                        obj1140.methods["append(1)"] = func1231;
                        func1231.definitionLine = 777;
                        func1231.definitionModule = "rtobjectdraw";
                        var func1242 = function(argcv) {    // method prepend(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_aComponent = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(786);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                      callmethod(var_Component, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("rtobjectdraw");
                          var if1243 = GraceDone;
                          setLineNumber(787);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1245 = callmethodChecked(this, "isEmpty", []);
                          if (Grace_isTrue(call1245)) {
                            setLineNumber(788);    // compilenode member
                            // call case 6: other requests
                            var call1248 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1250 = callmethodChecked(this, "element", []);
                            var call1251 = callmethodChecked(call1250, "appendChild(1)", [1], call1248);
                            if1243 = call1251;
                          } else {
                            setLineNumber(790);    // compilenode member
                            // call case 6: other requests
                            var call1254 = callmethodChecked(var_aComponent, "element", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1257 = callmethodChecked(this, "element", []);
                            var call1258 = callmethodChecked(call1257, "firstChild", []);
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1260 = callmethodChecked(this, "element", []);
                            var call1261 = callmethodChecked(call1260, "insertBefore(2)", [2], call1254, call1258);
                            if1243 = call1261;
                          }
                          setLineNumber(793);    // compilenode identifier
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1264 = callmethodChecked(this, "children", []);
                          var call1265 = callmethodChecked(call1264, "unshift(1)", [1], var_aComponent);
                          setLineNumber(795);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method prepend(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return var_done;
                        };
                        func1242.paramTypes = [];
                        func1242.paramTypes.push([]);
                        func1242.paramCounts = [1];
                        obj1140.methods["prepend(1)"] = func1242;
                        func1242.definitionLine = 786;
                        func1242.definitionModule = "rtobjectdraw";
                        var func1266 = function(argcv) {    // method do(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_f = arguments[curarg];
                          curarg++;
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(799);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in do (arg list 1), which corresponds to parameter f, does not have " + 
                                      callmethod(var_Procedure, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("rtobjectdraw");
                          setLineNumber(800);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1269 = callmethodChecked(this, "children", []);
                          var block1270 = new GraceBlock(this, 800, 1);
                          setLineNumber(0);    // compilenode string
                          var string1273 = new GraceString("aComponent");
                          // call case 6: other requests
                          // call case 5: prelude request
                          var call1275 = callmethodChecked(var_prelude, "VariablePattern", []);
                          var call1276 = callmethodChecked(call1275, "new(1)", [1], string1273);
                          setLineNumber(800);    // compilenode identifier
                          // call case 6: other requests
                          setLineNumber(0);    // compilenode member
                          // call case 5: prelude request
                          var call1278 = callmethodChecked(var_prelude, "AndPattern", []);
                          var call1279 = callmethodChecked(call1278, "new(2)", [2], call1276, var_Component);
                          block1270.pattern = call1279;
                          setLineNumber(800);    // compilenode identifier
                          block1270.paramTypes = [var_Component];
                          block1270.real = function(var_aComponent) {
                            setLineNumber(801);    // compilenode identifier
                            // call case 6: other requests
                            var call1281 = callmethodChecked(var_f, "apply(1)", [1], var_aComponent);
                            return call1281;
                          };
                          // call case 5: prelude request
                          var call1282 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1269, block1270);
                          setLineNumber(800);    // return value
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1282)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method do(_) does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1282;
                        };
                        func1266.paramCounts = [1];
                        obj1140.methods["do(1)"] = func1266;
                        func1266.definitionLine = 799;
                        func1266.definitionModule = "rtobjectdraw";
                        var func1283 = function(argcv) {    // method fold(_)startingWith(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_f = arguments[curarg];
                          curarg++;
                          var var_initial = arguments[curarg];
                          curarg++;
                          // Start type arguments
                          var var_T = var_Unknown;
                          if (argcv.length == 3) {
                            if (argcv[2] !== 1) {
                              throw new GraceExceptionPacket(ProgrammingErrorObject, 
                                  new GraceString("wrong number of type arguments for fold(_)startingWith(_)"));
                            }
                            var_T = arguments[curarg++];
                          }
                          // End type arguments
                          // Start argument checking
                          curarg = 1;
                          setLineNumber(807);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_Function2, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in fold (arg list 1), which corresponds to parameter f, does not have " + 
                                      callmethod(var_Function2, "asString", [0])._value + "."));
                          curarg++;
                          setLineNumber(808);    // compilenode identifier
                          if (!Grace_isTrue(callmethod(var_T, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in startingWith (arg list 2), which corresponds to parameter initial, does not have " + 
                                      callmethod(var_T, "asString", [0])._value + "."));
                          curarg++;
                          // End argument checking
                          setModuleName("rtobjectdraw");
                          setLineNumber(809);    // compilenode identifier
                          var var_value = var_initial;
                          if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("initial value of var 'value' is not of type T"));
                          setLineNumber(811);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1286 = callmethodChecked(this, "children", []);
                          var block1287 = new GraceBlock(this, 811, 1);
                          setLineNumber(0);    // compilenode string
                          var string1290 = new GraceString("aComponent");
                          // call case 6: other requests
                          // call case 5: prelude request
                          var call1292 = callmethodChecked(var_prelude, "VariablePattern", []);
                          var call1293 = callmethodChecked(call1292, "new(1)", [1], string1290);
                          setLineNumber(811);    // compilenode identifier
                          // call case 6: other requests
                          setLineNumber(0);    // compilenode member
                          // call case 5: prelude request
                          var call1295 = callmethodChecked(var_prelude, "AndPattern", []);
                          var call1296 = callmethodChecked(call1295, "new(2)", [2], call1293, var_Component);
                          block1287.pattern = call1296;
                          setLineNumber(811);    // compilenode identifier
                          block1287.paramTypes = [var_Component];
                          block1287.real = function(var_aComponent) {
                            setLineNumber(812);    // compilenode identifier
                            // call case 6: other requests
                            var call1298 = callmethodChecked(var_f, "apply(2)", [2], var_value, var_aComponent);
                            var_value = call1298;
                            return GraceDone;
                          };
                          // call case 5: prelude request
                          var call1299 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call1286, block1287);
                          setLineNumber(815);    // return value
                          if (!Grace_isTrue(callmethod(var_T, "match(1)", [1], var_value)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method fold(_)startingWith(_) does not have " + 
                                      callmethod(var_T, "asString", [0])._value + "."));
                          return var_value;
                        };
                        func1283.paramTypes = [];
                        func1283.paramTypes.push([]);
                        func1283.paramTypes.push([]);
                        func1283.paramCounts = [1, 1];
                        obj1140.methods["fold(1)startingWith(1)"] = func1283;
                        func1283.definitionLine = 807;
                        func1283.definitionModule = "rtobjectdraw";
                        var func1300 = function(argcv) {    // method flex
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("rtobjectdraw");
                          setLineNumber(820);    // compilenode string
                          var string1302 = new GraceString("inline-flex");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1305 = callmethodChecked(this, "element", []);
                          var call1306 = callmethodChecked(call1305, "style", []);
                          var call1307 = callmethodChecked(call1306, "display:=(1)", [1], string1302);
                          setLineNumber(821);    // compilenode string
                          var string1309 = new GraceString("center");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1312 = callmethodChecked(this, "element", []);
                          var call1313 = callmethodChecked(call1312, "style", []);
                          var call1314 = callmethodChecked(call1313, "justifyContent:=(1)", [1], string1309);
                          setLineNumber(822);    // compilenode string
                          var string1316 = new GraceString("row wrap");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1319 = callmethodChecked(this, "element", []);
                          var call1320 = callmethodChecked(call1319, "style", []);
                          var call1321 = callmethodChecked(call1320, "flexFlow:=(1)", [1], string1316);
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1321)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method flex does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1321;
                        };
                        func1300.confidential = true;
                        func1300.paramCounts = [0];
                        obj1140.methods["flex"] = func1300;
                        func1300.definitionLine = 819;
                        func1300.definitionModule = "rtobjectdraw";
                        var func1322 = function(argcv) {    // method arrangeHorizontal
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("rtobjectdraw");
                          setLineNumber(827);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1324 = callmethodChecked(this, "flex", []);
                          setLineNumber(828);    // compilenode string
                          var string1326 = new GraceString("row");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1329 = callmethodChecked(this, "element", []);
                          var call1330 = callmethodChecked(call1329, "style", []);
                          var call1331 = callmethodChecked(call1330, "flexDirection:=(1)", [1], string1326);
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1331)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method arrangeHorizontal does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1331;
                        };
                        func1322.paramCounts = [0];
                        obj1140.methods["arrangeHorizontal"] = func1322;
                        func1322.definitionLine = 826;
                        func1322.definitionModule = "rtobjectdraw";
                        var func1332 = function(argcv) {    // method arrangeVertical
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("rtobjectdraw");
                          setLineNumber(833);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1334 = callmethodChecked(this, "flex", []);
                          setLineNumber(834);    // compilenode string
                          var string1336 = new GraceString("column");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1339 = callmethodChecked(this, "element", []);
                          var call1340 = callmethodChecked(call1339, "style", []);
                          var call1341 = callmethodChecked(call1340, "flexDirection:=(1)", [1], string1336);
                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1341)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method arrangeVertical does not have " + 
                                      callmethod(var_Done, "asString", [0])._value + "."));
                          return call1341;
                        };
                        func1332.paramCounts = [0];
                        obj1140.methods["arrangeVertical"] = func1332;
                        func1332.definitionLine = 832;
                        func1332.definitionModule = "rtobjectdraw";
                        var func1342 = function(argcv) {    // method asString
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          setModuleName("rtobjectdraw");
                          setLineNumber(839);    // compilenode string
                          var string1343 = new GraceString(" children");
                          // call case 4: self request
                          onSelf = true;
                          var call1346 = callmethodChecked(this, "size", []);
                          var string1348 = new GraceString("container: with ");
                          var opresult1350 = callmethodChecked(string1348, "++(1)", [1], call1346);
                          var opresult1352 = callmethodChecked(opresult1350, "++(1)", [1], string1343);
                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1352)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method asString does not have " + 
                                      callmethod(var_String, "asString", [0])._value + "."));
                          return opresult1352;
                        };
                        func1342.paramCounts = [0];
                        obj1140.methods["asString"] = func1342;
                        func1342.definitionLine = 838;
                        func1342.definitionModule = "rtobjectdraw";
                        setLineNumber(736);    // compilenode identifier
                        // call case 6: other requests
                        setLineNumber(0);    // compilenode member
                        // call case 3: self.outer request
                        var call1355 = callmethodChecked(superDepth, "outer", [0]);
                        onSelf = true;
                        var call1356 = callmethodChecked(call1355, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                        obj1140.superobj = call1356;
                        if (call1356.data) obj1140.data = call1356.data;
                        if (call1356.hasOwnProperty('_value'))
                            obj1140._value = call1356._value;
                        setLineNumber(738);    // compilenode array
                        var array1357 = new PrimitiveGraceList([]);
                        obj1140.data["children"] = array1357;
                        var reader_rtobjectdraw_children1358 = function() {
                          return this.data["children"];
                        };
                        reader_rtobjectdraw_children1358.def = true;
                        reader_rtobjectdraw_children1358.confidential = true;
                        obj1140.methods["children"] = reader_rtobjectdraw_children1358;
                        superDepth = origSuperDepth;
                      };
                      obj_init_1140.apply(inheritingObject, []);
                      return obj1140;
                      };
                      this.methods["containerFromElement(1)$object(1)"] = func1139;
                    setLineNumber(844);    // compilenode method
                    var func1359 = function(argcv) {    // method emptyContainer
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var curarg = 1;
                      setModuleName("rtobjectdraw");
                      var obj1360 = Grace_allocObject(null, "emptyContainer");
                      obj1360.definitionModule = "rtobjectdraw";
                      obj1360.definitionLine = 844;
                      obj1360.outer = this;
                      var reader_rtobjectdraw_outer1361 = function() {
                        return this.outer;
                      };
                      obj1360.methods["outer"] = reader_rtobjectdraw_outer1361;
                      var obj_init_1360 = function() {
                        var origSuperDepth = superDepth;
                        superDepth = obj1360;
                        setLineNumber(845);    // compilenode string
                        var string1363 = new GraceString("div");
                        setLineNumber(0);    // compilenode identifier
                        // call case 6: other requests
                        // call case 3: self.outer request
                        var call1365 = callmethodChecked(superDepth, "outer", [0]);
                        onSelf = true;
                        var call1366 = callmethodChecked(call1365, "containerOfElementType(1)$object(1)", [1, 1], string1363, this);
                        obj1360.superobj = call1366;
                        if (call1366.data) obj1360.data = call1366.data;
                        if (call1366.hasOwnProperty('_value'))
                            obj1360._value = call1366._value;
                        setLineNumber(847);    // compilenode member
                        // call case 4: self request
                        onSelf = true;
                        var call1368 = callmethodChecked(this, "arrangeHorizontal", []);
                        superDepth = origSuperDepth;
                      };
                      obj_init_1360.apply(obj1360, []);
                      setLineNumber(844);    // return value
                      if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], obj1360)))
                          throw new GraceExceptionPacket(TypeErrorObject,
                              new GraceString("result of method emptyContainer does not have " + 
                                  callmethod(var_Container, "asString", [0])._value + "."));
                      return obj1360;
                    };
                    func1359.paramCounts = [0];
                    this.methods["emptyContainer"] = func1359;
                    func1359.definitionLine = 844;
                    func1359.definitionModule = "rtobjectdraw";
                      var func1369 = function(argcv) {    // method emptyContainer$object(_)
                        var curarg = 1;
                        var inheritingObject = arguments[curarg++];
                        // Start argument processing
                        curarg = 1;
                        // End argument processing
                        setModuleName("rtobjectdraw");
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var obj1370 = Grace_allocObject(null, "emptyContainer");
                        obj1370.definitionModule = "rtobjectdraw";
                        obj1370.definitionLine = 844;
                        var inho1370 = inheritingObject;
                        while (inho1370.superobj) inho1370 = inho1370.superobj;
                        inho1370.superobj = obj1370;
                        obj1370.data = inheritingObject.data;
                        if (inheritingObject.hasOwnProperty('_value'))
                          obj1370._value = inheritingObject._value;
                        obj1370.outer = this;
                        var reader_rtobjectdraw_outer1371 = function() {
                          return this.outer;
                        };
                        obj1370.methods["outer"] = reader_rtobjectdraw_outer1371;
                        var obj_init_1370 = function() {
                          var origSuperDepth = superDepth;
                          superDepth = obj1370;
                          setLineNumber(845);    // compilenode string
                          var string1373 = new GraceString("div");
                          setLineNumber(0);    // compilenode identifier
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call1375 = callmethodChecked(superDepth, "outer", [0]);
                          onSelf = true;
                          var call1376 = callmethodChecked(call1375, "containerOfElementType(1)$object(1)", [1, 1], string1373, this);
                          obj1370.superobj = call1376;
                          if (call1376.data) obj1370.data = call1376.data;
                          if (call1376.hasOwnProperty('_value'))
                              obj1370._value = call1376._value;
                          setLineNumber(847);    // compilenode member
                          // call case 4: self request
                          onSelf = true;
                          var call1378 = callmethodChecked(this, "arrangeHorizontal", []);
                          superDepth = origSuperDepth;
                        };
                        obj_init_1370.apply(inheritingObject, []);
                        return obj1370;
                        };
                        this.methods["emptyContainer$object(1)"] = func1369;
                      setLineNumber(851);    // compilenode method
                      var func1379 = function(argcv) {    // method containerSize(_,_)
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        var var_width__39__ = arguments[curarg];
                        curarg++;
                        var var_height__39__ = arguments[curarg];
                        curarg++;
                        // Start argument checking
                        curarg = 1;
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 1 in containerSize (arg list 1), which corresponds to parameter width', does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("argument 2 in containerSize (arg list 1), which corresponds to parameter height', does not have " + 
                                    callmethod(var_Number, "asString", [0])._value + "."));
                        curarg++;
                        // End argument checking
                        setModuleName("rtobjectdraw");
                        var obj1380 = Grace_allocObject(null, "containerSize(_,_)");
                        obj1380.definitionModule = "rtobjectdraw";
                        obj1380.definitionLine = 851;
                        obj1380.outer = this;
                        var reader_rtobjectdraw_outer1381 = function() {
                          return this.outer;
                        };
                        obj1380.methods["outer"] = reader_rtobjectdraw_outer1381;
                        var obj_init_1380 = function() {
                          var origSuperDepth = superDepth;
                          superDepth = obj1380;
                          setLineNumber(852);    // compilenode identifier
                          // call case 6: other requests
                          // call case 3: self.outer request
                          var call1384 = callmethodChecked(superDepth, "outer", [0]);
                          var call1385 = callmethodChecked(call1384, "emptyContainer$object(1)", [0, 1], this);
                          obj1380.superobj = call1385;
                          if (call1385.data) obj1380.data = call1385.data;
                          if (call1385.hasOwnProperty('_value'))
                              obj1380._value = call1385._value;
                          setLineNumber(854);    // compilenode string
                          var string1387 = new GraceString("px");
                          var string1390 = new GraceString("");
                          var opresult1392 = callmethodChecked(string1390, "++(1)", [1], var_width__39__);
                          var opresult1394 = callmethodChecked(opresult1392, "++(1)", [1], string1387);
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1397 = callmethodChecked(this, "element", []);
                          var call1398 = callmethodChecked(call1397, "style", []);
                          var call1399 = callmethodChecked(call1398, "width:=(1)", [1], opresult1394);
                          setLineNumber(855);    // compilenode string
                          var string1401 = new GraceString("px");
                          var string1404 = new GraceString("");
                          var opresult1406 = callmethodChecked(string1404, "++(1)", [1], var_height__39__);
                          var opresult1408 = callmethodChecked(opresult1406, "++(1)", [1], string1401);
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1411 = callmethodChecked(this, "element", []);
                          var call1412 = callmethodChecked(call1411, "style", []);
                          var call1413 = callmethodChecked(call1412, "height:=(1)", [1], opresult1408);
                          setLineNumber(856);    // compilenode string
                          var string1415 = new GraceString("auto");
                          // call case 6: other requests
                          // call case 6: other requests
                          // call case 4: self request
                          onSelf = true;
                          var call1418 = callmethodChecked(this, "element", []);
                          var call1419 = callmethodChecked(call1418, "style", []);
                          var call1420 = callmethodChecked(call1419, "overflow:=(1)", [1], string1415);
                          superDepth = origSuperDepth;
                        };
                        obj_init_1380.apply(obj1380, []);
                        setLineNumber(851);    // return value
                        if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], obj1380)))
                            throw new GraceExceptionPacket(TypeErrorObject,
                                new GraceString("result of method containerSize(_,_) does not have " + 
                                    callmethod(var_Container, "asString", [0])._value + "."));
                        return obj1380;
                      };
                      func1379.paramTypes = [];
                      func1379.paramTypes.push([type_Number, "width'"]);
                      func1379.paramTypes.push([type_Number, "height'"]);
                      func1379.paramCounts = [2];
                      this.methods["containerSize(2)"] = func1379;
                      func1379.definitionLine = 851;
                      func1379.definitionModule = "rtobjectdraw";
                        var func1421 = function(argcv) {    // method containerSize(_,_)$object(_)
                          var curarg = 1;
                          var var_width__39__ = arguments[curarg];
                          curarg++;
                          var var_height__39__ = arguments[curarg];
                          curarg++;
                          var inheritingObject = arguments[curarg++];
                          // Start argument processing
                          curarg = 1;
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 1 in containerSize (arg list 1), which corresponds to parameter width', does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("argument 2 in containerSize (arg list 1), which corresponds to parameter height', does not have " + 
                                      callmethod(var_Number, "asString", [0])._value + "."));
                          curarg++;
                          // End argument processing
                          setModuleName("rtobjectdraw");
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var obj1422 = Grace_allocObject(null, "containerSize(2)");
                          obj1422.definitionModule = "rtobjectdraw";
                          obj1422.definitionLine = 851;
                          var inho1422 = inheritingObject;
                          while (inho1422.superobj) inho1422 = inho1422.superobj;
                          inho1422.superobj = obj1422;
                          obj1422.data = inheritingObject.data;
                          if (inheritingObject.hasOwnProperty('_value'))
                            obj1422._value = inheritingObject._value;
                          obj1422.outer = this;
                          var reader_rtobjectdraw_outer1423 = function() {
                            return this.outer;
                          };
                          obj1422.methods["outer"] = reader_rtobjectdraw_outer1423;
                          var obj_init_1422 = function() {
                            var origSuperDepth = superDepth;
                            superDepth = obj1422;
                            setLineNumber(852);    // compilenode identifier
                            // call case 6: other requests
                            // call case 3: self.outer request
                            var call1426 = callmethodChecked(superDepth, "outer", [0]);
                            var call1427 = callmethodChecked(call1426, "emptyContainer$object(1)", [0, 1], this);
                            obj1422.superobj = call1427;
                            if (call1427.data) obj1422.data = call1427.data;
                            if (call1427.hasOwnProperty('_value'))
                                obj1422._value = call1427._value;
                            setLineNumber(854);    // compilenode string
                            var string1429 = new GraceString("px");
                            var string1432 = new GraceString("");
                            var opresult1434 = callmethodChecked(string1432, "++(1)", [1], var_width__39__);
                            var opresult1436 = callmethodChecked(opresult1434, "++(1)", [1], string1429);
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1439 = callmethodChecked(this, "element", []);
                            var call1440 = callmethodChecked(call1439, "style", []);
                            var call1441 = callmethodChecked(call1440, "width:=(1)", [1], opresult1436);
                            setLineNumber(855);    // compilenode string
                            var string1443 = new GraceString("px");
                            var string1446 = new GraceString("");
                            var opresult1448 = callmethodChecked(string1446, "++(1)", [1], var_height__39__);
                            var opresult1450 = callmethodChecked(opresult1448, "++(1)", [1], string1443);
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1453 = callmethodChecked(this, "element", []);
                            var call1454 = callmethodChecked(call1453, "style", []);
                            var call1455 = callmethodChecked(call1454, "height:=(1)", [1], opresult1450);
                            setLineNumber(856);    // compilenode string
                            var string1457 = new GraceString("auto");
                            // call case 6: other requests
                            // call case 6: other requests
                            // call case 4: self request
                            onSelf = true;
                            var call1460 = callmethodChecked(this, "element", []);
                            var call1461 = callmethodChecked(call1460, "style", []);
                            var call1462 = callmethodChecked(call1461, "overflow:=(1)", [1], string1457);
                            superDepth = origSuperDepth;
                          };
                          obj_init_1422.apply(inheritingObject, []);
                          return obj1422;
                          };
                          func1421.paramTypes = [];
                          func1421.paramTypes.push([type_Number, "width'"]);
                          func1421.paramTypes.push([type_Number, "height'"]);
                          this.methods["containerSize(2)$object(1)"] = func1421;
                        setLineNumber(861);    // compilenode method
                        var func1463 = function(argcv) {    // method inputFromElement(_)
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          var var_element__39__ = arguments[curarg];
                          curarg++;
                          setModuleName("rtobjectdraw");
                          var obj1464 = Grace_allocObject(null, "inputFromElement(_)");
                          obj1464.definitionModule = "rtobjectdraw";
                          obj1464.definitionLine = 861;
                          obj1464.outer = this;
                          var reader_rtobjectdraw_outer1465 = function() {
                            return this.outer;
                          };
                          obj1464.methods["outer"] = reader_rtobjectdraw_outer1465;
                          var obj_init_1464 = function() {
                            var origSuperDepth = superDepth;
                            superDepth = obj1464;
                            var func1466 = function(argcv) {    // method onFocusDo(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_f = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              setLineNumber(865);    // compilenode identifier
                              if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in onFocusDo (arg list 1), which corresponds to parameter f, does not have " + 
                                          callmethod(var_Response, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("rtobjectdraw");
                              setLineNumber(866);    // compilenode string
                              var string1468 = new GraceString("focus");
                              var block1469 = new GraceBlock(this, 866, 1);
                              setLineNumber(1);    // compilenode identifier
                              block1469.real = function(var___95____95__21) {
                                setLineNumber(867);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1473 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1474 = callmethodChecked(call1473, "eventSource(1)", [1], this);
                                // call case 6: other requests
                                var call1475 = callmethodChecked(var_f, "apply(1)", [1], call1474);
                                return call1475;
                              };
                              // call case 6: other requests
                              setLineNumber(866);    // compilenode member
                              // call case 4: self request
                              onSelf = true;
                              var call1477 = callmethodChecked(this, "element", []);
                              var call1478 = callmethodChecked(call1477, "addEventListener(2)", [2], string1468, block1469);
                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1478)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method onFocusDo(_) does not have " + 
                                          callmethod(var_Done, "asString", [0])._value + "."));
                              return call1478;
                            };
                            func1466.paramTypes = [];
                            func1466.paramTypes.push([]);
                            func1466.paramCounts = [1];
                            obj1464.methods["onFocusDo(1)"] = func1466;
                            func1466.definitionLine = 865;
                            func1466.definitionModule = "rtobjectdraw";
                            var func1479 = function(argcv) {    // method onBlurDo(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_f = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              setLineNumber(872);    // compilenode identifier
                              if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in onBlurDo (arg list 1), which corresponds to parameter f, does not have " + 
                                          callmethod(var_Response, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("rtobjectdraw");
                              setLineNumber(873);    // compilenode string
                              var string1481 = new GraceString("blur");
                              var block1482 = new GraceBlock(this, 873, 1);
                              setLineNumber(1);    // compilenode identifier
                              block1482.real = function(var___95____95__22) {
                                setLineNumber(874);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1486 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1487 = callmethodChecked(call1486, "eventSource(1)", [1], this);
                                // call case 6: other requests
                                var call1488 = callmethodChecked(var_f, "apply(1)", [1], call1487);
                                return call1488;
                              };
                              // call case 6: other requests
                              setLineNumber(873);    // compilenode member
                              // call case 4: self request
                              onSelf = true;
                              var call1490 = callmethodChecked(this, "element", []);
                              var call1491 = callmethodChecked(call1490, "addEventListener(2)", [2], string1481, block1482);
                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1491)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method onBlurDo(_) does not have " + 
                                          callmethod(var_Done, "asString", [0])._value + "."));
                              return call1491;
                            };
                            func1479.paramTypes = [];
                            func1479.paramTypes.push([]);
                            func1479.paramCounts = [1];
                            obj1464.methods["onBlurDo(1)"] = func1479;
                            func1479.definitionLine = 872;
                            func1479.definitionModule = "rtobjectdraw";
                            var func1492 = function(argcv) {    // method onChangeDo(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_f = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              setLineNumber(879);    // compilenode identifier
                              if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in onChangeDo (arg list 1), which corresponds to parameter f, does not have " + 
                                          callmethod(var_Response, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("rtobjectdraw");
                              setLineNumber(880);    // compilenode string
                              var string1494 = new GraceString("change");
                              var block1495 = new GraceBlock(this, 880, 1);
                              setLineNumber(1);    // compilenode identifier
                              block1495.real = function(var___95____95__23) {
                                setLineNumber(881);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1499 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1500 = callmethodChecked(call1499, "eventSource(1)", [1], this);
                                // call case 6: other requests
                                var call1501 = callmethodChecked(var_f, "apply(1)", [1], call1500);
                                return call1501;
                              };
                              // call case 6: other requests
                              setLineNumber(880);    // compilenode member
                              // call case 4: self request
                              onSelf = true;
                              var call1503 = callmethodChecked(this, "element", []);
                              var call1504 = callmethodChecked(call1503, "addEventListener(2)", [2], string1494, block1495);
                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1504)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method onChangeDo(_) does not have " + 
                                          callmethod(var_Done, "asString", [0])._value + "."));
                              return call1504;
                            };
                            func1492.paramTypes = [];
                            func1492.paramTypes.push([]);
                            func1492.paramCounts = [1];
                            obj1464.methods["onChangeDo(1)"] = func1492;
                            func1492.definitionLine = 879;
                            func1492.definitionModule = "rtobjectdraw";
                            var func1505 = function(argcv) {    // method asString
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              setModuleName("rtobjectdraw");
                              setLineNumber(887);    // compilenode string
                              var string1506 = new GraceString("an input");
                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string1506)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method asString does not have " + 
                                          callmethod(var_String, "asString", [0])._value + "."));
                              return string1506;
                            };
                            func1505.paramCounts = [0];
                            obj1464.methods["asString"] = func1505;
                            func1505.definitionLine = 886;
                            func1505.definitionModule = "rtobjectdraw";
                            setLineNumber(862);    // compilenode identifier
                            // call case 6: other requests
                            setLineNumber(0);    // compilenode member
                            // call case 3: self.outer request
                            var call1509 = callmethodChecked(superDepth, "outer", [0]);
                            onSelf = true;
                            var call1510 = callmethodChecked(call1509, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                            obj1464.superobj = call1510;
                            if (call1510.data) obj1464.data = call1510.data;
                            if (call1510.hasOwnProperty('_value'))
                                obj1464._value = call1510._value;
                            superDepth = origSuperDepth;
                          };
                          obj_init_1464.apply(obj1464, []);
                          setLineNumber(861);    // return value
                          if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1464)))
                              throw new GraceExceptionPacket(TypeErrorObject,
                                  new GraceString("result of method inputFromElement(_) does not have " + 
                                      callmethod(var_Input, "asString", [0])._value + "."));
                          return obj1464;
                        };
                        func1463.paramCounts = [1];
                        this.methods["inputFromElement(1)"] = func1463;
                        func1463.definitionLine = 861;
                        func1463.definitionModule = "rtobjectdraw";
                          var func1511 = function(argcv) {    // method inputFromElement(_)$object(_)
                            var curarg = 1;
                            var var_element__39__ = arguments[curarg];
                            curarg++;
                            var inheritingObject = arguments[curarg++];
                            // Start argument processing
                            curarg = 1;
                            curarg++;
                            // End argument processing
                            setModuleName("rtobjectdraw");
                            var returnTarget = invocationCount;
                            invocationCount++;
                            var obj1512 = Grace_allocObject(null, "inputFromElement(1)");
                            obj1512.definitionModule = "rtobjectdraw";
                            obj1512.definitionLine = 861;
                            var inho1512 = inheritingObject;
                            while (inho1512.superobj) inho1512 = inho1512.superobj;
                            inho1512.superobj = obj1512;
                            obj1512.data = inheritingObject.data;
                            if (inheritingObject.hasOwnProperty('_value'))
                              obj1512._value = inheritingObject._value;
                            obj1512.outer = this;
                            var reader_rtobjectdraw_outer1513 = function() {
                              return this.outer;
                            };
                            obj1512.methods["outer"] = reader_rtobjectdraw_outer1513;
                            var obj_init_1512 = function() {
                              var origSuperDepth = superDepth;
                              superDepth = obj1512;
                              var func1514 = function(argcv) {    // method onFocusDo(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_f = arguments[curarg];
                                curarg++;
                                // Start argument checking
                                curarg = 1;
                                setLineNumber(865);    // compilenode identifier
                                if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in onFocusDo (arg list 1), which corresponds to parameter f, does not have " + 
                                            callmethod(var_Response, "asString", [0])._value + "."));
                                curarg++;
                                // End argument checking
                                setModuleName("rtobjectdraw");
                                setLineNumber(866);    // compilenode string
                                var string1516 = new GraceString("focus");
                                var block1517 = new GraceBlock(this, 866, 1);
                                setLineNumber(1);    // compilenode identifier
                                block1517.real = function(var___95____95__21) {
                                  setLineNumber(867);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1521 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1522 = callmethodChecked(call1521, "eventSource(1)", [1], this);
                                  // call case 6: other requests
                                  var call1523 = callmethodChecked(var_f, "apply(1)", [1], call1522);
                                  return call1523;
                                };
                                // call case 6: other requests
                                setLineNumber(866);    // compilenode member
                                // call case 4: self request
                                onSelf = true;
                                var call1525 = callmethodChecked(this, "element", []);
                                var call1526 = callmethodChecked(call1525, "addEventListener(2)", [2], string1516, block1517);
                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1526)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method onFocusDo(_) does not have " + 
                                            callmethod(var_Done, "asString", [0])._value + "."));
                                return call1526;
                              };
                              func1514.paramTypes = [];
                              func1514.paramTypes.push([]);
                              func1514.paramCounts = [1];
                              obj1512.methods["onFocusDo(1)"] = func1514;
                              func1514.definitionLine = 865;
                              func1514.definitionModule = "rtobjectdraw";
                              var func1527 = function(argcv) {    // method onBlurDo(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_f = arguments[curarg];
                                curarg++;
                                // Start argument checking
                                curarg = 1;
                                setLineNumber(872);    // compilenode identifier
                                if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in onBlurDo (arg list 1), which corresponds to parameter f, does not have " + 
                                            callmethod(var_Response, "asString", [0])._value + "."));
                                curarg++;
                                // End argument checking
                                setModuleName("rtobjectdraw");
                                setLineNumber(873);    // compilenode string
                                var string1529 = new GraceString("blur");
                                var block1530 = new GraceBlock(this, 873, 1);
                                setLineNumber(1);    // compilenode identifier
                                block1530.real = function(var___95____95__22) {
                                  setLineNumber(874);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1534 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1535 = callmethodChecked(call1534, "eventSource(1)", [1], this);
                                  // call case 6: other requests
                                  var call1536 = callmethodChecked(var_f, "apply(1)", [1], call1535);
                                  return call1536;
                                };
                                // call case 6: other requests
                                setLineNumber(873);    // compilenode member
                                // call case 4: self request
                                onSelf = true;
                                var call1538 = callmethodChecked(this, "element", []);
                                var call1539 = callmethodChecked(call1538, "addEventListener(2)", [2], string1529, block1530);
                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1539)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method onBlurDo(_) does not have " + 
                                            callmethod(var_Done, "asString", [0])._value + "."));
                                return call1539;
                              };
                              func1527.paramTypes = [];
                              func1527.paramTypes.push([]);
                              func1527.paramCounts = [1];
                              obj1512.methods["onBlurDo(1)"] = func1527;
                              func1527.definitionLine = 872;
                              func1527.definitionModule = "rtobjectdraw";
                              var func1540 = function(argcv) {    // method onChangeDo(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_f = arguments[curarg];
                                curarg++;
                                // Start argument checking
                                curarg = 1;
                                setLineNumber(879);    // compilenode identifier
                                if (!Grace_isTrue(callmethod(var_Response, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in onChangeDo (arg list 1), which corresponds to parameter f, does not have " + 
                                            callmethod(var_Response, "asString", [0])._value + "."));
                                curarg++;
                                // End argument checking
                                setModuleName("rtobjectdraw");
                                setLineNumber(880);    // compilenode string
                                var string1542 = new GraceString("change");
                                var block1543 = new GraceBlock(this, 880, 1);
                                setLineNumber(1);    // compilenode identifier
                                block1543.real = function(var___95____95__23) {
                                  setLineNumber(881);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1547 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1548 = callmethodChecked(call1547, "eventSource(1)", [1], this);
                                  // call case 6: other requests
                                  var call1549 = callmethodChecked(var_f, "apply(1)", [1], call1548);
                                  return call1549;
                                };
                                // call case 6: other requests
                                setLineNumber(880);    // compilenode member
                                // call case 4: self request
                                onSelf = true;
                                var call1551 = callmethodChecked(this, "element", []);
                                var call1552 = callmethodChecked(call1551, "addEventListener(2)", [2], string1542, block1543);
                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1552)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method onChangeDo(_) does not have " + 
                                            callmethod(var_Done, "asString", [0])._value + "."));
                                return call1552;
                              };
                              func1540.paramTypes = [];
                              func1540.paramTypes.push([]);
                              func1540.paramCounts = [1];
                              obj1512.methods["onChangeDo(1)"] = func1540;
                              func1540.definitionLine = 879;
                              func1540.definitionModule = "rtobjectdraw";
                              var func1553 = function(argcv) {    // method asString
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                setModuleName("rtobjectdraw");
                                setLineNumber(887);    // compilenode string
                                var string1554 = new GraceString("an input");
                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string1554)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method asString does not have " + 
                                            callmethod(var_String, "asString", [0])._value + "."));
                                return string1554;
                              };
                              func1553.paramCounts = [0];
                              obj1512.methods["asString"] = func1553;
                              func1553.definitionLine = 886;
                              func1553.definitionModule = "rtobjectdraw";
                              setLineNumber(862);    // compilenode identifier
                              // call case 6: other requests
                              setLineNumber(0);    // compilenode member
                              // call case 3: self.outer request
                              var call1557 = callmethodChecked(superDepth, "outer", [0]);
                              onSelf = true;
                              var call1558 = callmethodChecked(call1557, "componentFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                              obj1512.superobj = call1558;
                              if (call1558.data) obj1512.data = call1558.data;
                              if (call1558.hasOwnProperty('_value'))
                                  obj1512._value = call1558._value;
                              superDepth = origSuperDepth;
                            };
                            obj_init_1512.apply(inheritingObject, []);
                            return obj1512;
                            };
                            this.methods["inputFromElement(1)$object(1)"] = func1511;
                          setLineNumber(892);    // compilenode method
                          var func1559 = function(argcv) {    // method inputOfElementType(_)
                            var returnTarget = invocationCount;
                            invocationCount++;
                            var curarg = 1;
                            var var_elementType = arguments[curarg];
                            curarg++;
                            // Start argument checking
                            curarg = 1;
                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                throw new GraceExceptionPacket(TypeErrorObject,
                                    new GraceString("argument 1 in inputOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                        callmethod(var_String, "asString", [0])._value + "."));
                            curarg++;
                            // End argument checking
                            setModuleName("rtobjectdraw");
                            var obj1560 = Grace_allocObject(null, "inputOfElementType(_)");
                            obj1560.definitionModule = "rtobjectdraw";
                            obj1560.definitionLine = 892;
                            obj1560.outer = this;
                            var reader_rtobjectdraw_outer1561 = function() {
                              return this.outer;
                            };
                            obj1560.methods["outer"] = reader_rtobjectdraw_outer1561;
                            var obj_init_1560 = function() {
                              var origSuperDepth = superDepth;
                              superDepth = obj1560;
                              setLineNumber(893);    // compilenode identifier
                              // call case 6: other requests
                              var call1564 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                              // call case 6: other requests
                              setLineNumber(0);    // compilenode member
                              // call case 3: self.outer request
                              var call1566 = callmethodChecked(superDepth, "outer", [0]);
                              onSelf = true;
                              var call1567 = callmethodChecked(call1566, "inputFromElement(1)$object(1)", [1, 1], call1564, this);
                              obj1560.superobj = call1567;
                              if (call1567.data) obj1560.data = call1567.data;
                              if (call1567.hasOwnProperty('_value'))
                                  obj1560._value = call1567._value;
                              superDepth = origSuperDepth;
                            };
                            obj_init_1560.apply(obj1560, []);
                            setLineNumber(892);    // return value
                            if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1560)))
                                throw new GraceExceptionPacket(TypeErrorObject,
                                    new GraceString("result of method inputOfElementType(_) does not have " + 
                                        callmethod(var_Input, "asString", [0])._value + "."));
                            return obj1560;
                          };
                          func1559.paramTypes = [];
                          func1559.paramTypes.push([type_String, "elementType"]);
                          func1559.paramCounts = [1];
                          this.methods["inputOfElementType(1)"] = func1559;
                          func1559.definitionLine = 892;
                          func1559.definitionModule = "rtobjectdraw";
                            var func1568 = function(argcv) {    // method inputOfElementType(_)$object(_)
                              var curarg = 1;
                              var var_elementType = arguments[curarg];
                              curarg++;
                              var inheritingObject = arguments[curarg++];
                              // Start argument processing
                              curarg = 1;
                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in inputOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                          callmethod(var_String, "asString", [0])._value + "."));
                              curarg++;
                              // End argument processing
                              setModuleName("rtobjectdraw");
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var obj1569 = Grace_allocObject(null, "inputOfElementType(1)");
                              obj1569.definitionModule = "rtobjectdraw";
                              obj1569.definitionLine = 892;
                              var inho1569 = inheritingObject;
                              while (inho1569.superobj) inho1569 = inho1569.superobj;
                              inho1569.superobj = obj1569;
                              obj1569.data = inheritingObject.data;
                              if (inheritingObject.hasOwnProperty('_value'))
                                obj1569._value = inheritingObject._value;
                              obj1569.outer = this;
                              var reader_rtobjectdraw_outer1570 = function() {
                                return this.outer;
                              };
                              obj1569.methods["outer"] = reader_rtobjectdraw_outer1570;
                              var obj_init_1569 = function() {
                                var origSuperDepth = superDepth;
                                superDepth = obj1569;
                                setLineNumber(893);    // compilenode identifier
                                // call case 6: other requests
                                var call1573 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                                // call case 6: other requests
                                setLineNumber(0);    // compilenode member
                                // call case 3: self.outer request
                                var call1575 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1576 = callmethodChecked(call1575, "inputFromElement(1)$object(1)", [1, 1], call1573, this);
                                obj1569.superobj = call1576;
                                if (call1576.data) obj1569.data = call1576.data;
                                if (call1576.hasOwnProperty('_value'))
                                    obj1569._value = call1576._value;
                                superDepth = origSuperDepth;
                              };
                              obj_init_1569.apply(inheritingObject, []);
                              return obj1569;
                              };
                              func1568.paramTypes = [];
                              func1568.paramTypes.push([type_String, "elementType"]);
                              this.methods["inputOfElementType(1)$object(1)"] = func1568;
                            setLineNumber(897);    // compilenode method
                            var func1577 = function(argcv) {    // method inputOfType(_)
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              var var_inputType = arguments[curarg];
                              curarg++;
                              // Start argument checking
                              curarg = 1;
                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("argument 1 in inputOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                          callmethod(var_String, "asString", [0])._value + "."));
                              curarg++;
                              // End argument checking
                              setModuleName("rtobjectdraw");
                              var obj1578 = Grace_allocObject(null, "inputOfType(_)");
                              obj1578.definitionModule = "rtobjectdraw";
                              obj1578.definitionLine = 897;
                              obj1578.outer = this;
                              var reader_rtobjectdraw_outer1579 = function() {
                                return this.outer;
                              };
                              obj1578.methods["outer"] = reader_rtobjectdraw_outer1579;
                              var obj_init_1578 = function() {
                                var origSuperDepth = superDepth;
                                superDepth = obj1578;
                                setLineNumber(898);    // compilenode string
                                var string1581 = new GraceString("input");
                                setLineNumber(0);    // compilenode identifier
                                // call case 6: other requests
                                // call case 3: self.outer request
                                var call1583 = callmethodChecked(superDepth, "outer", [0]);
                                onSelf = true;
                                var call1584 = callmethodChecked(call1583, "inputOfElementType(1)$object(1)", [1, 1], string1581, this);
                                obj1578.superobj = call1584;
                                if (call1584.data) obj1578.data = call1584.data;
                                if (call1584.hasOwnProperty('_value'))
                                    obj1578._value = call1584._value;
                                setLineNumber(900);    // compilenode string
                                var string1586 = new GraceString("type");
                                // call case 6: other requests
                                // call case 4: self request
                                onSelf = true;
                                var call1588 = callmethodChecked(this, "element", []);
                                var call1589 = callmethodChecked(call1588, "setAttribute(2)", [2], string1586, var_inputType);
                                superDepth = origSuperDepth;
                              };
                              obj_init_1578.apply(obj1578, []);
                              setLineNumber(897);    // return value
                              if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1578)))
                                  throw new GraceExceptionPacket(TypeErrorObject,
                                      new GraceString("result of method inputOfType(_) does not have " + 
                                          callmethod(var_Input, "asString", [0])._value + "."));
                              return obj1578;
                            };
                            func1577.paramTypes = [];
                            func1577.paramTypes.push([type_String, "inputType"]);
                            func1577.paramCounts = [1];
                            this.methods["inputOfType(1)"] = func1577;
                            func1577.definitionLine = 897;
                            func1577.definitionModule = "rtobjectdraw";
                              var func1590 = function(argcv) {    // method inputOfType(_)$object(_)
                                var curarg = 1;
                                var var_inputType = arguments[curarg];
                                curarg++;
                                var inheritingObject = arguments[curarg++];
                                // Start argument processing
                                curarg = 1;
                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("argument 1 in inputOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                            callmethod(var_String, "asString", [0])._value + "."));
                                curarg++;
                                // End argument processing
                                setModuleName("rtobjectdraw");
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var obj1591 = Grace_allocObject(null, "inputOfType(1)");
                                obj1591.definitionModule = "rtobjectdraw";
                                obj1591.definitionLine = 897;
                                var inho1591 = inheritingObject;
                                while (inho1591.superobj) inho1591 = inho1591.superobj;
                                inho1591.superobj = obj1591;
                                obj1591.data = inheritingObject.data;
                                if (inheritingObject.hasOwnProperty('_value'))
                                  obj1591._value = inheritingObject._value;
                                obj1591.outer = this;
                                var reader_rtobjectdraw_outer1592 = function() {
                                  return this.outer;
                                };
                                obj1591.methods["outer"] = reader_rtobjectdraw_outer1592;
                                var obj_init_1591 = function() {
                                  var origSuperDepth = superDepth;
                                  superDepth = obj1591;
                                  setLineNumber(898);    // compilenode string
                                  var string1594 = new GraceString("input");
                                  setLineNumber(0);    // compilenode identifier
                                  // call case 6: other requests
                                  // call case 3: self.outer request
                                  var call1596 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1597 = callmethodChecked(call1596, "inputOfElementType(1)$object(1)", [1, 1], string1594, this);
                                  obj1591.superobj = call1597;
                                  if (call1597.data) obj1591.data = call1597.data;
                                  if (call1597.hasOwnProperty('_value'))
                                      obj1591._value = call1597._value;
                                  setLineNumber(900);    // compilenode string
                                  var string1599 = new GraceString("type");
                                  // call case 6: other requests
                                  // call case 4: self request
                                  onSelf = true;
                                  var call1601 = callmethodChecked(this, "element", []);
                                  var call1602 = callmethodChecked(call1601, "setAttribute(2)", [2], string1599, var_inputType);
                                  superDepth = origSuperDepth;
                                };
                                obj_init_1591.apply(inheritingObject, []);
                                return obj1591;
                                };
                                func1590.paramTypes = [];
                                func1590.paramTypes.push([type_String, "inputType"]);
                                this.methods["inputOfType(1)$object(1)"] = func1590;
                              setLineNumber(904);    // compilenode method
                              var func1603 = function(argcv) {    // method labeledWidgetFromElement(_)
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                var var_element__39__ = arguments[curarg];
                                curarg++;
                                setModuleName("rtobjectdraw");
                                var obj1604 = Grace_allocObject(null, "labeledWidgetFromElement(_)");
                                obj1604.definitionModule = "rtobjectdraw";
                                obj1604.definitionLine = 904;
                                obj1604.outer = this;
                                var reader_rtobjectdraw_outer1605 = function() {
                                  return this.outer;
                                };
                                obj1604.methods["outer"] = reader_rtobjectdraw_outer1605;
                                var obj_init_1604 = function() {
                                  var origSuperDepth = superDepth;
                                  superDepth = obj1604;
                                  var func1606 = function(argcv) {    // method labelElement
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    setModuleName("rtobjectdraw");
                                    setLineNumber(912);    // compilenode member
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1608 = callmethodChecked(this, "element", []);
                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call1608)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method labelElement does not have " + 
                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                    return call1608;
                                  };
                                  func1606.confidential = true;
                                  func1606.paramCounts = [0];
                                  obj1604.methods["labelElement"] = func1606;
                                  func1606.definitionLine = 911;
                                  func1606.definitionModule = "rtobjectdraw";
                                  var func1609 = function(argcv) {    // method label
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    setModuleName("rtobjectdraw");
                                    setLineNumber(917);    // compilenode member
                                    // call case 6: other requests
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1612 = callmethodChecked(this, "labelElement", []);
                                    var call1613 = callmethodChecked(call1612, "textContent", []);
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1613)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method label does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    return call1613;
                                  };
                                  func1609.paramCounts = [0];
                                  obj1604.methods["label"] = func1609;
                                  func1609.definitionLine = 915;
                                  func1609.definitionModule = "rtobjectdraw";
                                  var func1614 = function(argcv) {    // method label:=(_)
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    var var_value = arguments[curarg];
                                    curarg++;
                                    // Start argument checking
                                    curarg = 1;
                                    setLineNumber(920);    // compilenode identifier
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    // End argument checking
                                    setModuleName("rtobjectdraw");
                                    setLineNumber(922);    // compilenode identifier
                                    // call case 6: other requests
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1617 = callmethodChecked(this, "labelElement", []);
                                    var call1618 = callmethodChecked(call1617, "textContent:=(1)", [1], var_value);
                                    setLineNumber(923);    // return value
                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method label:=(_) does not have " + 
                                                callmethod(var_Done, "asString", [0])._value + "."));
                                    return var_done;
                                  };
                                  func1614.paramTypes = [];
                                  func1614.paramTypes.push([type_String, "value"]);
                                  func1614.paramCounts = [1];
                                  obj1604.methods["label:=(1)"] = func1614;
                                  func1614.definitionLine = 920;
                                  func1614.definitionModule = "rtobjectdraw";
                                  var func1619 = function(argcv) {    // method asString
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    setModuleName("rtobjectdraw");
                                    setLineNumber(928);    // compilenode string
                                    var string1620 = new GraceString("");
                                    // call case 4: self request
                                    onSelf = true;
                                    var call1623 = callmethodChecked(this, "label", []);
                                    var string1625 = new GraceString("an input labeled: ");
                                    var opresult1627 = callmethodChecked(string1625, "++(1)", [1], call1623);
                                    var opresult1629 = callmethodChecked(opresult1627, "++(1)", [1], string1620);
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1629)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method asString does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    return opresult1629;
                                  };
                                  func1619.paramCounts = [0];
                                  obj1604.methods["asString"] = func1619;
                                  func1619.definitionLine = 926;
                                  func1619.definitionModule = "rtobjectdraw";
                                  setLineNumber(907);    // compilenode identifier
                                  // call case 6: other requests
                                  setLineNumber(0);    // compilenode member
                                  // call case 3: self.outer request
                                  var call1632 = callmethodChecked(superDepth, "outer", [0]);
                                  onSelf = true;
                                  var call1633 = callmethodChecked(call1632, "inputFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                                  obj1604.superobj = call1633;
                                  if (call1633.data) obj1604.data = call1633.data;
                                  if (call1633.hasOwnProperty('_value'))
                                      obj1604._value = call1633._value;
                                  obj1604.data["labeler"] = undefined;
                                  var reader_rtobjectdraw_labeler1634 = function() {
                                    return this.data["labeler"];
                                  };
                                  obj1604.methods["labeler"] = reader_rtobjectdraw_labeler1634;
                                  obj1604.data["labeler"] = undefined;
                                  var writer_rtobjectdraw_labeler1634 = function(argcv, o) {
                                    this.data["labeler"] = o;
                                    return GraceDone;
                                  };
                                  obj1604.methods["labeler:=(1)"] = writer_rtobjectdraw_labeler1634;
                                  reader_rtobjectdraw_labeler1634.confidential = true;
                                  writer_rtobjectdraw_labeler1634.confidential = true;
                                  obj1604.mutable = true;
                                  superDepth = origSuperDepth;
                                };
                                obj_init_1604.apply(obj1604, []);
                                setLineNumber(904);    // return value
                                if (!Grace_isTrue(callmethod(var_Labeled, "match(1)", [1], obj1604)))
                                    throw new GraceExceptionPacket(TypeErrorObject,
                                        new GraceString("result of method labeledWidgetFromElement(_) does not have " + 
                                            callmethod(var_Labeled, "asString", [0])._value + "."));
                                return obj1604;
                              };
                              func1603.paramCounts = [1];
                              this.methods["labeledWidgetFromElement(1)"] = func1603;
                              func1603.definitionLine = 904;
                              func1603.definitionModule = "rtobjectdraw";
                                var func1635 = function(argcv) {    // method labeledWidgetFromElement(_)$object(_)
                                  var curarg = 1;
                                  var var_element__39__ = arguments[curarg];
                                  curarg++;
                                  var inheritingObject = arguments[curarg++];
                                  // Start argument processing
                                  curarg = 1;
                                  curarg++;
                                  // End argument processing
                                  setModuleName("rtobjectdraw");
                                  var returnTarget = invocationCount;
                                  invocationCount++;
                                  var obj1636 = Grace_allocObject(null, "labeledWidgetFromElement(1)");
                                  obj1636.definitionModule = "rtobjectdraw";
                                  obj1636.definitionLine = 904;
                                  var inho1636 = inheritingObject;
                                  while (inho1636.superobj) inho1636 = inho1636.superobj;
                                  inho1636.superobj = obj1636;
                                  obj1636.data = inheritingObject.data;
                                  if (inheritingObject.hasOwnProperty('_value'))
                                    obj1636._value = inheritingObject._value;
                                  obj1636.outer = this;
                                  var reader_rtobjectdraw_outer1637 = function() {
                                    return this.outer;
                                  };
                                  obj1636.methods["outer"] = reader_rtobjectdraw_outer1637;
                                  var obj_init_1636 = function() {
                                    var origSuperDepth = superDepth;
                                    superDepth = obj1636;
                                    var func1638 = function(argcv) {    // method labelElement
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      setModuleName("rtobjectdraw");
                                      setLineNumber(912);    // compilenode member
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1640 = callmethodChecked(this, "element", []);
                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call1640)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method labelElement does not have " + 
                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                      return call1640;
                                    };
                                    func1638.confidential = true;
                                    func1638.paramCounts = [0];
                                    obj1636.methods["labelElement"] = func1638;
                                    func1638.definitionLine = 911;
                                    func1638.definitionModule = "rtobjectdraw";
                                    var func1641 = function(argcv) {    // method label
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      setModuleName("rtobjectdraw");
                                      setLineNumber(917);    // compilenode member
                                      // call case 6: other requests
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1644 = callmethodChecked(this, "labelElement", []);
                                      var call1645 = callmethodChecked(call1644, "textContent", []);
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1645)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method label does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      return call1645;
                                    };
                                    func1641.paramCounts = [0];
                                    obj1636.methods["label"] = func1641;
                                    func1641.definitionLine = 915;
                                    func1641.definitionModule = "rtobjectdraw";
                                    var func1646 = function(argcv) {    // method label:=(_)
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      var var_value = arguments[curarg];
                                      curarg++;
                                      // Start argument checking
                                      curarg = 1;
                                      setLineNumber(920);    // compilenode identifier
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      // End argument checking
                                      setModuleName("rtobjectdraw");
                                      setLineNumber(922);    // compilenode identifier
                                      // call case 6: other requests
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1649 = callmethodChecked(this, "labelElement", []);
                                      var call1650 = callmethodChecked(call1649, "textContent:=(1)", [1], var_value);
                                      setLineNumber(923);    // return value
                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method label:=(_) does not have " + 
                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                      return var_done;
                                    };
                                    func1646.paramTypes = [];
                                    func1646.paramTypes.push([type_String, "value"]);
                                    func1646.paramCounts = [1];
                                    obj1636.methods["label:=(1)"] = func1646;
                                    func1646.definitionLine = 920;
                                    func1646.definitionModule = "rtobjectdraw";
                                    var func1651 = function(argcv) {    // method asString
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      setModuleName("rtobjectdraw");
                                      setLineNumber(928);    // compilenode string
                                      var string1652 = new GraceString("");
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1655 = callmethodChecked(this, "label", []);
                                      var string1657 = new GraceString("an input labeled: ");
                                      var opresult1659 = callmethodChecked(string1657, "++(1)", [1], call1655);
                                      var opresult1661 = callmethodChecked(opresult1659, "++(1)", [1], string1652);
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1661)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method asString does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      return opresult1661;
                                    };
                                    func1651.paramCounts = [0];
                                    obj1636.methods["asString"] = func1651;
                                    func1651.definitionLine = 926;
                                    func1651.definitionModule = "rtobjectdraw";
                                    setLineNumber(907);    // compilenode identifier
                                    // call case 6: other requests
                                    setLineNumber(0);    // compilenode member
                                    // call case 3: self.outer request
                                    var call1664 = callmethodChecked(superDepth, "outer", [0]);
                                    onSelf = true;
                                    var call1665 = callmethodChecked(call1664, "inputFromElement(1)$object(1)", [1, 1], var_element__39__, this);
                                    obj1636.superobj = call1665;
                                    if (call1665.data) obj1636.data = call1665.data;
                                    if (call1665.hasOwnProperty('_value'))
                                        obj1636._value = call1665._value;
                                    obj1636.data["labeler"] = undefined;
                                    var reader_rtobjectdraw_labeler1666 = function() {
                                      return this.data["labeler"];
                                    };
                                    obj1636.methods["labeler"] = reader_rtobjectdraw_labeler1666;
                                    obj1636.data["labeler"] = undefined;
                                    var writer_rtobjectdraw_labeler1666 = function(argcv, o) {
                                      this.data["labeler"] = o;
                                      return GraceDone;
                                    };
                                    obj1636.methods["labeler:=(1)"] = writer_rtobjectdraw_labeler1666;
                                    reader_rtobjectdraw_labeler1666.confidential = true;
                                    writer_rtobjectdraw_labeler1666.confidential = true;
                                    obj1636.mutable = true;
                                    superDepth = origSuperDepth;
                                  };
                                  obj_init_1636.apply(inheritingObject, []);
                                  return obj1636;
                                  };
                                  this.methods["labeledWidgetFromElement(1)$object(1)"] = func1635;
                                setLineNumber(932);    // compilenode method
                                var func1667 = function(argcv) {    // method labeledWidgetOfElementType(_)
                                  var returnTarget = invocationCount;
                                  invocationCount++;
                                  var curarg = 1;
                                  var var_elementType = arguments[curarg];
                                  curarg++;
                                  // Start argument checking
                                  curarg = 1;
                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                      throw new GraceExceptionPacket(TypeErrorObject,
                                          new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                              callmethod(var_String, "asString", [0])._value + "."));
                                  curarg++;
                                  // End argument checking
                                  setModuleName("rtobjectdraw");
                                  var obj1668 = Grace_allocObject(null, "labeledWidgetOfElementType(_)");
                                  obj1668.definitionModule = "rtobjectdraw";
                                  obj1668.definitionLine = 932;
                                  obj1668.outer = this;
                                  var reader_rtobjectdraw_outer1669 = function() {
                                    return this.outer;
                                  };
                                  obj1668.methods["outer"] = reader_rtobjectdraw_outer1669;
                                  var obj_init_1668 = function() {
                                    var origSuperDepth = superDepth;
                                    superDepth = obj1668;
                                    setLineNumber(935);    // compilenode identifier
                                    // call case 6: other requests
                                    var call1672 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                                    // call case 6: other requests
                                    setLineNumber(0);    // compilenode member
                                    // call case 3: self.outer request
                                    var call1674 = callmethodChecked(superDepth, "outer", [0]);
                                    onSelf = true;
                                    var call1675 = callmethodChecked(call1674, "labeledWidgetFromElement(1)$object(1)", [1, 1], call1672, this);
                                    obj1668.superobj = call1675;
                                    if (call1675.data) obj1668.data = call1675.data;
                                    if (call1675.hasOwnProperty('_value'))
                                        obj1668._value = call1675._value;
                                    superDepth = origSuperDepth;
                                  };
                                  obj_init_1668.apply(obj1668, []);
                                  setLineNumber(932);    // return value
                                  if (!Grace_isTrue(callmethod(var_Labeled, "match(1)", [1], obj1668)))
                                      throw new GraceExceptionPacket(TypeErrorObject,
                                          new GraceString("result of method labeledWidgetOfElementType(_) does not have " + 
                                              callmethod(var_Labeled, "asString", [0])._value + "."));
                                  return obj1668;
                                };
                                func1667.paramTypes = [];
                                func1667.paramTypes.push([type_String, "elementType"]);
                                func1667.paramCounts = [1];
                                this.methods["labeledWidgetOfElementType(1)"] = func1667;
                                func1667.definitionLine = 932;
                                func1667.definitionModule = "rtobjectdraw";
                                  var func1676 = function(argcv) {    // method labeledWidgetOfElementType(_)$object(_)
                                    var curarg = 1;
                                    var var_elementType = arguments[curarg];
                                    curarg++;
                                    var inheritingObject = arguments[curarg++];
                                    // Start argument processing
                                    curarg = 1;
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    // End argument processing
                                    setModuleName("rtobjectdraw");
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var obj1677 = Grace_allocObject(null, "labeledWidgetOfElementType(1)");
                                    obj1677.definitionModule = "rtobjectdraw";
                                    obj1677.definitionLine = 932;
                                    var inho1677 = inheritingObject;
                                    while (inho1677.superobj) inho1677 = inho1677.superobj;
                                    inho1677.superobj = obj1677;
                                    obj1677.data = inheritingObject.data;
                                    if (inheritingObject.hasOwnProperty('_value'))
                                      obj1677._value = inheritingObject._value;
                                    obj1677.outer = this;
                                    var reader_rtobjectdraw_outer1678 = function() {
                                      return this.outer;
                                    };
                                    obj1677.methods["outer"] = reader_rtobjectdraw_outer1678;
                                    var obj_init_1677 = function() {
                                      var origSuperDepth = superDepth;
                                      superDepth = obj1677;
                                      setLineNumber(935);    // compilenode identifier
                                      // call case 6: other requests
                                      var call1681 = callmethodChecked(var_document, "createElement(1)", [1], var_elementType);
                                      // call case 6: other requests
                                      setLineNumber(0);    // compilenode member
                                      // call case 3: self.outer request
                                      var call1683 = callmethodChecked(superDepth, "outer", [0]);
                                      onSelf = true;
                                      var call1684 = callmethodChecked(call1683, "labeledWidgetFromElement(1)$object(1)", [1, 1], call1681, this);
                                      obj1677.superobj = call1684;
                                      if (call1684.data) obj1677.data = call1684.data;
                                      if (call1684.hasOwnProperty('_value'))
                                          obj1677._value = call1684._value;
                                      superDepth = origSuperDepth;
                                    };
                                    obj_init_1677.apply(inheritingObject, []);
                                    return obj1677;
                                    };
                                    func1676.paramTypes = [];
                                    func1676.paramTypes.push([type_String, "elementType"]);
                                    this.methods["labeledWidgetOfElementType(1)$object(1)"] = func1676;
                                  setLineNumber(938);    // compilenode method
                                  var func1685 = function(argcv) {    // method labeledWidgetOfElementType(_)labeled(_)
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    var var_elementType = arguments[curarg];
                                    curarg++;
                                    var var_newLabel = arguments[curarg];
                                    curarg++;
                                    // Start argument checking
                                    curarg = 1;
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    setLineNumber(939);    // compilenode identifier
                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter newLabel, does not have " + 
                                                callmethod(var_String, "asString", [0])._value + "."));
                                    curarg++;
                                    // End argument checking
                                    setModuleName("rtobjectdraw");
                                    setLineNumber(938);    // compilenode object
                                    var obj1686 = Grace_allocObject(null, "labeledWidgetOfElementType(_)labeled(_)");
                                    obj1686.definitionModule = "rtobjectdraw";
                                    obj1686.definitionLine = 938;
                                    obj1686.outer = this;
                                    var reader_rtobjectdraw_outer1687 = function() {
                                      return this.outer;
                                    };
                                    obj1686.methods["outer"] = reader_rtobjectdraw_outer1687;
                                    var obj_init_1686 = function() {
                                      var origSuperDepth = superDepth;
                                      superDepth = obj1686;
                                      var func1688 = function(argcv) {    // method init
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var curarg = 1;
                                        setModuleName("rtobjectdraw");
                                        setLineNumber(945);    // return value
                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("result of method init does not have " + 
                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                        return GraceDone;
                                      };
                                      func1688.confidential = true;
                                      func1688.paramCounts = [0];
                                      obj1686.methods["init"] = func1688;
                                      func1688.definitionLine = 945;
                                      func1688.definitionModule = "rtobjectdraw";
                                      setLineNumber(942);    // compilenode identifier
                                      // call case 6: other requests
                                      setLineNumber(0);    // compilenode member
                                      // call case 3: self.outer request
                                      var call1691 = callmethodChecked(superDepth, "outer", [0]);
                                      onSelf = true;
                                      var call1692 = callmethodChecked(call1691, "labeledWidgetOfElementType(1)$object(1)", [1, 1], var_elementType, this);
                                      obj1686.superobj = call1692;
                                      if (call1692.data) obj1686.data = call1692.data;
                                      if (call1692.hasOwnProperty('_value'))
                                          obj1686._value = call1692._value;
                                      setLineNumber(946);    // compilenode member
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1694 = callmethodChecked(this, "init", []);
                                      setLineNumber(948);    // compilenode identifier
                                      // call case 4: self request
                                      onSelf = true;
                                      var call1696 = callmethodChecked(this, "label:=(1)", [1], var_newLabel);
                                      superDepth = origSuperDepth;
                                    };
                                    obj_init_1686.apply(obj1686, []);
                                    setLineNumber(938);    // return value
                                    if (!Grace_isTrue(callmethod(var_Labeled, "match(1)", [1], obj1686)))
                                        throw new GraceExceptionPacket(TypeErrorObject,
                                            new GraceString("result of method labeledWidgetOfElementType(_)labeled(_) does not have " + 
                                                callmethod(var_Labeled, "asString", [0])._value + "."));
                                    return obj1686;
                                  };
                                  func1685.paramTypes = [];
                                  func1685.paramTypes.push([type_String, "elementType"]);
                                  func1685.paramTypes.push([type_String, "newLabel"]);
                                  func1685.paramCounts = [1, 1];
                                  this.methods["labeledWidgetOfElementType(1)labeled(1)"] = func1685;
                                  func1685.definitionLine = 938;
                                  func1685.definitionModule = "rtobjectdraw";
                                    var func1697 = function(argcv) {    // method labeledWidgetOfElementType(_)labeled(_)$object(_)
                                      var curarg = 1;
                                      var var_elementType = arguments[curarg];
                                      curarg++;
                                      var var_newLabel = arguments[curarg];
                                      curarg++;
                                      var inheritingObject = arguments[curarg++];
                                      // Start argument processing
                                      curarg = 1;
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in labeledWidgetOfElementType (arg list 1), which corresponds to parameter elementType, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      setLineNumber(939);    // compilenode identifier
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter newLabel, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      // End argument processing
                                      setModuleName("rtobjectdraw");
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var obj1698 = Grace_allocObject(null, "labeledWidgetOfElementType(1)labeled(1)");
                                      obj1698.definitionModule = "rtobjectdraw";
                                      obj1698.definitionLine = 938;
                                      var inho1698 = inheritingObject;
                                      while (inho1698.superobj) inho1698 = inho1698.superobj;
                                      inho1698.superobj = obj1698;
                                      obj1698.data = inheritingObject.data;
                                      if (inheritingObject.hasOwnProperty('_value'))
                                        obj1698._value = inheritingObject._value;
                                      obj1698.outer = this;
                                      var reader_rtobjectdraw_outer1699 = function() {
                                        return this.outer;
                                      };
                                      obj1698.methods["outer"] = reader_rtobjectdraw_outer1699;
                                      var obj_init_1698 = function() {
                                        var origSuperDepth = superDepth;
                                        superDepth = obj1698;
                                        var func1700 = function(argcv) {    // method init
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          setModuleName("rtobjectdraw");
                                          setLineNumber(945);    // return value
                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method init does not have " + 
                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                          return GraceDone;
                                        };
                                        func1700.confidential = true;
                                        func1700.paramCounts = [0];
                                        obj1698.methods["init"] = func1700;
                                        func1700.definitionLine = 945;
                                        func1700.definitionModule = "rtobjectdraw";
                                        setLineNumber(942);    // compilenode identifier
                                        // call case 6: other requests
                                        setLineNumber(0);    // compilenode member
                                        // call case 3: self.outer request
                                        var call1703 = callmethodChecked(superDepth, "outer", [0]);
                                        onSelf = true;
                                        var call1704 = callmethodChecked(call1703, "labeledWidgetOfElementType(1)$object(1)", [1, 1], var_elementType, this);
                                        obj1698.superobj = call1704;
                                        if (call1704.data) obj1698.data = call1704.data;
                                        if (call1704.hasOwnProperty('_value'))
                                            obj1698._value = call1704._value;
                                        setLineNumber(946);    // compilenode member
                                        // call case 4: self request
                                        onSelf = true;
                                        var call1706 = callmethodChecked(this, "init", []);
                                        setLineNumber(948);    // compilenode identifier
                                        // call case 4: self request
                                        onSelf = true;
                                        var call1708 = callmethodChecked(this, "label:=(1)", [1], var_newLabel);
                                        superDepth = origSuperDepth;
                                      };
                                      obj_init_1698.apply(inheritingObject, []);
                                      return obj1698;
                                      };
                                      func1697.paramTypes = [];
                                      func1697.paramTypes.push([type_String, "elementType"]);
                                      func1697.paramTypes.push([type_String, "newLabel"]);
                                      this.methods["labeledWidgetOfElementType(1)labeled(1)$object(1)"] = func1697;
                                    setLineNumber(951);    // compilenode method
                                    var func1709 = function(argcv) {    // method fieldOfType(_)labeled(_)
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      var var_inputType = arguments[curarg];
                                      curarg++;
                                      var var_label__39__ = arguments[curarg];
                                      curarg++;
                                      // Start argument checking
                                      curarg = 1;
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in fieldOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                  callmethod(var_String, "asString", [0])._value + "."));
                                      curarg++;
                                      // End argument checking
                                      setModuleName("rtobjectdraw");
                                      var obj1710 = Grace_allocObject(null, "fieldOfType(_)labeled(_)");
                                      obj1710.definitionModule = "rtobjectdraw";
                                      obj1710.definitionLine = 951;
                                      obj1710.outer = this;
                                      var reader_rtobjectdraw_outer1711 = function() {
                                        return this.outer;
                                      };
                                      obj1710.methods["outer"] = reader_rtobjectdraw_outer1711;
                                      var obj_init_1710 = function() {
                                        var origSuperDepth = superDepth;
                                        superDepth = obj1710;
                                        var func1712 = function(argcv) {    // method label
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          setModuleName("rtobjectdraw");
                                          setLineNumber(958);    // compilenode member
                                          // call case 6: other requests
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1715 = callmethodChecked(this, "element", []);
                                          var call1716 = callmethodChecked(call1715, "placeholder", []);
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1716)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method label does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          return call1716;
                                        };
                                        func1712.paramCounts = [0];
                                        obj1710.methods["label"] = func1712;
                                        func1712.definitionLine = 957;
                                        func1712.definitionModule = "rtobjectdraw";
                                        var func1717 = function(argcv) {    // method label:=(_)
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          var var_value = arguments[curarg];
                                          curarg++;
                                          // Start argument checking
                                          curarg = 1;
                                          setLineNumber(962);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          curarg++;
                                          // End argument checking
                                          setModuleName("rtobjectdraw");
                                          setLineNumber(963);    // compilenode identifier
                                          // call case 6: other requests
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1720 = callmethodChecked(this, "element", []);
                                          var call1721 = callmethodChecked(call1720, "placeholder:=(1)", [1], var_value);
                                          setLineNumber(964);    // return value
                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method label:=(_) does not have " + 
                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                          return var_done;
                                        };
                                        func1717.paramTypes = [];
                                        func1717.paramTypes.push([type_String, "value"]);
                                        func1717.paramCounts = [1];
                                        obj1710.methods["label:=(1)"] = func1717;
                                        func1717.definitionLine = 962;
                                        func1717.definitionModule = "rtobjectdraw";
                                        var func1722 = function(argcv) {    // method asString
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          setModuleName("rtobjectdraw");
                                          setLineNumber(969);    // compilenode string
                                          var string1723 = new GraceString("");
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1726 = callmethodChecked(this, "label", []);
                                          var string1728 = new GraceString("a field labeled: ");
                                          var opresult1730 = callmethodChecked(string1728, "++(1)", [1], call1726);
                                          var opresult1732 = callmethodChecked(opresult1730, "++(1)", [1], string1723);
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1732)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method asString does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          return opresult1732;
                                        };
                                        func1722.paramCounts = [0];
                                        obj1710.methods["asString"] = func1722;
                                        func1722.definitionLine = 968;
                                        func1722.definitionModule = "rtobjectdraw";
                                        setLineNumber(954);    // compilenode identifier
                                        // call case 6: other requests
                                        setLineNumber(0);    // compilenode member
                                        // call case 3: self.outer request
                                        var call1735 = callmethodChecked(superDepth, "outer", [0]);
                                        onSelf = true;
                                        var call1736 = callmethodChecked(call1735, "inputOfType(1)$object(1)", [1, 1], var_inputType, this);
                                        obj1710.superobj = call1736;
                                        if (call1736.data) obj1710.data = call1736.data;
                                        if (call1736.hasOwnProperty('_value'))
                                            obj1710._value = call1736._value;
                                        setLineNumber(972);    // compilenode identifier
                                        // call case 4: self request
                                        onSelf = true;
                                        var call1738 = callmethodChecked(this, "label:=(1)", [1], var_label__39__);
                                        superDepth = origSuperDepth;
                                      };
                                      obj_init_1710.apply(obj1710, []);
                                      setLineNumber(951);    // return value
                                      if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj1710)))
                                          throw new GraceExceptionPacket(TypeErrorObject,
                                              new GraceString("result of method fieldOfType(_)labeled(_) does not have " + 
                                                  callmethod(var_Input, "asString", [0])._value + "."));
                                      return obj1710;
                                    };
                                    func1709.paramTypes = [];
                                    func1709.paramTypes.push([type_String, "inputType"]);
                                    func1709.paramTypes.push([type_String, "label'"]);
                                    func1709.paramCounts = [1, 1];
                                    this.methods["fieldOfType(1)labeled(1)"] = func1709;
                                    func1709.definitionLine = 951;
                                    func1709.definitionModule = "rtobjectdraw";
                                      var func1739 = function(argcv) {    // method fieldOfType(_)labeled(_)$object(_)
                                        var curarg = 1;
                                        var var_inputType = arguments[curarg];
                                        curarg++;
                                        var var_label__39__ = arguments[curarg];
                                        curarg++;
                                        var inheritingObject = arguments[curarg++];
                                        // Start argument processing
                                        curarg = 1;
                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in fieldOfType (arg list 1), which corresponds to parameter inputType, does not have " + 
                                                    callmethod(var_String, "asString", [0])._value + "."));
                                        curarg++;
                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                    callmethod(var_String, "asString", [0])._value + "."));
                                        curarg++;
                                        // End argument processing
                                        setModuleName("rtobjectdraw");
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var obj1740 = Grace_allocObject(null, "fieldOfType(1)labeled(1)");
                                        obj1740.definitionModule = "rtobjectdraw";
                                        obj1740.definitionLine = 951;
                                        var inho1740 = inheritingObject;
                                        while (inho1740.superobj) inho1740 = inho1740.superobj;
                                        inho1740.superobj = obj1740;
                                        obj1740.data = inheritingObject.data;
                                        if (inheritingObject.hasOwnProperty('_value'))
                                          obj1740._value = inheritingObject._value;
                                        obj1740.outer = this;
                                        var reader_rtobjectdraw_outer1741 = function() {
                                          return this.outer;
                                        };
                                        obj1740.methods["outer"] = reader_rtobjectdraw_outer1741;
                                        var obj_init_1740 = function() {
                                          var origSuperDepth = superDepth;
                                          superDepth = obj1740;
                                          var func1742 = function(argcv) {    // method label
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            setModuleName("rtobjectdraw");
                                            setLineNumber(958);    // compilenode member
                                            // call case 6: other requests
                                            // call case 4: self request
                                            onSelf = true;
                                            var call1745 = callmethodChecked(this, "element", []);
                                            var call1746 = callmethodChecked(call1745, "placeholder", []);
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call1746)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method label does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            return call1746;
                                          };
                                          func1742.paramCounts = [0];
                                          obj1740.methods["label"] = func1742;
                                          func1742.definitionLine = 957;
                                          func1742.definitionModule = "rtobjectdraw";
                                          var func1747 = function(argcv) {    // method label:=(_)
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            var var_value = arguments[curarg];
                                            curarg++;
                                            // Start argument checking
                                            curarg = 1;
                                            setLineNumber(962);    // compilenode identifier
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in label:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            curarg++;
                                            // End argument checking
                                            setModuleName("rtobjectdraw");
                                            setLineNumber(963);    // compilenode identifier
                                            // call case 6: other requests
                                            // call case 4: self request
                                            onSelf = true;
                                            var call1750 = callmethodChecked(this, "element", []);
                                            var call1751 = callmethodChecked(call1750, "placeholder:=(1)", [1], var_value);
                                            setLineNumber(964);    // return value
                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method label:=(_) does not have " + 
                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                            return var_done;
                                          };
                                          func1747.paramTypes = [];
                                          func1747.paramTypes.push([type_String, "value"]);
                                          func1747.paramCounts = [1];
                                          obj1740.methods["label:=(1)"] = func1747;
                                          func1747.definitionLine = 962;
                                          func1747.definitionModule = "rtobjectdraw";
                                          var func1752 = function(argcv) {    // method asString
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            setModuleName("rtobjectdraw");
                                            setLineNumber(969);    // compilenode string
                                            var string1753 = new GraceString("");
                                            // call case 4: self request
                                            onSelf = true;
                                            var call1756 = callmethodChecked(this, "label", []);
                                            var string1758 = new GraceString("a field labeled: ");
                                            var opresult1760 = callmethodChecked(string1758, "++(1)", [1], call1756);
                                            var opresult1762 = callmethodChecked(opresult1760, "++(1)", [1], string1753);
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult1762)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method asString does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            return opresult1762;
                                          };
                                          func1752.paramCounts = [0];
                                          obj1740.methods["asString"] = func1752;
                                          func1752.definitionLine = 968;
                                          func1752.definitionModule = "rtobjectdraw";
                                          setLineNumber(954);    // compilenode identifier
                                          // call case 6: other requests
                                          setLineNumber(0);    // compilenode member
                                          // call case 3: self.outer request
                                          var call1765 = callmethodChecked(superDepth, "outer", [0]);
                                          onSelf = true;
                                          var call1766 = callmethodChecked(call1765, "inputOfType(1)$object(1)", [1, 1], var_inputType, this);
                                          obj1740.superobj = call1766;
                                          if (call1766.data) obj1740.data = call1766.data;
                                          if (call1766.hasOwnProperty('_value'))
                                              obj1740._value = call1766._value;
                                          setLineNumber(972);    // compilenode identifier
                                          // call case 4: self request
                                          onSelf = true;
                                          var call1768 = callmethodChecked(this, "label:=(1)", [1], var_label__39__);
                                          superDepth = origSuperDepth;
                                        };
                                        obj_init_1740.apply(inheritingObject, []);
                                        return obj1740;
                                        };
                                        func1739.paramTypes = [];
                                        func1739.paramTypes.push([type_String, "inputType"]);
                                        func1739.paramTypes.push([type_String, "label'"]);
                                        this.methods["fieldOfType(1)labeled(1)$object(1)"] = func1739;
                                      setLineNumber(980);    // compilenode method
                                      var func1769 = function(argcv) {    // method eventLogKind(_)response(_)
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var curarg = 1;
                                        var var_kind__39__ = arguments[curarg];
                                        curarg++;
                                        var var_response__39__ = arguments[curarg];
                                        curarg++;
                                        // Start argument checking
                                        curarg = 1;
                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in eventLogKind (arg list 1), which corresponds to parameter kind', does not have " + 
                                                    callmethod(var_String, "asString", [0])._value + "."));
                                        curarg++;
                                        setLineNumber(981);    // compilenode identifier
                                        if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("argument 1 in response (arg list 2), which corresponds to parameter response', does not have " + 
                                                    callmethod(var_Procedure, "asString", [0])._value + "."));
                                        curarg++;
                                        // End argument checking
                                        setModuleName("rtobjectdraw");
                                        setLineNumber(980);    // compilenode object
                                        var obj1770 = Grace_allocObject(GraceObject, "eventLogKind(_)response(_)");
                                        obj1770.definitionModule = "rtobjectdraw";
                                        obj1770.definitionLine = 980;
                                        obj1770.outer = this;
                                        var reader_rtobjectdraw_outer1771 = function() {
                                          return this.outer;
                                        };
                                        obj1770.methods["outer"] = reader_rtobjectdraw_outer1771;
                                        var obj_init_1770 = function() {
                                          var origSuperDepth = superDepth;
                                          superDepth = obj1770;
                                          setLineNumber(982);    // compilenode identifier
                                          obj1770.data["kind"] = var_kind__39__;
                                          var reader_rtobjectdraw_kind1772 = function() {
                                            return this.data["kind"];
                                          };
                                          reader_rtobjectdraw_kind1772.def = true;
                                          obj1770.methods["kind"] = reader_rtobjectdraw_kind1772;
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_kind__39__)))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("value of def 'kind' is not of type String"));
                                          setLineNumber(983);    // compilenode identifier
                                          obj1770.data["response"] = var_response__39__;
                                          var reader_rtobjectdraw_response1773 = function() {
                                            return this.data["response"];
                                          };
                                          reader_rtobjectdraw_response1773.def = true;
                                          obj1770.methods["response"] = reader_rtobjectdraw_response1773;
                                          if (!Grace_isTrue(callmethod(var_Procedure, "match(1)", [1], var_response__39__)))
                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                new GraceString("value of def 'response' is not of type Procedure"));
                                          superDepth = origSuperDepth;
                                        };
                                        obj_init_1770.apply(obj1770, []);
                                        return obj1770;
                                      };
                                      func1769.paramTypes = [];
                                      func1769.paramTypes.push([type_String, "kind'"]);
                                      func1769.paramTypes.push([]);
                                      func1769.confidential = true;
                                      func1769.paramCounts = [1, 1];
                                      this.methods["eventLogKind(1)response(1)"] = func1769;
                                      func1769.definitionLine = 980;
                                      func1769.definitionModule = "rtobjectdraw";
                                        var func1774 = function(argcv) {    // method eventLogKind(_)response(_)$object(_)
                                          var curarg = 1;
                                          var var_kind__39__ = arguments[curarg];
                                          curarg++;
                                          var var_response__39__ = arguments[curarg];
                                          curarg++;
                                          var inheritingObject = arguments[curarg++];
                                          // Start argument processing
                                          curarg = 1;
                                          setLineNumber(980);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in eventLogKind (arg list 1), which corresponds to parameter kind', does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          curarg++;
                                          setLineNumber(981);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in response (arg list 2), which corresponds to parameter response', does not have " + 
                                                      callmethod(var_Procedure, "asString", [0])._value + "."));
                                          curarg++;
                                          // End argument processing
                                          setModuleName("rtobjectdraw");
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var obj1775 = Grace_allocObject(GraceObject, "eventLogKind(1)response(1)");
                                          obj1775.definitionModule = "rtobjectdraw";
                                          obj1775.definitionLine = 980;
                                          var inho1775 = inheritingObject;
                                          while (inho1775.superobj) inho1775 = inho1775.superobj;
                                          inho1775.superobj = obj1775;
                                          obj1775.data = inheritingObject.data;
                                          if (inheritingObject.hasOwnProperty('_value'))
                                            obj1775._value = inheritingObject._value;
                                          obj1775.outer = this;
                                          var reader_rtobjectdraw_outer1776 = function() {
                                            return this.outer;
                                          };
                                          obj1775.methods["outer"] = reader_rtobjectdraw_outer1776;
                                          var obj_init_1775 = function() {
                                            var origSuperDepth = superDepth;
                                            superDepth = obj1775;
                                            setLineNumber(982);    // compilenode identifier
                                            obj1775.data["kind"] = var_kind__39__;
                                            var reader_rtobjectdraw_kind1777 = function() {
                                              return this.data["kind"];
                                            };
                                            reader_rtobjectdraw_kind1777.def = true;
                                            obj1775.methods["kind"] = reader_rtobjectdraw_kind1777;
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_kind__39__)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("value of def 'kind' is not of type String"));
                                            setLineNumber(983);    // compilenode identifier
                                            obj1775.data["response"] = var_response__39__;
                                            var reader_rtobjectdraw_response1778 = function() {
                                              return this.data["response"];
                                            };
                                            reader_rtobjectdraw_response1778.def = true;
                                            obj1775.methods["response"] = reader_rtobjectdraw_response1778;
                                            if (!Grace_isTrue(callmethod(var_Procedure, "match(1)", [1], var_response__39__)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("value of def 'response' is not of type Procedure"));
                                            superDepth = origSuperDepth;
                                          };
                                          obj_init_1775.apply(inheritingObject, []);
                                          return obj1775;
                                          };
                                          func1774.paramTypes = [];
                                          func1774.paramTypes.push([type_String, "kind'"]);
                                          func1774.paramTypes.push([]);
                                          func1774.confidential = true;
                                          this.methods["eventLogKind(1)response(1)$object(1)"] = func1774;
                                        setLineNumber(986);    // compilenode method
                                        var func1779 = function(argcv) {    // method applicationTitle(_)size(_)
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          var var_initialTitle = arguments[curarg];
                                          curarg++;
                                          var var_dimensions__39__ = arguments[curarg];
                                          curarg++;
                                          // Start argument checking
                                          curarg = 1;
                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in applicationTitle (arg list 1), which corresponds to parameter initialTitle, does not have " + 
                                                      callmethod(var_String, "asString", [0])._value + "."));
                                          curarg++;
                                          setLineNumber(987);    // compilenode identifier
                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                          curarg++;
                                          // End argument checking
                                          setModuleName("rtobjectdraw");
                                          setLineNumber(986);    // compilenode object
                                          var obj1780 = Grace_allocObject(null, "applicationTitle(_)size(_)");
                                          obj1780.definitionModule = "rtobjectdraw";
                                          obj1780.definitionLine = 986;
                                          obj1780.outer = this;
                                          var reader_rtobjectdraw_outer1781 = function() {
                                            return this.outer;
                                          };
                                          obj1780.methods["outer"] = reader_rtobjectdraw_outer1781;
                                          var obj_init_1780 = function() {
                                            var origSuperDepth = superDepth;
                                            superDepth = obj1780;
                                            var func1782 = function(argcv) {    // method element
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1783 = GraceDone;
                                              setLineNumber(1003);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1785 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1785)) {
                                                setLineNumber(1004);    // compilenode member
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1789 = callmethodChecked(this, "theWindow", []);
                                                var call1790 = callmethodChecked(call1789, "document", []);
                                                var call1791 = callmethodChecked(call1790, "body", []);
                                                if1783 = call1791;
                                              } else {
                                                setLineNumber(1006);    // compilenode member
                                                // call case 1: super request
                                                var call1793 = callmethodsuper(this, "element", []);
                                                if1783 = call1793;
                                              }
                                              setLineNumber(1003);    // return value
                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], if1783)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method element does not have " + 
                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                              return if1783;
                                            };
                                            func1782.paramCounts = [0];
                                            obj1780.methods["element"] = func1782;
                                            func1782.definitionLine = 1002;
                                            func1782.definitionModule = "rtobjectdraw";
                                            var func1794 = function(argcv) {    // method arrangeHorizontal
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1795 = GraceDone;
                                              setLineNumber(1016);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1797 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1797)) {
                                                setLineNumber(1017);    // compilenode member
                                                // call case 1: super request
                                                var call1799 = callmethodsuper(this, "arrangeHorizontal", []);
                                                if1795 = call1799;
                                              } else {
                                                setLineNumber(1019);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1801 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceTrue);
                                                if1795 = call1801;
                                              }
                                              setLineNumber(1016);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1795)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method arrangeHorizontal does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1795;
                                            };
                                            func1794.paramCounts = [0];
                                            obj1780.methods["arrangeHorizontal"] = func1794;
                                            func1794.definitionLine = 1015;
                                            func1794.definitionModule = "rtobjectdraw";
                                            var func1802 = function(argcv) {    // method arrangeVertical
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1803 = GraceDone;
                                              setLineNumber(1026);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1805 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1805)) {
                                                setLineNumber(1027);    // compilenode member
                                                // call case 1: super request
                                                var call1807 = callmethodsuper(this, "arrangeVertical", []);
                                                if1803 = call1807;
                                              } else {
                                                setLineNumber(1029);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1809 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceFalse);
                                                if1803 = call1809;
                                              }
                                              setLineNumber(1026);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1803)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method arrangeVertical does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1803;
                                            };
                                            func1802.paramCounts = [0];
                                            obj1780.methods["arrangeVertical"] = func1802;
                                            func1802.definitionLine = 1025;
                                            func1802.definitionModule = "rtobjectdraw";
                                            var func1810 = function(argcv) {    // method on(_)do(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_kind = arguments[curarg];
                                              curarg++;
                                              var var_response = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1034);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              curarg++;
                                              setLineNumber(1035);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in do (arg list 2), which corresponds to parameter response, does not have " + 
                                                          callmethod(var_Procedure, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("rtobjectdraw");
                                              var if1811 = GraceDone;
                                              setLineNumber(1036);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1813 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1813)) {
                                                setLineNumber(1037);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1816 = callmethodChecked(this, "theWindow", []);
                                                var call1817 = callmethodChecked(call1816, "addEventListener(2)", [2], var_kind, var_response);
                                                if1811 = call1817;
                                              } else {
                                                setLineNumber(1039);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call1821 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call1822 = callmethodChecked(call1821, "eventLogKind(1)response(1)", [1, 1], var_kind, var_response);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1824 = callmethodChecked(this, "events", []);
                                                var call1825 = callmethodChecked(call1824, "push(1)", [1], call1822);
                                                if1811 = call1825;
                                              }
                                              setLineNumber(1036);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1811)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method on(_)do(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1811;
                                            };
                                            func1810.paramTypes = [];
                                            func1810.paramTypes.push([type_String, "kind"]);
                                            func1810.paramTypes.push([]);
                                            func1810.confidential = true;
                                            func1810.paramCounts = [1, 1];
                                            obj1780.methods["on(1)do(1)"] = func1810;
                                            func1810.definitionLine = 1034;
                                            func1810.definitionModule = "rtobjectdraw";
                                            var func1826 = function(argcv) {    // method windowTitle
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1827 = GraceDone;
                                              setLineNumber(1045);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1829 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1829)) {
                                                setLineNumber(1046);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1832 = callmethodChecked(this, "theWindow", []);
                                                var call1833 = callmethodChecked(call1832, "title", []);
                                                if1827 = call1833;
                                              } else {
                                                setLineNumber(1048);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1835 = callmethodChecked(this, "theTitle", []);
                                                if1827 = call1835;
                                              }
                                              setLineNumber(1045);    // return value
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if1827)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method windowTitle does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              return if1827;
                                            };
                                            func1826.paramCounts = [0];
                                            obj1780.methods["windowTitle"] = func1826;
                                            func1826.definitionLine = 1044;
                                            func1826.definitionModule = "rtobjectdraw";
                                            var func1836 = function(argcv) {    // method windowTitle:=(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_value = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1053);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in windowTitle:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("rtobjectdraw");
                                              var if1837 = GraceDone;
                                              setLineNumber(1054);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1839 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1839)) {
                                                setLineNumber(1055);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1842 = callmethodChecked(this, "theWindow", []);
                                                var call1843 = callmethodChecked(call1842, "title:=(1)", [1], var_value);
                                                if1837 = call1843;
                                              } else {
                                                setLineNumber(1057);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1845 = callmethodChecked(this, "theTitle:=(1)", [1], var_value);
                                                if1837 = call1845;
                                              }
                                              setLineNumber(1054);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1837)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method windowTitle:=(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1837;
                                            };
                                            func1836.paramTypes = [];
                                            func1836.paramTypes.push([type_String, "value"]);
                                            func1836.paramCounts = [1];
                                            obj1780.methods["windowTitle:=(1)"] = func1836;
                                            func1836.definitionLine = 1053;
                                            func1836.definitionModule = "rtobjectdraw";
                                            var func1846 = function(argcv) {    // method width
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1847 = GraceDone;
                                              setLineNumber(1063);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1849 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1849)) {
                                                setLineNumber(1064);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1852 = callmethodChecked(this, "theWindow", []);
                                                var call1853 = callmethodChecked(call1852, "width", []);
                                                if1847 = call1853;
                                              } else {
                                                setLineNumber(1066);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1855 = callmethodChecked(this, "theWidth", []);
                                                if1847 = call1855;
                                              }
                                              setLineNumber(1063);    // return value
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if1847)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method width does not have " + 
                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                              return if1847;
                                            };
                                            func1846.paramCounts = [0];
                                            obj1780.methods["width"] = func1846;
                                            func1846.definitionLine = 1062;
                                            func1846.definitionModule = "rtobjectdraw";
                                            var func1856 = function(argcv) {    // method height
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1857 = GraceDone;
                                              setLineNumber(1072);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1859 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call1859)) {
                                                setLineNumber(1073);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1862 = callmethodChecked(this, "theWindow", []);
                                                var call1863 = callmethodChecked(call1862, "height", []);
                                                if1857 = call1863;
                                              } else {
                                                setLineNumber(1075);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1865 = callmethodChecked(this, "theHeight", []);
                                                if1857 = call1865;
                                              }
                                              setLineNumber(1072);    // return value
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if1857)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method height does not have " + 
                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                              return if1857;
                                            };
                                            func1856.paramCounts = [0];
                                            obj1780.methods["height"] = func1856;
                                            func1856.definitionLine = 1071;
                                            func1856.definitionModule = "rtobjectdraw";
                                            var func1866 = function(argcv) {    // method onMouseEnterDo(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_f = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1085);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("rtobjectdraw");
                                              setLineNumber(1086);    // compilenode string
                                              var string1868 = new GraceString("mouseover");
                                              var block1869 = new GraceBlock(this, 1086, 1);
                                              setLineNumber(1);    // compilenode identifier
                                              block1869.real = function(var_event__39__) {
                                                setLineNumber(1087);    // compilenode member
                                                // call case 6: other requests
                                                var call1871 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                var var_from = call1871;
                                                var if1872 = GraceDone;
                                                setLineNumber(1089);    // compilenode member
                                                // call case 6: other requests
                                                var call1875 = callmethodChecked(var_dom, "noObject", []);
                                                var opresult1877 = callmethodChecked(call1875, "==(1)", [1], var_from);
                                                if (Grace_isTrue(opresult1877)) {
                                                  setLineNumber(1090);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call1881 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call1882 = callmethodChecked(call1881, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                  // call case 6: other requests
                                                  var call1883 = callmethodChecked(var_f, "apply(1)", [1], call1882);
                                                  if1872 = call1883;
                                                }
                                                return if1872;
                                              };
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1884 = callmethodChecked(this, "on(1)do(1)", [1, 1], string1868, block1869);
                                              setLineNumber(1086);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1884)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method onMouseEnterDo(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return call1884;
                                            };
                                            func1866.paramTypes = [];
                                            func1866.paramTypes.push([]);
                                            func1866.paramCounts = [1];
                                            obj1780.methods["onMouseEnterDo(1)"] = func1866;
                                            func1866.definitionLine = 1085;
                                            func1866.definitionModule = "rtobjectdraw";
                                            var func1885 = function(argcv) {    // method onMouseExitDo(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_f = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1096);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("rtobjectdraw");
                                              setLineNumber(1097);    // compilenode string
                                              var string1887 = new GraceString("mouseout");
                                              var block1888 = new GraceBlock(this, 1097, 1);
                                              setLineNumber(1);    // compilenode identifier
                                              block1888.real = function(var_event__39__) {
                                                setLineNumber(1098);    // compilenode member
                                                // call case 6: other requests
                                                var call1890 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                var var_to = call1890;
                                                var if1891 = GraceDone;
                                                setLineNumber(1100);    // compilenode member
                                                // call case 6: other requests
                                                var call1894 = callmethodChecked(var_dom, "noObject", []);
                                                var opresult1896 = callmethodChecked(call1894, "==(1)", [1], var_to);
                                                if (Grace_isTrue(opresult1896)) {
                                                  setLineNumber(1101);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call1900 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call1901 = callmethodChecked(call1900, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                  // call case 6: other requests
                                                  var call1902 = callmethodChecked(var_f, "apply(1)", [1], call1901);
                                                  if1891 = call1902;
                                                }
                                                return if1891;
                                              };
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1903 = callmethodChecked(this, "on(1)do(1)", [1, 1], string1887, block1888);
                                              setLineNumber(1097);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1903)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method onMouseExitDo(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return call1903;
                                            };
                                            func1885.paramTypes = [];
                                            func1885.paramTypes.push([]);
                                            func1885.paramCounts = [1];
                                            obj1780.methods["onMouseExitDo(1)"] = func1885;
                                            func1885.definitionLine = 1096;
                                            func1885.definitionModule = "rtobjectdraw";
                                            var func1904 = function(argcv) {    // method onMouse(_)do(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_kind = arguments[curarg];
                                              curarg++;
                                              var var_bl = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              setLineNumber(1107);    // compilenode identifier
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in onMouse (arg list 1), which corresponds to parameter kind, does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              curarg++;
                                              if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in do (arg list 2), which corresponds to parameter bl, does not have " + 
                                                          callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("rtobjectdraw");
                                              setLineNumber(1108);    // compilenode block
                                              var block1906 = new GraceBlock(this, 1108, 1);
                                              setLineNumber(1);    // compilenode identifier
                                              block1906.real = function(var_evt) {
                                                setLineNumber(1109);    // compilenode member
                                                // call case 6: other requests
                                                var call1909 = callmethodChecked(var_evt, "pageY", []);
                                                // call case 6: other requests
                                                var call1912 = callmethodChecked(var_evt, "pageX", []);
                                                var opresult1914 = callmethodChecked(call1912, "@(1)", [1], call1909);
                                                // call case 6: other requests
                                                var call1915 = callmethodChecked(var_bl, "apply(1)", [1], opresult1914);
                                                return call1915;
                                              };
                                              // call case 6: other requests
                                              setLineNumber(1108);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1917 = callmethodChecked(this, "theWindow", []);
                                              var call1918 = callmethodChecked(call1917, "addEventListener(2)", [2], var_kind, block1906);
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call1918)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method onMouse(_)do(_) does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return call1918;
                                            };
                                            func1904.paramTypes = [];
                                            func1904.paramTypes.push([type_String, "kind"]);
                                            func1904.paramTypes.push([]);
                                            func1904.confidential = true;
                                            func1904.paramCounts = [1, 1];
                                            obj1780.methods["onMouse(1)do(1)"] = func1904;
                                            func1904.definitionLine = 1107;
                                            func1904.definitionModule = "rtobjectdraw";
                                            var func1919 = function(argcv) {    // method startApplication
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if1920 = GraceDone;
                                              setLineNumber(1115);    // compilenode call
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call1923 = callmethodChecked(this, "isOpened", []);
                                              var call1924 = callmethodChecked(call1923, "prefix!", [0]);
                                              if (Grace_isTrue(call1924)) {
                                                setLineNumber(1116);    // compilenode string
                                                var string1927 = new GraceString("");
                                                var string1928 = new GraceString("");
                                                var string1929 = new GraceString("");
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1932 = callmethodChecked(this, "theHeight", []);
                                                var string1934 = new GraceString(",height=");
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1937 = callmethodChecked(this, "theWidth", []);
                                                var string1939 = new GraceString("width=");
                                                var opresult1941 = callmethodChecked(string1939, "++(1)", [1], call1937);
                                                var opresult1943 = callmethodChecked(opresult1941, "++(1)", [1], string1934);
                                                var opresult1945 = callmethodChecked(opresult1943, "++(1)", [1], call1932);
                                                var opresult1947 = callmethodChecked(opresult1945, "++(1)", [1], string1929);
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                var call1949 = callmethodChecked(var_dom, "window", []);
                                                var call1950 = callmethodChecked(call1949, "open(3)", [3], string1927, string1928, opresult1947);
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1951 = callmethodChecked(this, "theWindow:=(1)", [1], call1950);
                                                setLineNumber(1117);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1954 = callmethodChecked(this, "theTitle", []);
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1957 = callmethodChecked(this, "theWindow", []);
                                                var call1958 = callmethodChecked(call1957, "document", []);
                                                var call1959 = callmethodChecked(call1958, "title:=(1)", [1], call1954);
                                                setLineNumber(1118);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1962 = callmethodChecked(this, "element", []);
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1966 = callmethodChecked(this, "theWindow", []);
                                                var call1967 = callmethodChecked(call1966, "document", []);
                                                var call1968 = callmethodChecked(call1967, "body", []);
                                                var call1969 = callmethodChecked(call1968, "appendChild(1)", [1], call1962);
                                                var if1970 = GraceDone;
                                                setLineNumber(1120);    // compilenode member
                                                // call case 6: other requests
                                                var call1973 = callmethodChecked(var_dom, "window", []);
                                                var string1974 = new GraceString("graceRegisterWindow");
                                                // call case 6: other requests
                                                var call1975 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call1973, string1974);
                                                if (Grace_isTrue(call1975)) {
                                                  setLineNumber(1121);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call1978 = callmethodChecked(this, "theWindow", []);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call1980 = callmethodChecked(var_dom, "window", []);
                                                  var call1981 = callmethodChecked(call1980, "graceRegisterWindow(1)", [1], call1978);
                                                  if1970 = call1981;
                                                }
                                                setLineNumber(1124);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1983 = callmethodChecked(this, "isOpened:=(1)", [1], GraceTrue);
                                                setLineNumber(1126);    // compilenode string
                                                var string1985 = new GraceString("100%");
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1988 = callmethodChecked(this, "element", []);
                                                var call1989 = callmethodChecked(call1988, "style", []);
                                                var call1990 = callmethodChecked(call1989, "width:=(1)", [1], string1985);
                                                setLineNumber(1127);    // compilenode string
                                                var string1992 = new GraceString("0px");
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call1995 = callmethodChecked(this, "element", []);
                                                var call1996 = callmethodChecked(call1995, "style", []);
                                                var call1997 = callmethodChecked(call1996, "margin:=(1)", [1], string1992);
                                                var if1998 = GraceDone;
                                                setLineNumber(1129);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2000 = callmethodChecked(this, "isHorizontal", []);
                                                if (Grace_isTrue(call2000)) {
                                                  setLineNumber(1130);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2002 = callmethodChecked(this, "arrangeHorizontal", []);
                                                  if1998 = call2002;
                                                } else {
                                                  setLineNumber(1132);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2004 = callmethodChecked(this, "arrangeVertical", []);
                                                  if1998 = call2004;
                                                }
                                                setLineNumber(1135);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2007 = callmethodChecked(this, "events", []);
                                                var block2008 = new GraceBlock(this, 1135, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2008.real = function(var_anEvent) {
                                                  setLineNumber(1136);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2011 = callmethodChecked(var_anEvent, "kind", []);
                                                  // call case 6: other requests
                                                  var call2013 = callmethodChecked(var_anEvent, "response", []);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2014 = callmethodChecked(this, "on(1)do(1)", [1, 1], call2011, call2013);
                                                  return call2014;
                                                };
                                                // call case 5: prelude request
                                                var call2015 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2007, block2008);
                                                if1920 = call2015;
                                              }
                                              setLineNumber(1115);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if1920)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method startApplication does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if1920;
                                            };
                                            func1919.paramCounts = [0];
                                            obj1780.methods["startApplication"] = func1919;
                                            func1919.definitionLine = 1114;
                                            func1919.definitionModule = "rtobjectdraw";
                                            var func2016 = function(argcv) {    // method stopApplication
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              var if2017 = GraceDone;
                                              setLineNumber(1143);    // compilenode member
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2019 = callmethodChecked(this, "isOpened", []);
                                              if (Grace_isTrue(call2019)) {
                                                setLineNumber(1144);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2022 = callmethodChecked(this, "theWindow", []);
                                                var call2023 = callmethodChecked(call2022, "close", []);
                                                if2017 = call2023;
                                              }
                                              setLineNumber(1143);    // return value
                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2017)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method stopApplication does not have " + 
                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                              return if2017;
                                            };
                                            func2016.paramCounts = [0];
                                            obj1780.methods["stopApplication"] = func2016;
                                            func2016.definitionLine = 1142;
                                            func2016.definitionModule = "rtobjectdraw";
                                            var func2024 = function(argcv) {    // method asString
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              setModuleName("rtobjectdraw");
                                              setLineNumber(1150);    // compilenode string
                                              var string2025 = new GraceString("");
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2028 = callmethodChecked(this, "windowTitle", []);
                                              var string2030 = new GraceString("application titled ");
                                              var opresult2032 = callmethodChecked(string2030, "++(1)", [1], call2028);
                                              var opresult2034 = callmethodChecked(opresult2032, "++(1)", [1], string2025);
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2034)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method asString does not have " + 
                                                          callmethod(var_String, "asString", [0])._value + "."));
                                              return opresult2034;
                                            };
                                            func2024.paramCounts = [0];
                                            obj1780.methods["asString"] = func2024;
                                            func2024.definitionLine = 1149;
                                            func2024.definitionModule = "rtobjectdraw";
                                            setLineNumber(991);    // compilenode member
                                            // call case 6: other requests
                                            var call2037 = callmethodChecked(var_document, "createDocumentFragment", []);
                                            // call case 6: other requests
                                            setLineNumber(0);    // compilenode member
                                            // call case 3: self.outer request
                                            var call2039 = callmethodChecked(superDepth, "outer", [0]);
                                            onSelf = true;
                                            var call2040 = callmethodChecked(call2039, "containerFromElement(1)$object(1)", [1, 1], call2037, this);
                                            obj1780.superobj = call2040;
                                            if (call2040.data) obj1780.data = call2040.data;
                                            if (call2040.hasOwnProperty('_value'))
                                                obj1780._value = call2040._value;
                                            setLineNumber(993);    // compilenode identifier
                                            obj1780.data["isOpened"] = GraceFalse;
                                            var reader_rtobjectdraw_isOpened2041 = function() {
                                              return this.data["isOpened"];
                                            };
                                            obj1780.methods["isOpened"] = reader_rtobjectdraw_isOpened2041;
                                            obj1780.data["isOpened"] = GraceFalse;
                                            var writer_rtobjectdraw_isOpened2041 = function(argcv, o) {
                                              this.data["isOpened"] = o;
                                              return GraceDone;
                                            };
                                            obj1780.methods["isOpened:=(1)"] = writer_rtobjectdraw_isOpened2041;
                                            reader_rtobjectdraw_isOpened2041.confidential = true;
                                            writer_rtobjectdraw_isOpened2041.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'isOpened' is not of type Boolean"));
                                            obj1780.mutable = true;
                                            obj1780.data["theWindow"] = undefined;
                                            var reader_rtobjectdraw_theWindow2042 = function() {
                                              return this.data["theWindow"];
                                            };
                                            obj1780.methods["theWindow"] = reader_rtobjectdraw_theWindow2042;
                                            obj1780.data["theWindow"] = undefined;
                                            var writer_rtobjectdraw_theWindow2042 = function(argcv, o) {
                                              this.data["theWindow"] = o;
                                              return GraceDone;
                                            };
                                            obj1780.methods["theWindow:=(1)"] = writer_rtobjectdraw_theWindow2042;
                                            reader_rtobjectdraw_theWindow2042.confidential = true;
                                            writer_rtobjectdraw_theWindow2042.confidential = true;
                                            obj1780.mutable = true;
                                            setLineNumber(996);    // compilenode identifier
                                            obj1780.data["theTitle"] = var_initialTitle;
                                            var reader_rtobjectdraw_theTitle2043 = function() {
                                              return this.data["theTitle"];
                                            };
                                            obj1780.methods["theTitle"] = reader_rtobjectdraw_theTitle2043;
                                            obj1780.data["theTitle"] = var_initialTitle;
                                            var writer_rtobjectdraw_theTitle2043 = function(argcv, o) {
                                              this.data["theTitle"] = o;
                                              return GraceDone;
                                            };
                                            obj1780.methods["theTitle:=(1)"] = writer_rtobjectdraw_theTitle2043;
                                            reader_rtobjectdraw_theTitle2043.confidential = true;
                                            writer_rtobjectdraw_theTitle2043.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_initialTitle)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'theTitle' is not of type String"));
                                            obj1780.mutable = true;
                                            setLineNumber(997);    // compilenode member
                                            // call case 6: other requests
                                            var call2045 = callmethodChecked(var_dimensions__39__, "x", []);
                                            obj1780.data["theWidth"] = call2045;
                                            var reader_rtobjectdraw_theWidth2046 = function() {
                                              return this.data["theWidth"];
                                            };
                                            obj1780.methods["theWidth"] = reader_rtobjectdraw_theWidth2046;
                                            obj1780.data["theWidth"] = call2045;
                                            var writer_rtobjectdraw_theWidth2046 = function(argcv, o) {
                                              this.data["theWidth"] = o;
                                              return GraceDone;
                                            };
                                            obj1780.methods["theWidth:=(1)"] = writer_rtobjectdraw_theWidth2046;
                                            reader_rtobjectdraw_theWidth2046.confidential = true;
                                            writer_rtobjectdraw_theWidth2046.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2045)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'theWidth' is not of type Number"));
                                            obj1780.mutable = true;
                                            setLineNumber(998);    // compilenode member
                                            // call case 6: other requests
                                            var call2048 = callmethodChecked(var_dimensions__39__, "y", []);
                                            obj1780.data["theHeight"] = call2048;
                                            var reader_rtobjectdraw_theHeight2049 = function() {
                                              return this.data["theHeight"];
                                            };
                                            obj1780.methods["theHeight"] = reader_rtobjectdraw_theHeight2049;
                                            obj1780.data["theHeight"] = call2048;
                                            var writer_rtobjectdraw_theHeight2049 = function(argcv, o) {
                                              this.data["theHeight"] = o;
                                              return GraceDone;
                                            };
                                            obj1780.methods["theHeight:=(1)"] = writer_rtobjectdraw_theHeight2049;
                                            reader_rtobjectdraw_theHeight2049.confidential = true;
                                            writer_rtobjectdraw_theHeight2049.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2048)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'theHeight' is not of type Number"));
                                            obj1780.mutable = true;
                                            setLineNumber(1000);    // compilenode array
                                            var array2050 = new PrimitiveGraceList([]);
                                            obj1780.data["events"] = array2050;
                                            var reader_rtobjectdraw_events2051 = function() {
                                              return this.data["events"];
                                            };
                                            reader_rtobjectdraw_events2051.def = true;
                                            reader_rtobjectdraw_events2051.confidential = true;
                                            obj1780.methods["events"] = reader_rtobjectdraw_events2051;
                                            setLineNumber(1011);    // compilenode identifier
                                            obj1780.data["isHorizontal"] = GraceTrue;
                                            var reader_rtobjectdraw_isHorizontal2052 = function() {
                                              return this.data["isHorizontal"];
                                            };
                                            obj1780.methods["isHorizontal"] = reader_rtobjectdraw_isHorizontal2052;
                                            obj1780.data["isHorizontal"] = GraceTrue;
                                            var writer_rtobjectdraw_isHorizontal2052 = function(argcv, o) {
                                              this.data["isHorizontal"] = o;
                                              return GraceDone;
                                            };
                                            obj1780.methods["isHorizontal:=(1)"] = writer_rtobjectdraw_isHorizontal2052;
                                            reader_rtobjectdraw_isHorizontal2052.confidential = true;
                                            writer_rtobjectdraw_isHorizontal2052.confidential = true;
                                            if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("initial value of var 'isHorizontal' is not of type Boolean"));
                                            obj1780.mutable = true;
                                            superDepth = origSuperDepth;
                                          };
                                          obj_init_1780.apply(obj1780, []);
                                          setLineNumber(986);    // return value
                                          if (!Grace_isTrue(callmethod(var_Application, "match(1)", [1], obj1780)))
                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                  new GraceString("result of method applicationTitle(_)size(_) does not have " + 
                                                      callmethod(var_Application, "asString", [0])._value + "."));
                                          return obj1780;
                                        };
                                        func1779.paramTypes = [];
                                        func1779.paramTypes.push([type_String, "initialTitle"]);
                                        func1779.paramTypes.push([]);
                                        func1779.paramCounts = [1, 1];
                                        this.methods["applicationTitle(1)size(1)"] = func1779;
                                        func1779.definitionLine = 986;
                                        func1779.definitionModule = "rtobjectdraw";
                                          var func2053 = function(argcv) {    // method applicationTitle(_)size(_)$object(_)
                                            var curarg = 1;
                                            var var_initialTitle = arguments[curarg];
                                            curarg++;
                                            var var_dimensions__39__ = arguments[curarg];
                                            curarg++;
                                            var inheritingObject = arguments[curarg++];
                                            // Start argument processing
                                            curarg = 1;
                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in applicationTitle (arg list 1), which corresponds to parameter initialTitle, does not have " + 
                                                        callmethod(var_String, "asString", [0])._value + "."));
                                            curarg++;
                                            setLineNumber(987);    // compilenode identifier
                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                            curarg++;
                                            // End argument processing
                                            setModuleName("rtobjectdraw");
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var obj2054 = Grace_allocObject(null, "applicationTitle(1)size(1)");
                                            obj2054.definitionModule = "rtobjectdraw";
                                            obj2054.definitionLine = 986;
                                            var inho2054 = inheritingObject;
                                            while (inho2054.superobj) inho2054 = inho2054.superobj;
                                            inho2054.superobj = obj2054;
                                            obj2054.data = inheritingObject.data;
                                            if (inheritingObject.hasOwnProperty('_value'))
                                              obj2054._value = inheritingObject._value;
                                            obj2054.outer = this;
                                            var reader_rtobjectdraw_outer2055 = function() {
                                              return this.outer;
                                            };
                                            obj2054.methods["outer"] = reader_rtobjectdraw_outer2055;
                                            var obj_init_2054 = function() {
                                              var origSuperDepth = superDepth;
                                              superDepth = obj2054;
                                              var func2056 = function(argcv) {    // method element
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2057 = GraceDone;
                                                setLineNumber(1003);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2059 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2059)) {
                                                  setLineNumber(1004);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2063 = callmethodChecked(this, "theWindow", []);
                                                  var call2064 = callmethodChecked(call2063, "document", []);
                                                  var call2065 = callmethodChecked(call2064, "body", []);
                                                  if2057 = call2065;
                                                } else {
                                                  setLineNumber(1006);    // compilenode member
                                                  // call case 1: super request
                                                  var call2067 = callmethodsuper(this, "element", []);
                                                  if2057 = call2067;
                                                }
                                                setLineNumber(1003);    // return value
                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], if2057)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method element does not have " + 
                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                return if2057;
                                              };
                                              func2056.paramCounts = [0];
                                              obj2054.methods["element"] = func2056;
                                              func2056.definitionLine = 1002;
                                              func2056.definitionModule = "rtobjectdraw";
                                              var func2068 = function(argcv) {    // method arrangeHorizontal
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2069 = GraceDone;
                                                setLineNumber(1016);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2071 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2071)) {
                                                  setLineNumber(1017);    // compilenode member
                                                  // call case 1: super request
                                                  var call2073 = callmethodsuper(this, "arrangeHorizontal", []);
                                                  if2069 = call2073;
                                                } else {
                                                  setLineNumber(1019);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2075 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceTrue);
                                                  if2069 = call2075;
                                                }
                                                setLineNumber(1016);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2069)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method arrangeHorizontal does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2069;
                                              };
                                              func2068.paramCounts = [0];
                                              obj2054.methods["arrangeHorizontal"] = func2068;
                                              func2068.definitionLine = 1015;
                                              func2068.definitionModule = "rtobjectdraw";
                                              var func2076 = function(argcv) {    // method arrangeVertical
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2077 = GraceDone;
                                                setLineNumber(1026);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2079 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2079)) {
                                                  setLineNumber(1027);    // compilenode member
                                                  // call case 1: super request
                                                  var call2081 = callmethodsuper(this, "arrangeVertical", []);
                                                  if2077 = call2081;
                                                } else {
                                                  setLineNumber(1029);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2083 = callmethodChecked(this, "isHorizontal:=(1)", [1], GraceFalse);
                                                  if2077 = call2083;
                                                }
                                                setLineNumber(1026);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2077)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method arrangeVertical does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2077;
                                              };
                                              func2076.paramCounts = [0];
                                              obj2054.methods["arrangeVertical"] = func2076;
                                              func2076.definitionLine = 1025;
                                              func2076.definitionModule = "rtobjectdraw";
                                              var func2084 = function(argcv) {    // method on(_)do(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_kind = arguments[curarg];
                                                curarg++;
                                                var var_response = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1034);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in on (arg list 1), which corresponds to parameter kind, does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                curarg++;
                                                setLineNumber(1035);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Procedure, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in do (arg list 2), which corresponds to parameter response, does not have " + 
                                                            callmethod(var_Procedure, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                var if2085 = GraceDone;
                                                setLineNumber(1036);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2087 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2087)) {
                                                  setLineNumber(1037);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2090 = callmethodChecked(this, "theWindow", []);
                                                  var call2091 = callmethodChecked(call2090, "addEventListener(2)", [2], var_kind, var_response);
                                                  if2085 = call2091;
                                                } else {
                                                  setLineNumber(1039);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call2095 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call2096 = callmethodChecked(call2095, "eventLogKind(1)response(1)", [1, 1], var_kind, var_response);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2098 = callmethodChecked(this, "events", []);
                                                  var call2099 = callmethodChecked(call2098, "push(1)", [1], call2096);
                                                  if2085 = call2099;
                                                }
                                                setLineNumber(1036);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2085)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method on(_)do(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2085;
                                              };
                                              func2084.paramTypes = [];
                                              func2084.paramTypes.push([type_String, "kind"]);
                                              func2084.paramTypes.push([]);
                                              func2084.confidential = true;
                                              func2084.paramCounts = [1, 1];
                                              obj2054.methods["on(1)do(1)"] = func2084;
                                              func2084.definitionLine = 1034;
                                              func2084.definitionModule = "rtobjectdraw";
                                              var func2100 = function(argcv) {    // method windowTitle
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2101 = GraceDone;
                                                setLineNumber(1045);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2103 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2103)) {
                                                  setLineNumber(1046);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2106 = callmethodChecked(this, "theWindow", []);
                                                  var call2107 = callmethodChecked(call2106, "title", []);
                                                  if2101 = call2107;
                                                } else {
                                                  setLineNumber(1048);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2109 = callmethodChecked(this, "theTitle", []);
                                                  if2101 = call2109;
                                                }
                                                setLineNumber(1045);    // return value
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if2101)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method windowTitle does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                return if2101;
                                              };
                                              func2100.paramCounts = [0];
                                              obj2054.methods["windowTitle"] = func2100;
                                              func2100.definitionLine = 1044;
                                              func2100.definitionModule = "rtobjectdraw";
                                              var func2110 = function(argcv) {    // method windowTitle:=(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_value = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1053);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in windowTitle:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                var if2111 = GraceDone;
                                                setLineNumber(1054);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2113 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2113)) {
                                                  setLineNumber(1055);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2116 = callmethodChecked(this, "theWindow", []);
                                                  var call2117 = callmethodChecked(call2116, "title:=(1)", [1], var_value);
                                                  if2111 = call2117;
                                                } else {
                                                  setLineNumber(1057);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2119 = callmethodChecked(this, "theTitle:=(1)", [1], var_value);
                                                  if2111 = call2119;
                                                }
                                                setLineNumber(1054);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2111)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method windowTitle:=(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2111;
                                              };
                                              func2110.paramTypes = [];
                                              func2110.paramTypes.push([type_String, "value"]);
                                              func2110.paramCounts = [1];
                                              obj2054.methods["windowTitle:=(1)"] = func2110;
                                              func2110.definitionLine = 1053;
                                              func2110.definitionModule = "rtobjectdraw";
                                              var func2120 = function(argcv) {    // method width
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2121 = GraceDone;
                                                setLineNumber(1063);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2123 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2123)) {
                                                  setLineNumber(1064);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2126 = callmethodChecked(this, "theWindow", []);
                                                  var call2127 = callmethodChecked(call2126, "width", []);
                                                  if2121 = call2127;
                                                } else {
                                                  setLineNumber(1066);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2129 = callmethodChecked(this, "theWidth", []);
                                                  if2121 = call2129;
                                                }
                                                setLineNumber(1063);    // return value
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if2121)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method width does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return if2121;
                                              };
                                              func2120.paramCounts = [0];
                                              obj2054.methods["width"] = func2120;
                                              func2120.definitionLine = 1062;
                                              func2120.definitionModule = "rtobjectdraw";
                                              var func2130 = function(argcv) {    // method height
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2131 = GraceDone;
                                                setLineNumber(1072);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2133 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2133)) {
                                                  setLineNumber(1073);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2136 = callmethodChecked(this, "theWindow", []);
                                                  var call2137 = callmethodChecked(call2136, "height", []);
                                                  if2131 = call2137;
                                                } else {
                                                  setLineNumber(1075);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2139 = callmethodChecked(this, "theHeight", []);
                                                  if2131 = call2139;
                                                }
                                                setLineNumber(1072);    // return value
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], if2131)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method height does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return if2131;
                                              };
                                              func2130.paramCounts = [0];
                                              obj2054.methods["height"] = func2130;
                                              func2130.definitionLine = 1071;
                                              func2130.definitionModule = "rtobjectdraw";
                                              var func2140 = function(argcv) {    // method onMouseEnterDo(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_f = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1085);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in onMouseEnterDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                            callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1086);    // compilenode string
                                                var string2142 = new GraceString("mouseover");
                                                var block2143 = new GraceBlock(this, 1086, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2143.real = function(var_event__39__) {
                                                  setLineNumber(1087);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2145 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                  var var_from = call2145;
                                                  var if2146 = GraceDone;
                                                  setLineNumber(1089);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2149 = callmethodChecked(var_dom, "noObject", []);
                                                  var opresult2151 = callmethodChecked(call2149, "==(1)", [1], var_from);
                                                  if (Grace_isTrue(opresult2151)) {
                                                    setLineNumber(1090);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call2155 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call2156 = callmethodChecked(call2155, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                    // call case 6: other requests
                                                    var call2157 = callmethodChecked(var_f, "apply(1)", [1], call2156);
                                                    if2146 = call2157;
                                                  }
                                                  return if2146;
                                                };
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2158 = callmethodChecked(this, "on(1)do(1)", [1, 1], string2142, block2143);
                                                setLineNumber(1086);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2158)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method onMouseEnterDo(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2158;
                                              };
                                              func2140.paramTypes = [];
                                              func2140.paramTypes.push([]);
                                              func2140.paramCounts = [1];
                                              obj2054.methods["onMouseEnterDo(1)"] = func2140;
                                              func2140.definitionLine = 1085;
                                              func2140.definitionModule = "rtobjectdraw";
                                              var func2159 = function(argcv) {    // method onMouseExitDo(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_f = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1096);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in onMouseExitDo (arg list 1), which corresponds to parameter f, does not have " + 
                                                            callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1097);    // compilenode string
                                                var string2161 = new GraceString("mouseout");
                                                var block2162 = new GraceBlock(this, 1097, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2162.real = function(var_event__39__) {
                                                  setLineNumber(1098);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2164 = callmethodChecked(var_event__39__, "relatedTarget", []);
                                                  var var_to = call2164;
                                                  var if2165 = GraceDone;
                                                  setLineNumber(1100);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2168 = callmethodChecked(var_dom, "noObject", []);
                                                  var opresult2170 = callmethodChecked(call2168, "==(1)", [1], var_to);
                                                  if (Grace_isTrue(opresult2170)) {
                                                    setLineNumber(1101);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call2174 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call2175 = callmethodChecked(call2174, "mouseEventSource(1)event(1)", [1, 1], this, var_event__39__);
                                                    // call case 6: other requests
                                                    var call2176 = callmethodChecked(var_f, "apply(1)", [1], call2175);
                                                    if2165 = call2176;
                                                  }
                                                  return if2165;
                                                };
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2177 = callmethodChecked(this, "on(1)do(1)", [1, 1], string2161, block2162);
                                                setLineNumber(1097);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2177)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method onMouseExitDo(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2177;
                                              };
                                              func2159.paramTypes = [];
                                              func2159.paramTypes.push([]);
                                              func2159.paramCounts = [1];
                                              obj2054.methods["onMouseExitDo(1)"] = func2159;
                                              func2159.definitionLine = 1096;
                                              func2159.definitionModule = "rtobjectdraw";
                                              var func2178 = function(argcv) {    // method onMouse(_)do(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_kind = arguments[curarg];
                                                curarg++;
                                                var var_bl = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1107);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in onMouse (arg list 1), which corresponds to parameter kind, does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                curarg++;
                                                if (!Grace_isTrue(callmethod(var_MouseResponse, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in do (arg list 2), which corresponds to parameter bl, does not have " + 
                                                            callmethod(var_MouseResponse, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1108);    // compilenode block
                                                var block2180 = new GraceBlock(this, 1108, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2180.real = function(var_evt) {
                                                  setLineNumber(1109);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2183 = callmethodChecked(var_evt, "pageY", []);
                                                  // call case 6: other requests
                                                  var call2186 = callmethodChecked(var_evt, "pageX", []);
                                                  var opresult2188 = callmethodChecked(call2186, "@(1)", [1], call2183);
                                                  // call case 6: other requests
                                                  var call2189 = callmethodChecked(var_bl, "apply(1)", [1], opresult2188);
                                                  return call2189;
                                                };
                                                // call case 6: other requests
                                                setLineNumber(1108);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2191 = callmethodChecked(this, "theWindow", []);
                                                var call2192 = callmethodChecked(call2191, "addEventListener(2)", [2], var_kind, block2180);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2192)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method onMouse(_)do(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2192;
                                              };
                                              func2178.paramTypes = [];
                                              func2178.paramTypes.push([type_String, "kind"]);
                                              func2178.paramTypes.push([]);
                                              func2178.confidential = true;
                                              func2178.paramCounts = [1, 1];
                                              obj2054.methods["onMouse(1)do(1)"] = func2178;
                                              func2178.definitionLine = 1107;
                                              func2178.definitionModule = "rtobjectdraw";
                                              var func2193 = function(argcv) {    // method startApplication
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2194 = GraceDone;
                                                setLineNumber(1115);    // compilenode call
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2197 = callmethodChecked(this, "isOpened", []);
                                                var call2198 = callmethodChecked(call2197, "prefix!", [0]);
                                                if (Grace_isTrue(call2198)) {
                                                  setLineNumber(1116);    // compilenode string
                                                  var string2201 = new GraceString("");
                                                  var string2202 = new GraceString("");
                                                  var string2203 = new GraceString("");
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2206 = callmethodChecked(this, "theHeight", []);
                                                  var string2208 = new GraceString(",height=");
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2211 = callmethodChecked(this, "theWidth", []);
                                                  var string2213 = new GraceString("width=");
                                                  var opresult2215 = callmethodChecked(string2213, "++(1)", [1], call2211);
                                                  var opresult2217 = callmethodChecked(opresult2215, "++(1)", [1], string2208);
                                                  var opresult2219 = callmethodChecked(opresult2217, "++(1)", [1], call2206);
                                                  var opresult2221 = callmethodChecked(opresult2219, "++(1)", [1], string2203);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2223 = callmethodChecked(var_dom, "window", []);
                                                  var call2224 = callmethodChecked(call2223, "open(3)", [3], string2201, string2202, opresult2221);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2225 = callmethodChecked(this, "theWindow:=(1)", [1], call2224);
                                                  setLineNumber(1117);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2228 = callmethodChecked(this, "theTitle", []);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2231 = callmethodChecked(this, "theWindow", []);
                                                  var call2232 = callmethodChecked(call2231, "document", []);
                                                  var call2233 = callmethodChecked(call2232, "title:=(1)", [1], call2228);
                                                  setLineNumber(1118);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2236 = callmethodChecked(this, "element", []);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2240 = callmethodChecked(this, "theWindow", []);
                                                  var call2241 = callmethodChecked(call2240, "document", []);
                                                  var call2242 = callmethodChecked(call2241, "body", []);
                                                  var call2243 = callmethodChecked(call2242, "appendChild(1)", [1], call2236);
                                                  var if2244 = GraceDone;
                                                  setLineNumber(1120);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2247 = callmethodChecked(var_dom, "window", []);
                                                  var string2248 = new GraceString("graceRegisterWindow");
                                                  // call case 6: other requests
                                                  var call2249 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call2247, string2248);
                                                  if (Grace_isTrue(call2249)) {
                                                    setLineNumber(1121);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2252 = callmethodChecked(this, "theWindow", []);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call2254 = callmethodChecked(var_dom, "window", []);
                                                    var call2255 = callmethodChecked(call2254, "graceRegisterWindow(1)", [1], call2252);
                                                    if2244 = call2255;
                                                  }
                                                  setLineNumber(1124);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2257 = callmethodChecked(this, "isOpened:=(1)", [1], GraceTrue);
                                                  setLineNumber(1126);    // compilenode string
                                                  var string2259 = new GraceString("100%");
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2262 = callmethodChecked(this, "element", []);
                                                  var call2263 = callmethodChecked(call2262, "style", []);
                                                  var call2264 = callmethodChecked(call2263, "width:=(1)", [1], string2259);
                                                  setLineNumber(1127);    // compilenode string
                                                  var string2266 = new GraceString("0px");
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2269 = callmethodChecked(this, "element", []);
                                                  var call2270 = callmethodChecked(call2269, "style", []);
                                                  var call2271 = callmethodChecked(call2270, "margin:=(1)", [1], string2266);
                                                  var if2272 = GraceDone;
                                                  setLineNumber(1129);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2274 = callmethodChecked(this, "isHorizontal", []);
                                                  if (Grace_isTrue(call2274)) {
                                                    setLineNumber(1130);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2276 = callmethodChecked(this, "arrangeHorizontal", []);
                                                    if2272 = call2276;
                                                  } else {
                                                    setLineNumber(1132);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2278 = callmethodChecked(this, "arrangeVertical", []);
                                                    if2272 = call2278;
                                                  }
                                                  setLineNumber(1135);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2281 = callmethodChecked(this, "events", []);
                                                  var block2282 = new GraceBlock(this, 1135, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2282.real = function(var_anEvent) {
                                                    setLineNumber(1136);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2285 = callmethodChecked(var_anEvent, "kind", []);
                                                    // call case 6: other requests
                                                    var call2287 = callmethodChecked(var_anEvent, "response", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2288 = callmethodChecked(this, "on(1)do(1)", [1, 1], call2285, call2287);
                                                    return call2288;
                                                  };
                                                  // call case 5: prelude request
                                                  var call2289 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2281, block2282);
                                                  if2194 = call2289;
                                                }
                                                setLineNumber(1115);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2194)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method startApplication does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2194;
                                              };
                                              func2193.paramCounts = [0];
                                              obj2054.methods["startApplication"] = func2193;
                                              func2193.definitionLine = 1114;
                                              func2193.definitionModule = "rtobjectdraw";
                                              var func2290 = function(argcv) {    // method stopApplication
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                var if2291 = GraceDone;
                                                setLineNumber(1143);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2293 = callmethodChecked(this, "isOpened", []);
                                                if (Grace_isTrue(call2293)) {
                                                  setLineNumber(1144);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2296 = callmethodChecked(this, "theWindow", []);
                                                  var call2297 = callmethodChecked(call2296, "close", []);
                                                  if2291 = call2297;
                                                }
                                                setLineNumber(1143);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2291)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method stopApplication does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2291;
                                              };
                                              func2290.paramCounts = [0];
                                              obj2054.methods["stopApplication"] = func2290;
                                              func2290.definitionLine = 1142;
                                              func2290.definitionModule = "rtobjectdraw";
                                              var func2298 = function(argcv) {    // method asString
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1150);    // compilenode string
                                                var string2299 = new GraceString("");
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2302 = callmethodChecked(this, "windowTitle", []);
                                                var string2304 = new GraceString("application titled ");
                                                var opresult2306 = callmethodChecked(string2304, "++(1)", [1], call2302);
                                                var opresult2308 = callmethodChecked(opresult2306, "++(1)", [1], string2299);
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2308)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method asString does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                return opresult2308;
                                              };
                                              func2298.paramCounts = [0];
                                              obj2054.methods["asString"] = func2298;
                                              func2298.definitionLine = 1149;
                                              func2298.definitionModule = "rtobjectdraw";
                                              setLineNumber(991);    // compilenode member
                                              // call case 6: other requests
                                              var call2311 = callmethodChecked(var_document, "createDocumentFragment", []);
                                              // call case 6: other requests
                                              setLineNumber(0);    // compilenode member
                                              // call case 3: self.outer request
                                              var call2313 = callmethodChecked(superDepth, "outer", [0]);
                                              onSelf = true;
                                              var call2314 = callmethodChecked(call2313, "containerFromElement(1)$object(1)", [1, 1], call2311, this);
                                              obj2054.superobj = call2314;
                                              if (call2314.data) obj2054.data = call2314.data;
                                              if (call2314.hasOwnProperty('_value'))
                                                  obj2054._value = call2314._value;
                                              setLineNumber(993);    // compilenode identifier
                                              obj2054.data["isOpened"] = GraceFalse;
                                              var reader_rtobjectdraw_isOpened2315 = function() {
                                                return this.data["isOpened"];
                                              };
                                              obj2054.methods["isOpened"] = reader_rtobjectdraw_isOpened2315;
                                              obj2054.data["isOpened"] = GraceFalse;
                                              var writer_rtobjectdraw_isOpened2315 = function(argcv, o) {
                                                this.data["isOpened"] = o;
                                                return GraceDone;
                                              };
                                              obj2054.methods["isOpened:=(1)"] = writer_rtobjectdraw_isOpened2315;
                                              reader_rtobjectdraw_isOpened2315.confidential = true;
                                              writer_rtobjectdraw_isOpened2315.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'isOpened' is not of type Boolean"));
                                              obj2054.mutable = true;
                                              obj2054.data["theWindow"] = undefined;
                                              var reader_rtobjectdraw_theWindow2316 = function() {
                                                return this.data["theWindow"];
                                              };
                                              obj2054.methods["theWindow"] = reader_rtobjectdraw_theWindow2316;
                                              obj2054.data["theWindow"] = undefined;
                                              var writer_rtobjectdraw_theWindow2316 = function(argcv, o) {
                                                this.data["theWindow"] = o;
                                                return GraceDone;
                                              };
                                              obj2054.methods["theWindow:=(1)"] = writer_rtobjectdraw_theWindow2316;
                                              reader_rtobjectdraw_theWindow2316.confidential = true;
                                              writer_rtobjectdraw_theWindow2316.confidential = true;
                                              obj2054.mutable = true;
                                              setLineNumber(996);    // compilenode identifier
                                              obj2054.data["theTitle"] = var_initialTitle;
                                              var reader_rtobjectdraw_theTitle2317 = function() {
                                                return this.data["theTitle"];
                                              };
                                              obj2054.methods["theTitle"] = reader_rtobjectdraw_theTitle2317;
                                              obj2054.data["theTitle"] = var_initialTitle;
                                              var writer_rtobjectdraw_theTitle2317 = function(argcv, o) {
                                                this.data["theTitle"] = o;
                                                return GraceDone;
                                              };
                                              obj2054.methods["theTitle:=(1)"] = writer_rtobjectdraw_theTitle2317;
                                              reader_rtobjectdraw_theTitle2317.confidential = true;
                                              writer_rtobjectdraw_theTitle2317.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_initialTitle)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'theTitle' is not of type String"));
                                              obj2054.mutable = true;
                                              setLineNumber(997);    // compilenode member
                                              // call case 6: other requests
                                              var call2319 = callmethodChecked(var_dimensions__39__, "x", []);
                                              obj2054.data["theWidth"] = call2319;
                                              var reader_rtobjectdraw_theWidth2320 = function() {
                                                return this.data["theWidth"];
                                              };
                                              obj2054.methods["theWidth"] = reader_rtobjectdraw_theWidth2320;
                                              obj2054.data["theWidth"] = call2319;
                                              var writer_rtobjectdraw_theWidth2320 = function(argcv, o) {
                                                this.data["theWidth"] = o;
                                                return GraceDone;
                                              };
                                              obj2054.methods["theWidth:=(1)"] = writer_rtobjectdraw_theWidth2320;
                                              reader_rtobjectdraw_theWidth2320.confidential = true;
                                              writer_rtobjectdraw_theWidth2320.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2319)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'theWidth' is not of type Number"));
                                              obj2054.mutable = true;
                                              setLineNumber(998);    // compilenode member
                                              // call case 6: other requests
                                              var call2322 = callmethodChecked(var_dimensions__39__, "y", []);
                                              obj2054.data["theHeight"] = call2322;
                                              var reader_rtobjectdraw_theHeight2323 = function() {
                                                return this.data["theHeight"];
                                              };
                                              obj2054.methods["theHeight"] = reader_rtobjectdraw_theHeight2323;
                                              obj2054.data["theHeight"] = call2322;
                                              var writer_rtobjectdraw_theHeight2323 = function(argcv, o) {
                                                this.data["theHeight"] = o;
                                                return GraceDone;
                                              };
                                              obj2054.methods["theHeight:=(1)"] = writer_rtobjectdraw_theHeight2323;
                                              reader_rtobjectdraw_theHeight2323.confidential = true;
                                              writer_rtobjectdraw_theHeight2323.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2322)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'theHeight' is not of type Number"));
                                              obj2054.mutable = true;
                                              setLineNumber(1000);    // compilenode array
                                              var array2324 = new PrimitiveGraceList([]);
                                              obj2054.data["events"] = array2324;
                                              var reader_rtobjectdraw_events2325 = function() {
                                                return this.data["events"];
                                              };
                                              reader_rtobjectdraw_events2325.def = true;
                                              reader_rtobjectdraw_events2325.confidential = true;
                                              obj2054.methods["events"] = reader_rtobjectdraw_events2325;
                                              setLineNumber(1011);    // compilenode identifier
                                              obj2054.data["isHorizontal"] = GraceTrue;
                                              var reader_rtobjectdraw_isHorizontal2326 = function() {
                                                return this.data["isHorizontal"];
                                              };
                                              obj2054.methods["isHorizontal"] = reader_rtobjectdraw_isHorizontal2326;
                                              obj2054.data["isHorizontal"] = GraceTrue;
                                              var writer_rtobjectdraw_isHorizontal2326 = function(argcv, o) {
                                                this.data["isHorizontal"] = o;
                                                return GraceDone;
                                              };
                                              obj2054.methods["isHorizontal:=(1)"] = writer_rtobjectdraw_isHorizontal2326;
                                              reader_rtobjectdraw_isHorizontal2326.confidential = true;
                                              writer_rtobjectdraw_isHorizontal2326.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'isHorizontal' is not of type Boolean"));
                                              obj2054.mutable = true;
                                              superDepth = origSuperDepth;
                                            };
                                            obj_init_2054.apply(inheritingObject, []);
                                            return obj2054;
                                            };
                                            func2053.paramTypes = [];
                                            func2053.paramTypes.push([type_String, "initialTitle"]);
                                            func2053.paramTypes.push([]);
                                            this.methods["applicationTitle(1)size(1)$object(1)"] = func2053;
                                          setLineNumber(1154);    // compilenode method
                                          var func2327 = function(argcv) {    // method drawingCanvasSize(_)
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            var var_dimensions__39__ = arguments[curarg];
                                            curarg++;
                                            // Start argument checking
                                            curarg = 1;
                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("argument 1 in drawingCanvasSize (arg list 1), which corresponds to parameter dimensions', does not have " + 
                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                            curarg++;
                                            // End argument checking
                                            setModuleName("rtobjectdraw");
                                            var obj2328 = Grace_allocObject(null, "drawingCanvasSize(_)");
                                            obj2328.definitionModule = "rtobjectdraw";
                                            obj2328.definitionLine = 1154;
                                            obj2328.outer = this;
                                            var reader_rtobjectdraw_outer2329 = function() {
                                              return this.outer;
                                            };
                                            obj2328.methods["outer"] = reader_rtobjectdraw_outer2329;
                                            var obj_init_2328 = function() {
                                              var origSuperDepth = superDepth;
                                              superDepth = obj2328;
                                              var func2330 = function(argcv) {    // method width
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1169);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2333 = callmethodChecked(this, "element", []);
                                                var call2334 = callmethodChecked(call2333, "width", []);
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2334)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method width does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return call2334;
                                              };
                                              func2330.paramCounts = [0];
                                              obj2328.methods["width"] = func2330;
                                              func2330.definitionLine = 1168;
                                              func2330.definitionModule = "rtobjectdraw";
                                              var func2335 = function(argcv) {    // method height
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1174);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2338 = callmethodChecked(this, "element", []);
                                                var call2339 = callmethodChecked(call2338, "height", []);
                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2339)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method height does not have " + 
                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                return call2339;
                                              };
                                              func2335.paramCounts = [0];
                                              obj2328.methods["height"] = func2335;
                                              func2335.definitionLine = 1173;
                                              func2335.definitionModule = "rtobjectdraw";
                                              var func2340 = function(argcv) {    // method size
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1177);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2343 = callmethodChecked(this, "element", []);
                                                var call2344 = callmethodChecked(call2343, "height", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2348 = callmethodChecked(this, "element", []);
                                                var call2349 = callmethodChecked(call2348, "width", []);
                                                var opresult2351 = callmethodChecked(call2349, "@(1)", [1], call2344);
                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult2351)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method size does not have " + 
                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                return opresult2351;
                                              };
                                              func2340.paramCounts = [0];
                                              obj2328.methods["size"] = func2340;
                                              func2340.definitionLine = 1177;
                                              func2340.definitionModule = "rtobjectdraw";
                                              var func2352 = function(argcv) {    // method notifyRedraw
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1186);    // compilenode identifier
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2354 = callmethodChecked(this, "redraw:=(1)", [1], GraceTrue);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2354)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method notifyRedraw does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2354;
                                              };
                                              func2352.paramCounts = [0];
                                              obj2328.methods["notifyRedraw"] = func2352;
                                              func2352.definitionLine = 1185;
                                              func2352.definitionModule = "rtobjectdraw";
                                              var func2355 = function(argcv) {    // method startDrawing
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1191);    // compilenode block
                                                var block2357 = new GraceBlock(this, 1191, 0);
                                                block2357.real = function() {
                                                  var if2358 = GraceDone;
                                                  setLineNumber(1192);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2360 = callmethodChecked(this, "redraw", []);
                                                  if (Grace_isTrue(call2360)) {
                                                    setLineNumber(1193);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2363 = callmethodChecked(this, "theContext", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2365 = callmethodChecked(this, "theGraphics", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2367 = callmethodChecked(this, "width", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2369 = callmethodChecked(this, "height", []);
                                                    // call case 6: other requests
                                                    var call2370 = callmethodChecked(var_dom, "draw(4)", [4], call2363, call2365, call2367, call2369);
                                                    if2358 = call2370;
                                                  }
                                                  return if2358;
                                                };
                                                setLineNumber(1195);    // compilenode num
                                                var quotient2373 = callmethodChecked(new GraceNum(1000), "/(1)", [1], var_frameRate);
                                                // call case 6: other requests
                                                setLineNumber(1191);    // compilenode member
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2377 = callmethodChecked(this, "element", []);
                                                var call2378 = callmethodChecked(call2377, "ownerDocument", []);
                                                var call2379 = callmethodChecked(call2378, "defaultView", []);
                                                var call2380 = callmethodChecked(call2379, "setInterval(2)", [2], block2357, quotient2373);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2380)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method startDrawing does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2380;
                                              };
                                              func2355.paramCounts = [0];
                                              obj2328.methods["startDrawing"] = func2355;
                                              func2355.definitionLine = 1190;
                                              func2355.definitionModule = "rtobjectdraw";
                                              var func2381 = function(argcv) {    // method clear
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1200);    // compilenode array
                                                var array2383 = new PrimitiveGraceList([]);
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2384 = callmethodChecked(this, "theGraphics:=(1)", [1], array2383);
                                                setLineNumber(1201);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2386 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2386)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method clear does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2386;
                                              };
                                              func2381.paramCounts = [0];
                                              obj2328.methods["clear"] = func2381;
                                              func2381.definitionLine = 1199;
                                              func2381.definitionModule = "rtobjectdraw";
                                              var func2387 = function(argcv) {    // method add(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_d = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1205);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in add (arg list 1), which corresponds to parameter d, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1206);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2390 = callmethodChecked(this, "theGraphics", []);
                                                var call2391 = callmethodChecked(call2390, "push(1)", [1], var_d);
                                                setLineNumber(1207);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2393 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2393)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method add(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2393;
                                              };
                                              func2387.paramTypes = [];
                                              func2387.paramTypes.push([]);
                                              func2387.paramCounts = [1];
                                              obj2328.methods["add(1)"] = func2387;
                                              func2387.definitionLine = 1205;
                                              func2387.definitionModule = "rtobjectdraw";
                                              var func2394 = function(argcv) {    // method remove(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1211);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in remove (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                var if2395 = GraceDone;
                                                setLineNumber(1212);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2398 = callmethodChecked(this, "theGraphics", []);
                                                var call2399 = callmethodChecked(call2398, "contains(1)", [1], var_aGraphic);
                                                if (Grace_isTrue(call2399)) {
                                                  setLineNumber(1213);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2402 = callmethodChecked(this, "theGraphics", []);
                                                  var call2403 = callmethodChecked(call2402, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1214);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2405 = callmethodChecked(this, "notifyRedraw", []);
                                                  if2395 = call2405;
                                                }
                                                setLineNumber(1212);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2395)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method remove(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2395;
                                              };
                                              func2394.paramTypes = [];
                                              func2394.paramTypes.push([]);
                                              func2394.paramCounts = [1];
                                              obj2328.methods["remove(1)"] = func2394;
                                              func2394.definitionLine = 1211;
                                              func2394.definitionModule = "rtobjectdraw";
                                              var func2406 = function(argcv) {    // method sendToFront(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1219);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendToFront (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1220);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2409 = callmethodChecked(this, "theGraphics", []);
                                                var call2410 = callmethodChecked(call2409, "remove(1)", [1], var_aGraphic);
                                                setLineNumber(1221);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2413 = callmethodChecked(this, "theGraphics", []);
                                                var call2414 = callmethodChecked(call2413, "push(1)", [1], var_aGraphic);
                                                setLineNumber(1222);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2416 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2416)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendToFront(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2416;
                                              };
                                              func2406.paramTypes = [];
                                              func2406.paramTypes.push([]);
                                              func2406.paramCounts = [1];
                                              obj2328.methods["sendToFront(1)"] = func2406;
                                              func2406.definitionLine = 1219;
                                              func2406.definitionModule = "rtobjectdraw";
                                              var func2417 = function(argcv) {    // method sendToBack(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1226);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendToBack (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1227);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2420 = callmethodChecked(this, "theGraphics", []);
                                                var call2421 = callmethodChecked(call2420, "remove(1)", [1], var_aGraphic);
                                                setLineNumber(1228);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2424 = callmethodChecked(this, "theGraphics", []);
                                                var call2425 = callmethodChecked(call2424, "unshift(1)", [1], var_aGraphic);
                                                setLineNumber(1229);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2427 = callmethodChecked(this, "notifyRedraw", []);
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2427)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendToBack(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2427;
                                              };
                                              func2417.paramTypes = [];
                                              func2417.paramTypes.push([]);
                                              func2417.paramCounts = [1];
                                              obj2328.methods["sendToBack(1)"] = func2417;
                                              func2417.definitionLine = 1226;
                                              func2417.definitionModule = "rtobjectdraw";
                                              var func2428 = function(argcv) {    // method sendForward(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1233);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendForward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1234);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2431 = callmethodChecked(this, "theGraphics", []);
                                                var call2432 = callmethodChecked(call2431, "indexOf(1)", [1], var_aGraphic);
                                                var var_theIndex = call2432;
                                                var if2433 = GraceDone;
                                                setLineNumber(1236);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2436 = callmethodChecked(this, "theGraphics", []);
                                                var call2437 = callmethodChecked(call2436, "size", []);
                                                var opresult2440 = callmethodChecked(var_theIndex, "\u2260(1)", [1], call2437);
                                                if (Grace_isTrue(opresult2440)) {
                                                  setLineNumber(1237);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2443 = callmethodChecked(this, "theGraphics", []);
                                                  var call2444 = callmethodChecked(call2443, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1238);    // compilenode identifier
                                                  var opresult2448 = callmethodChecked(var_theIndex, "+(1)", [1], new GraceNum(1));
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2450 = callmethodChecked(this, "theGraphics", []);
                                                  var call2451 = callmethodChecked(call2450, "at(1)add(1)", [1, 1], opresult2448, var_aGraphic);
                                                  setLineNumber(1239);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2453 = callmethodChecked(this, "notifyRedraw", []);
                                                  if2433 = call2453;
                                                }
                                                setLineNumber(1236);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2433)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendForward(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2433;
                                              };
                                              func2428.paramTypes = [];
                                              func2428.paramTypes.push([]);
                                              func2428.paramCounts = [1];
                                              obj2328.methods["sendForward(1)"] = func2428;
                                              func2428.definitionLine = 1233;
                                              func2428.definitionModule = "rtobjectdraw";
                                              var func2454 = function(argcv) {    // method sendBackward(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_aGraphic = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                setLineNumber(1244);    // compilenode identifier
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in sendBackward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1245);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2457 = callmethodChecked(this, "theGraphics", []);
                                                var call2458 = callmethodChecked(call2457, "indexOf(1)", [1], var_aGraphic);
                                                var var_theIndex = call2458;
                                                var if2459 = GraceDone;
                                                setLineNumber(1247);    // compilenode identifier
                                                var opresult2462 = callmethodChecked(var_theIndex, "\u2260(1)", [1], new GraceNum(1));
                                                if (Grace_isTrue(opresult2462)) {
                                                  setLineNumber(1248);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2465 = callmethodChecked(this, "theGraphics", []);
                                                  var call2466 = callmethodChecked(call2465, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1249);    // compilenode identifier
                                                  var diff2470 = callmethodChecked(var_theIndex, "-(1)", [1], new GraceNum(1));
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2472 = callmethodChecked(this, "theGraphics", []);
                                                  var call2473 = callmethodChecked(call2472, "at(1)add(1)", [1, 1], diff2470, var_aGraphic);
                                                  setLineNumber(1250);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2475 = callmethodChecked(this, "notifyRedraw", []);
                                                  if2459 = call2475;
                                                }
                                                setLineNumber(1247);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2459)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method sendBackward(_) does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return if2459;
                                              };
                                              func2454.paramTypes = [];
                                              func2454.paramTypes.push([]);
                                              func2454.paramCounts = [1];
                                              obj2328.methods["sendBackward(1)"] = func2454;
                                              func2454.definitionLine = 1244;
                                              func2454.definitionModule = "rtobjectdraw";
                                              var func2476 = function(argcv) {    // method printObjects
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1256);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2479 = callmethodChecked(this, "theGraphics", []);
                                                var block2480 = new GraceBlock(this, 1256, 1);
                                                setLineNumber(1);    // compilenode identifier
                                                block2480.real = function(var_aGraphic) {
                                                  setLineNumber(1257);    // compilenode identifier
                                                  var call2481 = Grace_print(var_aGraphic);
                                                  return call2481;
                                                };
                                                // call case 5: prelude request
                                                var call2482 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2479, block2480);
                                                setLineNumber(1256);    // return value
                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2482)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method printObjects does not have " + 
                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                return call2482;
                                              };
                                              func2476.paramCounts = [0];
                                              obj2328.methods["printObjects"] = func2476;
                                              func2476.definitionLine = 1255;
                                              func2476.definitionModule = "rtobjectdraw";
                                              var func2483 = function(argcv) {    // method asString
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                setModuleName("rtobjectdraw");
                                                setLineNumber(1263);    // compilenode string
                                                var string2484 = new GraceString(" objects");
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2488 = callmethodChecked(this, "theGraphics", []);
                                                var call2489 = callmethodChecked(call2488, "size", []);
                                                var string2491 = new GraceString("canvas: with ");
                                                var opresult2493 = callmethodChecked(string2491, "++(1)", [1], call2489);
                                                var opresult2495 = callmethodChecked(opresult2493, "++(1)", [1], string2484);
                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2495)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method asString does not have " + 
                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                return opresult2495;
                                              };
                                              func2483.paramCounts = [0];
                                              obj2328.methods["asString"] = func2483;
                                              func2483.definitionLine = 1262;
                                              func2483.definitionModule = "rtobjectdraw";
                                              setLineNumber(1158);    // compilenode string
                                              var string2498 = new GraceString("canvas");
                                              // call case 6: other requests
                                              var call2499 = callmethodChecked(var_document, "createElement(1)", [1], string2498);
                                              // call case 6: other requests
                                              setLineNumber(0);    // compilenode member
                                              // call case 3: self.outer request
                                              var call2501 = callmethodChecked(superDepth, "outer", [0]);
                                              onSelf = true;
                                              var call2502 = callmethodChecked(call2501, "componentFromElement(1)$object(1)", [1, 1], call2499, this);
                                              obj2328.superobj = call2502;
                                              if (call2502.data) obj2328.data = call2502.data;
                                              if (call2502.hasOwnProperty('_value'))
                                                  obj2328._value = call2502._value;
                                              setLineNumber(1160);    // compilenode member
                                              // call case 6: other requests
                                              var call2505 = callmethodChecked(var_dimensions__39__, "x", []);
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2507 = callmethodChecked(this, "element", []);
                                              var call2508 = callmethodChecked(call2507, "width:=(1)", [1], call2505);
                                              setLineNumber(1161);    // compilenode member
                                              // call case 6: other requests
                                              var call2511 = callmethodChecked(var_dimensions__39__, "y", []);
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2513 = callmethodChecked(this, "element", []);
                                              var call2514 = callmethodChecked(call2513, "height:=(1)", [1], call2511);
                                              setLineNumber(1162);    // compilenode string
                                              var string2516 = new GraceString("center");
                                              // call case 6: other requests
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2519 = callmethodChecked(this, "element", []);
                                              var call2520 = callmethodChecked(call2519, "style", []);
                                              var call2521 = callmethodChecked(call2520, "alignSelf:=(1)", [1], string2516);
                                              setLineNumber(1164);    // compilenode string
                                              var string2523 = new GraceString("2d");
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2525 = callmethodChecked(this, "element", []);
                                              var call2526 = callmethodChecked(call2525, "getContext(1)", [1], string2523);
                                              obj2328.data["theContext"] = call2526;
                                              var reader_rtobjectdraw_theContext2527 = function() {
                                                return this.data["theContext"];
                                              };
                                              reader_rtobjectdraw_theContext2527.def = true;
                                              reader_rtobjectdraw_theContext2527.confidential = true;
                                              obj2328.methods["theContext"] = reader_rtobjectdraw_theContext2527;
                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call2526)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("value of def 'theContext' is not of type Foreign"));
                                              setLineNumber(1165);    // compilenode num
                                              // call case 6: other requests
                                              // call case 4: self request
                                              onSelf = true;
                                              var call2530 = callmethodChecked(this, "theContext", []);
                                              var call2531 = callmethodChecked(call2530, "lineWidth:=(1)", [1], new GraceNum(2));
                                              setLineNumber(1180);    // compilenode array
                                              var array2532 = new PrimitiveGraceList([]);
                                              obj2328.data["theGraphics"] = array2532;
                                              var reader_rtobjectdraw_theGraphics2533 = function() {
                                                return this.data["theGraphics"];
                                              };
                                              obj2328.methods["theGraphics"] = reader_rtobjectdraw_theGraphics2533;
                                              obj2328.data["theGraphics"] = array2532;
                                              var writer_rtobjectdraw_theGraphics2533 = function(argcv, o) {
                                                this.data["theGraphics"] = o;
                                                return GraceDone;
                                              };
                                              obj2328.methods["theGraphics:=(1)"] = writer_rtobjectdraw_theGraphics2533;
                                              reader_rtobjectdraw_theGraphics2533.confidential = true;
                                              writer_rtobjectdraw_theGraphics2533.confidential = true;
                                              obj2328.mutable = true;
                                              setLineNumber(1182);    // compilenode identifier
                                              obj2328.data["redraw"] = GraceFalse;
                                              var reader_rtobjectdraw_redraw2534 = function() {
                                                return this.data["redraw"];
                                              };
                                              obj2328.methods["redraw"] = reader_rtobjectdraw_redraw2534;
                                              obj2328.data["redraw"] = GraceFalse;
                                              var writer_rtobjectdraw_redraw2534 = function(argcv, o) {
                                                this.data["redraw"] = o;
                                                return GraceDone;
                                              };
                                              obj2328.methods["redraw:=(1)"] = writer_rtobjectdraw_redraw2534;
                                              reader_rtobjectdraw_redraw2534.confidential = true;
                                              writer_rtobjectdraw_redraw2534.confidential = true;
                                              if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("initial value of var 'redraw' is not of type Boolean"));
                                              obj2328.mutable = true;
                                              superDepth = origSuperDepth;
                                            };
                                            obj_init_2328.apply(obj2328, []);
                                            setLineNumber(1154);    // return value
                                            if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], obj2328)))
                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                    new GraceString("result of method drawingCanvasSize(_) does not have " + 
                                                        callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                            return obj2328;
                                          };
                                          func2327.paramTypes = [];
                                          func2327.paramTypes.push([]);
                                          func2327.paramCounts = [1];
                                          this.methods["drawingCanvasSize(1)"] = func2327;
                                          func2327.definitionLine = 1154;
                                          func2327.definitionModule = "rtobjectdraw";
                                            var func2535 = function(argcv) {    // method drawingCanvasSize(_)$object(_)
                                              var curarg = 1;
                                              var var_dimensions__39__ = arguments[curarg];
                                              curarg++;
                                              var inheritingObject = arguments[curarg++];
                                              // Start argument processing
                                              curarg = 1;
                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in drawingCanvasSize (arg list 1), which corresponds to parameter dimensions', does not have " + 
                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument processing
                                              setModuleName("rtobjectdraw");
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var obj2536 = Grace_allocObject(null, "drawingCanvasSize(1)");
                                              obj2536.definitionModule = "rtobjectdraw";
                                              obj2536.definitionLine = 1154;
                                              var inho2536 = inheritingObject;
                                              while (inho2536.superobj) inho2536 = inho2536.superobj;
                                              inho2536.superobj = obj2536;
                                              obj2536.data = inheritingObject.data;
                                              if (inheritingObject.hasOwnProperty('_value'))
                                                obj2536._value = inheritingObject._value;
                                              obj2536.outer = this;
                                              var reader_rtobjectdraw_outer2537 = function() {
                                                return this.outer;
                                              };
                                              obj2536.methods["outer"] = reader_rtobjectdraw_outer2537;
                                              var obj_init_2536 = function() {
                                                var origSuperDepth = superDepth;
                                                superDepth = obj2536;
                                                var func2538 = function(argcv) {    // method width
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1169);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2541 = callmethodChecked(this, "element", []);
                                                  var call2542 = callmethodChecked(call2541, "width", []);
                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2542)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method width does not have " + 
                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                  return call2542;
                                                };
                                                func2538.paramCounts = [0];
                                                obj2536.methods["width"] = func2538;
                                                func2538.definitionLine = 1168;
                                                func2538.definitionModule = "rtobjectdraw";
                                                var func2543 = function(argcv) {    // method height
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1174);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2546 = callmethodChecked(this, "element", []);
                                                  var call2547 = callmethodChecked(call2546, "height", []);
                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call2547)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method height does not have " + 
                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                  return call2547;
                                                };
                                                func2543.paramCounts = [0];
                                                obj2536.methods["height"] = func2543;
                                                func2543.definitionLine = 1173;
                                                func2543.definitionModule = "rtobjectdraw";
                                                var func2548 = function(argcv) {    // method size
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1177);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2551 = callmethodChecked(this, "element", []);
                                                  var call2552 = callmethodChecked(call2551, "height", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2556 = callmethodChecked(this, "element", []);
                                                  var call2557 = callmethodChecked(call2556, "width", []);
                                                  var opresult2559 = callmethodChecked(call2557, "@(1)", [1], call2552);
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult2559)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method size does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  return opresult2559;
                                                };
                                                func2548.paramCounts = [0];
                                                obj2536.methods["size"] = func2548;
                                                func2548.definitionLine = 1177;
                                                func2548.definitionModule = "rtobjectdraw";
                                                var func2560 = function(argcv) {    // method notifyRedraw
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1186);    // compilenode identifier
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2562 = callmethodChecked(this, "redraw:=(1)", [1], GraceTrue);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2562)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method notifyRedraw does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2562;
                                                };
                                                func2560.paramCounts = [0];
                                                obj2536.methods["notifyRedraw"] = func2560;
                                                func2560.definitionLine = 1185;
                                                func2560.definitionModule = "rtobjectdraw";
                                                var func2563 = function(argcv) {    // method startDrawing
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1191);    // compilenode block
                                                  var block2565 = new GraceBlock(this, 1191, 0);
                                                  block2565.real = function() {
                                                    var if2566 = GraceDone;
                                                    setLineNumber(1192);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2568 = callmethodChecked(this, "redraw", []);
                                                    if (Grace_isTrue(call2568)) {
                                                      setLineNumber(1193);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2571 = callmethodChecked(this, "theContext", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2573 = callmethodChecked(this, "theGraphics", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2575 = callmethodChecked(this, "width", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call2577 = callmethodChecked(this, "height", []);
                                                      // call case 6: other requests
                                                      var call2578 = callmethodChecked(var_dom, "draw(4)", [4], call2571, call2573, call2575, call2577);
                                                      if2566 = call2578;
                                                    }
                                                    return if2566;
                                                  };
                                                  setLineNumber(1195);    // compilenode num
                                                  var quotient2581 = callmethodChecked(new GraceNum(1000), "/(1)", [1], var_frameRate);
                                                  // call case 6: other requests
                                                  setLineNumber(1191);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2585 = callmethodChecked(this, "element", []);
                                                  var call2586 = callmethodChecked(call2585, "ownerDocument", []);
                                                  var call2587 = callmethodChecked(call2586, "defaultView", []);
                                                  var call2588 = callmethodChecked(call2587, "setInterval(2)", [2], block2565, quotient2581);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2588)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method startDrawing does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2588;
                                                };
                                                func2563.paramCounts = [0];
                                                obj2536.methods["startDrawing"] = func2563;
                                                func2563.definitionLine = 1190;
                                                func2563.definitionModule = "rtobjectdraw";
                                                var func2589 = function(argcv) {    // method clear
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1200);    // compilenode array
                                                  var array2591 = new PrimitiveGraceList([]);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2592 = callmethodChecked(this, "theGraphics:=(1)", [1], array2591);
                                                  setLineNumber(1201);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2594 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2594)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method clear does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2594;
                                                };
                                                func2589.paramCounts = [0];
                                                obj2536.methods["clear"] = func2589;
                                                func2589.definitionLine = 1199;
                                                func2589.definitionModule = "rtobjectdraw";
                                                var func2595 = function(argcv) {    // method add(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_d = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1205);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in add (arg list 1), which corresponds to parameter d, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1206);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2598 = callmethodChecked(this, "theGraphics", []);
                                                  var call2599 = callmethodChecked(call2598, "push(1)", [1], var_d);
                                                  setLineNumber(1207);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2601 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2601)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method add(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2601;
                                                };
                                                func2595.paramTypes = [];
                                                func2595.paramTypes.push([]);
                                                func2595.paramCounts = [1];
                                                obj2536.methods["add(1)"] = func2595;
                                                func2595.definitionLine = 1205;
                                                func2595.definitionModule = "rtobjectdraw";
                                                var func2602 = function(argcv) {    // method remove(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1211);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in remove (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  var if2603 = GraceDone;
                                                  setLineNumber(1212);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2606 = callmethodChecked(this, "theGraphics", []);
                                                  var call2607 = callmethodChecked(call2606, "contains(1)", [1], var_aGraphic);
                                                  if (Grace_isTrue(call2607)) {
                                                    setLineNumber(1213);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2610 = callmethodChecked(this, "theGraphics", []);
                                                    var call2611 = callmethodChecked(call2610, "remove(1)", [1], var_aGraphic);
                                                    setLineNumber(1214);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2613 = callmethodChecked(this, "notifyRedraw", []);
                                                    if2603 = call2613;
                                                  }
                                                  setLineNumber(1212);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2603)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method remove(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return if2603;
                                                };
                                                func2602.paramTypes = [];
                                                func2602.paramTypes.push([]);
                                                func2602.paramCounts = [1];
                                                obj2536.methods["remove(1)"] = func2602;
                                                func2602.definitionLine = 1211;
                                                func2602.definitionModule = "rtobjectdraw";
                                                var func2614 = function(argcv) {    // method sendToFront(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1219);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendToFront (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1220);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2617 = callmethodChecked(this, "theGraphics", []);
                                                  var call2618 = callmethodChecked(call2617, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1221);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2621 = callmethodChecked(this, "theGraphics", []);
                                                  var call2622 = callmethodChecked(call2621, "push(1)", [1], var_aGraphic);
                                                  setLineNumber(1222);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2624 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2624)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendToFront(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2624;
                                                };
                                                func2614.paramTypes = [];
                                                func2614.paramTypes.push([]);
                                                func2614.paramCounts = [1];
                                                obj2536.methods["sendToFront(1)"] = func2614;
                                                func2614.definitionLine = 1219;
                                                func2614.definitionModule = "rtobjectdraw";
                                                var func2625 = function(argcv) {    // method sendToBack(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1226);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendToBack (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1227);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2628 = callmethodChecked(this, "theGraphics", []);
                                                  var call2629 = callmethodChecked(call2628, "remove(1)", [1], var_aGraphic);
                                                  setLineNumber(1228);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2632 = callmethodChecked(this, "theGraphics", []);
                                                  var call2633 = callmethodChecked(call2632, "unshift(1)", [1], var_aGraphic);
                                                  setLineNumber(1229);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2635 = callmethodChecked(this, "notifyRedraw", []);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2635)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendToBack(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2635;
                                                };
                                                func2625.paramTypes = [];
                                                func2625.paramTypes.push([]);
                                                func2625.paramCounts = [1];
                                                obj2536.methods["sendToBack(1)"] = func2625;
                                                func2625.definitionLine = 1226;
                                                func2625.definitionModule = "rtobjectdraw";
                                                var func2636 = function(argcv) {    // method sendForward(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1233);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendForward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1234);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2639 = callmethodChecked(this, "theGraphics", []);
                                                  var call2640 = callmethodChecked(call2639, "indexOf(1)", [1], var_aGraphic);
                                                  var var_theIndex = call2640;
                                                  var if2641 = GraceDone;
                                                  setLineNumber(1236);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2644 = callmethodChecked(this, "theGraphics", []);
                                                  var call2645 = callmethodChecked(call2644, "size", []);
                                                  var opresult2648 = callmethodChecked(var_theIndex, "\u2260(1)", [1], call2645);
                                                  if (Grace_isTrue(opresult2648)) {
                                                    setLineNumber(1237);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2651 = callmethodChecked(this, "theGraphics", []);
                                                    var call2652 = callmethodChecked(call2651, "remove(1)", [1], var_aGraphic);
                                                    setLineNumber(1238);    // compilenode identifier
                                                    var opresult2656 = callmethodChecked(var_theIndex, "+(1)", [1], new GraceNum(1));
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2658 = callmethodChecked(this, "theGraphics", []);
                                                    var call2659 = callmethodChecked(call2658, "at(1)add(1)", [1, 1], opresult2656, var_aGraphic);
                                                    setLineNumber(1239);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2661 = callmethodChecked(this, "notifyRedraw", []);
                                                    if2641 = call2661;
                                                  }
                                                  setLineNumber(1236);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2641)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendForward(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return if2641;
                                                };
                                                func2636.paramTypes = [];
                                                func2636.paramTypes.push([]);
                                                func2636.paramCounts = [1];
                                                obj2536.methods["sendForward(1)"] = func2636;
                                                func2636.definitionLine = 1233;
                                                func2636.definitionModule = "rtobjectdraw";
                                                var func2662 = function(argcv) {    // method sendBackward(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aGraphic = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1244);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Graphic, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in sendBackward (arg list 1), which corresponds to parameter aGraphic, does not have " + 
                                                              callmethod(var_Graphic, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1245);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2665 = callmethodChecked(this, "theGraphics", []);
                                                  var call2666 = callmethodChecked(call2665, "indexOf(1)", [1], var_aGraphic);
                                                  var var_theIndex = call2666;
                                                  var if2667 = GraceDone;
                                                  setLineNumber(1247);    // compilenode identifier
                                                  var opresult2670 = callmethodChecked(var_theIndex, "\u2260(1)", [1], new GraceNum(1));
                                                  if (Grace_isTrue(opresult2670)) {
                                                    setLineNumber(1248);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2673 = callmethodChecked(this, "theGraphics", []);
                                                    var call2674 = callmethodChecked(call2673, "remove(1)", [1], var_aGraphic);
                                                    setLineNumber(1249);    // compilenode identifier
                                                    var diff2678 = callmethodChecked(var_theIndex, "-(1)", [1], new GraceNum(1));
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2680 = callmethodChecked(this, "theGraphics", []);
                                                    var call2681 = callmethodChecked(call2680, "at(1)add(1)", [1, 1], diff2678, var_aGraphic);
                                                    setLineNumber(1250);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2683 = callmethodChecked(this, "notifyRedraw", []);
                                                    if2667 = call2683;
                                                  }
                                                  setLineNumber(1247);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], if2667)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method sendBackward(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return if2667;
                                                };
                                                func2662.paramTypes = [];
                                                func2662.paramTypes.push([]);
                                                func2662.paramCounts = [1];
                                                obj2536.methods["sendBackward(1)"] = func2662;
                                                func2662.definitionLine = 1244;
                                                func2662.definitionModule = "rtobjectdraw";
                                                var func2684 = function(argcv) {    // method printObjects
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1256);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2687 = callmethodChecked(this, "theGraphics", []);
                                                  var block2688 = new GraceBlock(this, 1256, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2688.real = function(var_aGraphic) {
                                                    setLineNumber(1257);    // compilenode identifier
                                                    var call2689 = Grace_print(var_aGraphic);
                                                    return call2689;
                                                  };
                                                  // call case 5: prelude request
                                                  var call2690 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], call2687, block2688);
                                                  setLineNumber(1256);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2690)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method printObjects does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2690;
                                                };
                                                func2684.paramCounts = [0];
                                                obj2536.methods["printObjects"] = func2684;
                                                func2684.definitionLine = 1255;
                                                func2684.definitionModule = "rtobjectdraw";
                                                var func2691 = function(argcv) {    // method asString
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1263);    // compilenode string
                                                  var string2692 = new GraceString(" objects");
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2696 = callmethodChecked(this, "theGraphics", []);
                                                  var call2697 = callmethodChecked(call2696, "size", []);
                                                  var string2699 = new GraceString("canvas: with ");
                                                  var opresult2701 = callmethodChecked(string2699, "++(1)", [1], call2697);
                                                  var opresult2703 = callmethodChecked(opresult2701, "++(1)", [1], string2692);
                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2703)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method asString does not have " + 
                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                  return opresult2703;
                                                };
                                                func2691.paramCounts = [0];
                                                obj2536.methods["asString"] = func2691;
                                                func2691.definitionLine = 1262;
                                                func2691.definitionModule = "rtobjectdraw";
                                                setLineNumber(1158);    // compilenode string
                                                var string2706 = new GraceString("canvas");
                                                // call case 6: other requests
                                                var call2707 = callmethodChecked(var_document, "createElement(1)", [1], string2706);
                                                // call case 6: other requests
                                                setLineNumber(0);    // compilenode member
                                                // call case 3: self.outer request
                                                var call2709 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2710 = callmethodChecked(call2709, "componentFromElement(1)$object(1)", [1, 1], call2707, this);
                                                obj2536.superobj = call2710;
                                                if (call2710.data) obj2536.data = call2710.data;
                                                if (call2710.hasOwnProperty('_value'))
                                                    obj2536._value = call2710._value;
                                                setLineNumber(1160);    // compilenode member
                                                // call case 6: other requests
                                                var call2713 = callmethodChecked(var_dimensions__39__, "x", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2715 = callmethodChecked(this, "element", []);
                                                var call2716 = callmethodChecked(call2715, "width:=(1)", [1], call2713);
                                                setLineNumber(1161);    // compilenode member
                                                // call case 6: other requests
                                                var call2719 = callmethodChecked(var_dimensions__39__, "y", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2721 = callmethodChecked(this, "element", []);
                                                var call2722 = callmethodChecked(call2721, "height:=(1)", [1], call2719);
                                                setLineNumber(1162);    // compilenode string
                                                var string2724 = new GraceString("center");
                                                // call case 6: other requests
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2727 = callmethodChecked(this, "element", []);
                                                var call2728 = callmethodChecked(call2727, "style", []);
                                                var call2729 = callmethodChecked(call2728, "alignSelf:=(1)", [1], string2724);
                                                setLineNumber(1164);    // compilenode string
                                                var string2731 = new GraceString("2d");
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2733 = callmethodChecked(this, "element", []);
                                                var call2734 = callmethodChecked(call2733, "getContext(1)", [1], string2731);
                                                obj2536.data["theContext"] = call2734;
                                                var reader_rtobjectdraw_theContext2735 = function() {
                                                  return this.data["theContext"];
                                                };
                                                reader_rtobjectdraw_theContext2735.def = true;
                                                reader_rtobjectdraw_theContext2735.confidential = true;
                                                obj2536.methods["theContext"] = reader_rtobjectdraw_theContext2735;
                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call2734)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'theContext' is not of type Foreign"));
                                                setLineNumber(1165);    // compilenode num
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2738 = callmethodChecked(this, "theContext", []);
                                                var call2739 = callmethodChecked(call2738, "lineWidth:=(1)", [1], new GraceNum(2));
                                                setLineNumber(1180);    // compilenode array
                                                var array2740 = new PrimitiveGraceList([]);
                                                obj2536.data["theGraphics"] = array2740;
                                                var reader_rtobjectdraw_theGraphics2741 = function() {
                                                  return this.data["theGraphics"];
                                                };
                                                obj2536.methods["theGraphics"] = reader_rtobjectdraw_theGraphics2741;
                                                obj2536.data["theGraphics"] = array2740;
                                                var writer_rtobjectdraw_theGraphics2741 = function(argcv, o) {
                                                  this.data["theGraphics"] = o;
                                                  return GraceDone;
                                                };
                                                obj2536.methods["theGraphics:=(1)"] = writer_rtobjectdraw_theGraphics2741;
                                                reader_rtobjectdraw_theGraphics2741.confidential = true;
                                                writer_rtobjectdraw_theGraphics2741.confidential = true;
                                                obj2536.mutable = true;
                                                setLineNumber(1182);    // compilenode identifier
                                                obj2536.data["redraw"] = GraceFalse;
                                                var reader_rtobjectdraw_redraw2742 = function() {
                                                  return this.data["redraw"];
                                                };
                                                obj2536.methods["redraw"] = reader_rtobjectdraw_redraw2742;
                                                obj2536.data["redraw"] = GraceFalse;
                                                var writer_rtobjectdraw_redraw2742 = function(argcv, o) {
                                                  this.data["redraw"] = o;
                                                  return GraceDone;
                                                };
                                                obj2536.methods["redraw:=(1)"] = writer_rtobjectdraw_redraw2742;
                                                reader_rtobjectdraw_redraw2742.confidential = true;
                                                writer_rtobjectdraw_redraw2742.confidential = true;
                                                if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceFalse)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("initial value of var 'redraw' is not of type Boolean"));
                                                obj2536.mutable = true;
                                                superDepth = origSuperDepth;
                                              };
                                              obj_init_2536.apply(inheritingObject, []);
                                              return obj2536;
                                              };
                                              func2535.paramTypes = [];
                                              func2535.paramTypes.push([]);
                                              this.methods["drawingCanvasSize(1)$object(1)"] = func2535;
                                            setLineNumber(1267);    // compilenode method
                                            var func2743 = function(argcv) {    // method graphicApplicationSize(_)
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              var var_theDimension__39__ = arguments[curarg];
                                              curarg++;
                                              // Start argument checking
                                              curarg = 1;
                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("argument 1 in graphicApplicationSize (arg list 1), which corresponds to parameter theDimension', does not have " + 
                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                              curarg++;
                                              // End argument checking
                                              setModuleName("rtobjectdraw");
                                              var obj2744 = Grace_allocObject(null, "graphicApplicationSize(_)");
                                              obj2744.definitionModule = "rtobjectdraw";
                                              obj2744.definitionLine = 1267;
                                              obj2744.outer = this;
                                              var reader_rtobjectdraw_outer2745 = function() {
                                                return this.outer;
                                              };
                                              obj2744.methods["outer"] = reader_rtobjectdraw_outer2745;
                                              var obj_init_2744 = function() {
                                                var origSuperDepth = superDepth;
                                                superDepth = obj2744;
                                                var func2746 = function(argcv) {    // method prepend(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aComponent = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1286);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                              callmethod(var_Component, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1287);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2749 = callmethodChecked(this, "before", []);
                                                  var call2750 = callmethodChecked(call2749, "prepend(1)", [1], var_aComponent);
                                                  setLineNumber(1288);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2753 = callmethodChecked(this, "children", []);
                                                  var call2754 = callmethodChecked(call2753, "unshift(1)", [1], var_aComponent);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2754)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method prepend(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2754;
                                                };
                                                func2746.paramTypes = [];
                                                func2746.paramTypes.push([]);
                                                func2746.paramCounts = [1];
                                                obj2744.methods["prepend(1)"] = func2746;
                                                func2746.definitionLine = 1286;
                                                func2746.definitionModule = "rtobjectdraw";
                                                var func2755 = function(argcv) {    // method append(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_aComponent = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1292);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                              callmethod(var_Component, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1293);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2758 = callmethodChecked(this, "after", []);
                                                  var call2759 = callmethodChecked(call2758, "append(1)", [1], var_aComponent);
                                                  setLineNumber(1294);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2762 = callmethodChecked(this, "children", []);
                                                  var call2763 = callmethodChecked(call2762, "push(1)", [1], var_aComponent);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2763)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method append(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2763;
                                                };
                                                func2755.paramTypes = [];
                                                func2755.paramTypes.push([]);
                                                func2755.paramCounts = [1];
                                                obj2744.methods["append(1)"] = func2755;
                                                func2755.definitionLine = 1292;
                                                func2755.definitionModule = "rtobjectdraw";
                                                var func2764 = function(argcv) {    // method onMouseClick(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1301);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseClick (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseClick(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2764.paramTypes = [];
                                                func2764.paramTypes.push([]);
                                                func2764.paramCounts = [1];
                                                obj2744.methods["onMouseClick(1)"] = func2764;
                                                func2764.definitionLine = 1301;
                                                func2764.definitionModule = "rtobjectdraw";
                                                var func2765 = function(argcv) {    // method onMousePress(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1304);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMousePress (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMousePress(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2765.paramTypes = [];
                                                func2765.paramTypes.push([]);
                                                func2765.paramCounts = [1];
                                                obj2744.methods["onMousePress(1)"] = func2765;
                                                func2765.definitionLine = 1304;
                                                func2765.definitionModule = "rtobjectdraw";
                                                var func2766 = function(argcv) {    // method onMouseRelease(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1307);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseRelease (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseRelease(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2766.paramTypes = [];
                                                func2766.paramTypes.push([]);
                                                func2766.paramCounts = [1];
                                                obj2744.methods["onMouseRelease(1)"] = func2766;
                                                func2766.definitionLine = 1307;
                                                func2766.definitionModule = "rtobjectdraw";
                                                var func2767 = function(argcv) {    // method onMouseMove(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1310);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseMove (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseMove(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2767.paramTypes = [];
                                                func2767.paramTypes.push([]);
                                                func2767.paramCounts = [1];
                                                obj2744.methods["onMouseMove(1)"] = func2767;
                                                func2767.definitionLine = 1310;
                                                func2767.definitionModule = "rtobjectdraw";
                                                var func2768 = function(argcv) {    // method onMouseDrag(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1313);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseDrag (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseDrag(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2768.paramTypes = [];
                                                func2768.paramTypes.push([]);
                                                func2768.paramCounts = [1];
                                                obj2744.methods["onMouseDrag(1)"] = func2768;
                                                func2768.definitionLine = 1313;
                                                func2768.definitionModule = "rtobjectdraw";
                                                var func2769 = function(argcv) {    // method onMouseEnter(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1316);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseEnter (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseEnter(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2769.paramTypes = [];
                                                func2769.paramTypes.push([]);
                                                func2769.paramCounts = [1];
                                                obj2744.methods["onMouseEnter(1)"] = func2769;
                                                func2769.definitionLine = 1316;
                                                func2769.definitionModule = "rtobjectdraw";
                                                var func2770 = function(argcv) {    // method onMouseExit(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_pt = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  setLineNumber(1319);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in onMouseExit (arg list 1), which corresponds to parameter pt, does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method onMouseExit(_) does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return GraceDone;
                                                };
                                                func2770.paramTypes = [];
                                                func2770.paramTypes.push([]);
                                                func2770.paramCounts = [1];
                                                obj2744.methods["onMouseExit(1)"] = func2770;
                                                func2770.definitionLine = 1319;
                                                func2770.definitionModule = "rtobjectdraw";
                                                var func2771 = function(argcv) {    // method startGraphics
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1324);    // compilenode string
                                                  var string2773 = new GraceString("div");
                                                  // call case 6: other requests
                                                  var call2774 = callmethodChecked(var_document, "createElement(1)", [1], string2773);
                                                  var var_parentElement = call2774;
                                                  setLineNumber(1325);    // compilenode string
                                                  var string2776 = new GraceString("height-calculator");
                                                  // call case 6: other requests
                                                  var call2777 = callmethodChecked(var_parentElement, "className:=(1)", [1], string2776);
                                                  setLineNumber(1326);    // compilenode string
                                                  var string2779 = new GraceString("px");
                                                  // call case 6: other requests
                                                  var call2782 = callmethodChecked(var_theDimension__39__, "x", []);
                                                  var string2784 = new GraceString("");
                                                  var opresult2786 = callmethodChecked(string2784, "++(1)", [1], call2782);
                                                  var opresult2788 = callmethodChecked(opresult2786, "++(1)", [1], string2779);
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2790 = callmethodChecked(var_parentElement, "style", []);
                                                  var call2791 = callmethodChecked(call2790, "width:=(1)", [1], opresult2788);
                                                  setLineNumber(1327);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2795 = callmethodChecked(this, "element", []);
                                                  var call2796 = callmethodChecked(call2795, "cloneNode(1)", [1], GraceTrue);
                                                  // call case 6: other requests
                                                  var call2797 = callmethodChecked(var_parentElement, "appendChild(1)", [1], call2796);
                                                  setLineNumber(1328);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2800 = callmethodChecked(var_document, "body", []);
                                                  var call2801 = callmethodChecked(call2800, "appendChild(1)", [1], var_parentElement);
                                                  setLineNumber(1329);    // compilenode member
                                                  // call case 6: other requests
                                                  var call2804 = callmethodChecked(var_parentElement, "offsetHeight", []);
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2805 = callmethodChecked(this, "theHeight:=(1)", [1], call2804);
                                                  setLineNumber(1330);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  var call2808 = callmethodChecked(var_document, "body", []);
                                                  var call2809 = callmethodChecked(call2808, "removeChild(1)", [1], var_parentElement);
                                                  setLineNumber(1332);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2811 = callmethodChecked(this, "startApplication", []);
                                                  setLineNumber(1333);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2814 = callmethodChecked(this, "canvas", []);
                                                  var call2815 = callmethodChecked(call2814, "startDrawing", []);
                                                  setLineNumber(1335);    // compilenode string
                                                  var string2817 = new GraceString("hidden");
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2822 = callmethodChecked(this, "theWindow", []);
                                                  var call2823 = callmethodChecked(call2822, "document", []);
                                                  var call2824 = callmethodChecked(call2823, "documentElement", []);
                                                  var call2825 = callmethodChecked(call2824, "style", []);
                                                  var call2826 = callmethodChecked(call2825, "overflow:=(1)", [1], string2817);
                                                  setLineNumber(1337);    // compilenode block
                                                  var block2828 = new GraceBlock(this, 1337, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2828.real = function(var_event__39__) {
                                                    setLineNumber(1338);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2831 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2832 = callmethodChecked(this, "onMouseClick(1)", [1], call2831);
                                                    return call2832;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1337);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2834 = callmethodChecked(this, "canvas", []);
                                                  var call2835 = callmethodChecked(call2834, "onMouseClickDo(1)", [1], block2828);
                                                  setLineNumber(1341);    // compilenode block
                                                  var block2837 = new GraceBlock(this, 1341, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2837.real = function(var_event__39__) {
                                                    setLineNumber(1342);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2840 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2841 = callmethodChecked(this, "onMousePress(1)", [1], call2840);
                                                    return call2841;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1341);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2843 = callmethodChecked(this, "canvas", []);
                                                  var call2844 = callmethodChecked(call2843, "onMousePressDo(1)", [1], block2837);
                                                  setLineNumber(1345);    // compilenode block
                                                  var block2846 = new GraceBlock(this, 1345, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2846.real = function(var_event__39__) {
                                                    setLineNumber(1346);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2849 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2850 = callmethodChecked(this, "onMouseRelease(1)", [1], call2849);
                                                    return call2850;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1345);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2852 = callmethodChecked(this, "canvas", []);
                                                  var call2853 = callmethodChecked(call2852, "onMouseReleaseDo(1)", [1], block2846);
                                                  setLineNumber(1349);    // compilenode block
                                                  var block2855 = new GraceBlock(this, 1349, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2855.real = function(var_event__39__) {
                                                    setLineNumber(1350);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2858 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2859 = callmethodChecked(this, "onMouseMove(1)", [1], call2858);
                                                    return call2859;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1349);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2861 = callmethodChecked(this, "canvas", []);
                                                  var call2862 = callmethodChecked(call2861, "onMouseMoveDo(1)", [1], block2855);
                                                  setLineNumber(1353);    // compilenode block
                                                  var block2864 = new GraceBlock(this, 1353, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2864.real = function(var_event__39__) {
                                                    setLineNumber(1354);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2867 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2868 = callmethodChecked(this, "onMouseDrag(1)", [1], call2867);
                                                    return call2868;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1353);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2870 = callmethodChecked(this, "canvas", []);
                                                  var call2871 = callmethodChecked(call2870, "onMouseDragDo(1)", [1], block2864);
                                                  setLineNumber(1357);    // compilenode block
                                                  var block2873 = new GraceBlock(this, 1357, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2873.real = function(var_event__39__) {
                                                    setLineNumber(1358);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2876 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2877 = callmethodChecked(this, "onMouseEnter(1)", [1], call2876);
                                                    return call2877;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1357);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2879 = callmethodChecked(this, "canvas", []);
                                                  var call2880 = callmethodChecked(call2879, "onMouseEnterDo(1)", [1], block2873);
                                                  setLineNumber(1361);    // compilenode block
                                                  var block2882 = new GraceBlock(this, 1361, 1);
                                                  setLineNumber(1);    // compilenode identifier
                                                  block2882.real = function(var_event__39__) {
                                                    setLineNumber(1362);    // compilenode member
                                                    // call case 6: other requests
                                                    var call2885 = callmethodChecked(var_event__39__, "at", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2886 = callmethodChecked(this, "onMouseExit(1)", [1], call2885);
                                                    return call2886;
                                                  };
                                                  // call case 6: other requests
                                                  setLineNumber(1361);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2888 = callmethodChecked(this, "canvas", []);
                                                  var call2889 = callmethodChecked(call2888, "onMouseExitDo(1)", [1], block2882);
                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2889)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method startGraphics does not have " + 
                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                  return call2889;
                                                };
                                                func2771.paramCounts = [0];
                                                obj2744.methods["startGraphics"] = func2771;
                                                func2771.definitionLine = 1323;
                                                func2771.definitionModule = "rtobjectdraw";
                                                var func2890 = function(argcv) {    // method asString
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1367);    // compilenode string
                                                  var string2891 = new GraceString("");
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call2894 = callmethodChecked(this, "canvas", []);
                                                  var string2896 = new GraceString("graphic application of ");
                                                  var opresult2898 = callmethodChecked(string2896, "++(1)", [1], call2894);
                                                  var opresult2900 = callmethodChecked(opresult2898, "++(1)", [1], string2891);
                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult2900)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method asString does not have " + 
                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                  return opresult2900;
                                                };
                                                func2890.paramCounts = [0];
                                                obj2744.methods["asString"] = func2890;
                                                func2890.definitionLine = 1366;
                                                func2890.definitionModule = "rtobjectdraw";
                                                setLineNumber(1271);    // compilenode string
                                                var string2902 = new GraceString("Simple graphics");
                                                // call case 6: other requests
                                                setLineNumber(0);    // compilenode member
                                                // call case 3: self.outer request
                                                var call2904 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2905 = callmethodChecked(call2904, "applicationTitle(1)size(1)$object(1)", [1, 1, 1], string2902, var_theDimension__39__, this);
                                                obj2744.superobj = call2905;
                                                if (call2905.data) obj2744.data = call2905.data;
                                                if (call2905.hasOwnProperty('_value'))
                                                    obj2744._value = call2905._value;
                                                setLineNumber(1273);    // compilenode identifier
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call2908 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2909 = callmethodChecked(call2908, "drawingCanvasSize(1)", [1], var_theDimension__39__);
                                                obj2744.data["canvas"] = call2909;
                                                var reader_rtobjectdraw_canvas2910 = function() {
                                                  return this.data["canvas"];
                                                };
                                                reader_rtobjectdraw_canvas2910.def = true;
                                                obj2744.methods["canvas"] = reader_rtobjectdraw_canvas2910;
                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], call2909)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'canvas' is not of type DrawingCanvas"));
                                                setLineNumber(1275);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2913 = callmethodChecked(this, "canvas", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2915 = callmethodChecked(this, "children", []);
                                                var call2916 = callmethodChecked(call2915, "push(1)", [1], call2913);
                                                setLineNumber(1277);    // compilenode member
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call2919 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2920 = callmethodChecked(call2919, "emptyContainer", []);
                                                obj2744.data["before"] = call2920;
                                                var reader_rtobjectdraw_before2921 = function() {
                                                  return this.data["before"];
                                                };
                                                reader_rtobjectdraw_before2921.def = true;
                                                reader_rtobjectdraw_before2921.confidential = true;
                                                obj2744.methods["before"] = reader_rtobjectdraw_before2921;
                                                if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call2920)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'before' is not of type Container"));
                                                setLineNumber(1278);    // compilenode member
                                                // call case 6: other requests
                                                // call case 3: self.outer request
                                                var call2924 = callmethodChecked(superDepth, "outer", [0]);
                                                onSelf = true;
                                                var call2925 = callmethodChecked(call2924, "emptyContainer", []);
                                                obj2744.data["after"] = call2925;
                                                var reader_rtobjectdraw_after2926 = function() {
                                                  return this.data["after"];
                                                };
                                                reader_rtobjectdraw_after2926.def = true;
                                                reader_rtobjectdraw_after2926.confidential = true;
                                                obj2744.methods["after"] = reader_rtobjectdraw_after2926;
                                                if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call2925)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("value of def 'after' is not of type Container"));
                                                setLineNumber(1280);    // compilenode member
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2928 = callmethodChecked(this, "arrangeVertical", []);
                                                setLineNumber(1281);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2932 = callmethodChecked(this, "before", []);
                                                var call2933 = callmethodChecked(call2932, "element", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2935 = callmethodChecked(this, "element", []);
                                                var call2936 = callmethodChecked(call2935, "appendChild(1)", [1], call2933);
                                                setLineNumber(1282);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2940 = callmethodChecked(this, "canvas", []);
                                                var call2941 = callmethodChecked(call2940, "element", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2943 = callmethodChecked(this, "element", []);
                                                var call2944 = callmethodChecked(call2943, "appendChild(1)", [1], call2941);
                                                setLineNumber(1283);    // compilenode member
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2948 = callmethodChecked(this, "after", []);
                                                var call2949 = callmethodChecked(call2948, "element", []);
                                                // call case 6: other requests
                                                // call case 4: self request
                                                onSelf = true;
                                                var call2951 = callmethodChecked(this, "element", []);
                                                var call2952 = callmethodChecked(call2951, "appendChild(1)", [1], call2949);
                                                superDepth = origSuperDepth;
                                              };
                                              obj_init_2744.apply(obj2744, []);
                                              setLineNumber(1267);    // return value
                                              if (!Grace_isTrue(callmethod(var_GraphicApplication, "match(1)", [1], obj2744)))
                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                      new GraceString("result of method graphicApplicationSize(_) does not have " + 
                                                          callmethod(var_GraphicApplication, "asString", [0])._value + "."));
                                              return obj2744;
                                            };
                                            func2743.paramTypes = [];
                                            func2743.paramTypes.push([]);
                                            func2743.paramCounts = [1];
                                            this.methods["graphicApplicationSize(1)"] = func2743;
                                            func2743.definitionLine = 1267;
                                            func2743.definitionModule = "rtobjectdraw";
                                              var func2953 = function(argcv) {    // method graphicApplicationSize(_)$object(_)
                                                var curarg = 1;
                                                var var_theDimension__39__ = arguments[curarg];
                                                curarg++;
                                                var inheritingObject = arguments[curarg++];
                                                // Start argument processing
                                                curarg = 1;
                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in graphicApplicationSize (arg list 1), which corresponds to parameter theDimension', does not have " + 
                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument processing
                                                setModuleName("rtobjectdraw");
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var obj2954 = Grace_allocObject(null, "graphicApplicationSize(1)");
                                                obj2954.definitionModule = "rtobjectdraw";
                                                obj2954.definitionLine = 1267;
                                                var inho2954 = inheritingObject;
                                                while (inho2954.superobj) inho2954 = inho2954.superobj;
                                                inho2954.superobj = obj2954;
                                                obj2954.data = inheritingObject.data;
                                                if (inheritingObject.hasOwnProperty('_value'))
                                                  obj2954._value = inheritingObject._value;
                                                obj2954.outer = this;
                                                var reader_rtobjectdraw_outer2955 = function() {
                                                  return this.outer;
                                                };
                                                obj2954.methods["outer"] = reader_rtobjectdraw_outer2955;
                                                var obj_init_2954 = function() {
                                                  var origSuperDepth = superDepth;
                                                  superDepth = obj2954;
                                                  var func2956 = function(argcv) {    // method prepend(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_aComponent = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1286);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in prepend (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                                callmethod(var_Component, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1287);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2959 = callmethodChecked(this, "before", []);
                                                    var call2960 = callmethodChecked(call2959, "prepend(1)", [1], var_aComponent);
                                                    setLineNumber(1288);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2963 = callmethodChecked(this, "children", []);
                                                    var call2964 = callmethodChecked(call2963, "unshift(1)", [1], var_aComponent);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2964)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method prepend(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call2964;
                                                  };
                                                  func2956.paramTypes = [];
                                                  func2956.paramTypes.push([]);
                                                  func2956.paramCounts = [1];
                                                  obj2954.methods["prepend(1)"] = func2956;
                                                  func2956.definitionLine = 1286;
                                                  func2956.definitionModule = "rtobjectdraw";
                                                  var func2965 = function(argcv) {    // method append(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_aComponent = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1292);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Component, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in append (arg list 1), which corresponds to parameter aComponent, does not have " + 
                                                                callmethod(var_Component, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1293);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2968 = callmethodChecked(this, "after", []);
                                                    var call2969 = callmethodChecked(call2968, "append(1)", [1], var_aComponent);
                                                    setLineNumber(1294);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call2972 = callmethodChecked(this, "children", []);
                                                    var call2973 = callmethodChecked(call2972, "push(1)", [1], var_aComponent);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call2973)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method append(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call2973;
                                                  };
                                                  func2965.paramTypes = [];
                                                  func2965.paramTypes.push([]);
                                                  func2965.paramCounts = [1];
                                                  obj2954.methods["append(1)"] = func2965;
                                                  func2965.definitionLine = 1292;
                                                  func2965.definitionModule = "rtobjectdraw";
                                                  var func2974 = function(argcv) {    // method onMouseClick(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1301);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseClick (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseClick(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2974.paramTypes = [];
                                                  func2974.paramTypes.push([]);
                                                  func2974.paramCounts = [1];
                                                  obj2954.methods["onMouseClick(1)"] = func2974;
                                                  func2974.definitionLine = 1301;
                                                  func2974.definitionModule = "rtobjectdraw";
                                                  var func2975 = function(argcv) {    // method onMousePress(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1304);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMousePress (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMousePress(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2975.paramTypes = [];
                                                  func2975.paramTypes.push([]);
                                                  func2975.paramCounts = [1];
                                                  obj2954.methods["onMousePress(1)"] = func2975;
                                                  func2975.definitionLine = 1304;
                                                  func2975.definitionModule = "rtobjectdraw";
                                                  var func2976 = function(argcv) {    // method onMouseRelease(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1307);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseRelease (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseRelease(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2976.paramTypes = [];
                                                  func2976.paramTypes.push([]);
                                                  func2976.paramCounts = [1];
                                                  obj2954.methods["onMouseRelease(1)"] = func2976;
                                                  func2976.definitionLine = 1307;
                                                  func2976.definitionModule = "rtobjectdraw";
                                                  var func2977 = function(argcv) {    // method onMouseMove(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1310);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseMove (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseMove(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2977.paramTypes = [];
                                                  func2977.paramTypes.push([]);
                                                  func2977.paramCounts = [1];
                                                  obj2954.methods["onMouseMove(1)"] = func2977;
                                                  func2977.definitionLine = 1310;
                                                  func2977.definitionModule = "rtobjectdraw";
                                                  var func2978 = function(argcv) {    // method onMouseDrag(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1313);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseDrag (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseDrag(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2978.paramTypes = [];
                                                  func2978.paramTypes.push([]);
                                                  func2978.paramCounts = [1];
                                                  obj2954.methods["onMouseDrag(1)"] = func2978;
                                                  func2978.definitionLine = 1313;
                                                  func2978.definitionModule = "rtobjectdraw";
                                                  var func2979 = function(argcv) {    // method onMouseEnter(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1316);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseEnter (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseEnter(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2979.paramTypes = [];
                                                  func2979.paramTypes.push([]);
                                                  func2979.paramCounts = [1];
                                                  obj2954.methods["onMouseEnter(1)"] = func2979;
                                                  func2979.definitionLine = 1316;
                                                  func2979.definitionModule = "rtobjectdraw";
                                                  var func2980 = function(argcv) {    // method onMouseExit(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_pt = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1319);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in onMouseExit (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], GraceDone)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method onMouseExit(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return GraceDone;
                                                  };
                                                  func2980.paramTypes = [];
                                                  func2980.paramTypes.push([]);
                                                  func2980.paramCounts = [1];
                                                  obj2954.methods["onMouseExit(1)"] = func2980;
                                                  func2980.definitionLine = 1319;
                                                  func2980.definitionModule = "rtobjectdraw";
                                                  var func2981 = function(argcv) {    // method startGraphics
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1324);    // compilenode string
                                                    var string2983 = new GraceString("div");
                                                    // call case 6: other requests
                                                    var call2984 = callmethodChecked(var_document, "createElement(1)", [1], string2983);
                                                    var var_parentElement = call2984;
                                                    setLineNumber(1325);    // compilenode string
                                                    var string2986 = new GraceString("height-calculator");
                                                    // call case 6: other requests
                                                    var call2987 = callmethodChecked(var_parentElement, "className:=(1)", [1], string2986);
                                                    setLineNumber(1326);    // compilenode string
                                                    var string2989 = new GraceString("px");
                                                    // call case 6: other requests
                                                    var call2992 = callmethodChecked(var_theDimension__39__, "x", []);
                                                    var string2994 = new GraceString("");
                                                    var opresult2996 = callmethodChecked(string2994, "++(1)", [1], call2992);
                                                    var opresult2998 = callmethodChecked(opresult2996, "++(1)", [1], string2989);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call3000 = callmethodChecked(var_parentElement, "style", []);
                                                    var call3001 = callmethodChecked(call3000, "width:=(1)", [1], opresult2998);
                                                    setLineNumber(1327);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3005 = callmethodChecked(this, "element", []);
                                                    var call3006 = callmethodChecked(call3005, "cloneNode(1)", [1], GraceTrue);
                                                    // call case 6: other requests
                                                    var call3007 = callmethodChecked(var_parentElement, "appendChild(1)", [1], call3006);
                                                    setLineNumber(1328);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call3010 = callmethodChecked(var_document, "body", []);
                                                    var call3011 = callmethodChecked(call3010, "appendChild(1)", [1], var_parentElement);
                                                    setLineNumber(1329);    // compilenode member
                                                    // call case 6: other requests
                                                    var call3014 = callmethodChecked(var_parentElement, "offsetHeight", []);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3015 = callmethodChecked(this, "theHeight:=(1)", [1], call3014);
                                                    setLineNumber(1330);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    var call3018 = callmethodChecked(var_document, "body", []);
                                                    var call3019 = callmethodChecked(call3018, "removeChild(1)", [1], var_parentElement);
                                                    setLineNumber(1332);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3021 = callmethodChecked(this, "startApplication", []);
                                                    setLineNumber(1333);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3024 = callmethodChecked(this, "canvas", []);
                                                    var call3025 = callmethodChecked(call3024, "startDrawing", []);
                                                    setLineNumber(1335);    // compilenode string
                                                    var string3027 = new GraceString("hidden");
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3032 = callmethodChecked(this, "theWindow", []);
                                                    var call3033 = callmethodChecked(call3032, "document", []);
                                                    var call3034 = callmethodChecked(call3033, "documentElement", []);
                                                    var call3035 = callmethodChecked(call3034, "style", []);
                                                    var call3036 = callmethodChecked(call3035, "overflow:=(1)", [1], string3027);
                                                    setLineNumber(1337);    // compilenode block
                                                    var block3038 = new GraceBlock(this, 1337, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3038.real = function(var_event__39__) {
                                                      setLineNumber(1338);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3041 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3042 = callmethodChecked(this, "onMouseClick(1)", [1], call3041);
                                                      return call3042;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1337);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3044 = callmethodChecked(this, "canvas", []);
                                                    var call3045 = callmethodChecked(call3044, "onMouseClickDo(1)", [1], block3038);
                                                    setLineNumber(1341);    // compilenode block
                                                    var block3047 = new GraceBlock(this, 1341, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3047.real = function(var_event__39__) {
                                                      setLineNumber(1342);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3050 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3051 = callmethodChecked(this, "onMousePress(1)", [1], call3050);
                                                      return call3051;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1341);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3053 = callmethodChecked(this, "canvas", []);
                                                    var call3054 = callmethodChecked(call3053, "onMousePressDo(1)", [1], block3047);
                                                    setLineNumber(1345);    // compilenode block
                                                    var block3056 = new GraceBlock(this, 1345, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3056.real = function(var_event__39__) {
                                                      setLineNumber(1346);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3059 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3060 = callmethodChecked(this, "onMouseRelease(1)", [1], call3059);
                                                      return call3060;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1345);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3062 = callmethodChecked(this, "canvas", []);
                                                    var call3063 = callmethodChecked(call3062, "onMouseReleaseDo(1)", [1], block3056);
                                                    setLineNumber(1349);    // compilenode block
                                                    var block3065 = new GraceBlock(this, 1349, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3065.real = function(var_event__39__) {
                                                      setLineNumber(1350);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3068 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3069 = callmethodChecked(this, "onMouseMove(1)", [1], call3068);
                                                      return call3069;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1349);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3071 = callmethodChecked(this, "canvas", []);
                                                    var call3072 = callmethodChecked(call3071, "onMouseMoveDo(1)", [1], block3065);
                                                    setLineNumber(1353);    // compilenode block
                                                    var block3074 = new GraceBlock(this, 1353, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3074.real = function(var_event__39__) {
                                                      setLineNumber(1354);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3077 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3078 = callmethodChecked(this, "onMouseDrag(1)", [1], call3077);
                                                      return call3078;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1353);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3080 = callmethodChecked(this, "canvas", []);
                                                    var call3081 = callmethodChecked(call3080, "onMouseDragDo(1)", [1], block3074);
                                                    setLineNumber(1357);    // compilenode block
                                                    var block3083 = new GraceBlock(this, 1357, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3083.real = function(var_event__39__) {
                                                      setLineNumber(1358);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3086 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3087 = callmethodChecked(this, "onMouseEnter(1)", [1], call3086);
                                                      return call3087;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1357);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3089 = callmethodChecked(this, "canvas", []);
                                                    var call3090 = callmethodChecked(call3089, "onMouseEnterDo(1)", [1], block3083);
                                                    setLineNumber(1361);    // compilenode block
                                                    var block3092 = new GraceBlock(this, 1361, 1);
                                                    setLineNumber(1);    // compilenode identifier
                                                    block3092.real = function(var_event__39__) {
                                                      setLineNumber(1362);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3095 = callmethodChecked(var_event__39__, "at", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3096 = callmethodChecked(this, "onMouseExit(1)", [1], call3095);
                                                      return call3096;
                                                    };
                                                    // call case 6: other requests
                                                    setLineNumber(1361);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3098 = callmethodChecked(this, "canvas", []);
                                                    var call3099 = callmethodChecked(call3098, "onMouseExitDo(1)", [1], block3092);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3099)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method startGraphics does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3099;
                                                  };
                                                  func2981.paramCounts = [0];
                                                  obj2954.methods["startGraphics"] = func2981;
                                                  func2981.definitionLine = 1323;
                                                  func2981.definitionModule = "rtobjectdraw";
                                                  var func3100 = function(argcv) {    // method asString
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1367);    // compilenode string
                                                    var string3101 = new GraceString("");
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3104 = callmethodChecked(this, "canvas", []);
                                                    var string3106 = new GraceString("graphic application of ");
                                                    var opresult3108 = callmethodChecked(string3106, "++(1)", [1], call3104);
                                                    var opresult3110 = callmethodChecked(opresult3108, "++(1)", [1], string3101);
                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3110)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method asString does not have " + 
                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                    return opresult3110;
                                                  };
                                                  func3100.paramCounts = [0];
                                                  obj2954.methods["asString"] = func3100;
                                                  func3100.definitionLine = 1366;
                                                  func3100.definitionModule = "rtobjectdraw";
                                                  setLineNumber(1271);    // compilenode string
                                                  var string3112 = new GraceString("Simple graphics");
                                                  // call case 6: other requests
                                                  setLineNumber(0);    // compilenode member
                                                  // call case 3: self.outer request
                                                  var call3114 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3115 = callmethodChecked(call3114, "applicationTitle(1)size(1)$object(1)", [1, 1, 1], string3112, var_theDimension__39__, this);
                                                  obj2954.superobj = call3115;
                                                  if (call3115.data) obj2954.data = call3115.data;
                                                  if (call3115.hasOwnProperty('_value'))
                                                      obj2954._value = call3115._value;
                                                  setLineNumber(1273);    // compilenode identifier
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call3118 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3119 = callmethodChecked(call3118, "drawingCanvasSize(1)", [1], var_theDimension__39__);
                                                  obj2954.data["canvas"] = call3119;
                                                  var reader_rtobjectdraw_canvas3120 = function() {
                                                    return this.data["canvas"];
                                                  };
                                                  reader_rtobjectdraw_canvas3120.def = true;
                                                  obj2954.methods["canvas"] = reader_rtobjectdraw_canvas3120;
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], call3119)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("value of def 'canvas' is not of type DrawingCanvas"));
                                                  setLineNumber(1275);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3123 = callmethodChecked(this, "canvas", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3125 = callmethodChecked(this, "children", []);
                                                  var call3126 = callmethodChecked(call3125, "push(1)", [1], call3123);
                                                  setLineNumber(1277);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call3129 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3130 = callmethodChecked(call3129, "emptyContainer", []);
                                                  obj2954.data["before"] = call3130;
                                                  var reader_rtobjectdraw_before3131 = function() {
                                                    return this.data["before"];
                                                  };
                                                  reader_rtobjectdraw_before3131.def = true;
                                                  reader_rtobjectdraw_before3131.confidential = true;
                                                  obj2954.methods["before"] = reader_rtobjectdraw_before3131;
                                                  if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call3130)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("value of def 'before' is not of type Container"));
                                                  setLineNumber(1278);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 3: self.outer request
                                                  var call3134 = callmethodChecked(superDepth, "outer", [0]);
                                                  onSelf = true;
                                                  var call3135 = callmethodChecked(call3134, "emptyContainer", []);
                                                  obj2954.data["after"] = call3135;
                                                  var reader_rtobjectdraw_after3136 = function() {
                                                    return this.data["after"];
                                                  };
                                                  reader_rtobjectdraw_after3136.def = true;
                                                  reader_rtobjectdraw_after3136.confidential = true;
                                                  obj2954.methods["after"] = reader_rtobjectdraw_after3136;
                                                  if (!Grace_isTrue(callmethod(var_Container, "match(1)", [1], call3135)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("value of def 'after' is not of type Container"));
                                                  setLineNumber(1280);    // compilenode member
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3138 = callmethodChecked(this, "arrangeVertical", []);
                                                  setLineNumber(1281);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3142 = callmethodChecked(this, "before", []);
                                                  var call3143 = callmethodChecked(call3142, "element", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3145 = callmethodChecked(this, "element", []);
                                                  var call3146 = callmethodChecked(call3145, "appendChild(1)", [1], call3143);
                                                  setLineNumber(1282);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3150 = callmethodChecked(this, "canvas", []);
                                                  var call3151 = callmethodChecked(call3150, "element", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3153 = callmethodChecked(this, "element", []);
                                                  var call3154 = callmethodChecked(call3153, "appendChild(1)", [1], call3151);
                                                  setLineNumber(1283);    // compilenode member
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3158 = callmethodChecked(this, "after", []);
                                                  var call3159 = callmethodChecked(call3158, "element", []);
                                                  // call case 6: other requests
                                                  // call case 4: self request
                                                  onSelf = true;
                                                  var call3161 = callmethodChecked(this, "element", []);
                                                  var call3162 = callmethodChecked(call3161, "appendChild(1)", [1], call3159);
                                                  superDepth = origSuperDepth;
                                                };
                                                obj_init_2954.apply(inheritingObject, []);
                                                return obj2954;
                                                };
                                                func2953.paramTypes = [];
                                                func2953.paramTypes.push([]);
                                                this.methods["graphicApplicationSize(1)$object(1)"] = func2953;
                                              setLineNumber(1371);    // compilenode method
                                              var func3163 = function(argcv) {    // method drawableAt(_)on(_)
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                var var_location__39__ = arguments[curarg];
                                                curarg++;
                                                var var_canvas__39__ = arguments[curarg];
                                                curarg++;
                                                // Start argument checking
                                                curarg = 1;
                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in drawableAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                curarg++;
                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("argument 1 in on (arg list 2), which corresponds to parameter canvas', does not have " + 
                                                            callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                curarg++;
                                                // End argument checking
                                                setModuleName("rtobjectdraw");
                                                var obj3164 = Grace_allocObject(GraceObject, "drawableAt(_)on(_)");
                                                obj3164.definitionModule = "rtobjectdraw";
                                                obj3164.definitionLine = 1371;
                                                obj3164.outer = this;
                                                var reader_rtobjectdraw_outer3165 = function() {
                                                  return this.outer;
                                                };
                                                obj3164.methods["outer"] = reader_rtobjectdraw_outer3165;
                                                var obj_init_3164 = function() {
                                                  var origSuperDepth = superDepth;
                                                  superDepth = obj3164;
                                                  var func3166 = function(argcv) {    // method x
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1379);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3169 = callmethodChecked(this, "location", []);
                                                    var call3170 = callmethodChecked(call3169, "x", []);
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3170)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method x does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    return call3170;
                                                  };
                                                  func3166.paramCounts = [0];
                                                  obj3164.methods["x"] = func3166;
                                                  func3166.definitionLine = 1378;
                                                  func3166.definitionModule = "rtobjectdraw";
                                                  var func3171 = function(argcv) {    // method y
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1384);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3174 = callmethodChecked(this, "location", []);
                                                    var call3175 = callmethodChecked(call3174, "y", []);
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3175)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method y does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    return call3175;
                                                  };
                                                  func3171.paramCounts = [0];
                                                  obj3164.methods["y"] = func3171;
                                                  func3171.definitionLine = 1383;
                                                  func3171.definitionModule = "rtobjectdraw";
                                                  var func3176 = function(argcv) {    // method ==(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_other = arguments[curarg];
                                                    curarg++;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1390);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3178 = callmethodChecked(this, "isMe(1)", [1], var_other);
                                                    return call3178;
                                                  };
                                                  func3176.paramCounts = [1];
                                                  obj3164.methods["==(1)"] = func3176;
                                                  func3176.definitionLine = 1387;
                                                  func3176.definitionModule = "rtobjectdraw";
                                                  var func3179 = function(argcv) {    // method color
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1399);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3181 = callmethodChecked(this, "theColor", []);
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3181)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method color does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    return call3181;
                                                  };
                                                  func3179.paramCounts = [0];
                                                  obj3164.methods["color"] = func3179;
                                                  func3179.definitionLine = 1399;
                                                  func3179.definitionModule = "rtobjectdraw";
                                                  var func3182 = function(argcv) {    // method color:=(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_newColor = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1401);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in color:= (arg list 1), which corresponds to parameter newColor, does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1402);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3184 = callmethodChecked(this, "theColor:=(1)", [1], var_newColor);
                                                    setLineNumber(1403);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3186 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3186)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method color:=(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3186;
                                                  };
                                                  func3182.paramTypes = [];
                                                  func3182.paramTypes.push([]);
                                                  func3182.paramCounts = [1];
                                                  obj3164.methods["color:=(1)"] = func3182;
                                                  func3182.definitionLine = 1401;
                                                  func3182.definitionModule = "rtobjectdraw";
                                                  var func3187 = function(argcv) {    // method frameColor
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1408);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3189 = callmethodChecked(this, "theFrameColor", []);
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3189)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method frameColor does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    return call3189;
                                                  };
                                                  func3187.paramCounts = [0];
                                                  obj3164.methods["frameColor"] = func3187;
                                                  func3187.definitionLine = 1408;
                                                  func3187.definitionModule = "rtobjectdraw";
                                                  var func3190 = function(argcv) {    // method frameColor:=(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_newfColor = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1409);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in frameColor:= (arg list 1), which corresponds to parameter newfColor, does not have " + 
                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1410);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3192 = callmethodChecked(this, "theFrameColor:=(1)", [1], var_newfColor);
                                                    setLineNumber(1411);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3194 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3194)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method frameColor:=(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3194;
                                                  };
                                                  func3190.paramTypes = [];
                                                  func3190.paramTypes.push([]);
                                                  func3190.paramCounts = [1];
                                                  obj3164.methods["frameColor:=(1)"] = func3190;
                                                  func3190.definitionLine = 1409;
                                                  func3190.definitionModule = "rtobjectdraw";
                                                  var func3195 = function(argcv) {    // method visible:=(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_b = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1418);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in visible:= (arg list 1), which corresponds to parameter b, does not have " + 
                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1419);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3197 = callmethodChecked(this, "isVisible:=(1)", [1], var_b);
                                                    setLineNumber(1420);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3199 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3199)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method visible:=(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3199;
                                                  };
                                                  func3195.paramTypes = [];
                                                  func3195.paramTypes.push([type_Boolean, "b"]);
                                                  func3195.paramCounts = [1];
                                                  obj3164.methods["visible:=(1)"] = func3195;
                                                  func3195.definitionLine = 1418;
                                                  func3195.definitionModule = "rtobjectdraw";
                                                  var func3200 = function(argcv) {    // method addToCanvas(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_c = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1424);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in addToCanvas (arg list 1), which corresponds to parameter c, does not have " + 
                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1425);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3202 = callmethodChecked(this, "removeFromCanvas", []);
                                                    setLineNumber(1426);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3204 = callmethodChecked(this, "canvas:=(1)", [1], var_c);
                                                    setLineNumber(1427);    // compilenode identifier
                                                    // call case 6: other requests
                                                    var call3206 = callmethodChecked(var_c, "add(1)", [1], this);
                                                    setLineNumber(1428);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3208 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3208)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method addToCanvas(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3208;
                                                  };
                                                  func3200.paramTypes = [];
                                                  func3200.paramTypes.push([]);
                                                  func3200.paramCounts = [1];
                                                  obj3164.methods["addToCanvas(1)"] = func3200;
                                                  func3200.definitionLine = 1424;
                                                  func3200.definitionModule = "rtobjectdraw";
                                                  var func3209 = function(argcv) {    // method removeFromCanvas
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1433);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3212 = callmethodChecked(this, "canvas", []);
                                                    var call3213 = callmethodChecked(call3212, "remove(1)", [1], this);
                                                    setLineNumber(1434);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3215 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3215)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method removeFromCanvas does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3215;
                                                  };
                                                  func3209.paramCounts = [0];
                                                  obj3164.methods["removeFromCanvas"] = func3209;
                                                  func3209.definitionLine = 1432;
                                                  func3209.definitionModule = "rtobjectdraw";
                                                  var func3216 = function(argcv) {    // method moveTo(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_newLocn = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1438);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1439);    // compilenode identifier
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3218 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                    setLineNumber(1440);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3220 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3220)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method moveTo(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3220;
                                                  };
                                                  func3216.paramTypes = [];
                                                  func3216.paramTypes.push([]);
                                                  func3216.paramCounts = [1];
                                                  obj3164.methods["moveTo(1)"] = func3216;
                                                  func3216.definitionLine = 1438;
                                                  func3216.definitionModule = "rtobjectdraw";
                                                  var func3221 = function(argcv) {    // method moveBy(_,_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_dx = arguments[curarg];
                                                    curarg++;
                                                    var var_dy = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1444);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    curarg++;
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1445);    // compilenode identifier
                                                    var opresult3225 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3228 = callmethodChecked(this, "location", []);
                                                    var opresult3230 = callmethodChecked(call3228, "+(1)", [1], opresult3225);
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3231 = callmethodChecked(this, "location:=(1)", [1], opresult3230);
                                                    setLineNumber(1446);    // compilenode member
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3233 = callmethodChecked(this, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3233)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method moveBy(_,_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3233;
                                                  };
                                                  func3221.paramTypes = [];
                                                  func3221.paramTypes.push([type_Number, "dx"]);
                                                  func3221.paramTypes.push([type_Number, "dy"]);
                                                  func3221.paramCounts = [2];
                                                  obj3164.methods["moveBy(2)"] = func3221;
                                                  func3221.definitionLine = 1444;
                                                  func3221.definitionModule = "rtobjectdraw";
                                                  var func3234 = function(argcv) {    // method contains(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_locn = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1450);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1451);    // compilenode string
                                                    var string3236 = new GraceString("");
                                                    var string3239 = new GraceString("contains not implemented for ");
                                                    var opresult3241 = callmethodChecked(string3239, "++(1)", [1], this);
                                                    var opresult3243 = callmethodChecked(opresult3241, "++(1)", [1], string3236);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call3246 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3247 = callmethodChecked(call3246, "SubobjectResponsibility", []);
                                                    var call3248 = callmethodChecked(call3247, "raise(1)", [1], opresult3243);
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3248)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method contains(_) does not have " + 
                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                    return call3248;
                                                  };
                                                  func3234.paramTypes = [];
                                                  func3234.paramTypes.push([]);
                                                  func3234.paramCounts = [1];
                                                  obj3164.methods["contains(1)"] = func3234;
                                                  func3234.definitionLine = 1450;
                                                  func3234.definitionModule = "rtobjectdraw";
                                                  var func3249 = function(argcv) {    // method overlaps(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_otherObject = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1455);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter otherObject, does not have " + 
                                                                callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1456);    // compilenode string
                                                    var string3251 = new GraceString("");
                                                    var string3254 = new GraceString("overlaps not implemented for ");
                                                    var opresult3256 = callmethodChecked(string3254, "++(1)", [1], this);
                                                    var opresult3258 = callmethodChecked(opresult3256, "++(1)", [1], string3251);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call3261 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3262 = callmethodChecked(call3261, "SubobjectResponsibility", []);
                                                    var call3263 = callmethodChecked(call3262, "raise(1)", [1], opresult3258);
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3263)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method overlaps(_) does not have " + 
                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                    return call3263;
                                                  };
                                                  func3249.paramTypes = [];
                                                  func3249.paramTypes.push([]);
                                                  func3249.paramCounts = [1];
                                                  obj3164.methods["overlaps(1)"] = func3249;
                                                  func3249.definitionLine = 1455;
                                                  func3249.definitionModule = "rtobjectdraw";
                                                  var func3264 = function(argcv) {    // method sendForward
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1461);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3267 = callmethodChecked(this, "canvas", []);
                                                    var call3268 = callmethodChecked(call3267, "sendForward(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3268)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendForward does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3268;
                                                  };
                                                  func3264.paramCounts = [0];
                                                  obj3164.methods["sendForward"] = func3264;
                                                  func3264.definitionLine = 1460;
                                                  func3264.definitionModule = "rtobjectdraw";
                                                  var func3269 = function(argcv) {    // method sendBackward
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1466);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3272 = callmethodChecked(this, "canvas", []);
                                                    var call3273 = callmethodChecked(call3272, "sendBackward(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3273)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendBackward does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3273;
                                                  };
                                                  func3269.paramCounts = [0];
                                                  obj3164.methods["sendBackward"] = func3269;
                                                  func3269.definitionLine = 1465;
                                                  func3269.definitionModule = "rtobjectdraw";
                                                  var func3274 = function(argcv) {    // method sendToFront
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1471);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3277 = callmethodChecked(this, "canvas", []);
                                                    var call3278 = callmethodChecked(call3277, "sendToFront(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3278)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendToFront does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3278;
                                                  };
                                                  func3274.paramCounts = [0];
                                                  obj3164.methods["sendToFront"] = func3274;
                                                  func3274.definitionLine = 1470;
                                                  func3274.definitionModule = "rtobjectdraw";
                                                  var func3279 = function(argcv) {    // method sendToBack
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1476);    // compilenode identifier
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3282 = callmethodChecked(this, "canvas", []);
                                                    var call3283 = callmethodChecked(call3282, "sendToBack(1)", [1], this);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3283)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method sendToBack does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3283;
                                                  };
                                                  func3279.paramCounts = [0];
                                                  obj3164.methods["sendToBack"] = func3279;
                                                  func3279.definitionLine = 1475;
                                                  func3279.definitionModule = "rtobjectdraw";
                                                  var func3284 = function(argcv) {    // method notifyRedraw
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1481);    // compilenode member
                                                    // call case 6: other requests
                                                    // call case 4: self request
                                                    onSelf = true;
                                                    var call3287 = callmethodChecked(this, "canvas", []);
                                                    var call3288 = callmethodChecked(call3287, "notifyRedraw", []);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3288)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method notifyRedraw does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3288;
                                                  };
                                                  func3284.confidential = true;
                                                  func3284.paramCounts = [0];
                                                  obj3164.methods["notifyRedraw"] = func3284;
                                                  func3284.definitionLine = 1480;
                                                  func3284.definitionModule = "rtobjectdraw";
                                                  var func3289 = function(argcv) {    // method draw(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_ctx = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    setLineNumber(1485);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1486);    // compilenode string
                                                    var string3291 = new GraceString("");
                                                    var string3294 = new GraceString("draw not implemented for ");
                                                    var opresult3296 = callmethodChecked(string3294, "++(1)", [1], this);
                                                    var opresult3298 = callmethodChecked(opresult3296, "++(1)", [1], string3291);
                                                    // call case 6: other requests
                                                    // call case 6: other requests
                                                    // call case 3: self.outer request
                                                    var call3301 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3302 = callmethodChecked(call3301, "SubobjectResponsibility", []);
                                                    var call3303 = callmethodChecked(call3302, "raise(1)", [1], opresult3298);
                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3303)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method draw(_) does not have " + 
                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                    return call3303;
                                                  };
                                                  func3289.paramTypes = [];
                                                  func3289.paramTypes.push([]);
                                                  func3289.paramCounts = [1];
                                                  obj3164.methods["draw(1)"] = func3289;
                                                  func3289.definitionLine = 1485;
                                                  func3289.definitionModule = "rtobjectdraw";
                                                  var func3304 = function(argcv) {    // method asString
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1491);    // compilenode string
                                                    var string3305 = new GraceString("Graphic object");
                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string3305)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method asString does not have " + 
                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                    return string3305;
                                                  };
                                                  func3304.paramCounts = [0];
                                                  obj3164.methods["asString"] = func3304;
                                                  func3304.definitionLine = 1490;
                                                  func3304.definitionModule = "rtobjectdraw";
                                                  setLineNumber(1375);    // compilenode identifier
                                                  obj3164.data["location"] = var_location__39__;
                                                  var reader_rtobjectdraw_location3306 = function() {
                                                    return this.data["location"];
                                                  };
                                                  obj3164.methods["location"] = reader_rtobjectdraw_location3306;
                                                  obj3164.data["location"] = var_location__39__;
                                                  var writer_rtobjectdraw_location3306 = function(argcv, o) {
                                                    this.data["location"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3164.methods["location:=(1)"] = writer_rtobjectdraw_location3306;
                                                  writer_rtobjectdraw_location3306.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_location__39__)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'location' is not of type Point"));
                                                  obj3164.mutable = true;
                                                  setLineNumber(1394);    // compilenode identifier
                                                  obj3164.data["canvas"] = var_canvas__39__;
                                                  var reader_rtobjectdraw_canvas3307 = function() {
                                                    return this.data["canvas"];
                                                  };
                                                  obj3164.methods["canvas"] = reader_rtobjectdraw_canvas3307;
                                                  obj3164.data["canvas"] = var_canvas__39__;
                                                  var writer_rtobjectdraw_canvas3307 = function(argcv, o) {
                                                    this.data["canvas"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3164.methods["canvas:=(1)"] = writer_rtobjectdraw_canvas3307;
                                                  reader_rtobjectdraw_canvas3307.confidential = true;
                                                  writer_rtobjectdraw_canvas3307.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], var_canvas__39__)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'canvas' is not of type DrawingCanvas"));
                                                  obj3164.mutable = true;
                                                  setLineNumber(1397);    // compilenode identifier
                                                  obj3164.data["theColor"] = var_black;
                                                  var reader_rtobjectdraw_theColor3308 = function() {
                                                    return this.data["theColor"];
                                                  };
                                                  obj3164.methods["theColor"] = reader_rtobjectdraw_theColor3308;
                                                  obj3164.data["theColor"] = var_black;
                                                  var writer_rtobjectdraw_theColor3308 = function(argcv, o) {
                                                    this.data["theColor"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3164.methods["theColor:=(1)"] = writer_rtobjectdraw_theColor3308;
                                                  reader_rtobjectdraw_theColor3308.confidential = true;
                                                  writer_rtobjectdraw_theColor3308.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'theColor' is not of type Color"));
                                                  obj3164.mutable = true;
                                                  setLineNumber(1406);    // compilenode identifier
                                                  obj3164.data["theFrameColor"] = var_black;
                                                  var reader_rtobjectdraw_theFrameColor3309 = function() {
                                                    return this.data["theFrameColor"];
                                                  };
                                                  obj3164.methods["theFrameColor"] = reader_rtobjectdraw_theFrameColor3309;
                                                  obj3164.data["theFrameColor"] = var_black;
                                                  var writer_rtobjectdraw_theFrameColor3309 = function(argcv, o) {
                                                    this.data["theFrameColor"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3164.methods["theFrameColor:=(1)"] = writer_rtobjectdraw_theFrameColor3309;
                                                  reader_rtobjectdraw_theFrameColor3309.confidential = true;
                                                  writer_rtobjectdraw_theFrameColor3309.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'theFrameColor' is not of type Color"));
                                                  obj3164.mutable = true;
                                                  setLineNumber(1415);    // compilenode identifier
                                                  obj3164.data["isVisible"] = GraceTrue;
                                                  var reader_rtobjectdraw_isVisible3310 = function() {
                                                    return this.data["isVisible"];
                                                  };
                                                  obj3164.methods["isVisible"] = reader_rtobjectdraw_isVisible3310;
                                                  obj3164.data["isVisible"] = GraceTrue;
                                                  var writer_rtobjectdraw_isVisible3310 = function(argcv, o) {
                                                    this.data["isVisible"] = o;
                                                    return GraceDone;
                                                  };
                                                  obj3164.methods["isVisible:=(1)"] = writer_rtobjectdraw_isVisible3310;
                                                  writer_rtobjectdraw_isVisible3310.confidential = true;
                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("initial value of var 'isVisible' is not of type Boolean"));
                                                  obj3164.mutable = true;
                                                  superDepth = origSuperDepth;
                                                };
                                                obj_init_3164.apply(obj3164, []);
                                                setLineNumber(1371);    // return value
                                                if (!Grace_isTrue(callmethod(var_Graphic, "match(1)", [1], obj3164)))
                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                        new GraceString("result of method drawableAt(_)on(_) does not have " + 
                                                            callmethod(var_Graphic, "asString", [0])._value + "."));
                                                return obj3164;
                                              };
                                              func3163.paramTypes = [];
                                              func3163.paramTypes.push([]);
                                              func3163.paramTypes.push([]);
                                              func3163.paramCounts = [1, 1];
                                              this.methods["drawableAt(1)on(1)"] = func3163;
                                              func3163.definitionLine = 1371;
                                              func3163.definitionModule = "rtobjectdraw";
                                                var func3311 = function(argcv) {    // method drawableAt(_)on(_)$object(_)
                                                  var curarg = 1;
                                                  var var_location__39__ = arguments[curarg];
                                                  curarg++;
                                                  var var_canvas__39__ = arguments[curarg];
                                                  curarg++;
                                                  var inheritingObject = arguments[curarg++];
                                                  // Start argument processing
                                                  curarg = 1;
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in drawableAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in on (arg list 2), which corresponds to parameter canvas', does not have " + 
                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument processing
                                                  setModuleName("rtobjectdraw");
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var obj3312 = Grace_allocObject(GraceObject, "drawableAt(1)on(1)");
                                                  obj3312.definitionModule = "rtobjectdraw";
                                                  obj3312.definitionLine = 1371;
                                                  var inho3312 = inheritingObject;
                                                  while (inho3312.superobj) inho3312 = inho3312.superobj;
                                                  inho3312.superobj = obj3312;
                                                  obj3312.data = inheritingObject.data;
                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                    obj3312._value = inheritingObject._value;
                                                  obj3312.outer = this;
                                                  var reader_rtobjectdraw_outer3313 = function() {
                                                    return this.outer;
                                                  };
                                                  obj3312.methods["outer"] = reader_rtobjectdraw_outer3313;
                                                  var obj_init_3312 = function() {
                                                    var origSuperDepth = superDepth;
                                                    superDepth = obj3312;
                                                    var func3314 = function(argcv) {    // method x
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1379);    // compilenode member
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3317 = callmethodChecked(this, "location", []);
                                                      var call3318 = callmethodChecked(call3317, "x", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3318)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method x does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3318;
                                                    };
                                                    func3314.paramCounts = [0];
                                                    obj3312.methods["x"] = func3314;
                                                    func3314.definitionLine = 1378;
                                                    func3314.definitionModule = "rtobjectdraw";
                                                    var func3319 = function(argcv) {    // method y
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1384);    // compilenode member
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3322 = callmethodChecked(this, "location", []);
                                                      var call3323 = callmethodChecked(call3322, "y", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3323)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method y does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3323;
                                                    };
                                                    func3319.paramCounts = [0];
                                                    obj3312.methods["y"] = func3319;
                                                    func3319.definitionLine = 1383;
                                                    func3319.definitionModule = "rtobjectdraw";
                                                    var func3324 = function(argcv) {    // method ==(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_other = arguments[curarg];
                                                      curarg++;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1390);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3326 = callmethodChecked(this, "isMe(1)", [1], var_other);
                                                      return call3326;
                                                    };
                                                    func3324.paramCounts = [1];
                                                    obj3312.methods["==(1)"] = func3324;
                                                    func3324.definitionLine = 1387;
                                                    func3324.definitionModule = "rtobjectdraw";
                                                    var func3327 = function(argcv) {    // method color
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1399);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3329 = callmethodChecked(this, "theColor", []);
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3329)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method color does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      return call3329;
                                                    };
                                                    func3327.paramCounts = [0];
                                                    obj3312.methods["color"] = func3327;
                                                    func3327.definitionLine = 1399;
                                                    func3327.definitionModule = "rtobjectdraw";
                                                    var func3330 = function(argcv) {    // method color:=(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_newColor = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1401);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in color:= (arg list 1), which corresponds to parameter newColor, does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1402);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3332 = callmethodChecked(this, "theColor:=(1)", [1], var_newColor);
                                                      setLineNumber(1403);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3334 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3334)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method color:=(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3334;
                                                    };
                                                    func3330.paramTypes = [];
                                                    func3330.paramTypes.push([]);
                                                    func3330.paramCounts = [1];
                                                    obj3312.methods["color:=(1)"] = func3330;
                                                    func3330.definitionLine = 1401;
                                                    func3330.definitionModule = "rtobjectdraw";
                                                    var func3335 = function(argcv) {    // method frameColor
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1408);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3337 = callmethodChecked(this, "theFrameColor", []);
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call3337)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method frameColor does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      return call3337;
                                                    };
                                                    func3335.paramCounts = [0];
                                                    obj3312.methods["frameColor"] = func3335;
                                                    func3335.definitionLine = 1408;
                                                    func3335.definitionModule = "rtobjectdraw";
                                                    var func3338 = function(argcv) {    // method frameColor:=(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_newfColor = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1409);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in frameColor:= (arg list 1), which corresponds to parameter newfColor, does not have " + 
                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1410);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3340 = callmethodChecked(this, "theFrameColor:=(1)", [1], var_newfColor);
                                                      setLineNumber(1411);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3342 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3342)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method frameColor:=(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3342;
                                                    };
                                                    func3338.paramTypes = [];
                                                    func3338.paramTypes.push([]);
                                                    func3338.paramCounts = [1];
                                                    obj3312.methods["frameColor:=(1)"] = func3338;
                                                    func3338.definitionLine = 1409;
                                                    func3338.definitionModule = "rtobjectdraw";
                                                    var func3343 = function(argcv) {    // method visible:=(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_b = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1418);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in visible:= (arg list 1), which corresponds to parameter b, does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1419);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3345 = callmethodChecked(this, "isVisible:=(1)", [1], var_b);
                                                      setLineNumber(1420);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3347 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3347)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method visible:=(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3347;
                                                    };
                                                    func3343.paramTypes = [];
                                                    func3343.paramTypes.push([type_Boolean, "b"]);
                                                    func3343.paramCounts = [1];
                                                    obj3312.methods["visible:=(1)"] = func3343;
                                                    func3343.definitionLine = 1418;
                                                    func3343.definitionModule = "rtobjectdraw";
                                                    var func3348 = function(argcv) {    // method addToCanvas(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_c = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1424);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in addToCanvas (arg list 1), which corresponds to parameter c, does not have " + 
                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1425);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3350 = callmethodChecked(this, "removeFromCanvas", []);
                                                      setLineNumber(1426);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3352 = callmethodChecked(this, "canvas:=(1)", [1], var_c);
                                                      setLineNumber(1427);    // compilenode identifier
                                                      // call case 6: other requests
                                                      var call3354 = callmethodChecked(var_c, "add(1)", [1], this);
                                                      setLineNumber(1428);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3356 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3356)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method addToCanvas(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3356;
                                                    };
                                                    func3348.paramTypes = [];
                                                    func3348.paramTypes.push([]);
                                                    func3348.paramCounts = [1];
                                                    obj3312.methods["addToCanvas(1)"] = func3348;
                                                    func3348.definitionLine = 1424;
                                                    func3348.definitionModule = "rtobjectdraw";
                                                    var func3357 = function(argcv) {    // method removeFromCanvas
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1433);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3360 = callmethodChecked(this, "canvas", []);
                                                      var call3361 = callmethodChecked(call3360, "remove(1)", [1], this);
                                                      setLineNumber(1434);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3363 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3363)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method removeFromCanvas does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3363;
                                                    };
                                                    func3357.paramCounts = [0];
                                                    obj3312.methods["removeFromCanvas"] = func3357;
                                                    func3357.definitionLine = 1432;
                                                    func3357.definitionModule = "rtobjectdraw";
                                                    var func3364 = function(argcv) {    // method moveTo(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_newLocn = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1438);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1439);    // compilenode identifier
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3366 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                      setLineNumber(1440);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3368 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3368)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method moveTo(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3368;
                                                    };
                                                    func3364.paramTypes = [];
                                                    func3364.paramTypes.push([]);
                                                    func3364.paramCounts = [1];
                                                    obj3312.methods["moveTo(1)"] = func3364;
                                                    func3364.definitionLine = 1438;
                                                    func3364.definitionModule = "rtobjectdraw";
                                                    var func3369 = function(argcv) {    // method moveBy(_,_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_dx = arguments[curarg];
                                                      curarg++;
                                                      var var_dy = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1444);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      curarg++;
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1445);    // compilenode identifier
                                                      var opresult3373 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3376 = callmethodChecked(this, "location", []);
                                                      var opresult3378 = callmethodChecked(call3376, "+(1)", [1], opresult3373);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3379 = callmethodChecked(this, "location:=(1)", [1], opresult3378);
                                                      setLineNumber(1446);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3381 = callmethodChecked(this, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3381)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method moveBy(_,_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3381;
                                                    };
                                                    func3369.paramTypes = [];
                                                    func3369.paramTypes.push([type_Number, "dx"]);
                                                    func3369.paramTypes.push([type_Number, "dy"]);
                                                    func3369.paramCounts = [2];
                                                    obj3312.methods["moveBy(2)"] = func3369;
                                                    func3369.definitionLine = 1444;
                                                    func3369.definitionModule = "rtobjectdraw";
                                                    var func3382 = function(argcv) {    // method contains(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_locn = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1450);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1451);    // compilenode string
                                                      var string3384 = new GraceString("");
                                                      var string3387 = new GraceString("contains not implemented for ");
                                                      var opresult3389 = callmethodChecked(string3387, "++(1)", [1], this);
                                                      var opresult3391 = callmethodChecked(opresult3389, "++(1)", [1], string3384);
                                                      // call case 6: other requests
                                                      // call case 6: other requests
                                                      // call case 3: self.outer request
                                                      var call3394 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3395 = callmethodChecked(call3394, "SubobjectResponsibility", []);
                                                      var call3396 = callmethodChecked(call3395, "raise(1)", [1], opresult3391);
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3396)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method contains(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return call3396;
                                                    };
                                                    func3382.paramTypes = [];
                                                    func3382.paramTypes.push([]);
                                                    func3382.paramCounts = [1];
                                                    obj3312.methods["contains(1)"] = func3382;
                                                    func3382.definitionLine = 1450;
                                                    func3382.definitionModule = "rtobjectdraw";
                                                    var func3397 = function(argcv) {    // method overlaps(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_otherObject = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1455);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter otherObject, does not have " + 
                                                                  callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1456);    // compilenode string
                                                      var string3399 = new GraceString("");
                                                      var string3402 = new GraceString("overlaps not implemented for ");
                                                      var opresult3404 = callmethodChecked(string3402, "++(1)", [1], this);
                                                      var opresult3406 = callmethodChecked(opresult3404, "++(1)", [1], string3399);
                                                      // call case 6: other requests
                                                      // call case 6: other requests
                                                      // call case 3: self.outer request
                                                      var call3409 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3410 = callmethodChecked(call3409, "SubobjectResponsibility", []);
                                                      var call3411 = callmethodChecked(call3410, "raise(1)", [1], opresult3406);
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3411)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method overlaps(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return call3411;
                                                    };
                                                    func3397.paramTypes = [];
                                                    func3397.paramTypes.push([]);
                                                    func3397.paramCounts = [1];
                                                    obj3312.methods["overlaps(1)"] = func3397;
                                                    func3397.definitionLine = 1455;
                                                    func3397.definitionModule = "rtobjectdraw";
                                                    var func3412 = function(argcv) {    // method sendForward
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1461);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3415 = callmethodChecked(this, "canvas", []);
                                                      var call3416 = callmethodChecked(call3415, "sendForward(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3416)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendForward does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3416;
                                                    };
                                                    func3412.paramCounts = [0];
                                                    obj3312.methods["sendForward"] = func3412;
                                                    func3412.definitionLine = 1460;
                                                    func3412.definitionModule = "rtobjectdraw";
                                                    var func3417 = function(argcv) {    // method sendBackward
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1466);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3420 = callmethodChecked(this, "canvas", []);
                                                      var call3421 = callmethodChecked(call3420, "sendBackward(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3421)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendBackward does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3421;
                                                    };
                                                    func3417.paramCounts = [0];
                                                    obj3312.methods["sendBackward"] = func3417;
                                                    func3417.definitionLine = 1465;
                                                    func3417.definitionModule = "rtobjectdraw";
                                                    var func3422 = function(argcv) {    // method sendToFront
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1471);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3425 = callmethodChecked(this, "canvas", []);
                                                      var call3426 = callmethodChecked(call3425, "sendToFront(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3426)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendToFront does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3426;
                                                    };
                                                    func3422.paramCounts = [0];
                                                    obj3312.methods["sendToFront"] = func3422;
                                                    func3422.definitionLine = 1470;
                                                    func3422.definitionModule = "rtobjectdraw";
                                                    var func3427 = function(argcv) {    // method sendToBack
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1476);    // compilenode identifier
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3430 = callmethodChecked(this, "canvas", []);
                                                      var call3431 = callmethodChecked(call3430, "sendToBack(1)", [1], this);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3431)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method sendToBack does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3431;
                                                    };
                                                    func3427.paramCounts = [0];
                                                    obj3312.methods["sendToBack"] = func3427;
                                                    func3427.definitionLine = 1475;
                                                    func3427.definitionModule = "rtobjectdraw";
                                                    var func3432 = function(argcv) {    // method notifyRedraw
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1481);    // compilenode member
                                                      // call case 6: other requests
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3435 = callmethodChecked(this, "canvas", []);
                                                      var call3436 = callmethodChecked(call3435, "notifyRedraw", []);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3436)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method notifyRedraw does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3436;
                                                    };
                                                    func3432.confidential = true;
                                                    func3432.paramCounts = [0];
                                                    obj3312.methods["notifyRedraw"] = func3432;
                                                    func3432.definitionLine = 1480;
                                                    func3432.definitionModule = "rtobjectdraw";
                                                    var func3437 = function(argcv) {    // method draw(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_ctx = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1485);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1486);    // compilenode string
                                                      var string3439 = new GraceString("");
                                                      var string3442 = new GraceString("draw not implemented for ");
                                                      var opresult3444 = callmethodChecked(string3442, "++(1)", [1], this);
                                                      var opresult3446 = callmethodChecked(opresult3444, "++(1)", [1], string3439);
                                                      // call case 6: other requests
                                                      // call case 6: other requests
                                                      // call case 3: self.outer request
                                                      var call3449 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3450 = callmethodChecked(call3449, "SubobjectResponsibility", []);
                                                      var call3451 = callmethodChecked(call3450, "raise(1)", [1], opresult3446);
                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3451)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method draw(_) does not have " + 
                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                      return call3451;
                                                    };
                                                    func3437.paramTypes = [];
                                                    func3437.paramTypes.push([]);
                                                    func3437.paramCounts = [1];
                                                    obj3312.methods["draw(1)"] = func3437;
                                                    func3437.definitionLine = 1485;
                                                    func3437.definitionModule = "rtobjectdraw";
                                                    var func3452 = function(argcv) {    // method asString
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1491);    // compilenode string
                                                      var string3453 = new GraceString("Graphic object");
                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], string3453)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method asString does not have " + 
                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                      return string3453;
                                                    };
                                                    func3452.paramCounts = [0];
                                                    obj3312.methods["asString"] = func3452;
                                                    func3452.definitionLine = 1490;
                                                    func3452.definitionModule = "rtobjectdraw";
                                                    setLineNumber(1375);    // compilenode identifier
                                                    obj3312.data["location"] = var_location__39__;
                                                    var reader_rtobjectdraw_location3454 = function() {
                                                      return this.data["location"];
                                                    };
                                                    obj3312.methods["location"] = reader_rtobjectdraw_location3454;
                                                    obj3312.data["location"] = var_location__39__;
                                                    var writer_rtobjectdraw_location3454 = function(argcv, o) {
                                                      this.data["location"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3312.methods["location:=(1)"] = writer_rtobjectdraw_location3454;
                                                    writer_rtobjectdraw_location3454.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_location__39__)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'location' is not of type Point"));
                                                    obj3312.mutable = true;
                                                    setLineNumber(1394);    // compilenode identifier
                                                    obj3312.data["canvas"] = var_canvas__39__;
                                                    var reader_rtobjectdraw_canvas3455 = function() {
                                                      return this.data["canvas"];
                                                    };
                                                    obj3312.methods["canvas"] = reader_rtobjectdraw_canvas3455;
                                                    obj3312.data["canvas"] = var_canvas__39__;
                                                    var writer_rtobjectdraw_canvas3455 = function(argcv, o) {
                                                      this.data["canvas"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3312.methods["canvas:=(1)"] = writer_rtobjectdraw_canvas3455;
                                                    reader_rtobjectdraw_canvas3455.confidential = true;
                                                    writer_rtobjectdraw_canvas3455.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)", [1], var_canvas__39__)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'canvas' is not of type DrawingCanvas"));
                                                    obj3312.mutable = true;
                                                    setLineNumber(1397);    // compilenode identifier
                                                    obj3312.data["theColor"] = var_black;
                                                    var reader_rtobjectdraw_theColor3456 = function() {
                                                      return this.data["theColor"];
                                                    };
                                                    obj3312.methods["theColor"] = reader_rtobjectdraw_theColor3456;
                                                    obj3312.data["theColor"] = var_black;
                                                    var writer_rtobjectdraw_theColor3456 = function(argcv, o) {
                                                      this.data["theColor"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3312.methods["theColor:=(1)"] = writer_rtobjectdraw_theColor3456;
                                                    reader_rtobjectdraw_theColor3456.confidential = true;
                                                    writer_rtobjectdraw_theColor3456.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theColor' is not of type Color"));
                                                    obj3312.mutable = true;
                                                    setLineNumber(1406);    // compilenode identifier
                                                    obj3312.data["theFrameColor"] = var_black;
                                                    var reader_rtobjectdraw_theFrameColor3457 = function() {
                                                      return this.data["theFrameColor"];
                                                    };
                                                    obj3312.methods["theFrameColor"] = reader_rtobjectdraw_theFrameColor3457;
                                                    obj3312.data["theFrameColor"] = var_black;
                                                    var writer_rtobjectdraw_theFrameColor3457 = function(argcv, o) {
                                                      this.data["theFrameColor"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3312.methods["theFrameColor:=(1)"] = writer_rtobjectdraw_theFrameColor3457;
                                                    reader_rtobjectdraw_theFrameColor3457.confidential = true;
                                                    writer_rtobjectdraw_theFrameColor3457.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theFrameColor' is not of type Color"));
                                                    obj3312.mutable = true;
                                                    setLineNumber(1415);    // compilenode identifier
                                                    obj3312.data["isVisible"] = GraceTrue;
                                                    var reader_rtobjectdraw_isVisible3458 = function() {
                                                      return this.data["isVisible"];
                                                    };
                                                    obj3312.methods["isVisible"] = reader_rtobjectdraw_isVisible3458;
                                                    obj3312.data["isVisible"] = GraceTrue;
                                                    var writer_rtobjectdraw_isVisible3458 = function(argcv, o) {
                                                      this.data["isVisible"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3312.methods["isVisible:=(1)"] = writer_rtobjectdraw_isVisible3458;
                                                    writer_rtobjectdraw_isVisible3458.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], GraceTrue)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'isVisible' is not of type Boolean"));
                                                    obj3312.mutable = true;
                                                    superDepth = origSuperDepth;
                                                  };
                                                  obj_init_3312.apply(inheritingObject, []);
                                                  return obj3312;
                                                  };
                                                  func3311.paramTypes = [];
                                                  func3311.paramTypes.push([]);
                                                  func3311.paramTypes.push([]);
                                                  this.methods["drawableAt(1)on(1)$object(1)"] = func3311;
                                                setLineNumber(1496);    // compilenode method
                                                var func3459 = function(argcv) {    // method drawable2DAt(_)size(_)on(_)
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  var var_location__39__ = arguments[curarg];
                                                  curarg++;
                                                  var var_dimension__39__ = arguments[curarg];
                                                  curarg++;
                                                  var var_canvas__39__ = arguments[curarg];
                                                  curarg++;
                                                  // Start argument checking
                                                  curarg = 1;
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in drawable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  setLineNumber(1497);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimension', does not have " + 
                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                  curarg++;
                                                  setLineNumber(1498);    // compilenode identifier
                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                  curarg++;
                                                  // End argument checking
                                                  setModuleName("rtobjectdraw");
                                                  setLineNumber(1496);    // compilenode object
                                                  var obj3460 = Grace_allocObject(null, "drawable2DAt(_)size(_)on(_)");
                                                  obj3460.definitionModule = "rtobjectdraw";
                                                  obj3460.definitionLine = 1496;
                                                  obj3460.outer = this;
                                                  var reader_rtobjectdraw_outer3461 = function() {
                                                    return this.outer;
                                                  };
                                                  obj3460.methods["outer"] = reader_rtobjectdraw_outer3461;
                                                  var obj_init_3460 = function() {
                                                    var origSuperDepth = superDepth;
                                                    superDepth = obj3460;
                                                    var func3462 = function(argcv) {    // method width
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1505);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3464 = callmethodChecked(this, "theWidth", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3464)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method width does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3464;
                                                    };
                                                    func3462.paramCounts = [0];
                                                    obj3460.methods["width"] = func3462;
                                                    func3462.definitionLine = 1505;
                                                    func3462.definitionModule = "rtobjectdraw";
                                                    var func3465 = function(argcv) {    // method height
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1509);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3467 = callmethodChecked(this, "theHeight", []);
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3467)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method height does not have " + 
                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                      return call3467;
                                                    };
                                                    func3465.paramCounts = [0];
                                                    obj3460.methods["height"] = func3465;
                                                    func3465.definitionLine = 1509;
                                                    func3465.definitionModule = "rtobjectdraw";
                                                    var func3468 = function(argcv) {    // method size
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1511);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3470 = callmethodChecked(this, "theHeight", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3473 = callmethodChecked(this, "theWidth", []);
                                                      var opresult3475 = callmethodChecked(call3473, "@(1)", [1], call3470);
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult3475)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method size does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      return opresult3475;
                                                    };
                                                    func3468.paramCounts = [0];
                                                    obj3460.methods["size"] = func3468;
                                                    func3468.definitionLine = 1511;
                                                    func3468.definitionModule = "rtobjectdraw";
                                                    var func3476 = function(argcv) {    // method contains(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_locn = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1515);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1517);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3478 = callmethodChecked(this, "height", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3481 = callmethodChecked(this, "y", []);
                                                      var opresult3483 = callmethodChecked(call3481, "+(1)", [1], call3478);
                                                      // call case 6: other requests
                                                      var call3486 = callmethodChecked(var_locn, "y", []);
                                                      var opresult3488 = callmethodChecked(call3486, "\u2264(1)", [1], opresult3483);
                                                      // call case 6: other requests
                                                      var call3491 = callmethodChecked(var_locn, "y", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3494 = callmethodChecked(this, "y", []);
                                                      var opresult3496 = callmethodChecked(call3494, "\u2264(1)", [1], call3491);
                                                      setLineNumber(1516);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3499 = callmethodChecked(this, "width", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3502 = callmethodChecked(this, "x", []);
                                                      var opresult3504 = callmethodChecked(call3502, "+(1)", [1], call3499);
                                                      // call case 6: other requests
                                                      var call3507 = callmethodChecked(var_locn, "x", []);
                                                      var opresult3509 = callmethodChecked(call3507, "\u2264(1)", [1], opresult3504);
                                                      // call case 6: other requests
                                                      var call3512 = callmethodChecked(var_locn, "x", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3515 = callmethodChecked(this, "x", []);
                                                      var opresult3517 = callmethodChecked(call3515, "\u2264(1)", [1], call3512);
                                                      var opresult3519 = callmethodChecked(opresult3517, "&&(1)", [1], opresult3509);
                                                      var opresult3521 = callmethodChecked(opresult3519, "&&(1)", [1], opresult3496);
                                                      var opresult3523 = callmethodChecked(opresult3521, "&&(1)", [1], opresult3488);
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult3523)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method contains(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return opresult3523;
                                                    };
                                                    func3476.paramTypes = [];
                                                    func3476.paramTypes.push([]);
                                                    func3476.paramCounts = [1];
                                                    obj3460.methods["contains(1)"] = func3476;
                                                    func3476.definitionLine = 1515;
                                                    func3476.definitionModule = "rtobjectdraw";
                                                    var func3524 = function(argcv) {    // method overlaps(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_other = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      setLineNumber(1521);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter other, does not have " + 
                                                                  callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1522);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3526 = callmethodChecked(var_other, "x", []);
                                                      var var_itemleft = call3526;
                                                      setLineNumber(1523);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3528 = callmethodChecked(var_other, "width", []);
                                                      // call case 6: other requests
                                                      var call3531 = callmethodChecked(var_other, "x", []);
                                                      var opresult3533 = callmethodChecked(call3531, "+(1)", [1], call3528);
                                                      var var_itemright = opresult3533;
                                                      setLineNumber(1524);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3535 = callmethodChecked(var_other, "y", []);
                                                      var var_itemtop = call3535;
                                                      setLineNumber(1525);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3537 = callmethodChecked(var_other, "height", []);
                                                      // call case 6: other requests
                                                      var call3540 = callmethodChecked(var_other, "y", []);
                                                      var opresult3542 = callmethodChecked(call3540, "+(1)", [1], call3537);
                                                      var var_itembottom = opresult3542;
                                                      setLineNumber(1527);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3544 = callmethodChecked(this, "y", []);
                                                      var opresult3547 = callmethodChecked(var_itembottom, "<(1)", [1], call3544);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3551 = callmethodChecked(this, "height", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3554 = callmethodChecked(this, "y", []);
                                                      var opresult3556 = callmethodChecked(call3554, "+(1)", [1], call3551);
                                                      var opresult3558 = callmethodChecked(opresult3556, "<(1)", [1], var_itemtop);
                                                      setLineNumber(1526);    // compilenode member
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3561 = callmethodChecked(this, "x", []);
                                                      var opresult3564 = callmethodChecked(var_itemright, "<(1)", [1], call3561);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3568 = callmethodChecked(this, "width", []);
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3571 = callmethodChecked(this, "x", []);
                                                      var opresult3573 = callmethodChecked(call3571, "+(1)", [1], call3568);
                                                      var opresult3575 = callmethodChecked(opresult3573, "<(1)", [1], var_itemleft);
                                                      var opresult3577 = callmethodChecked(opresult3575, "||(1)", [1], opresult3564);
                                                      var opresult3579 = callmethodChecked(opresult3577, "||(1)", [1], opresult3558);
                                                      var opresult3581 = callmethodChecked(opresult3579, "||(1)", [1], opresult3547);
                                                      var var_disjoint = opresult3581;
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], var_disjoint)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("value of def 'disjoint' is not of type Boolean"));
                                                      setLineNumber(1529);    // compilenode call
                                                      // call case 6: other requests
                                                      setLineNumber(1528);    // compilenode identifier
                                                      var call3583 = callmethodChecked(var_disjoint, "prefix!", [0]);
                                                      setLineNumber(1529);    // return value
                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3583)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method overlaps(_) does not have " + 
                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                      return call3583;
                                                    };
                                                    func3524.paramTypes = [];
                                                    func3524.paramTypes.push([]);
                                                    func3524.paramCounts = [1];
                                                    obj3460.methods["overlaps(1)"] = func3524;
                                                    func3524.definitionLine = 1521;
                                                    func3524.definitionModule = "rtobjectdraw";
                                                    var func3584 = function(argcv) {    // method asString
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1534);    // compilenode string
                                                      var string3585 = new GraceString("");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3588 = callmethodChecked(this, "color", []);
                                                      var string3590 = new GraceString(", and color ");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3593 = callmethodChecked(this, "width", []);
                                                      var string3595 = new GraceString(", width ");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3598 = callmethodChecked(this, "height", []);
                                                      var string3600 = new GraceString("with height ");
                                                      var opresult3602 = callmethodChecked(string3600, "++(1)", [1], call3598);
                                                      var opresult3604 = callmethodChecked(opresult3602, "++(1)", [1], string3595);
                                                      var opresult3606 = callmethodChecked(opresult3604, "++(1)", [1], call3593);
                                                      var opresult3608 = callmethodChecked(opresult3606, "++(1)", [1], string3590);
                                                      var opresult3610 = callmethodChecked(opresult3608, "++(1)", [1], call3588);
                                                      var opresult3612 = callmethodChecked(opresult3610, "++(1)", [1], string3585);
                                                      setLineNumber(1533);    // compilenode string
                                                      var string3614 = new GraceString(") ");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3617 = callmethodChecked(this, "y", []);
                                                      var string3619 = new GraceString(",");
                                                      // call case 4: self request
                                                      onSelf = true;
                                                      var call3622 = callmethodChecked(this, "x", []);
                                                      var string3624 = new GraceString("drawable2D object at (");
                                                      var opresult3626 = callmethodChecked(string3624, "++(1)", [1], call3622);
                                                      var opresult3628 = callmethodChecked(opresult3626, "++(1)", [1], string3619);
                                                      var opresult3630 = callmethodChecked(opresult3628, "++(1)", [1], call3617);
                                                      var opresult3632 = callmethodChecked(opresult3630, "++(1)", [1], string3614);
                                                      var opresult3634 = callmethodChecked(opresult3632, "++(1)", [1], opresult3612);
                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3634)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method asString does not have " + 
                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                      return opresult3634;
                                                    };
                                                    func3584.paramCounts = [0];
                                                    obj3460.methods["asString"] = func3584;
                                                    func3584.definitionLine = 1532;
                                                    func3584.definitionModule = "rtobjectdraw";
                                                    setLineNumber(1501);    // compilenode identifier
                                                    // call case 6: other requests
                                                    setLineNumber(0);    // compilenode member
                                                    // call case 3: self.outer request
                                                    var call3637 = callmethodChecked(superDepth, "outer", [0]);
                                                    onSelf = true;
                                                    var call3638 = callmethodChecked(call3637, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                    obj3460.superobj = call3638;
                                                    if (call3638.data) obj3460.data = call3638.data;
                                                    if (call3638.hasOwnProperty('_value'))
                                                        obj3460._value = call3638._value;
                                                    setLineNumber(1502);    // compilenode member
                                                    // call case 6: other requests
                                                    var call3640 = callmethodChecked(var_dimension__39__, "x", []);
                                                    obj3460.data["theWidth"] = call3640;
                                                    var reader_rtobjectdraw_theWidth3641 = function() {
                                                      return this.data["theWidth"];
                                                    };
                                                    obj3460.methods["theWidth"] = reader_rtobjectdraw_theWidth3641;
                                                    obj3460.data["theWidth"] = call3640;
                                                    var writer_rtobjectdraw_theWidth3641 = function(argcv, o) {
                                                      this.data["theWidth"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3460.methods["theWidth:=(1)"] = writer_rtobjectdraw_theWidth3641;
                                                    reader_rtobjectdraw_theWidth3641.confidential = true;
                                                    writer_rtobjectdraw_theWidth3641.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3640)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theWidth' is not of type Number"));
                                                    obj3460.mutable = true;
                                                    setLineNumber(1506);    // compilenode member
                                                    // call case 6: other requests
                                                    var call3643 = callmethodChecked(var_dimension__39__, "y", []);
                                                    obj3460.data["theHeight"] = call3643;
                                                    var reader_rtobjectdraw_theHeight3644 = function() {
                                                      return this.data["theHeight"];
                                                    };
                                                    obj3460.methods["theHeight"] = reader_rtobjectdraw_theHeight3644;
                                                    obj3460.data["theHeight"] = call3643;
                                                    var writer_rtobjectdraw_theHeight3644 = function(argcv, o) {
                                                      this.data["theHeight"] = o;
                                                      return GraceDone;
                                                    };
                                                    obj3460.methods["theHeight:=(1)"] = writer_rtobjectdraw_theHeight3644;
                                                    reader_rtobjectdraw_theHeight3644.confidential = true;
                                                    writer_rtobjectdraw_theHeight3644.confidential = true;
                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3643)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("initial value of var 'theHeight' is not of type Number"));
                                                    obj3460.mutable = true;
                                                    superDepth = origSuperDepth;
                                                  };
                                                  obj_init_3460.apply(obj3460, []);
                                                  setLineNumber(1496);    // return value
                                                  if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj3460)))
                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                          new GraceString("result of method drawable2DAt(_)size(_)on(_) does not have " + 
                                                              callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                  return obj3460;
                                                };
                                                func3459.paramTypes = [];
                                                func3459.paramTypes.push([]);
                                                func3459.paramTypes.push([]);
                                                func3459.paramTypes.push([]);
                                                func3459.paramCounts = [1, 1, 1];
                                                this.methods["drawable2DAt(1)size(1)on(1)"] = func3459;
                                                func3459.definitionLine = 1496;
                                                func3459.definitionModule = "rtobjectdraw";
                                                  var func3645 = function(argcv) {    // method drawable2DAt(_)size(_)on(_)$object(_)
                                                    var curarg = 1;
                                                    var var_location__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_dimension__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_canvas__39__ = arguments[curarg];
                                                    curarg++;
                                                    var inheritingObject = arguments[curarg++];
                                                    // Start argument processing
                                                    curarg = 1;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in drawable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    setLineNumber(1497);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimension', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    setLineNumber(1498);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument processing
                                                    setModuleName("rtobjectdraw");
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var obj3646 = Grace_allocObject(null, "drawable2DAt(1)size(1)on(1)");
                                                    obj3646.definitionModule = "rtobjectdraw";
                                                    obj3646.definitionLine = 1496;
                                                    var inho3646 = inheritingObject;
                                                    while (inho3646.superobj) inho3646 = inho3646.superobj;
                                                    inho3646.superobj = obj3646;
                                                    obj3646.data = inheritingObject.data;
                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                      obj3646._value = inheritingObject._value;
                                                    obj3646.outer = this;
                                                    var reader_rtobjectdraw_outer3647 = function() {
                                                      return this.outer;
                                                    };
                                                    obj3646.methods["outer"] = reader_rtobjectdraw_outer3647;
                                                    var obj_init_3646 = function() {
                                                      var origSuperDepth = superDepth;
                                                      superDepth = obj3646;
                                                      var func3648 = function(argcv) {    // method width
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1505);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3650 = callmethodChecked(this, "theWidth", []);
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3650)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method width does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        return call3650;
                                                      };
                                                      func3648.paramCounts = [0];
                                                      obj3646.methods["width"] = func3648;
                                                      func3648.definitionLine = 1505;
                                                      func3648.definitionModule = "rtobjectdraw";
                                                      var func3651 = function(argcv) {    // method height
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1509);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3653 = callmethodChecked(this, "theHeight", []);
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3653)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method height does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        return call3653;
                                                      };
                                                      func3651.paramCounts = [0];
                                                      obj3646.methods["height"] = func3651;
                                                      func3651.definitionLine = 1509;
                                                      func3651.definitionModule = "rtobjectdraw";
                                                      var func3654 = function(argcv) {    // method size
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1511);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3656 = callmethodChecked(this, "theHeight", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3659 = callmethodChecked(this, "theWidth", []);
                                                        var opresult3661 = callmethodChecked(call3659, "@(1)", [1], call3656);
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], opresult3661)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method size does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        return opresult3661;
                                                      };
                                                      func3654.paramCounts = [0];
                                                      obj3646.methods["size"] = func3654;
                                                      func3654.definitionLine = 1511;
                                                      func3654.definitionModule = "rtobjectdraw";
                                                      var func3662 = function(argcv) {    // method contains(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_locn = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1515);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter locn, does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1517);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3664 = callmethodChecked(this, "height", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3667 = callmethodChecked(this, "y", []);
                                                        var opresult3669 = callmethodChecked(call3667, "+(1)", [1], call3664);
                                                        // call case 6: other requests
                                                        var call3672 = callmethodChecked(var_locn, "y", []);
                                                        var opresult3674 = callmethodChecked(call3672, "\u2264(1)", [1], opresult3669);
                                                        // call case 6: other requests
                                                        var call3677 = callmethodChecked(var_locn, "y", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3680 = callmethodChecked(this, "y", []);
                                                        var opresult3682 = callmethodChecked(call3680, "\u2264(1)", [1], call3677);
                                                        setLineNumber(1516);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3685 = callmethodChecked(this, "width", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3688 = callmethodChecked(this, "x", []);
                                                        var opresult3690 = callmethodChecked(call3688, "+(1)", [1], call3685);
                                                        // call case 6: other requests
                                                        var call3693 = callmethodChecked(var_locn, "x", []);
                                                        var opresult3695 = callmethodChecked(call3693, "\u2264(1)", [1], opresult3690);
                                                        // call case 6: other requests
                                                        var call3698 = callmethodChecked(var_locn, "x", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3701 = callmethodChecked(this, "x", []);
                                                        var opresult3703 = callmethodChecked(call3701, "\u2264(1)", [1], call3698);
                                                        var opresult3705 = callmethodChecked(opresult3703, "&&(1)", [1], opresult3695);
                                                        var opresult3707 = callmethodChecked(opresult3705, "&&(1)", [1], opresult3682);
                                                        var opresult3709 = callmethodChecked(opresult3707, "&&(1)", [1], opresult3674);
                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult3709)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method contains(_) does not have " + 
                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                        return opresult3709;
                                                      };
                                                      func3662.paramTypes = [];
                                                      func3662.paramTypes.push([]);
                                                      func3662.paramCounts = [1];
                                                      obj3646.methods["contains(1)"] = func3662;
                                                      func3662.definitionLine = 1515;
                                                      func3662.definitionModule = "rtobjectdraw";
                                                      var func3710 = function(argcv) {    // method overlaps(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_other = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1521);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in overlaps (arg list 1), which corresponds to parameter other, does not have " + 
                                                                    callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1522);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3712 = callmethodChecked(var_other, "x", []);
                                                        var var_itemleft = call3712;
                                                        setLineNumber(1523);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3714 = callmethodChecked(var_other, "width", []);
                                                        // call case 6: other requests
                                                        var call3717 = callmethodChecked(var_other, "x", []);
                                                        var opresult3719 = callmethodChecked(call3717, "+(1)", [1], call3714);
                                                        var var_itemright = opresult3719;
                                                        setLineNumber(1524);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3721 = callmethodChecked(var_other, "y", []);
                                                        var var_itemtop = call3721;
                                                        setLineNumber(1525);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3723 = callmethodChecked(var_other, "height", []);
                                                        // call case 6: other requests
                                                        var call3726 = callmethodChecked(var_other, "y", []);
                                                        var opresult3728 = callmethodChecked(call3726, "+(1)", [1], call3723);
                                                        var var_itembottom = opresult3728;
                                                        setLineNumber(1527);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3730 = callmethodChecked(this, "y", []);
                                                        var opresult3733 = callmethodChecked(var_itembottom, "<(1)", [1], call3730);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3737 = callmethodChecked(this, "height", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3740 = callmethodChecked(this, "y", []);
                                                        var opresult3742 = callmethodChecked(call3740, "+(1)", [1], call3737);
                                                        var opresult3744 = callmethodChecked(opresult3742, "<(1)", [1], var_itemtop);
                                                        setLineNumber(1526);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3747 = callmethodChecked(this, "x", []);
                                                        var opresult3750 = callmethodChecked(var_itemright, "<(1)", [1], call3747);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3754 = callmethodChecked(this, "width", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3757 = callmethodChecked(this, "x", []);
                                                        var opresult3759 = callmethodChecked(call3757, "+(1)", [1], call3754);
                                                        var opresult3761 = callmethodChecked(opresult3759, "<(1)", [1], var_itemleft);
                                                        var opresult3763 = callmethodChecked(opresult3761, "||(1)", [1], opresult3750);
                                                        var opresult3765 = callmethodChecked(opresult3763, "||(1)", [1], opresult3744);
                                                        var opresult3767 = callmethodChecked(opresult3765, "||(1)", [1], opresult3733);
                                                        var var_disjoint = opresult3767;
                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], var_disjoint)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("value of def 'disjoint' is not of type Boolean"));
                                                        setLineNumber(1529);    // compilenode call
                                                        // call case 6: other requests
                                                        setLineNumber(1528);    // compilenode identifier
                                                        var call3769 = callmethodChecked(var_disjoint, "prefix!", [0]);
                                                        setLineNumber(1529);    // return value
                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call3769)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method overlaps(_) does not have " + 
                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                        return call3769;
                                                      };
                                                      func3710.paramTypes = [];
                                                      func3710.paramTypes.push([]);
                                                      func3710.paramCounts = [1];
                                                      obj3646.methods["overlaps(1)"] = func3710;
                                                      func3710.definitionLine = 1521;
                                                      func3710.definitionModule = "rtobjectdraw";
                                                      var func3770 = function(argcv) {    // method asString
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1534);    // compilenode string
                                                        var string3771 = new GraceString("");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3774 = callmethodChecked(this, "color", []);
                                                        var string3776 = new GraceString(", and color ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3779 = callmethodChecked(this, "width", []);
                                                        var string3781 = new GraceString(", width ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3784 = callmethodChecked(this, "height", []);
                                                        var string3786 = new GraceString("with height ");
                                                        var opresult3788 = callmethodChecked(string3786, "++(1)", [1], call3784);
                                                        var opresult3790 = callmethodChecked(opresult3788, "++(1)", [1], string3781);
                                                        var opresult3792 = callmethodChecked(opresult3790, "++(1)", [1], call3779);
                                                        var opresult3794 = callmethodChecked(opresult3792, "++(1)", [1], string3776);
                                                        var opresult3796 = callmethodChecked(opresult3794, "++(1)", [1], call3774);
                                                        var opresult3798 = callmethodChecked(opresult3796, "++(1)", [1], string3771);
                                                        setLineNumber(1533);    // compilenode string
                                                        var string3800 = new GraceString(") ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3803 = callmethodChecked(this, "y", []);
                                                        var string3805 = new GraceString(",");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3808 = callmethodChecked(this, "x", []);
                                                        var string3810 = new GraceString("drawable2D object at (");
                                                        var opresult3812 = callmethodChecked(string3810, "++(1)", [1], call3808);
                                                        var opresult3814 = callmethodChecked(opresult3812, "++(1)", [1], string3805);
                                                        var opresult3816 = callmethodChecked(opresult3814, "++(1)", [1], call3803);
                                                        var opresult3818 = callmethodChecked(opresult3816, "++(1)", [1], string3800);
                                                        var opresult3820 = callmethodChecked(opresult3818, "++(1)", [1], opresult3798);
                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3820)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method asString does not have " + 
                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                        return opresult3820;
                                                      };
                                                      func3770.paramCounts = [0];
                                                      obj3646.methods["asString"] = func3770;
                                                      func3770.definitionLine = 1532;
                                                      func3770.definitionModule = "rtobjectdraw";
                                                      setLineNumber(1501);    // compilenode identifier
                                                      // call case 6: other requests
                                                      setLineNumber(0);    // compilenode member
                                                      // call case 3: self.outer request
                                                      var call3823 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3824 = callmethodChecked(call3823, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                      obj3646.superobj = call3824;
                                                      if (call3824.data) obj3646.data = call3824.data;
                                                      if (call3824.hasOwnProperty('_value'))
                                                          obj3646._value = call3824._value;
                                                      setLineNumber(1502);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3826 = callmethodChecked(var_dimension__39__, "x", []);
                                                      obj3646.data["theWidth"] = call3826;
                                                      var reader_rtobjectdraw_theWidth3827 = function() {
                                                        return this.data["theWidth"];
                                                      };
                                                      obj3646.methods["theWidth"] = reader_rtobjectdraw_theWidth3827;
                                                      obj3646.data["theWidth"] = call3826;
                                                      var writer_rtobjectdraw_theWidth3827 = function(argcv, o) {
                                                        this.data["theWidth"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj3646.methods["theWidth:=(1)"] = writer_rtobjectdraw_theWidth3827;
                                                      reader_rtobjectdraw_theWidth3827.confidential = true;
                                                      writer_rtobjectdraw_theWidth3827.confidential = true;
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3826)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("initial value of var 'theWidth' is not of type Number"));
                                                      obj3646.mutable = true;
                                                      setLineNumber(1506);    // compilenode member
                                                      // call case 6: other requests
                                                      var call3829 = callmethodChecked(var_dimension__39__, "y", []);
                                                      obj3646.data["theHeight"] = call3829;
                                                      var reader_rtobjectdraw_theHeight3830 = function() {
                                                        return this.data["theHeight"];
                                                      };
                                                      obj3646.methods["theHeight"] = reader_rtobjectdraw_theHeight3830;
                                                      obj3646.data["theHeight"] = call3829;
                                                      var writer_rtobjectdraw_theHeight3830 = function(argcv, o) {
                                                        this.data["theHeight"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj3646.methods["theHeight:=(1)"] = writer_rtobjectdraw_theHeight3830;
                                                      reader_rtobjectdraw_theHeight3830.confidential = true;
                                                      writer_rtobjectdraw_theHeight3830.confidential = true;
                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call3829)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("initial value of var 'theHeight' is not of type Number"));
                                                      obj3646.mutable = true;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_3646.apply(inheritingObject, []);
                                                    return obj3646;
                                                    };
                                                    func3645.paramTypes = [];
                                                    func3645.paramTypes.push([]);
                                                    func3645.paramTypes.push([]);
                                                    func3645.paramTypes.push([]);
                                                    this.methods["drawable2DAt(1)size(1)on(1)$object(1)"] = func3645;
                                                  setLineNumber(1538);    // compilenode method
                                                  var func3831 = function(argcv) {    // method resizable2DAt(_)size(_)on(_)
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    var var_location__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_dimensions__39__ = arguments[curarg];
                                                    curarg++;
                                                    var var_canvas__39__ = arguments[curarg];
                                                    curarg++;
                                                    // Start argument checking
                                                    curarg = 1;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in resizable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                    curarg++;
                                                    setLineNumber(1539);    // compilenode identifier
                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                    curarg++;
                                                    // End argument checking
                                                    setModuleName("rtobjectdraw");
                                                    setLineNumber(1538);    // compilenode object
                                                    var obj3832 = Grace_allocObject(null, "resizable2DAt(_)size(_)on(_)");
                                                    obj3832.definitionModule = "rtobjectdraw";
                                                    obj3832.definitionLine = 1538;
                                                    obj3832.outer = this;
                                                    var reader_rtobjectdraw_outer3833 = function() {
                                                      return this.outer;
                                                    };
                                                    obj3832.methods["outer"] = reader_rtobjectdraw_outer3833;
                                                    var obj_init_3832 = function() {
                                                      var origSuperDepth = superDepth;
                                                      superDepth = obj3832;
                                                      var func3834 = function(argcv) {    // method width:=(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_w = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1545);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in width:= (arg list 1), which corresponds to parameter w, does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1546);    // compilenode identifier
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3836 = callmethodChecked(this, "theWidth:=(1)", [1], var_w);
                                                        setLineNumber(1547);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3838 = callmethodChecked(this, "notifyRedraw", []);
                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3838)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method width:=(_) does not have " + 
                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                        return call3838;
                                                      };
                                                      func3834.paramTypes = [];
                                                      func3834.paramTypes.push([type_Number, "w"]);
                                                      func3834.paramCounts = [1];
                                                      obj3832.methods["width:=(1)"] = func3834;
                                                      func3834.definitionLine = 1545;
                                                      func3834.definitionModule = "rtobjectdraw";
                                                      var func3839 = function(argcv) {    // method height:=(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_h = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1551);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in height:= (arg list 1), which corresponds to parameter h, does not have " + 
                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1552);    // compilenode identifier
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3841 = callmethodChecked(this, "theHeight:=(1)", [1], var_h);
                                                        setLineNumber(1553);    // compilenode member
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3843 = callmethodChecked(this, "notifyRedraw", []);
                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3843)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method height:=(_) does not have " + 
                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                        return call3843;
                                                      };
                                                      func3839.paramTypes = [];
                                                      func3839.paramTypes.push([type_Number, "h"]);
                                                      func3839.paramCounts = [1];
                                                      obj3832.methods["height:=(1)"] = func3839;
                                                      func3839.definitionLine = 1551;
                                                      func3839.definitionModule = "rtobjectdraw";
                                                      var func3844 = function(argcv) {    // method size:=(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_dimensions = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        setLineNumber(1557);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in size:= (arg list 1), which corresponds to parameter dimensions, does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1558);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3847 = callmethodChecked(var_dimensions, "x", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3848 = callmethodChecked(this, "width:=(1)", [1], call3847);
                                                        setLineNumber(1559);    // compilenode member
                                                        // call case 6: other requests
                                                        var call3851 = callmethodChecked(var_dimensions, "y", []);
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3852 = callmethodChecked(this, "height:=(1)", [1], call3851);
                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3852)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method size:=(_) does not have " + 
                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                        return call3852;
                                                      };
                                                      func3844.paramTypes = [];
                                                      func3844.paramTypes.push([]);
                                                      func3844.paramCounts = [1];
                                                      obj3832.methods["size:=(1)"] = func3844;
                                                      func3844.definitionLine = 1557;
                                                      func3844.definitionModule = "rtobjectdraw";
                                                      var func3853 = function(argcv) {    // method asString
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1565);    // compilenode string
                                                        var string3854 = new GraceString("");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3857 = callmethodChecked(this, "color", []);
                                                        var string3859 = new GraceString(", and color ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3862 = callmethodChecked(this, "width", []);
                                                        var string3864 = new GraceString(", width ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3867 = callmethodChecked(this, "height", []);
                                                        var string3869 = new GraceString("with height ");
                                                        var opresult3871 = callmethodChecked(string3869, "++(1)", [1], call3867);
                                                        var opresult3873 = callmethodChecked(opresult3871, "++(1)", [1], string3864);
                                                        var opresult3875 = callmethodChecked(opresult3873, "++(1)", [1], call3862);
                                                        var opresult3877 = callmethodChecked(opresult3875, "++(1)", [1], string3859);
                                                        var opresult3879 = callmethodChecked(opresult3877, "++(1)", [1], call3857);
                                                        var opresult3881 = callmethodChecked(opresult3879, "++(1)", [1], string3854);
                                                        setLineNumber(1564);    // compilenode string
                                                        var string3883 = new GraceString(") ");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3886 = callmethodChecked(this, "y", []);
                                                        var string3888 = new GraceString(",");
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call3891 = callmethodChecked(this, "x", []);
                                                        var string3893 = new GraceString("Resizable2D object at (");
                                                        var opresult3895 = callmethodChecked(string3893, "++(1)", [1], call3891);
                                                        var opresult3897 = callmethodChecked(opresult3895, "++(1)", [1], string3888);
                                                        var opresult3899 = callmethodChecked(opresult3897, "++(1)", [1], call3886);
                                                        var opresult3901 = callmethodChecked(opresult3899, "++(1)", [1], string3883);
                                                        var opresult3903 = callmethodChecked(opresult3901, "++(1)", [1], opresult3881);
                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3903)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method asString does not have " + 
                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                        return opresult3903;
                                                      };
                                                      func3853.paramCounts = [0];
                                                      obj3832.methods["asString"] = func3853;
                                                      func3853.definitionLine = 1563;
                                                      func3853.definitionModule = "rtobjectdraw";
                                                      setLineNumber(1542);    // compilenode identifier
                                                      // call case 6: other requests
                                                      setLineNumber(0);    // compilenode member
                                                      // call case 3: self.outer request
                                                      var call3906 = callmethodChecked(superDepth, "outer", [0]);
                                                      onSelf = true;
                                                      var call3907 = callmethodChecked(call3906, "drawable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                      obj3832.superobj = call3907;
                                                      if (call3907.data) obj3832.data = call3907.data;
                                                      if (call3907.hasOwnProperty('_value'))
                                                          obj3832._value = call3907._value;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_3832.apply(obj3832, []);
                                                    setLineNumber(1538);    // return value
                                                    if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj3832)))
                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                            new GraceString("result of method resizable2DAt(_)size(_)on(_) does not have " + 
                                                                callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                    return obj3832;
                                                  };
                                                  func3831.paramTypes = [];
                                                  func3831.paramTypes.push([]);
                                                  func3831.paramTypes.push([]);
                                                  func3831.paramTypes.push([]);
                                                  func3831.paramCounts = [1, 1, 1];
                                                  this.methods["resizable2DAt(1)size(1)on(1)"] = func3831;
                                                  func3831.definitionLine = 1538;
                                                  func3831.definitionModule = "rtobjectdraw";
                                                    var func3908 = function(argcv) {    // method resizable2DAt(_)size(_)on(_)$object(_)
                                                      var curarg = 1;
                                                      var var_location__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_dimensions__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_canvas__39__ = arguments[curarg];
                                                      curarg++;
                                                      var inheritingObject = arguments[curarg++];
                                                      // Start argument processing
                                                      curarg = 1;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in resizable2DAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      setLineNumber(1539);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument processing
                                                      setModuleName("rtobjectdraw");
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var obj3909 = Grace_allocObject(null, "resizable2DAt(1)size(1)on(1)");
                                                      obj3909.definitionModule = "rtobjectdraw";
                                                      obj3909.definitionLine = 1538;
                                                      var inho3909 = inheritingObject;
                                                      while (inho3909.superobj) inho3909 = inho3909.superobj;
                                                      inho3909.superobj = obj3909;
                                                      obj3909.data = inheritingObject.data;
                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                        obj3909._value = inheritingObject._value;
                                                      obj3909.outer = this;
                                                      var reader_rtobjectdraw_outer3910 = function() {
                                                        return this.outer;
                                                      };
                                                      obj3909.methods["outer"] = reader_rtobjectdraw_outer3910;
                                                      var obj_init_3909 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj3909;
                                                        var func3911 = function(argcv) {    // method width:=(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_w = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1545);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in width:= (arg list 1), which corresponds to parameter w, does not have " + 
                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1546);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3913 = callmethodChecked(this, "theWidth:=(1)", [1], var_w);
                                                          setLineNumber(1547);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3915 = callmethodChecked(this, "notifyRedraw", []);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3915)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method width:=(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call3915;
                                                        };
                                                        func3911.paramTypes = [];
                                                        func3911.paramTypes.push([type_Number, "w"]);
                                                        func3911.paramCounts = [1];
                                                        obj3909.methods["width:=(1)"] = func3911;
                                                        func3911.definitionLine = 1545;
                                                        func3911.definitionModule = "rtobjectdraw";
                                                        var func3916 = function(argcv) {    // method height:=(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_h = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1551);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in height:= (arg list 1), which corresponds to parameter h, does not have " + 
                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1552);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3918 = callmethodChecked(this, "theHeight:=(1)", [1], var_h);
                                                          setLineNumber(1553);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3920 = callmethodChecked(this, "notifyRedraw", []);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3920)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method height:=(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call3920;
                                                        };
                                                        func3916.paramTypes = [];
                                                        func3916.paramTypes.push([type_Number, "h"]);
                                                        func3916.paramCounts = [1];
                                                        obj3909.methods["height:=(1)"] = func3916;
                                                        func3916.definitionLine = 1551;
                                                        func3916.definitionModule = "rtobjectdraw";
                                                        var func3921 = function(argcv) {    // method size:=(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_dimensions = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1557);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in size:= (arg list 1), which corresponds to parameter dimensions, does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1558);    // compilenode member
                                                          // call case 6: other requests
                                                          var call3924 = callmethodChecked(var_dimensions, "x", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3925 = callmethodChecked(this, "width:=(1)", [1], call3924);
                                                          setLineNumber(1559);    // compilenode member
                                                          // call case 6: other requests
                                                          var call3928 = callmethodChecked(var_dimensions, "y", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3929 = callmethodChecked(this, "height:=(1)", [1], call3928);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call3929)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method size:=(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call3929;
                                                        };
                                                        func3921.paramTypes = [];
                                                        func3921.paramTypes.push([]);
                                                        func3921.paramCounts = [1];
                                                        obj3909.methods["size:=(1)"] = func3921;
                                                        func3921.definitionLine = 1557;
                                                        func3921.definitionModule = "rtobjectdraw";
                                                        var func3930 = function(argcv) {    // method asString
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1565);    // compilenode string
                                                          var string3931 = new GraceString("");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3934 = callmethodChecked(this, "color", []);
                                                          var string3936 = new GraceString(", and color ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3939 = callmethodChecked(this, "width", []);
                                                          var string3941 = new GraceString(", width ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3944 = callmethodChecked(this, "height", []);
                                                          var string3946 = new GraceString("with height ");
                                                          var opresult3948 = callmethodChecked(string3946, "++(1)", [1], call3944);
                                                          var opresult3950 = callmethodChecked(opresult3948, "++(1)", [1], string3941);
                                                          var opresult3952 = callmethodChecked(opresult3950, "++(1)", [1], call3939);
                                                          var opresult3954 = callmethodChecked(opresult3952, "++(1)", [1], string3936);
                                                          var opresult3956 = callmethodChecked(opresult3954, "++(1)", [1], call3934);
                                                          var opresult3958 = callmethodChecked(opresult3956, "++(1)", [1], string3931);
                                                          setLineNumber(1564);    // compilenode string
                                                          var string3960 = new GraceString(") ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3963 = callmethodChecked(this, "y", []);
                                                          var string3965 = new GraceString(",");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3968 = callmethodChecked(this, "x", []);
                                                          var string3970 = new GraceString("Resizable2D object at (");
                                                          var opresult3972 = callmethodChecked(string3970, "++(1)", [1], call3968);
                                                          var opresult3974 = callmethodChecked(opresult3972, "++(1)", [1], string3965);
                                                          var opresult3976 = callmethodChecked(opresult3974, "++(1)", [1], call3963);
                                                          var opresult3978 = callmethodChecked(opresult3976, "++(1)", [1], string3960);
                                                          var opresult3980 = callmethodChecked(opresult3978, "++(1)", [1], opresult3958);
                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult3980)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method asString does not have " + 
                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                          return opresult3980;
                                                        };
                                                        func3930.paramCounts = [0];
                                                        obj3909.methods["asString"] = func3930;
                                                        func3930.definitionLine = 1563;
                                                        func3930.definitionModule = "rtobjectdraw";
                                                        setLineNumber(1542);    // compilenode identifier
                                                        // call case 6: other requests
                                                        setLineNumber(0);    // compilenode member
                                                        // call case 3: self.outer request
                                                        var call3983 = callmethodChecked(superDepth, "outer", [0]);
                                                        onSelf = true;
                                                        var call3984 = callmethodChecked(call3983, "drawable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                        obj3909.superobj = call3984;
                                                        if (call3984.data) obj3909.data = call3984.data;
                                                        if (call3984.hasOwnProperty('_value'))
                                                            obj3909._value = call3984._value;
                                                        superDepth = origSuperDepth;
                                                      };
                                                      obj_init_3909.apply(inheritingObject, []);
                                                      return obj3909;
                                                      };
                                                      func3908.paramTypes = [];
                                                      func3908.paramTypes.push([]);
                                                      func3908.paramTypes.push([]);
                                                      func3908.paramTypes.push([]);
                                                      this.methods["resizable2DAt(1)size(1)on(1)$object(1)"] = func3908;
                                                    setLineNumber(1569);    // compilenode method
                                                    var func3985 = function(argcv) {    // method framedRectAt(_)size(_)on(_)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_location__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_dimensions__39__ = arguments[curarg];
                                                      curarg++;
                                                      var var_canvas__39__ = arguments[curarg];
                                                      curarg++;
                                                      // Start argument checking
                                                      curarg = 1;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in framedRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                      curarg++;
                                                      setLineNumber(1570);    // compilenode identifier
                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                      curarg++;
                                                      // End argument checking
                                                      setModuleName("rtobjectdraw");
                                                      setLineNumber(1569);    // compilenode object
                                                      var obj3986 = Grace_allocObject(null, "framedRectAt(_)size(_)on(_)");
                                                      obj3986.definitionModule = "rtobjectdraw";
                                                      obj3986.definitionLine = 1569;
                                                      obj3986.outer = this;
                                                      var reader_rtobjectdraw_outer3987 = function() {
                                                        return this.outer;
                                                      };
                                                      obj3986.methods["outer"] = reader_rtobjectdraw_outer3987;
                                                      var obj_init_3986 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj3986;
                                                        var func3988 = function(argcv) {    // method draw(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_ctx = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          setLineNumber(1578);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                      callmethod(var_Foreign, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1579);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call3990 = callmethodChecked(this, "color", []);
                                                          var var_col = call3990;
                                                          setLineNumber(1580);    // compilenode member
                                                          // call case 6: other requests
                                                          var call3992 = callmethodChecked(var_ctx, "save", []);
                                                          setLineNumber(1581);    // compilenode string
                                                          var string3994 = new GraceString(")");
                                                          // call case 6: other requests
                                                          var call3997 = callmethodChecked(var_col, "blue", []);
                                                          var string3999 = new GraceString(", ");
                                                          // call case 6: other requests
                                                          var call4002 = callmethodChecked(var_col, "green", []);
                                                          var string4004 = new GraceString(", ");
                                                          // call case 6: other requests
                                                          var call4007 = callmethodChecked(var_col, "red", []);
                                                          var string4009 = new GraceString("rgb(");
                                                          var opresult4011 = callmethodChecked(string4009, "++(1)", [1], call4007);
                                                          var opresult4013 = callmethodChecked(opresult4011, "++(1)", [1], string4004);
                                                          var opresult4015 = callmethodChecked(opresult4013, "++(1)", [1], call4002);
                                                          var opresult4017 = callmethodChecked(opresult4015, "++(1)", [1], string3999);
                                                          var opresult4019 = callmethodChecked(opresult4017, "++(1)", [1], call3997);
                                                          var opresult4021 = callmethodChecked(opresult4019, "++(1)", [1], string3994);
                                                          // call case 6: other requests
                                                          var call4022 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4021);
                                                          setLineNumber(1582);    // compilenode member
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4025 = callmethodChecked(this, "x", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4027 = callmethodChecked(this, "y", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4029 = callmethodChecked(this, "width", []);
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4031 = callmethodChecked(this, "height", []);
                                                          // call case 6: other requests
                                                          var call4032 = callmethodChecked(var_ctx, "strokeRect(4)", [4], call4025, call4027, call4029, call4031);
                                                          setLineNumber(1583);    // compilenode member
                                                          // call case 6: other requests
                                                          var call4034 = callmethodChecked(var_ctx, "restore", []);
                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4034)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method draw(_) does not have " + 
                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                          return call4034;
                                                        };
                                                        func3988.paramTypes = [];
                                                        func3988.paramTypes.push([]);
                                                        func3988.paramCounts = [1];
                                                        obj3986.methods["draw(1)"] = func3988;
                                                        func3988.definitionLine = 1578;
                                                        func3988.definitionModule = "rtobjectdraw";
                                                        var func4035 = function(argcv) {    // method asString
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1589);    // compilenode string
                                                          var string4036 = new GraceString("");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4039 = callmethodChecked(this, "color", []);
                                                          var string4041 = new GraceString(", and color ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4044 = callmethodChecked(this, "width", []);
                                                          var string4046 = new GraceString(", width ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4049 = callmethodChecked(this, "height", []);
                                                          var string4051 = new GraceString("with height ");
                                                          var opresult4053 = callmethodChecked(string4051, "++(1)", [1], call4049);
                                                          var opresult4055 = callmethodChecked(opresult4053, "++(1)", [1], string4046);
                                                          var opresult4057 = callmethodChecked(opresult4055, "++(1)", [1], call4044);
                                                          var opresult4059 = callmethodChecked(opresult4057, "++(1)", [1], string4041);
                                                          var opresult4061 = callmethodChecked(opresult4059, "++(1)", [1], call4039);
                                                          var opresult4063 = callmethodChecked(opresult4061, "++(1)", [1], string4036);
                                                          setLineNumber(1588);    // compilenode string
                                                          var string4065 = new GraceString(") ");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4068 = callmethodChecked(this, "y", []);
                                                          var string4070 = new GraceString(",");
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4073 = callmethodChecked(this, "x", []);
                                                          var string4075 = new GraceString("FramedRect at (");
                                                          var opresult4077 = callmethodChecked(string4075, "++(1)", [1], call4073);
                                                          var opresult4079 = callmethodChecked(opresult4077, "++(1)", [1], string4070);
                                                          var opresult4081 = callmethodChecked(opresult4079, "++(1)", [1], call4068);
                                                          var opresult4083 = callmethodChecked(opresult4081, "++(1)", [1], string4065);
                                                          var opresult4085 = callmethodChecked(opresult4083, "++(1)", [1], opresult4063);
                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4085)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method asString does not have " + 
                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                          return opresult4085;
                                                        };
                                                        func4035.paramCounts = [0];
                                                        obj3986.methods["asString"] = func4035;
                                                        func4035.definitionLine = 1587;
                                                        func4035.definitionModule = "rtobjectdraw";
                                                        setLineNumber(1574);    // compilenode identifier
                                                        // call case 6: other requests
                                                        setLineNumber(0);    // compilenode member
                                                        // call case 3: self.outer request
                                                        var call4088 = callmethodChecked(superDepth, "outer", [0]);
                                                        onSelf = true;
                                                        var call4089 = callmethodChecked(call4088, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                        obj3986.superobj = call4089;
                                                        if (call4089.data) obj3986.data = call4089.data;
                                                        if (call4089.hasOwnProperty('_value'))
                                                            obj3986._value = call4089._value;
                                                        setLineNumber(1575);    // compilenode identifier
                                                        // call case 4: self request
                                                        onSelf = true;
                                                        var call4091 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                        superDepth = origSuperDepth;
                                                      };
                                                      obj_init_3986.apply(obj3986, []);
                                                      setLineNumber(1569);    // return value
                                                      if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj3986)))
                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                              new GraceString("result of method framedRectAt(_)size(_)on(_) does not have " + 
                                                                  callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                      return obj3986;
                                                    };
                                                    func3985.paramTypes = [];
                                                    func3985.paramTypes.push([]);
                                                    func3985.paramTypes.push([]);
                                                    func3985.paramTypes.push([]);
                                                    func3985.paramCounts = [1, 1, 1];
                                                    this.methods["framedRectAt(1)size(1)on(1)"] = func3985;
                                                    func3985.definitionLine = 1569;
                                                    func3985.definitionModule = "rtobjectdraw";
                                                      var func4092 = function(argcv) {    // method framedRectAt(_)size(_)on(_)$object(_)
                                                        var curarg = 1;
                                                        var var_location__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_dimensions__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_canvas__39__ = arguments[curarg];
                                                        curarg++;
                                                        var inheritingObject = arguments[curarg++];
                                                        // Start argument processing
                                                        curarg = 1;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in framedRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        setLineNumber(1570);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument processing
                                                        setModuleName("rtobjectdraw");
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var obj4093 = Grace_allocObject(null, "framedRectAt(1)size(1)on(1)");
                                                        obj4093.definitionModule = "rtobjectdraw";
                                                        obj4093.definitionLine = 1569;
                                                        var inho4093 = inheritingObject;
                                                        while (inho4093.superobj) inho4093 = inho4093.superobj;
                                                        inho4093.superobj = obj4093;
                                                        obj4093.data = inheritingObject.data;
                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                          obj4093._value = inheritingObject._value;
                                                        obj4093.outer = this;
                                                        var reader_rtobjectdraw_outer4094 = function() {
                                                          return this.outer;
                                                        };
                                                        obj4093.methods["outer"] = reader_rtobjectdraw_outer4094;
                                                        var obj_init_4093 = function() {
                                                          var origSuperDepth = superDepth;
                                                          superDepth = obj4093;
                                                          var func4095 = function(argcv) {    // method draw(_)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_ctx = arguments[curarg];
                                                            curarg++;
                                                            // Start argument checking
                                                            curarg = 1;
                                                            setLineNumber(1578);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                        callmethod(var_Foreign, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument checking
                                                            setModuleName("rtobjectdraw");
                                                            setLineNumber(1579);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4097 = callmethodChecked(this, "color", []);
                                                            var var_col = call4097;
                                                            setLineNumber(1580);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4099 = callmethodChecked(var_ctx, "save", []);
                                                            setLineNumber(1581);    // compilenode string
                                                            var string4101 = new GraceString(")");
                                                            // call case 6: other requests
                                                            var call4104 = callmethodChecked(var_col, "blue", []);
                                                            var string4106 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4109 = callmethodChecked(var_col, "green", []);
                                                            var string4111 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4114 = callmethodChecked(var_col, "red", []);
                                                            var string4116 = new GraceString("rgb(");
                                                            var opresult4118 = callmethodChecked(string4116, "++(1)", [1], call4114);
                                                            var opresult4120 = callmethodChecked(opresult4118, "++(1)", [1], string4111);
                                                            var opresult4122 = callmethodChecked(opresult4120, "++(1)", [1], call4109);
                                                            var opresult4124 = callmethodChecked(opresult4122, "++(1)", [1], string4106);
                                                            var opresult4126 = callmethodChecked(opresult4124, "++(1)", [1], call4104);
                                                            var opresult4128 = callmethodChecked(opresult4126, "++(1)", [1], string4101);
                                                            // call case 6: other requests
                                                            var call4129 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4128);
                                                            setLineNumber(1582);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4132 = callmethodChecked(this, "x", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4134 = callmethodChecked(this, "y", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4136 = callmethodChecked(this, "width", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4138 = callmethodChecked(this, "height", []);
                                                            // call case 6: other requests
                                                            var call4139 = callmethodChecked(var_ctx, "strokeRect(4)", [4], call4132, call4134, call4136, call4138);
                                                            setLineNumber(1583);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4141 = callmethodChecked(var_ctx, "restore", []);
                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4141)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method draw(_) does not have " + 
                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                            return call4141;
                                                          };
                                                          func4095.paramTypes = [];
                                                          func4095.paramTypes.push([]);
                                                          func4095.paramCounts = [1];
                                                          obj4093.methods["draw(1)"] = func4095;
                                                          func4095.definitionLine = 1578;
                                                          func4095.definitionModule = "rtobjectdraw";
                                                          var func4142 = function(argcv) {    // method asString
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            setModuleName("rtobjectdraw");
                                                            setLineNumber(1589);    // compilenode string
                                                            var string4143 = new GraceString("");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4146 = callmethodChecked(this, "color", []);
                                                            var string4148 = new GraceString(", and color ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4151 = callmethodChecked(this, "width", []);
                                                            var string4153 = new GraceString(", width ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4156 = callmethodChecked(this, "height", []);
                                                            var string4158 = new GraceString("with height ");
                                                            var opresult4160 = callmethodChecked(string4158, "++(1)", [1], call4156);
                                                            var opresult4162 = callmethodChecked(opresult4160, "++(1)", [1], string4153);
                                                            var opresult4164 = callmethodChecked(opresult4162, "++(1)", [1], call4151);
                                                            var opresult4166 = callmethodChecked(opresult4164, "++(1)", [1], string4148);
                                                            var opresult4168 = callmethodChecked(opresult4166, "++(1)", [1], call4146);
                                                            var opresult4170 = callmethodChecked(opresult4168, "++(1)", [1], string4143);
                                                            setLineNumber(1588);    // compilenode string
                                                            var string4172 = new GraceString(") ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4175 = callmethodChecked(this, "y", []);
                                                            var string4177 = new GraceString(",");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4180 = callmethodChecked(this, "x", []);
                                                            var string4182 = new GraceString("FramedRect at (");
                                                            var opresult4184 = callmethodChecked(string4182, "++(1)", [1], call4180);
                                                            var opresult4186 = callmethodChecked(opresult4184, "++(1)", [1], string4177);
                                                            var opresult4188 = callmethodChecked(opresult4186, "++(1)", [1], call4175);
                                                            var opresult4190 = callmethodChecked(opresult4188, "++(1)", [1], string4172);
                                                            var opresult4192 = callmethodChecked(opresult4190, "++(1)", [1], opresult4170);
                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4192)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method asString does not have " + 
                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                            return opresult4192;
                                                          };
                                                          func4142.paramCounts = [0];
                                                          obj4093.methods["asString"] = func4142;
                                                          func4142.definitionLine = 1587;
                                                          func4142.definitionModule = "rtobjectdraw";
                                                          setLineNumber(1574);    // compilenode identifier
                                                          // call case 6: other requests
                                                          setLineNumber(0);    // compilenode member
                                                          // call case 3: self.outer request
                                                          var call4195 = callmethodChecked(superDepth, "outer", [0]);
                                                          onSelf = true;
                                                          var call4196 = callmethodChecked(call4195, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                          obj4093.superobj = call4196;
                                                          if (call4196.data) obj4093.data = call4196.data;
                                                          if (call4196.hasOwnProperty('_value'))
                                                              obj4093._value = call4196._value;
                                                          setLineNumber(1575);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4198 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                          superDepth = origSuperDepth;
                                                        };
                                                        obj_init_4093.apply(inheritingObject, []);
                                                        return obj4093;
                                                        };
                                                        func4092.paramTypes = [];
                                                        func4092.paramTypes.push([]);
                                                        func4092.paramTypes.push([]);
                                                        func4092.paramTypes.push([]);
                                                        this.methods["framedRectAt(1)size(1)on(1)$object(1)"] = func4092;
                                                      setLineNumber(1593);    // compilenode method
                                                      var func4199 = function(argcv) {    // method filledRectAt(_)size(_)on(_)
                                                        var returnTarget = invocationCount;
                                                        invocationCount++;
                                                        var curarg = 1;
                                                        var var_location__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_dimensions__39__ = arguments[curarg];
                                                        curarg++;
                                                        var var_canvas__39__ = arguments[curarg];
                                                        curarg++;
                                                        // Start argument checking
                                                        curarg = 1;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in filledRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                        curarg++;
                                                        setLineNumber(1594);    // compilenode identifier
                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                        curarg++;
                                                        // End argument checking
                                                        setModuleName("rtobjectdraw");
                                                        setLineNumber(1593);    // compilenode object
                                                        var obj4200 = Grace_allocObject(null, "filledRectAt(_)size(_)on(_)");
                                                        obj4200.definitionModule = "rtobjectdraw";
                                                        obj4200.definitionLine = 1593;
                                                        obj4200.outer = this;
                                                        var reader_rtobjectdraw_outer4201 = function() {
                                                          return this.outer;
                                                        };
                                                        obj4200.methods["outer"] = reader_rtobjectdraw_outer4201;
                                                        var obj_init_4200 = function() {
                                                          var origSuperDepth = superDepth;
                                                          superDepth = obj4200;
                                                          var func4202 = function(argcv) {    // method draw(_)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_ctx = arguments[curarg];
                                                            curarg++;
                                                            // Start argument checking
                                                            curarg = 1;
                                                            setLineNumber(1603);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                        callmethod(var_Foreign, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument checking
                                                            setModuleName("rtobjectdraw");
                                                            setLineNumber(1604);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4204 = callmethodChecked(this, "color", []);
                                                            var var_col = call4204;
                                                            setLineNumber(1605);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4206 = callmethodChecked(var_ctx, "save", []);
                                                            setLineNumber(1606);    // compilenode string
                                                            var string4208 = new GraceString(")");
                                                            // call case 6: other requests
                                                            var call4211 = callmethodChecked(var_col, "blue", []);
                                                            var string4213 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4216 = callmethodChecked(var_col, "green", []);
                                                            var string4218 = new GraceString(", ");
                                                            // call case 6: other requests
                                                            var call4221 = callmethodChecked(var_col, "red", []);
                                                            var string4223 = new GraceString("rgb(");
                                                            var opresult4225 = callmethodChecked(string4223, "++(1)", [1], call4221);
                                                            var opresult4227 = callmethodChecked(opresult4225, "++(1)", [1], string4218);
                                                            var opresult4229 = callmethodChecked(opresult4227, "++(1)", [1], call4216);
                                                            var opresult4231 = callmethodChecked(opresult4229, "++(1)", [1], string4213);
                                                            var opresult4233 = callmethodChecked(opresult4231, "++(1)", [1], call4211);
                                                            var opresult4235 = callmethodChecked(opresult4233, "++(1)", [1], string4208);
                                                            // call case 6: other requests
                                                            var call4236 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4235);
                                                            setLineNumber(1607);    // compilenode member
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4239 = callmethodChecked(this, "x", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4241 = callmethodChecked(this, "y", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4243 = callmethodChecked(this, "width", []);
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4245 = callmethodChecked(this, "height", []);
                                                            // call case 6: other requests
                                                            var call4246 = callmethodChecked(var_ctx, "fillRect(4)", [4], call4239, call4241, call4243, call4245);
                                                            setLineNumber(1608);    // compilenode member
                                                            // call case 6: other requests
                                                            var call4248 = callmethodChecked(var_ctx, "restore", []);
                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4248)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method draw(_) does not have " + 
                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                            return call4248;
                                                          };
                                                          func4202.paramTypes = [];
                                                          func4202.paramTypes.push([]);
                                                          func4202.paramCounts = [1];
                                                          obj4200.methods["draw(1)"] = func4202;
                                                          func4202.definitionLine = 1603;
                                                          func4202.definitionModule = "rtobjectdraw";
                                                          var func4249 = function(argcv) {    // method asString
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            setModuleName("rtobjectdraw");
                                                            setLineNumber(1613);    // compilenode string
                                                            var string4250 = new GraceString("");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4253 = callmethodChecked(this, "y", []);
                                                            var string4255 = new GraceString(",");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4258 = callmethodChecked(this, "x", []);
                                                            var string4260 = new GraceString("called asString with ");
                                                            var opresult4262 = callmethodChecked(string4260, "++(1)", [1], call4258);
                                                            var opresult4264 = callmethodChecked(opresult4262, "++(1)", [1], string4255);
                                                            var opresult4266 = callmethodChecked(opresult4264, "++(1)", [1], call4253);
                                                            var opresult4268 = callmethodChecked(opresult4266, "++(1)", [1], string4250);
                                                            var call4269 = Grace_print(opresult4268);
                                                            setLineNumber(1615);    // compilenode string
                                                            var string4270 = new GraceString("");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4273 = callmethodChecked(this, "color", []);
                                                            var string4275 = new GraceString(", and color ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4278 = callmethodChecked(this, "width", []);
                                                            var string4280 = new GraceString(", width ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4283 = callmethodChecked(this, "height", []);
                                                            var string4285 = new GraceString("with height ");
                                                            var opresult4287 = callmethodChecked(string4285, "++(1)", [1], call4283);
                                                            var opresult4289 = callmethodChecked(opresult4287, "++(1)", [1], string4280);
                                                            var opresult4291 = callmethodChecked(opresult4289, "++(1)", [1], call4278);
                                                            var opresult4293 = callmethodChecked(opresult4291, "++(1)", [1], string4275);
                                                            var opresult4295 = callmethodChecked(opresult4293, "++(1)", [1], call4273);
                                                            var opresult4297 = callmethodChecked(opresult4295, "++(1)", [1], string4270);
                                                            setLineNumber(1614);    // compilenode string
                                                            var string4299 = new GraceString(") ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4302 = callmethodChecked(this, "y", []);
                                                            var string4304 = new GraceString(", ");
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4307 = callmethodChecked(this, "x", []);
                                                            var string4309 = new GraceString("FilledRect at (");
                                                            var opresult4311 = callmethodChecked(string4309, "++(1)", [1], call4307);
                                                            var opresult4313 = callmethodChecked(opresult4311, "++(1)", [1], string4304);
                                                            var opresult4315 = callmethodChecked(opresult4313, "++(1)", [1], call4302);
                                                            var opresult4317 = callmethodChecked(opresult4315, "++(1)", [1], string4299);
                                                            var opresult4319 = callmethodChecked(opresult4317, "++(1)", [1], opresult4297);
                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4319)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method asString does not have " + 
                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                            return opresult4319;
                                                          };
                                                          func4249.paramCounts = [0];
                                                          obj4200.methods["asString"] = func4249;
                                                          func4249.definitionLine = 1612;
                                                          func4249.definitionModule = "rtobjectdraw";
                                                          setLineNumber(1598);    // compilenode identifier
                                                          // call case 6: other requests
                                                          setLineNumber(0);    // compilenode member
                                                          // call case 3: self.outer request
                                                          var call4322 = callmethodChecked(superDepth, "outer", [0]);
                                                          onSelf = true;
                                                          var call4323 = callmethodChecked(call4322, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                          obj4200.superobj = call4323;
                                                          if (call4323.data) obj4200.data = call4323.data;
                                                          if (call4323.hasOwnProperty('_value'))
                                                              obj4200._value = call4323._value;
                                                          setLineNumber(1600);    // compilenode identifier
                                                          // call case 4: self request
                                                          onSelf = true;
                                                          var call4325 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                          superDepth = origSuperDepth;
                                                        };
                                                        obj_init_4200.apply(obj4200, []);
                                                        setLineNumber(1593);    // return value
                                                        if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj4200)))
                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                new GraceString("result of method filledRectAt(_)size(_)on(_) does not have " + 
                                                                    callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                        return obj4200;
                                                      };
                                                      func4199.paramTypes = [];
                                                      func4199.paramTypes.push([]);
                                                      func4199.paramTypes.push([]);
                                                      func4199.paramTypes.push([]);
                                                      func4199.paramCounts = [1, 1, 1];
                                                      this.methods["filledRectAt(1)size(1)on(1)"] = func4199;
                                                      func4199.definitionLine = 1593;
                                                      func4199.definitionModule = "rtobjectdraw";
                                                        var func4326 = function(argcv) {    // method filledRectAt(_)size(_)on(_)$object(_)
                                                          var curarg = 1;
                                                          var var_location__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_dimensions__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_canvas__39__ = arguments[curarg];
                                                          curarg++;
                                                          var inheritingObject = arguments[curarg++];
                                                          // Start argument processing
                                                          curarg = 1;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in filledRectAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          setLineNumber(1594);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                      callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument processing
                                                          setModuleName("rtobjectdraw");
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var obj4327 = Grace_allocObject(null, "filledRectAt(1)size(1)on(1)");
                                                          obj4327.definitionModule = "rtobjectdraw";
                                                          obj4327.definitionLine = 1593;
                                                          var inho4327 = inheritingObject;
                                                          while (inho4327.superobj) inho4327 = inho4327.superobj;
                                                          inho4327.superobj = obj4327;
                                                          obj4327.data = inheritingObject.data;
                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                            obj4327._value = inheritingObject._value;
                                                          obj4327.outer = this;
                                                          var reader_rtobjectdraw_outer4328 = function() {
                                                            return this.outer;
                                                          };
                                                          obj4327.methods["outer"] = reader_rtobjectdraw_outer4328;
                                                          var obj_init_4327 = function() {
                                                            var origSuperDepth = superDepth;
                                                            superDepth = obj4327;
                                                            var func4329 = function(argcv) {    // method draw(_)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_ctx = arguments[curarg];
                                                              curarg++;
                                                              // Start argument checking
                                                              curarg = 1;
                                                              setLineNumber(1603);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument checking
                                                              setModuleName("rtobjectdraw");
                                                              setLineNumber(1604);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4331 = callmethodChecked(this, "color", []);
                                                              var var_col = call4331;
                                                              setLineNumber(1605);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4333 = callmethodChecked(var_ctx, "save", []);
                                                              setLineNumber(1606);    // compilenode string
                                                              var string4335 = new GraceString(")");
                                                              // call case 6: other requests
                                                              var call4338 = callmethodChecked(var_col, "blue", []);
                                                              var string4340 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4343 = callmethodChecked(var_col, "green", []);
                                                              var string4345 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4348 = callmethodChecked(var_col, "red", []);
                                                              var string4350 = new GraceString("rgb(");
                                                              var opresult4352 = callmethodChecked(string4350, "++(1)", [1], call4348);
                                                              var opresult4354 = callmethodChecked(opresult4352, "++(1)", [1], string4345);
                                                              var opresult4356 = callmethodChecked(opresult4354, "++(1)", [1], call4343);
                                                              var opresult4358 = callmethodChecked(opresult4356, "++(1)", [1], string4340);
                                                              var opresult4360 = callmethodChecked(opresult4358, "++(1)", [1], call4338);
                                                              var opresult4362 = callmethodChecked(opresult4360, "++(1)", [1], string4335);
                                                              // call case 6: other requests
                                                              var call4363 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4362);
                                                              setLineNumber(1607);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4366 = callmethodChecked(this, "x", []);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4368 = callmethodChecked(this, "y", []);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4370 = callmethodChecked(this, "width", []);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4372 = callmethodChecked(this, "height", []);
                                                              // call case 6: other requests
                                                              var call4373 = callmethodChecked(var_ctx, "fillRect(4)", [4], call4366, call4368, call4370, call4372);
                                                              setLineNumber(1608);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4375 = callmethodChecked(var_ctx, "restore", []);
                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4375)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method draw(_) does not have " + 
                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                              return call4375;
                                                            };
                                                            func4329.paramTypes = [];
                                                            func4329.paramTypes.push([]);
                                                            func4329.paramCounts = [1];
                                                            obj4327.methods["draw(1)"] = func4329;
                                                            func4329.definitionLine = 1603;
                                                            func4329.definitionModule = "rtobjectdraw";
                                                            var func4376 = function(argcv) {    // method asString
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              setModuleName("rtobjectdraw");
                                                              setLineNumber(1613);    // compilenode string
                                                              var string4377 = new GraceString("");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4380 = callmethodChecked(this, "y", []);
                                                              var string4382 = new GraceString(",");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4385 = callmethodChecked(this, "x", []);
                                                              var string4387 = new GraceString("called asString with ");
                                                              var opresult4389 = callmethodChecked(string4387, "++(1)", [1], call4385);
                                                              var opresult4391 = callmethodChecked(opresult4389, "++(1)", [1], string4382);
                                                              var opresult4393 = callmethodChecked(opresult4391, "++(1)", [1], call4380);
                                                              var opresult4395 = callmethodChecked(opresult4393, "++(1)", [1], string4377);
                                                              var call4396 = Grace_print(opresult4395);
                                                              setLineNumber(1615);    // compilenode string
                                                              var string4397 = new GraceString("");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4400 = callmethodChecked(this, "color", []);
                                                              var string4402 = new GraceString(", and color ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4405 = callmethodChecked(this, "width", []);
                                                              var string4407 = new GraceString(", width ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4410 = callmethodChecked(this, "height", []);
                                                              var string4412 = new GraceString("with height ");
                                                              var opresult4414 = callmethodChecked(string4412, "++(1)", [1], call4410);
                                                              var opresult4416 = callmethodChecked(opresult4414, "++(1)", [1], string4407);
                                                              var opresult4418 = callmethodChecked(opresult4416, "++(1)", [1], call4405);
                                                              var opresult4420 = callmethodChecked(opresult4418, "++(1)", [1], string4402);
                                                              var opresult4422 = callmethodChecked(opresult4420, "++(1)", [1], call4400);
                                                              var opresult4424 = callmethodChecked(opresult4422, "++(1)", [1], string4397);
                                                              setLineNumber(1614);    // compilenode string
                                                              var string4426 = new GraceString(") ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4429 = callmethodChecked(this, "y", []);
                                                              var string4431 = new GraceString(", ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4434 = callmethodChecked(this, "x", []);
                                                              var string4436 = new GraceString("FilledRect at (");
                                                              var opresult4438 = callmethodChecked(string4436, "++(1)", [1], call4434);
                                                              var opresult4440 = callmethodChecked(opresult4438, "++(1)", [1], string4431);
                                                              var opresult4442 = callmethodChecked(opresult4440, "++(1)", [1], call4429);
                                                              var opresult4444 = callmethodChecked(opresult4442, "++(1)", [1], string4426);
                                                              var opresult4446 = callmethodChecked(opresult4444, "++(1)", [1], opresult4424);
                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4446)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method asString does not have " + 
                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                              return opresult4446;
                                                            };
                                                            func4376.paramCounts = [0];
                                                            obj4327.methods["asString"] = func4376;
                                                            func4376.definitionLine = 1612;
                                                            func4376.definitionModule = "rtobjectdraw";
                                                            setLineNumber(1598);    // compilenode identifier
                                                            // call case 6: other requests
                                                            setLineNumber(0);    // compilenode member
                                                            // call case 3: self.outer request
                                                            var call4449 = callmethodChecked(superDepth, "outer", [0]);
                                                            onSelf = true;
                                                            var call4450 = callmethodChecked(call4449, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                            obj4327.superobj = call4450;
                                                            if (call4450.data) obj4327.data = call4450.data;
                                                            if (call4450.hasOwnProperty('_value'))
                                                                obj4327._value = call4450._value;
                                                            setLineNumber(1600);    // compilenode identifier
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4452 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                            superDepth = origSuperDepth;
                                                          };
                                                          obj_init_4327.apply(inheritingObject, []);
                                                          return obj4327;
                                                          };
                                                          func4326.paramTypes = [];
                                                          func4326.paramTypes.push([]);
                                                          func4326.paramTypes.push([]);
                                                          func4326.paramTypes.push([]);
                                                          this.methods["filledRectAt(1)size(1)on(1)$object(1)"] = func4326;
                                                        setLineNumber(1620);    // compilenode method
                                                        var func4453 = function(argcv) {    // method framedOvalAt(_)size(_)on(_)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_location__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_dimensions__39__ = arguments[curarg];
                                                          curarg++;
                                                          var var_canvas__39__ = arguments[curarg];
                                                          curarg++;
                                                          // Start argument checking
                                                          curarg = 1;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in framedOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                          curarg++;
                                                          setLineNumber(1621);    // compilenode identifier
                                                          if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                      callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                          curarg++;
                                                          // End argument checking
                                                          setModuleName("rtobjectdraw");
                                                          setLineNumber(1620);    // compilenode object
                                                          var obj4454 = Grace_allocObject(null, "framedOvalAt(_)size(_)on(_)");
                                                          obj4454.definitionModule = "rtobjectdraw";
                                                          obj4454.definitionLine = 1620;
                                                          obj4454.outer = this;
                                                          var reader_rtobjectdraw_outer4455 = function() {
                                                            return this.outer;
                                                          };
                                                          obj4454.methods["outer"] = reader_rtobjectdraw_outer4455;
                                                          var obj_init_4454 = function() {
                                                            var origSuperDepth = superDepth;
                                                            superDepth = obj4454;
                                                            var func4456 = function(argcv) {    // method draw(_)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_ctx = arguments[curarg];
                                                              curarg++;
                                                              // Start argument checking
                                                              curarg = 1;
                                                              setLineNumber(1629);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument checking
                                                              setModuleName("rtobjectdraw");
                                                              setLineNumber(1630);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4458 = callmethodChecked(this, "color", []);
                                                              var var_col = call4458;
                                                              setLineNumber(1631);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4460 = callmethodChecked(var_ctx, "beginPath", []);
                                                              setLineNumber(1632);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4462 = callmethodChecked(var_ctx, "save", []);
                                                              setLineNumber(1633);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4466 = callmethodChecked(this, "width", []);
                                                              var quotient4468 = callmethodChecked(call4466, "/(1)", [1], new GraceNum(2));
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4471 = callmethodChecked(this, "x", []);
                                                              var opresult4473 = callmethodChecked(call4471, "+(1)", [1], quotient4468);
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4476 = callmethodChecked(this, "height", []);
                                                              var quotient4478 = callmethodChecked(call4476, "/(1)", [1], new GraceNum(2));
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4481 = callmethodChecked(this, "y", []);
                                                              var opresult4483 = callmethodChecked(call4481, "+(1)", [1], quotient4478);
                                                              // call case 6: other requests
                                                              var call4484 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4473, opresult4483);
                                                              setLineNumber(1634);    // compilenode member
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4488 = callmethodChecked(this, "width", []);
                                                              var quotient4490 = callmethodChecked(call4488, "/(1)", [1], new GraceNum(2));
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4493 = callmethodChecked(this, "height", []);
                                                              var quotient4495 = callmethodChecked(call4493, "/(1)", [1], new GraceNum(2));
                                                              // call case 6: other requests
                                                              var call4496 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4490, quotient4495);
                                                              setLineNumber(1635);    // compilenode num
                                                              var prod4500 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                              // call case 6: other requests
                                                              var call4501 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4500);
                                                              setLineNumber(1636);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4503 = callmethodChecked(var_ctx, "restore", []);
                                                              setLineNumber(1637);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4505 = callmethodChecked(var_ctx, "save", []);
                                                              setLineNumber(1638);    // compilenode string
                                                              var string4507 = new GraceString(")");
                                                              // call case 6: other requests
                                                              var call4510 = callmethodChecked(var_col, "blue", []);
                                                              var string4512 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4515 = callmethodChecked(var_col, "green", []);
                                                              var string4517 = new GraceString(", ");
                                                              // call case 6: other requests
                                                              var call4520 = callmethodChecked(var_col, "red", []);
                                                              var string4522 = new GraceString("rgb(");
                                                              var opresult4524 = callmethodChecked(string4522, "++(1)", [1], call4520);
                                                              var opresult4526 = callmethodChecked(opresult4524, "++(1)", [1], string4517);
                                                              var opresult4528 = callmethodChecked(opresult4526, "++(1)", [1], call4515);
                                                              var opresult4530 = callmethodChecked(opresult4528, "++(1)", [1], string4512);
                                                              var opresult4532 = callmethodChecked(opresult4530, "++(1)", [1], call4510);
                                                              var opresult4534 = callmethodChecked(opresult4532, "++(1)", [1], string4507);
                                                              // call case 6: other requests
                                                              var call4535 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4534);
                                                              setLineNumber(1639);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4537 = callmethodChecked(var_ctx, "stroke", []);
                                                              setLineNumber(1640);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4539 = callmethodChecked(var_ctx, "restore", []);
                                                              setLineNumber(1641);    // compilenode member
                                                              // call case 6: other requests
                                                              var call4541 = callmethodChecked(var_ctx, "closePath", []);
                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4541)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method draw(_) does not have " + 
                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                              return call4541;
                                                            };
                                                            func4456.paramTypes = [];
                                                            func4456.paramTypes.push([]);
                                                            func4456.paramCounts = [1];
                                                            obj4454.methods["draw(1)"] = func4456;
                                                            func4456.definitionLine = 1629;
                                                            func4456.definitionModule = "rtobjectdraw";
                                                            var func4542 = function(argcv) {    // method asString
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              setModuleName("rtobjectdraw");
                                                              setLineNumber(1647);    // compilenode string
                                                              var string4543 = new GraceString("");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4546 = callmethodChecked(this, "color", []);
                                                              var string4548 = new GraceString(", and color ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4551 = callmethodChecked(this, "width", []);
                                                              var string4553 = new GraceString(", width ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4556 = callmethodChecked(this, "height", []);
                                                              var string4558 = new GraceString("with height ");
                                                              var opresult4560 = callmethodChecked(string4558, "++(1)", [1], call4556);
                                                              var opresult4562 = callmethodChecked(opresult4560, "++(1)", [1], string4553);
                                                              var opresult4564 = callmethodChecked(opresult4562, "++(1)", [1], call4551);
                                                              var opresult4566 = callmethodChecked(opresult4564, "++(1)", [1], string4548);
                                                              var opresult4568 = callmethodChecked(opresult4566, "++(1)", [1], call4546);
                                                              var opresult4570 = callmethodChecked(opresult4568, "++(1)", [1], string4543);
                                                              setLineNumber(1646);    // compilenode string
                                                              var string4572 = new GraceString(") ");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4575 = callmethodChecked(this, "y", []);
                                                              var string4577 = new GraceString(",");
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4580 = callmethodChecked(this, "x", []);
                                                              var string4582 = new GraceString("FramedOval at (");
                                                              var opresult4584 = callmethodChecked(string4582, "++(1)", [1], call4580);
                                                              var opresult4586 = callmethodChecked(opresult4584, "++(1)", [1], string4577);
                                                              var opresult4588 = callmethodChecked(opresult4586, "++(1)", [1], call4575);
                                                              var opresult4590 = callmethodChecked(opresult4588, "++(1)", [1], string4572);
                                                              var opresult4592 = callmethodChecked(opresult4590, "++(1)", [1], opresult4570);
                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4592)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method asString does not have " + 
                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                              return opresult4592;
                                                            };
                                                            func4542.paramCounts = [0];
                                                            obj4454.methods["asString"] = func4542;
                                                            func4542.definitionLine = 1645;
                                                            func4542.definitionModule = "rtobjectdraw";
                                                            setLineNumber(1625);    // compilenode identifier
                                                            // call case 6: other requests
                                                            setLineNumber(0);    // compilenode member
                                                            // call case 3: self.outer request
                                                            var call4595 = callmethodChecked(superDepth, "outer", [0]);
                                                            onSelf = true;
                                                            var call4596 = callmethodChecked(call4595, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                            obj4454.superobj = call4596;
                                                            if (call4596.data) obj4454.data = call4596.data;
                                                            if (call4596.hasOwnProperty('_value'))
                                                                obj4454._value = call4596._value;
                                                            setLineNumber(1626);    // compilenode identifier
                                                            // call case 4: self request
                                                            onSelf = true;
                                                            var call4598 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                            superDepth = origSuperDepth;
                                                          };
                                                          obj_init_4454.apply(obj4454, []);
                                                          setLineNumber(1620);    // return value
                                                          if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj4454)))
                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                  new GraceString("result of method framedOvalAt(_)size(_)on(_) does not have " + 
                                                                      callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                          return obj4454;
                                                        };
                                                        func4453.paramTypes = [];
                                                        func4453.paramTypes.push([]);
                                                        func4453.paramTypes.push([]);
                                                        func4453.paramTypes.push([]);
                                                        func4453.paramCounts = [1, 1, 1];
                                                        this.methods["framedOvalAt(1)size(1)on(1)"] = func4453;
                                                        func4453.definitionLine = 1620;
                                                        func4453.definitionModule = "rtobjectdraw";
                                                          var func4599 = function(argcv) {    // method framedOvalAt(_)size(_)on(_)$object(_)
                                                            var curarg = 1;
                                                            var var_location__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_dimensions__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_canvas__39__ = arguments[curarg];
                                                            curarg++;
                                                            var inheritingObject = arguments[curarg++];
                                                            // Start argument processing
                                                            curarg = 1;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in framedOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            setLineNumber(1621);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                        callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument processing
                                                            setModuleName("rtobjectdraw");
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var obj4600 = Grace_allocObject(null, "framedOvalAt(1)size(1)on(1)");
                                                            obj4600.definitionModule = "rtobjectdraw";
                                                            obj4600.definitionLine = 1620;
                                                            var inho4600 = inheritingObject;
                                                            while (inho4600.superobj) inho4600 = inho4600.superobj;
                                                            inho4600.superobj = obj4600;
                                                            obj4600.data = inheritingObject.data;
                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                              obj4600._value = inheritingObject._value;
                                                            obj4600.outer = this;
                                                            var reader_rtobjectdraw_outer4601 = function() {
                                                              return this.outer;
                                                            };
                                                            obj4600.methods["outer"] = reader_rtobjectdraw_outer4601;
                                                            var obj_init_4600 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj4600;
                                                              var func4602 = function(argcv) {    // method draw(_)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_ctx = arguments[curarg];
                                                                curarg++;
                                                                // Start argument checking
                                                                curarg = 1;
                                                                setLineNumber(1629);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument checking
                                                                setModuleName("rtobjectdraw");
                                                                setLineNumber(1630);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4604 = callmethodChecked(this, "color", []);
                                                                var var_col = call4604;
                                                                setLineNumber(1631);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4606 = callmethodChecked(var_ctx, "beginPath", []);
                                                                setLineNumber(1632);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4608 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1633);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4612 = callmethodChecked(this, "width", []);
                                                                var quotient4614 = callmethodChecked(call4612, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4617 = callmethodChecked(this, "x", []);
                                                                var opresult4619 = callmethodChecked(call4617, "+(1)", [1], quotient4614);
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4622 = callmethodChecked(this, "height", []);
                                                                var quotient4624 = callmethodChecked(call4622, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4627 = callmethodChecked(this, "y", []);
                                                                var opresult4629 = callmethodChecked(call4627, "+(1)", [1], quotient4624);
                                                                // call case 6: other requests
                                                                var call4630 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4619, opresult4629);
                                                                setLineNumber(1634);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4634 = callmethodChecked(this, "width", []);
                                                                var quotient4636 = callmethodChecked(call4634, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4639 = callmethodChecked(this, "height", []);
                                                                var quotient4641 = callmethodChecked(call4639, "/(1)", [1], new GraceNum(2));
                                                                // call case 6: other requests
                                                                var call4642 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4636, quotient4641);
                                                                setLineNumber(1635);    // compilenode num
                                                                var prod4646 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                                // call case 6: other requests
                                                                var call4647 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4646);
                                                                setLineNumber(1636);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4649 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1637);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4651 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1638);    // compilenode string
                                                                var string4653 = new GraceString(")");
                                                                // call case 6: other requests
                                                                var call4656 = callmethodChecked(var_col, "blue", []);
                                                                var string4658 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4661 = callmethodChecked(var_col, "green", []);
                                                                var string4663 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4666 = callmethodChecked(var_col, "red", []);
                                                                var string4668 = new GraceString("rgb(");
                                                                var opresult4670 = callmethodChecked(string4668, "++(1)", [1], call4666);
                                                                var opresult4672 = callmethodChecked(opresult4670, "++(1)", [1], string4663);
                                                                var opresult4674 = callmethodChecked(opresult4672, "++(1)", [1], call4661);
                                                                var opresult4676 = callmethodChecked(opresult4674, "++(1)", [1], string4658);
                                                                var opresult4678 = callmethodChecked(opresult4676, "++(1)", [1], call4656);
                                                                var opresult4680 = callmethodChecked(opresult4678, "++(1)", [1], string4653);
                                                                // call case 6: other requests
                                                                var call4681 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult4680);
                                                                setLineNumber(1639);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4683 = callmethodChecked(var_ctx, "stroke", []);
                                                                setLineNumber(1640);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4685 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1641);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4687 = callmethodChecked(var_ctx, "closePath", []);
                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4687)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method draw(_) does not have " + 
                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                return call4687;
                                                              };
                                                              func4602.paramTypes = [];
                                                              func4602.paramTypes.push([]);
                                                              func4602.paramCounts = [1];
                                                              obj4600.methods["draw(1)"] = func4602;
                                                              func4602.definitionLine = 1629;
                                                              func4602.definitionModule = "rtobjectdraw";
                                                              var func4688 = function(argcv) {    // method asString
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                setModuleName("rtobjectdraw");
                                                                setLineNumber(1647);    // compilenode string
                                                                var string4689 = new GraceString("");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4692 = callmethodChecked(this, "color", []);
                                                                var string4694 = new GraceString(", and color ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4697 = callmethodChecked(this, "width", []);
                                                                var string4699 = new GraceString(", width ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4702 = callmethodChecked(this, "height", []);
                                                                var string4704 = new GraceString("with height ");
                                                                var opresult4706 = callmethodChecked(string4704, "++(1)", [1], call4702);
                                                                var opresult4708 = callmethodChecked(opresult4706, "++(1)", [1], string4699);
                                                                var opresult4710 = callmethodChecked(opresult4708, "++(1)", [1], call4697);
                                                                var opresult4712 = callmethodChecked(opresult4710, "++(1)", [1], string4694);
                                                                var opresult4714 = callmethodChecked(opresult4712, "++(1)", [1], call4692);
                                                                var opresult4716 = callmethodChecked(opresult4714, "++(1)", [1], string4689);
                                                                setLineNumber(1646);    // compilenode string
                                                                var string4718 = new GraceString(") ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4721 = callmethodChecked(this, "y", []);
                                                                var string4723 = new GraceString(",");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4726 = callmethodChecked(this, "x", []);
                                                                var string4728 = new GraceString("FramedOval at (");
                                                                var opresult4730 = callmethodChecked(string4728, "++(1)", [1], call4726);
                                                                var opresult4732 = callmethodChecked(opresult4730, "++(1)", [1], string4723);
                                                                var opresult4734 = callmethodChecked(opresult4732, "++(1)", [1], call4721);
                                                                var opresult4736 = callmethodChecked(opresult4734, "++(1)", [1], string4718);
                                                                var opresult4738 = callmethodChecked(opresult4736, "++(1)", [1], opresult4716);
                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4738)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method asString does not have " + 
                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                return opresult4738;
                                                              };
                                                              func4688.paramCounts = [0];
                                                              obj4600.methods["asString"] = func4688;
                                                              func4688.definitionLine = 1645;
                                                              func4688.definitionModule = "rtobjectdraw";
                                                              setLineNumber(1625);    // compilenode identifier
                                                              // call case 6: other requests
                                                              setLineNumber(0);    // compilenode member
                                                              // call case 3: self.outer request
                                                              var call4741 = callmethodChecked(superDepth, "outer", [0]);
                                                              onSelf = true;
                                                              var call4742 = callmethodChecked(call4741, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                              obj4600.superobj = call4742;
                                                              if (call4742.data) obj4600.data = call4742.data;
                                                              if (call4742.hasOwnProperty('_value'))
                                                                  obj4600._value = call4742._value;
                                                              setLineNumber(1626);    // compilenode identifier
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4744 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_4600.apply(inheritingObject, []);
                                                            return obj4600;
                                                            };
                                                            func4599.paramTypes = [];
                                                            func4599.paramTypes.push([]);
                                                            func4599.paramTypes.push([]);
                                                            func4599.paramTypes.push([]);
                                                            this.methods["framedOvalAt(1)size(1)on(1)$object(1)"] = func4599;
                                                          setLineNumber(1651);    // compilenode method
                                                          var func4745 = function(argcv) {    // method filledOvalAt(_)size(_)on(_)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_location__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_dimensions__39__ = arguments[curarg];
                                                            curarg++;
                                                            var var_canvas__39__ = arguments[curarg];
                                                            curarg++;
                                                            // Start argument checking
                                                            curarg = 1;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in filledOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                        callmethod(var_Point, "asString", [0])._value + "."));
                                                            curarg++;
                                                            setLineNumber(1652);    // compilenode identifier
                                                            if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                        callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                            curarg++;
                                                            // End argument checking
                                                            setModuleName("rtobjectdraw");
                                                            setLineNumber(1651);    // compilenode object
                                                            var obj4746 = Grace_allocObject(null, "filledOvalAt(_)size(_)on(_)");
                                                            obj4746.definitionModule = "rtobjectdraw";
                                                            obj4746.definitionLine = 1651;
                                                            obj4746.outer = this;
                                                            var reader_rtobjectdraw_outer4747 = function() {
                                                              return this.outer;
                                                            };
                                                            obj4746.methods["outer"] = reader_rtobjectdraw_outer4747;
                                                            var obj_init_4746 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj4746;
                                                              var func4748 = function(argcv) {    // method draw(_)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_ctx = arguments[curarg];
                                                                curarg++;
                                                                // Start argument checking
                                                                curarg = 1;
                                                                setLineNumber(1661);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument checking
                                                                setModuleName("rtobjectdraw");
                                                                setLineNumber(1662);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4750 = callmethodChecked(this, "color", []);
                                                                var var_col = call4750;
                                                                setLineNumber(1663);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4752 = callmethodChecked(var_ctx, "beginPath", []);
                                                                setLineNumber(1664);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4754 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1665);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4758 = callmethodChecked(this, "width", []);
                                                                var quotient4760 = callmethodChecked(call4758, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4763 = callmethodChecked(this, "x", []);
                                                                var opresult4765 = callmethodChecked(call4763, "+(1)", [1], quotient4760);
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4768 = callmethodChecked(this, "height", []);
                                                                var quotient4770 = callmethodChecked(call4768, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4773 = callmethodChecked(this, "y", []);
                                                                var opresult4775 = callmethodChecked(call4773, "+(1)", [1], quotient4770);
                                                                // call case 6: other requests
                                                                var call4776 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4765, opresult4775);
                                                                setLineNumber(1666);    // compilenode member
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4780 = callmethodChecked(this, "width", []);
                                                                var quotient4782 = callmethodChecked(call4780, "/(1)", [1], new GraceNum(2));
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4785 = callmethodChecked(this, "height", []);
                                                                var quotient4787 = callmethodChecked(call4785, "/(1)", [1], new GraceNum(2));
                                                                // call case 6: other requests
                                                                var call4788 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4782, quotient4787);
                                                                setLineNumber(1667);    // compilenode num
                                                                var prod4792 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                                // call case 6: other requests
                                                                var call4793 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4792);
                                                                setLineNumber(1668);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4795 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1669);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4797 = callmethodChecked(var_ctx, "save", []);
                                                                setLineNumber(1670);    // compilenode string
                                                                var string4799 = new GraceString(")");
                                                                // call case 6: other requests
                                                                var call4802 = callmethodChecked(var_col, "blue", []);
                                                                var string4804 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4807 = callmethodChecked(var_col, "green", []);
                                                                var string4809 = new GraceString(", ");
                                                                // call case 6: other requests
                                                                var call4812 = callmethodChecked(var_col, "red", []);
                                                                var string4814 = new GraceString("rgb(");
                                                                var opresult4816 = callmethodChecked(string4814, "++(1)", [1], call4812);
                                                                var opresult4818 = callmethodChecked(opresult4816, "++(1)", [1], string4809);
                                                                var opresult4820 = callmethodChecked(opresult4818, "++(1)", [1], call4807);
                                                                var opresult4822 = callmethodChecked(opresult4820, "++(1)", [1], string4804);
                                                                var opresult4824 = callmethodChecked(opresult4822, "++(1)", [1], call4802);
                                                                var opresult4826 = callmethodChecked(opresult4824, "++(1)", [1], string4799);
                                                                // call case 6: other requests
                                                                var call4827 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4826);
                                                                setLineNumber(1671);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4829 = callmethodChecked(var_ctx, "fill", []);
                                                                setLineNumber(1672);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4831 = callmethodChecked(var_ctx, "restore", []);
                                                                setLineNumber(1673);    // compilenode member
                                                                // call case 6: other requests
                                                                var call4833 = callmethodChecked(var_ctx, "closePath", []);
                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4833)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method draw(_) does not have " + 
                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                return call4833;
                                                              };
                                                              func4748.paramTypes = [];
                                                              func4748.paramTypes.push([]);
                                                              func4748.paramCounts = [1];
                                                              obj4746.methods["draw(1)"] = func4748;
                                                              func4748.definitionLine = 1661;
                                                              func4748.definitionModule = "rtobjectdraw";
                                                              var func4834 = function(argcv) {    // method asString
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                setModuleName("rtobjectdraw");
                                                                setLineNumber(1679);    // compilenode string
                                                                var string4835 = new GraceString("");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4838 = callmethodChecked(this, "color", []);
                                                                var string4840 = new GraceString(", and color ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4843 = callmethodChecked(this, "width", []);
                                                                var string4845 = new GraceString(", width ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4848 = callmethodChecked(this, "height", []);
                                                                var string4850 = new GraceString("with height ");
                                                                var opresult4852 = callmethodChecked(string4850, "++(1)", [1], call4848);
                                                                var opresult4854 = callmethodChecked(opresult4852, "++(1)", [1], string4845);
                                                                var opresult4856 = callmethodChecked(opresult4854, "++(1)", [1], call4843);
                                                                var opresult4858 = callmethodChecked(opresult4856, "++(1)", [1], string4840);
                                                                var opresult4860 = callmethodChecked(opresult4858, "++(1)", [1], call4838);
                                                                var opresult4862 = callmethodChecked(opresult4860, "++(1)", [1], string4835);
                                                                setLineNumber(1678);    // compilenode string
                                                                var string4864 = new GraceString(") ");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4867 = callmethodChecked(this, "y", []);
                                                                var string4869 = new GraceString(",");
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call4872 = callmethodChecked(this, "x", []);
                                                                var string4874 = new GraceString("FilledOval at (");
                                                                var opresult4876 = callmethodChecked(string4874, "++(1)", [1], call4872);
                                                                var opresult4878 = callmethodChecked(opresult4876, "++(1)", [1], string4869);
                                                                var opresult4880 = callmethodChecked(opresult4878, "++(1)", [1], call4867);
                                                                var opresult4882 = callmethodChecked(opresult4880, "++(1)", [1], string4864);
                                                                var opresult4884 = callmethodChecked(opresult4882, "++(1)", [1], opresult4862);
                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult4884)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method asString does not have " + 
                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                return opresult4884;
                                                              };
                                                              func4834.paramCounts = [0];
                                                              obj4746.methods["asString"] = func4834;
                                                              func4834.definitionLine = 1677;
                                                              func4834.definitionModule = "rtobjectdraw";
                                                              setLineNumber(1656);    // compilenode identifier
                                                              // call case 6: other requests
                                                              setLineNumber(0);    // compilenode member
                                                              // call case 3: self.outer request
                                                              var call4887 = callmethodChecked(superDepth, "outer", [0]);
                                                              onSelf = true;
                                                              var call4888 = callmethodChecked(call4887, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                              obj4746.superobj = call4888;
                                                              if (call4888.data) obj4746.data = call4888.data;
                                                              if (call4888.hasOwnProperty('_value'))
                                                                  obj4746._value = call4888._value;
                                                              setLineNumber(1658);    // compilenode identifier
                                                              // call case 4: self request
                                                              onSelf = true;
                                                              var call4890 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_4746.apply(obj4746, []);
                                                            setLineNumber(1651);    // return value
                                                            if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj4746)))
                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                    new GraceString("result of method filledOvalAt(_)size(_)on(_) does not have " + 
                                                                        callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                            return obj4746;
                                                          };
                                                          func4745.paramTypes = [];
                                                          func4745.paramTypes.push([]);
                                                          func4745.paramTypes.push([]);
                                                          func4745.paramTypes.push([]);
                                                          func4745.paramCounts = [1, 1, 1];
                                                          this.methods["filledOvalAt(1)size(1)on(1)"] = func4745;
                                                          func4745.definitionLine = 1651;
                                                          func4745.definitionModule = "rtobjectdraw";
                                                            var func4891 = function(argcv) {    // method filledOvalAt(_)size(_)on(_)$object(_)
                                                              var curarg = 1;
                                                              var var_location__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_dimensions__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_canvas__39__ = arguments[curarg];
                                                              curarg++;
                                                              var inheritingObject = arguments[curarg++];
                                                              // Start argument processing
                                                              curarg = 1;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in filledOvalAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              setLineNumber(1652);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                          callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument processing
                                                              setModuleName("rtobjectdraw");
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var obj4892 = Grace_allocObject(null, "filledOvalAt(1)size(1)on(1)");
                                                              obj4892.definitionModule = "rtobjectdraw";
                                                              obj4892.definitionLine = 1651;
                                                              var inho4892 = inheritingObject;
                                                              while (inho4892.superobj) inho4892 = inho4892.superobj;
                                                              inho4892.superobj = obj4892;
                                                              obj4892.data = inheritingObject.data;
                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                obj4892._value = inheritingObject._value;
                                                              obj4892.outer = this;
                                                              var reader_rtobjectdraw_outer4893 = function() {
                                                                return this.outer;
                                                              };
                                                              obj4892.methods["outer"] = reader_rtobjectdraw_outer4893;
                                                              var obj_init_4892 = function() {
                                                                var origSuperDepth = superDepth;
                                                                superDepth = obj4892;
                                                                var func4894 = function(argcv) {    // method draw(_)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_ctx = arguments[curarg];
                                                                  curarg++;
                                                                  // Start argument checking
                                                                  curarg = 1;
                                                                  setLineNumber(1661);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                              callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument checking
                                                                  setModuleName("rtobjectdraw");
                                                                  setLineNumber(1662);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4896 = callmethodChecked(this, "color", []);
                                                                  var var_col = call4896;
                                                                  setLineNumber(1663);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4898 = callmethodChecked(var_ctx, "beginPath", []);
                                                                  setLineNumber(1664);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4900 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1665);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4904 = callmethodChecked(this, "width", []);
                                                                  var quotient4906 = callmethodChecked(call4904, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4909 = callmethodChecked(this, "x", []);
                                                                  var opresult4911 = callmethodChecked(call4909, "+(1)", [1], quotient4906);
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4914 = callmethodChecked(this, "height", []);
                                                                  var quotient4916 = callmethodChecked(call4914, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4919 = callmethodChecked(this, "y", []);
                                                                  var opresult4921 = callmethodChecked(call4919, "+(1)", [1], quotient4916);
                                                                  // call case 6: other requests
                                                                  var call4922 = callmethodChecked(var_ctx, "translate(2)", [2], opresult4911, opresult4921);
                                                                  setLineNumber(1666);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4926 = callmethodChecked(this, "width", []);
                                                                  var quotient4928 = callmethodChecked(call4926, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4931 = callmethodChecked(this, "height", []);
                                                                  var quotient4933 = callmethodChecked(call4931, "/(1)", [1], new GraceNum(2));
                                                                  // call case 6: other requests
                                                                  var call4934 = callmethodChecked(var_ctx, "scale(2)", [2], quotient4928, quotient4933);
                                                                  setLineNumber(1667);    // compilenode num
                                                                  var prod4938 = callmethodChecked(new GraceNum(2), "*(1)", [1], var_pi);
                                                                  // call case 6: other requests
                                                                  var call4939 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), new GraceNum(0), prod4938);
                                                                  setLineNumber(1668);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4941 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1669);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4943 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1670);    // compilenode string
                                                                  var string4945 = new GraceString(")");
                                                                  // call case 6: other requests
                                                                  var call4948 = callmethodChecked(var_col, "blue", []);
                                                                  var string4950 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call4953 = callmethodChecked(var_col, "green", []);
                                                                  var string4955 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call4958 = callmethodChecked(var_col, "red", []);
                                                                  var string4960 = new GraceString("rgb(");
                                                                  var opresult4962 = callmethodChecked(string4960, "++(1)", [1], call4958);
                                                                  var opresult4964 = callmethodChecked(opresult4962, "++(1)", [1], string4955);
                                                                  var opresult4966 = callmethodChecked(opresult4964, "++(1)", [1], call4953);
                                                                  var opresult4968 = callmethodChecked(opresult4966, "++(1)", [1], string4950);
                                                                  var opresult4970 = callmethodChecked(opresult4968, "++(1)", [1], call4948);
                                                                  var opresult4972 = callmethodChecked(opresult4970, "++(1)", [1], string4945);
                                                                  // call case 6: other requests
                                                                  var call4973 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult4972);
                                                                  setLineNumber(1671);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4975 = callmethodChecked(var_ctx, "fill", []);
                                                                  setLineNumber(1672);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4977 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1673);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call4979 = callmethodChecked(var_ctx, "closePath", []);
                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call4979)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method draw(_) does not have " + 
                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                  return call4979;
                                                                };
                                                                func4894.paramTypes = [];
                                                                func4894.paramTypes.push([]);
                                                                func4894.paramCounts = [1];
                                                                obj4892.methods["draw(1)"] = func4894;
                                                                func4894.definitionLine = 1661;
                                                                func4894.definitionModule = "rtobjectdraw";
                                                                var func4980 = function(argcv) {    // method asString
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  setModuleName("rtobjectdraw");
                                                                  setLineNumber(1679);    // compilenode string
                                                                  var string4981 = new GraceString("");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4984 = callmethodChecked(this, "color", []);
                                                                  var string4986 = new GraceString(", and color ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4989 = callmethodChecked(this, "width", []);
                                                                  var string4991 = new GraceString(", width ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call4994 = callmethodChecked(this, "height", []);
                                                                  var string4996 = new GraceString("with height ");
                                                                  var opresult4998 = callmethodChecked(string4996, "++(1)", [1], call4994);
                                                                  var opresult5000 = callmethodChecked(opresult4998, "++(1)", [1], string4991);
                                                                  var opresult5002 = callmethodChecked(opresult5000, "++(1)", [1], call4989);
                                                                  var opresult5004 = callmethodChecked(opresult5002, "++(1)", [1], string4986);
                                                                  var opresult5006 = callmethodChecked(opresult5004, "++(1)", [1], call4984);
                                                                  var opresult5008 = callmethodChecked(opresult5006, "++(1)", [1], string4981);
                                                                  setLineNumber(1678);    // compilenode string
                                                                  var string5010 = new GraceString(") ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5013 = callmethodChecked(this, "y", []);
                                                                  var string5015 = new GraceString(",");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5018 = callmethodChecked(this, "x", []);
                                                                  var string5020 = new GraceString("FilledOval at (");
                                                                  var opresult5022 = callmethodChecked(string5020, "++(1)", [1], call5018);
                                                                  var opresult5024 = callmethodChecked(opresult5022, "++(1)", [1], string5015);
                                                                  var opresult5026 = callmethodChecked(opresult5024, "++(1)", [1], call5013);
                                                                  var opresult5028 = callmethodChecked(opresult5026, "++(1)", [1], string5010);
                                                                  var opresult5030 = callmethodChecked(opresult5028, "++(1)", [1], opresult5008);
                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5030)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method asString does not have " + 
                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                  return opresult5030;
                                                                };
                                                                func4980.paramCounts = [0];
                                                                obj4892.methods["asString"] = func4980;
                                                                func4980.definitionLine = 1677;
                                                                func4980.definitionModule = "rtobjectdraw";
                                                                setLineNumber(1656);    // compilenode identifier
                                                                // call case 6: other requests
                                                                setLineNumber(0);    // compilenode member
                                                                // call case 3: self.outer request
                                                                var call5033 = callmethodChecked(superDepth, "outer", [0]);
                                                                onSelf = true;
                                                                var call5034 = callmethodChecked(call5033, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                obj4892.superobj = call5034;
                                                                if (call5034.data) obj4892.data = call5034.data;
                                                                if (call5034.hasOwnProperty('_value'))
                                                                    obj4892._value = call5034._value;
                                                                setLineNumber(1658);    // compilenode identifier
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call5036 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                superDepth = origSuperDepth;
                                                              };
                                                              obj_init_4892.apply(inheritingObject, []);
                                                              return obj4892;
                                                              };
                                                              func4891.paramTypes = [];
                                                              func4891.paramTypes.push([]);
                                                              func4891.paramTypes.push([]);
                                                              func4891.paramTypes.push([]);
                                                              this.methods["filledOvalAt(1)size(1)on(1)$object(1)"] = func4891;
                                                            setLineNumber(1683);    // compilenode method
                                                            var func5037 = function(argcv) {    // method framedArcAt(_)size(_)from(_)to(_)on(_)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_location__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_dimensions__39__ = arguments[curarg];
                                                              curarg++;
                                                              var var_startAngle = arguments[curarg];
                                                              curarg++;
                                                              var var_endAngle = arguments[curarg];
                                                              curarg++;
                                                              var var_canvas__39__ = arguments[curarg];
                                                              curarg++;
                                                              // Start argument checking
                                                              curarg = 1;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in framedArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                          callmethod(var_Point, "asString", [0])._value + "."));
                                                              curarg++;
                                                              setLineNumber(1684);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                              curarg++;
                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                              curarg++;
                                                              setLineNumber(1685);    // compilenode identifier
                                                              if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                          callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                              curarg++;
                                                              // End argument checking
                                                              setModuleName("rtobjectdraw");
                                                              setLineNumber(1683);    // compilenode object
                                                              var obj5038 = Grace_allocObject(null, "framedArcAt(_)size(_)from(_)to(_)on(_)");
                                                              obj5038.definitionModule = "rtobjectdraw";
                                                              obj5038.definitionLine = 1683;
                                                              obj5038.outer = this;
                                                              var reader_rtobjectdraw_outer5039 = function() {
                                                                return this.outer;
                                                              };
                                                              obj5038.methods["outer"] = reader_rtobjectdraw_outer5039;
                                                              var obj_init_5038 = function() {
                                                                var origSuperDepth = superDepth;
                                                                superDepth = obj5038;
                                                                var func5040 = function(argcv) {    // method draw(_)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_ctx = arguments[curarg];
                                                                  curarg++;
                                                                  // Start argument checking
                                                                  curarg = 1;
                                                                  setLineNumber(1694);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                              callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument checking
                                                                  setModuleName("rtobjectdraw");
                                                                  setLineNumber(1695);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5042 = callmethodChecked(this, "color", []);
                                                                  var var_col = call5042;
                                                                  setLineNumber(1696);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5044 = callmethodChecked(var_ctx, "beginPath", []);
                                                                  setLineNumber(1697);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5046 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1698);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5050 = callmethodChecked(this, "width", []);
                                                                  var quotient5052 = callmethodChecked(call5050, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5055 = callmethodChecked(this, "x", []);
                                                                  var opresult5057 = callmethodChecked(call5055, "+(1)", [1], quotient5052);
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5060 = callmethodChecked(this, "height", []);
                                                                  var quotient5062 = callmethodChecked(call5060, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5065 = callmethodChecked(this, "y", []);
                                                                  var opresult5067 = callmethodChecked(call5065, "+(1)", [1], quotient5062);
                                                                  // call case 6: other requests
                                                                  var call5068 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5057, opresult5067);
                                                                  setLineNumber(1699);    // compilenode member
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5072 = callmethodChecked(this, "width", []);
                                                                  var quotient5074 = callmethodChecked(call5072, "/(1)", [1], new GraceNum(2));
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5077 = callmethodChecked(this, "height", []);
                                                                  var quotient5079 = callmethodChecked(call5077, "/(1)", [1], new GraceNum(2));
                                                                  // call case 6: other requests
                                                                  var call5080 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5074, quotient5079);
                                                                  var if5081 = GraceDone;
                                                                  setLineNumber(1700);    // compilenode identifier
                                                                  var opresult5084 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                  if (Grace_isTrue(opresult5084)) {
                                                                    setLineNumber(1701);    // compilenode identifier
                                                                    var prod5089 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                    var quotient5091 = callmethodChecked(prod5089, "/(1)", [1], new GraceNum(180));
                                                                    var prod5095 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                    var quotient5097 = callmethodChecked(prod5095, "/(1)", [1], new GraceNum(180));
                                                                    // call case 6: other requests
                                                                    var call5098 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5091, quotient5097);
                                                                    if5081 = call5098;
                                                                  } else {
                                                                    setLineNumber(1703);    // compilenode identifier
                                                                    var prod5103 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                    var quotient5105 = callmethodChecked(prod5103, "/(1)", [1], new GraceNum(180));
                                                                    var prod5109 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                    var quotient5111 = callmethodChecked(prod5109, "/(1)", [1], new GraceNum(180));
                                                                    // call case 6: other requests
                                                                    var call5112 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5105, quotient5111);
                                                                    if5081 = call5112;
                                                                  }
                                                                  setLineNumber(1705);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5114 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1706);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5116 = callmethodChecked(var_ctx, "save", []);
                                                                  setLineNumber(1707);    // compilenode string
                                                                  var string5118 = new GraceString(")");
                                                                  // call case 6: other requests
                                                                  var call5121 = callmethodChecked(var_col, "blue", []);
                                                                  var string5123 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call5126 = callmethodChecked(var_col, "green", []);
                                                                  var string5128 = new GraceString(", ");
                                                                  // call case 6: other requests
                                                                  var call5131 = callmethodChecked(var_col, "red", []);
                                                                  var string5133 = new GraceString("rgb(");
                                                                  var opresult5135 = callmethodChecked(string5133, "++(1)", [1], call5131);
                                                                  var opresult5137 = callmethodChecked(opresult5135, "++(1)", [1], string5128);
                                                                  var opresult5139 = callmethodChecked(opresult5137, "++(1)", [1], call5126);
                                                                  var opresult5141 = callmethodChecked(opresult5139, "++(1)", [1], string5123);
                                                                  var opresult5143 = callmethodChecked(opresult5141, "++(1)", [1], call5121);
                                                                  var opresult5145 = callmethodChecked(opresult5143, "++(1)", [1], string5118);
                                                                  // call case 6: other requests
                                                                  var call5146 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult5145);
                                                                  setLineNumber(1708);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5148 = callmethodChecked(var_ctx, "stroke", []);
                                                                  setLineNumber(1709);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5150 = callmethodChecked(var_ctx, "restore", []);
                                                                  setLineNumber(1710);    // compilenode member
                                                                  // call case 6: other requests
                                                                  var call5152 = callmethodChecked(var_ctx, "closePath", []);
                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5152)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method draw(_) does not have " + 
                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                  return call5152;
                                                                };
                                                                func5040.paramTypes = [];
                                                                func5040.paramTypes.push([]);
                                                                func5040.paramCounts = [1];
                                                                obj5038.methods["draw(1)"] = func5040;
                                                                func5040.definitionLine = 1694;
                                                                func5040.definitionModule = "rtobjectdraw";
                                                                var func5153 = function(argcv) {    // method asString
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  setModuleName("rtobjectdraw");
                                                                  setLineNumber(1717);    // compilenode string
                                                                  var string5154 = new GraceString(" degrees");
                                                                  var string5157 = new GraceString(" degrees to ");
                                                                  var string5160 = new GraceString("from ");
                                                                  var opresult5162 = callmethodChecked(string5160, "++(1)", [1], var_startAngle);
                                                                  var opresult5164 = callmethodChecked(opresult5162, "++(1)", [1], string5157);
                                                                  var opresult5166 = callmethodChecked(opresult5164, "++(1)", [1], var_endAngle);
                                                                  var opresult5168 = callmethodChecked(opresult5166, "++(1)", [1], string5154);
                                                                  setLineNumber(1716);    // compilenode string
                                                                  var string5170 = new GraceString(" going ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5173 = callmethodChecked(this, "color", []);
                                                                  var string5175 = new GraceString(", and color ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5178 = callmethodChecked(this, "width", []);
                                                                  var string5180 = new GraceString(", width ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5183 = callmethodChecked(this, "height", []);
                                                                  var string5185 = new GraceString("with height ");
                                                                  var opresult5187 = callmethodChecked(string5185, "++(1)", [1], call5183);
                                                                  var opresult5189 = callmethodChecked(opresult5187, "++(1)", [1], string5180);
                                                                  var opresult5191 = callmethodChecked(opresult5189, "++(1)", [1], call5178);
                                                                  var opresult5193 = callmethodChecked(opresult5191, "++(1)", [1], string5175);
                                                                  var opresult5195 = callmethodChecked(opresult5193, "++(1)", [1], call5173);
                                                                  var opresult5197 = callmethodChecked(opresult5195, "++(1)", [1], string5170);
                                                                  setLineNumber(1715);    // compilenode string
                                                                  var string5199 = new GraceString(") ");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5202 = callmethodChecked(this, "y", []);
                                                                  var string5204 = new GraceString(",");
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5207 = callmethodChecked(this, "x", []);
                                                                  var string5209 = new GraceString("FramedArc at (");
                                                                  var opresult5211 = callmethodChecked(string5209, "++(1)", [1], call5207);
                                                                  var opresult5213 = callmethodChecked(opresult5211, "++(1)", [1], string5204);
                                                                  var opresult5215 = callmethodChecked(opresult5213, "++(1)", [1], call5202);
                                                                  var opresult5217 = callmethodChecked(opresult5215, "++(1)", [1], string5199);
                                                                  var opresult5219 = callmethodChecked(opresult5217, "++(1)", [1], opresult5197);
                                                                  var opresult5221 = callmethodChecked(opresult5219, "++(1)", [1], opresult5168);
                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5221)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method asString does not have " + 
                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                  return opresult5221;
                                                                };
                                                                func5153.paramCounts = [0];
                                                                obj5038.methods["asString"] = func5153;
                                                                func5153.definitionLine = 1714;
                                                                func5153.definitionModule = "rtobjectdraw";
                                                                setLineNumber(1690);    // compilenode identifier
                                                                // call case 6: other requests
                                                                setLineNumber(0);    // compilenode member
                                                                // call case 3: self.outer request
                                                                var call5224 = callmethodChecked(superDepth, "outer", [0]);
                                                                onSelf = true;
                                                                var call5225 = callmethodChecked(call5224, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                obj5038.superobj = call5225;
                                                                if (call5225.data) obj5038.data = call5225.data;
                                                                if (call5225.hasOwnProperty('_value'))
                                                                    obj5038._value = call5225._value;
                                                                setLineNumber(1691);    // compilenode identifier
                                                                // call case 4: self request
                                                                onSelf = true;
                                                                var call5227 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                superDepth = origSuperDepth;
                                                              };
                                                              obj_init_5038.apply(obj5038, []);
                                                              setLineNumber(1683);    // return value
                                                              if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj5038)))
                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                      new GraceString("result of method framedArcAt(_)size(_)from(_)to(_)on(_) does not have " + 
                                                                          callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                              return obj5038;
                                                            };
                                                            func5037.paramTypes = [];
                                                            func5037.paramTypes.push([]);
                                                            func5037.paramTypes.push([]);
                                                            func5037.paramTypes.push([type_Number, "startAngle"]);
                                                            func5037.paramTypes.push([type_Number, "endAngle"]);
                                                            func5037.paramTypes.push([]);
                                                            func5037.paramCounts = [1, 1, 1, 1, 1];
                                                            this.methods["framedArcAt(1)size(1)from(1)to(1)on(1)"] = func5037;
                                                            func5037.definitionLine = 1683;
                                                            func5037.definitionModule = "rtobjectdraw";
                                                              var func5228 = function(argcv) {    // method framedArcAt(_)size(_)from(_)to(_)on(_)$object(_)
                                                                var curarg = 1;
                                                                var var_location__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_dimensions__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_startAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_endAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_canvas__39__ = arguments[curarg];
                                                                curarg++;
                                                                var inheritingObject = arguments[curarg++];
                                                                // Start argument processing
                                                                curarg = 1;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in framedArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1684);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1685);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                            callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument processing
                                                                setModuleName("rtobjectdraw");
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var obj5229 = Grace_allocObject(null, "framedArcAt(1)size(1)from(1)to(1)on(1)");
                                                                obj5229.definitionModule = "rtobjectdraw";
                                                                obj5229.definitionLine = 1683;
                                                                var inho5229 = inheritingObject;
                                                                while (inho5229.superobj) inho5229 = inho5229.superobj;
                                                                inho5229.superobj = obj5229;
                                                                obj5229.data = inheritingObject.data;
                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                  obj5229._value = inheritingObject._value;
                                                                obj5229.outer = this;
                                                                var reader_rtobjectdraw_outer5230 = function() {
                                                                  return this.outer;
                                                                };
                                                                obj5229.methods["outer"] = reader_rtobjectdraw_outer5230;
                                                                var obj_init_5229 = function() {
                                                                  var origSuperDepth = superDepth;
                                                                  superDepth = obj5229;
                                                                  var func5231 = function(argcv) {    // method draw(_)
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    var var_ctx = arguments[curarg];
                                                                    curarg++;
                                                                    // Start argument checking
                                                                    curarg = 1;
                                                                    setLineNumber(1694);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument checking
                                                                    setModuleName("rtobjectdraw");
                                                                    setLineNumber(1695);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5233 = callmethodChecked(this, "color", []);
                                                                    var var_col = call5233;
                                                                    setLineNumber(1696);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5235 = callmethodChecked(var_ctx, "beginPath", []);
                                                                    setLineNumber(1697);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5237 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1698);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5241 = callmethodChecked(this, "width", []);
                                                                    var quotient5243 = callmethodChecked(call5241, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5246 = callmethodChecked(this, "x", []);
                                                                    var opresult5248 = callmethodChecked(call5246, "+(1)", [1], quotient5243);
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5251 = callmethodChecked(this, "height", []);
                                                                    var quotient5253 = callmethodChecked(call5251, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5256 = callmethodChecked(this, "y", []);
                                                                    var opresult5258 = callmethodChecked(call5256, "+(1)", [1], quotient5253);
                                                                    // call case 6: other requests
                                                                    var call5259 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5248, opresult5258);
                                                                    setLineNumber(1699);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5263 = callmethodChecked(this, "width", []);
                                                                    var quotient5265 = callmethodChecked(call5263, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5268 = callmethodChecked(this, "height", []);
                                                                    var quotient5270 = callmethodChecked(call5268, "/(1)", [1], new GraceNum(2));
                                                                    // call case 6: other requests
                                                                    var call5271 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5265, quotient5270);
                                                                    var if5272 = GraceDone;
                                                                    setLineNumber(1700);    // compilenode identifier
                                                                    var opresult5275 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                    if (Grace_isTrue(opresult5275)) {
                                                                      setLineNumber(1701);    // compilenode identifier
                                                                      var prod5280 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5282 = callmethodChecked(prod5280, "/(1)", [1], new GraceNum(180));
                                                                      var prod5286 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5288 = callmethodChecked(prod5286, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5289 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5282, quotient5288);
                                                                      if5272 = call5289;
                                                                    } else {
                                                                      setLineNumber(1703);    // compilenode identifier
                                                                      var prod5294 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5296 = callmethodChecked(prod5294, "/(1)", [1], new GraceNum(180));
                                                                      var prod5300 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5302 = callmethodChecked(prod5300, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5303 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5296, quotient5302);
                                                                      if5272 = call5303;
                                                                    }
                                                                    setLineNumber(1705);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5305 = callmethodChecked(var_ctx, "restore", []);
                                                                    setLineNumber(1706);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5307 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1707);    // compilenode string
                                                                    var string5309 = new GraceString(")");
                                                                    // call case 6: other requests
                                                                    var call5312 = callmethodChecked(var_col, "blue", []);
                                                                    var string5314 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5317 = callmethodChecked(var_col, "green", []);
                                                                    var string5319 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5322 = callmethodChecked(var_col, "red", []);
                                                                    var string5324 = new GraceString("rgb(");
                                                                    var opresult5326 = callmethodChecked(string5324, "++(1)", [1], call5322);
                                                                    var opresult5328 = callmethodChecked(opresult5326, "++(1)", [1], string5319);
                                                                    var opresult5330 = callmethodChecked(opresult5328, "++(1)", [1], call5317);
                                                                    var opresult5332 = callmethodChecked(opresult5330, "++(1)", [1], string5314);
                                                                    var opresult5334 = callmethodChecked(opresult5332, "++(1)", [1], call5312);
                                                                    var opresult5336 = callmethodChecked(opresult5334, "++(1)", [1], string5309);
                                                                    // call case 6: other requests
                                                                    var call5337 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult5336);
                                                                    setLineNumber(1708);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5339 = callmethodChecked(var_ctx, "stroke", []);
                                                                    setLineNumber(1709);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5341 = callmethodChecked(var_ctx, "restore", []);
                                                                    setLineNumber(1710);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5343 = callmethodChecked(var_ctx, "closePath", []);
                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5343)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method draw(_) does not have " + 
                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                    return call5343;
                                                                  };
                                                                  func5231.paramTypes = [];
                                                                  func5231.paramTypes.push([]);
                                                                  func5231.paramCounts = [1];
                                                                  obj5229.methods["draw(1)"] = func5231;
                                                                  func5231.definitionLine = 1694;
                                                                  func5231.definitionModule = "rtobjectdraw";
                                                                  var func5344 = function(argcv) {    // method asString
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    setModuleName("rtobjectdraw");
                                                                    setLineNumber(1717);    // compilenode string
                                                                    var string5345 = new GraceString(" degrees");
                                                                    var string5348 = new GraceString(" degrees to ");
                                                                    var string5351 = new GraceString("from ");
                                                                    var opresult5353 = callmethodChecked(string5351, "++(1)", [1], var_startAngle);
                                                                    var opresult5355 = callmethodChecked(opresult5353, "++(1)", [1], string5348);
                                                                    var opresult5357 = callmethodChecked(opresult5355, "++(1)", [1], var_endAngle);
                                                                    var opresult5359 = callmethodChecked(opresult5357, "++(1)", [1], string5345);
                                                                    setLineNumber(1716);    // compilenode string
                                                                    var string5361 = new GraceString(" going ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5364 = callmethodChecked(this, "color", []);
                                                                    var string5366 = new GraceString(", and color ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5369 = callmethodChecked(this, "width", []);
                                                                    var string5371 = new GraceString(", width ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5374 = callmethodChecked(this, "height", []);
                                                                    var string5376 = new GraceString("with height ");
                                                                    var opresult5378 = callmethodChecked(string5376, "++(1)", [1], call5374);
                                                                    var opresult5380 = callmethodChecked(opresult5378, "++(1)", [1], string5371);
                                                                    var opresult5382 = callmethodChecked(opresult5380, "++(1)", [1], call5369);
                                                                    var opresult5384 = callmethodChecked(opresult5382, "++(1)", [1], string5366);
                                                                    var opresult5386 = callmethodChecked(opresult5384, "++(1)", [1], call5364);
                                                                    var opresult5388 = callmethodChecked(opresult5386, "++(1)", [1], string5361);
                                                                    setLineNumber(1715);    // compilenode string
                                                                    var string5390 = new GraceString(") ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5393 = callmethodChecked(this, "y", []);
                                                                    var string5395 = new GraceString(",");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5398 = callmethodChecked(this, "x", []);
                                                                    var string5400 = new GraceString("FramedArc at (");
                                                                    var opresult5402 = callmethodChecked(string5400, "++(1)", [1], call5398);
                                                                    var opresult5404 = callmethodChecked(opresult5402, "++(1)", [1], string5395);
                                                                    var opresult5406 = callmethodChecked(opresult5404, "++(1)", [1], call5393);
                                                                    var opresult5408 = callmethodChecked(opresult5406, "++(1)", [1], string5390);
                                                                    var opresult5410 = callmethodChecked(opresult5408, "++(1)", [1], opresult5388);
                                                                    var opresult5412 = callmethodChecked(opresult5410, "++(1)", [1], opresult5359);
                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5412)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method asString does not have " + 
                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                    return opresult5412;
                                                                  };
                                                                  func5344.paramCounts = [0];
                                                                  obj5229.methods["asString"] = func5344;
                                                                  func5344.definitionLine = 1714;
                                                                  func5344.definitionModule = "rtobjectdraw";
                                                                  setLineNumber(1690);    // compilenode identifier
                                                                  // call case 6: other requests
                                                                  setLineNumber(0);    // compilenode member
                                                                  // call case 3: self.outer request
                                                                  var call5415 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onSelf = true;
                                                                  var call5416 = callmethodChecked(call5415, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                  obj5229.superobj = call5416;
                                                                  if (call5416.data) obj5229.data = call5416.data;
                                                                  if (call5416.hasOwnProperty('_value'))
                                                                      obj5229._value = call5416._value;
                                                                  setLineNumber(1691);    // compilenode identifier
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5418 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                  superDepth = origSuperDepth;
                                                                };
                                                                obj_init_5229.apply(inheritingObject, []);
                                                                return obj5229;
                                                                };
                                                                func5228.paramTypes = [];
                                                                func5228.paramTypes.push([]);
                                                                func5228.paramTypes.push([]);
                                                                func5228.paramTypes.push([type_Number, "startAngle"]);
                                                                func5228.paramTypes.push([type_Number, "endAngle"]);
                                                                func5228.paramTypes.push([]);
                                                                this.methods["framedArcAt(1)size(1)from(1)to(1)on(1)$object(1)"] = func5228;
                                                              setLineNumber(1722);    // compilenode method
                                                              var func5419 = function(argcv) {    // method filledArcAt(_)size(_)from(_)to(_)on(_)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_location__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_dimensions__39__ = arguments[curarg];
                                                                curarg++;
                                                                var var_startAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_endAngle = arguments[curarg];
                                                                curarg++;
                                                                var var_canvas__39__ = arguments[curarg];
                                                                curarg++;
                                                                // Start argument checking
                                                                curarg = 1;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in filledArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                            callmethod(var_Point, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1723);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                            callmethod(var_Number, "asString", [0])._value + "."));
                                                                curarg++;
                                                                setLineNumber(1724);    // compilenode identifier
                                                                if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                            callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                curarg++;
                                                                // End argument checking
                                                                setModuleName("rtobjectdraw");
                                                                setLineNumber(1722);    // compilenode object
                                                                var obj5420 = Grace_allocObject(null, "filledArcAt(_)size(_)from(_)to(_)on(_)");
                                                                obj5420.definitionModule = "rtobjectdraw";
                                                                obj5420.definitionLine = 1722;
                                                                obj5420.outer = this;
                                                                var reader_rtobjectdraw_outer5421 = function() {
                                                                  return this.outer;
                                                                };
                                                                obj5420.methods["outer"] = reader_rtobjectdraw_outer5421;
                                                                var obj_init_5420 = function() {
                                                                  var origSuperDepth = superDepth;
                                                                  superDepth = obj5420;
                                                                  var func5422 = function(argcv) {    // method draw(_)
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    var var_ctx = arguments[curarg];
                                                                    curarg++;
                                                                    // Start argument checking
                                                                    curarg = 1;
                                                                    setLineNumber(1734);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument checking
                                                                    setModuleName("rtobjectdraw");
                                                                    setLineNumber(1735);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5424 = callmethodChecked(this, "color", []);
                                                                    var var_col = call5424;
                                                                    setLineNumber(1736);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5426 = callmethodChecked(var_ctx, "beginPath", []);
                                                                    setLineNumber(1737);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5428 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1738);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5432 = callmethodChecked(this, "width", []);
                                                                    var quotient5434 = callmethodChecked(call5432, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5437 = callmethodChecked(this, "x", []);
                                                                    var opresult5439 = callmethodChecked(call5437, "+(1)", [1], quotient5434);
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5442 = callmethodChecked(this, "height", []);
                                                                    var quotient5444 = callmethodChecked(call5442, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5447 = callmethodChecked(this, "y", []);
                                                                    var opresult5449 = callmethodChecked(call5447, "+(1)", [1], quotient5444);
                                                                    // call case 6: other requests
                                                                    var call5450 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5439, opresult5449);
                                                                    setLineNumber(1739);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5454 = callmethodChecked(this, "width", []);
                                                                    var quotient5456 = callmethodChecked(call5454, "/(1)", [1], new GraceNum(2));
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5459 = callmethodChecked(this, "height", []);
                                                                    var quotient5461 = callmethodChecked(call5459, "/(1)", [1], new GraceNum(2));
                                                                    // call case 6: other requests
                                                                    var call5462 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5456, quotient5461);
                                                                    var if5463 = GraceDone;
                                                                    setLineNumber(1740);    // compilenode identifier
                                                                    var opresult5466 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                    if (Grace_isTrue(opresult5466)) {
                                                                      setLineNumber(1741);    // compilenode identifier
                                                                      var prod5471 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5473 = callmethodChecked(prod5471, "/(1)", [1], new GraceNum(180));
                                                                      var prod5477 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5479 = callmethodChecked(prod5477, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5480 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5473, quotient5479);
                                                                      if5463 = call5480;
                                                                    } else {
                                                                      setLineNumber(1743);    // compilenode identifier
                                                                      var prod5485 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                      var quotient5487 = callmethodChecked(prod5485, "/(1)", [1], new GraceNum(180));
                                                                      var prod5491 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                      var quotient5493 = callmethodChecked(prod5491, "/(1)", [1], new GraceNum(180));
                                                                      // call case 6: other requests
                                                                      var call5494 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5487, quotient5493);
                                                                      if5463 = call5494;
                                                                    }
                                                                    setLineNumber(1745);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5496 = callmethodChecked(var_ctx, "restore", []);
                                                                    setLineNumber(1746);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5498 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1747);    // compilenode string
                                                                    var string5500 = new GraceString(")");
                                                                    // call case 6: other requests
                                                                    var call5503 = callmethodChecked(var_col, "blue", []);
                                                                    var string5505 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5508 = callmethodChecked(var_col, "green", []);
                                                                    var string5510 = new GraceString(", ");
                                                                    // call case 6: other requests
                                                                    var call5513 = callmethodChecked(var_col, "red", []);
                                                                    var string5515 = new GraceString("rgb(");
                                                                    var opresult5517 = callmethodChecked(string5515, "++(1)", [1], call5513);
                                                                    var opresult5519 = callmethodChecked(opresult5517, "++(1)", [1], string5510);
                                                                    var opresult5521 = callmethodChecked(opresult5519, "++(1)", [1], call5508);
                                                                    var opresult5523 = callmethodChecked(opresult5521, "++(1)", [1], string5505);
                                                                    var opresult5525 = callmethodChecked(opresult5523, "++(1)", [1], call5503);
                                                                    var opresult5527 = callmethodChecked(opresult5525, "++(1)", [1], string5500);
                                                                    // call case 6: other requests
                                                                    var call5528 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult5527);
                                                                    setLineNumber(1748);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5530 = callmethodChecked(var_ctx, "fill", []);
                                                                    setLineNumber(1749);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5532 = callmethodChecked(var_ctx, "save", []);
                                                                    setLineNumber(1750);    // compilenode member
                                                                    // call case 6: other requests
                                                                    var call5534 = callmethodChecked(var_ctx, "closePath", []);
                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5534)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method draw(_) does not have " + 
                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                    return call5534;
                                                                  };
                                                                  func5422.paramTypes = [];
                                                                  func5422.paramTypes.push([]);
                                                                  func5422.paramCounts = [1];
                                                                  obj5420.methods["draw(1)"] = func5422;
                                                                  func5422.definitionLine = 1734;
                                                                  func5422.definitionModule = "rtobjectdraw";
                                                                  var func5535 = function(argcv) {    // method asString
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    setModuleName("rtobjectdraw");
                                                                    setLineNumber(1757);    // compilenode string
                                                                    var string5536 = new GraceString(" degrees");
                                                                    var string5539 = new GraceString(" degrees to ");
                                                                    var string5542 = new GraceString("from ");
                                                                    var opresult5544 = callmethodChecked(string5542, "++(1)", [1], var_startAngle);
                                                                    var opresult5546 = callmethodChecked(opresult5544, "++(1)", [1], string5539);
                                                                    var opresult5548 = callmethodChecked(opresult5546, "++(1)", [1], var_endAngle);
                                                                    var opresult5550 = callmethodChecked(opresult5548, "++(1)", [1], string5536);
                                                                    setLineNumber(1756);    // compilenode string
                                                                    var string5552 = new GraceString(" going ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5555 = callmethodChecked(this, "color", []);
                                                                    var string5557 = new GraceString(", and color ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5560 = callmethodChecked(this, "width", []);
                                                                    var string5562 = new GraceString(", width ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5565 = callmethodChecked(this, "height", []);
                                                                    var string5567 = new GraceString("with height ");
                                                                    var opresult5569 = callmethodChecked(string5567, "++(1)", [1], call5565);
                                                                    var opresult5571 = callmethodChecked(opresult5569, "++(1)", [1], string5562);
                                                                    var opresult5573 = callmethodChecked(opresult5571, "++(1)", [1], call5560);
                                                                    var opresult5575 = callmethodChecked(opresult5573, "++(1)", [1], string5557);
                                                                    var opresult5577 = callmethodChecked(opresult5575, "++(1)", [1], call5555);
                                                                    var opresult5579 = callmethodChecked(opresult5577, "++(1)", [1], string5552);
                                                                    setLineNumber(1755);    // compilenode string
                                                                    var string5581 = new GraceString(") ");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5584 = callmethodChecked(this, "y", []);
                                                                    var string5586 = new GraceString(",");
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5589 = callmethodChecked(this, "x", []);
                                                                    var string5591 = new GraceString("FilledArc at (");
                                                                    var opresult5593 = callmethodChecked(string5591, "++(1)", [1], call5589);
                                                                    var opresult5595 = callmethodChecked(opresult5593, "++(1)", [1], string5586);
                                                                    var opresult5597 = callmethodChecked(opresult5595, "++(1)", [1], call5584);
                                                                    var opresult5599 = callmethodChecked(opresult5597, "++(1)", [1], string5581);
                                                                    var opresult5601 = callmethodChecked(opresult5599, "++(1)", [1], opresult5579);
                                                                    var opresult5603 = callmethodChecked(opresult5601, "++(1)", [1], opresult5550);
                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5603)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method asString does not have " + 
                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                    return opresult5603;
                                                                  };
                                                                  func5535.paramCounts = [0];
                                                                  obj5420.methods["asString"] = func5535;
                                                                  func5535.definitionLine = 1754;
                                                                  func5535.definitionModule = "rtobjectdraw";
                                                                  setLineNumber(1730);    // compilenode identifier
                                                                  // call case 6: other requests
                                                                  setLineNumber(0);    // compilenode member
                                                                  // call case 3: self.outer request
                                                                  var call5606 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onSelf = true;
                                                                  var call5607 = callmethodChecked(call5606, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                  obj5420.superobj = call5607;
                                                                  if (call5607.data) obj5420.data = call5607.data;
                                                                  if (call5607.hasOwnProperty('_value'))
                                                                      obj5420._value = call5607._value;
                                                                  setLineNumber(1731);    // compilenode identifier
                                                                  // call case 4: self request
                                                                  onSelf = true;
                                                                  var call5609 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                  superDepth = origSuperDepth;
                                                                };
                                                                obj_init_5420.apply(obj5420, []);
                                                                setLineNumber(1722);    // return value
                                                                if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj5420)))
                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                        new GraceString("result of method filledArcAt(_)size(_)from(_)to(_)on(_) does not have " + 
                                                                            callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                                return obj5420;
                                                              };
                                                              func5419.paramTypes = [];
                                                              func5419.paramTypes.push([]);
                                                              func5419.paramTypes.push([]);
                                                              func5419.paramTypes.push([type_Number, "startAngle"]);
                                                              func5419.paramTypes.push([type_Number, "endAngle"]);
                                                              func5419.paramTypes.push([]);
                                                              func5419.paramCounts = [1, 1, 1, 1, 1];
                                                              this.methods["filledArcAt(1)size(1)from(1)to(1)on(1)"] = func5419;
                                                              func5419.definitionLine = 1722;
                                                              func5419.definitionModule = "rtobjectdraw";
                                                                var func5610 = function(argcv) {    // method filledArcAt(_)size(_)from(_)to(_)on(_)$object(_)
                                                                  var curarg = 1;
                                                                  var var_location__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_dimensions__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_startAngle = arguments[curarg];
                                                                  curarg++;
                                                                  var var_endAngle = arguments[curarg];
                                                                  curarg++;
                                                                  var var_canvas__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var inheritingObject = arguments[curarg++];
                                                                  // Start argument processing
                                                                  curarg = 1;
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in filledArcAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1723);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in from (arg list 3), which corresponds to parameter startAngle, does not have " + 
                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in to (arg list 4), which corresponds to parameter endAngle, does not have " + 
                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1724);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in on (arg list 5), which corresponds to parameter canvas', does not have " + 
                                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument processing
                                                                  setModuleName("rtobjectdraw");
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var obj5611 = Grace_allocObject(null, "filledArcAt(1)size(1)from(1)to(1)on(1)");
                                                                  obj5611.definitionModule = "rtobjectdraw";
                                                                  obj5611.definitionLine = 1722;
                                                                  var inho5611 = inheritingObject;
                                                                  while (inho5611.superobj) inho5611 = inho5611.superobj;
                                                                  inho5611.superobj = obj5611;
                                                                  obj5611.data = inheritingObject.data;
                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                    obj5611._value = inheritingObject._value;
                                                                  obj5611.outer = this;
                                                                  var reader_rtobjectdraw_outer5612 = function() {
                                                                    return this.outer;
                                                                  };
                                                                  obj5611.methods["outer"] = reader_rtobjectdraw_outer5612;
                                                                  var obj_init_5611 = function() {
                                                                    var origSuperDepth = superDepth;
                                                                    superDepth = obj5611;
                                                                    var func5613 = function(argcv) {    // method draw(_)
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      var var_ctx = arguments[curarg];
                                                                      curarg++;
                                                                      // Start argument checking
                                                                      curarg = 1;
                                                                      setLineNumber(1734);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument checking
                                                                      setModuleName("rtobjectdraw");
                                                                      setLineNumber(1735);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5615 = callmethodChecked(this, "color", []);
                                                                      var var_col = call5615;
                                                                      setLineNumber(1736);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5617 = callmethodChecked(var_ctx, "beginPath", []);
                                                                      setLineNumber(1737);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5619 = callmethodChecked(var_ctx, "save", []);
                                                                      setLineNumber(1738);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5623 = callmethodChecked(this, "width", []);
                                                                      var quotient5625 = callmethodChecked(call5623, "/(1)", [1], new GraceNum(2));
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5628 = callmethodChecked(this, "x", []);
                                                                      var opresult5630 = callmethodChecked(call5628, "+(1)", [1], quotient5625);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5633 = callmethodChecked(this, "height", []);
                                                                      var quotient5635 = callmethodChecked(call5633, "/(1)", [1], new GraceNum(2));
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5638 = callmethodChecked(this, "y", []);
                                                                      var opresult5640 = callmethodChecked(call5638, "+(1)", [1], quotient5635);
                                                                      // call case 6: other requests
                                                                      var call5641 = callmethodChecked(var_ctx, "translate(2)", [2], opresult5630, opresult5640);
                                                                      setLineNumber(1739);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5645 = callmethodChecked(this, "width", []);
                                                                      var quotient5647 = callmethodChecked(call5645, "/(1)", [1], new GraceNum(2));
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5650 = callmethodChecked(this, "height", []);
                                                                      var quotient5652 = callmethodChecked(call5650, "/(1)", [1], new GraceNum(2));
                                                                      // call case 6: other requests
                                                                      var call5653 = callmethodChecked(var_ctx, "scale(2)", [2], quotient5647, quotient5652);
                                                                      var if5654 = GraceDone;
                                                                      setLineNumber(1740);    // compilenode identifier
                                                                      var opresult5657 = callmethodChecked(var_startAngle, "\u2264(1)", [1], var_endAngle);
                                                                      if (Grace_isTrue(opresult5657)) {
                                                                        setLineNumber(1741);    // compilenode identifier
                                                                        var prod5662 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                        var quotient5664 = callmethodChecked(prod5662, "/(1)", [1], new GraceNum(180));
                                                                        var prod5668 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                        var quotient5670 = callmethodChecked(prod5668, "/(1)", [1], new GraceNum(180));
                                                                        // call case 6: other requests
                                                                        var call5671 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5664, quotient5670);
                                                                        if5654 = call5671;
                                                                      } else {
                                                                        setLineNumber(1743);    // compilenode identifier
                                                                        var prod5676 = callmethodChecked(var_endAngle, "*(1)", [1], var_pi);
                                                                        var quotient5678 = callmethodChecked(prod5676, "/(1)", [1], new GraceNum(180));
                                                                        var prod5682 = callmethodChecked(var_startAngle, "*(1)", [1], var_pi);
                                                                        var quotient5684 = callmethodChecked(prod5682, "/(1)", [1], new GraceNum(180));
                                                                        // call case 6: other requests
                                                                        var call5685 = callmethodChecked(var_ctx, "arc(5)", [5], new GraceNum(0), new GraceNum(0), new GraceNum(1), quotient5678, quotient5684);
                                                                        if5654 = call5685;
                                                                      }
                                                                      setLineNumber(1745);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5687 = callmethodChecked(var_ctx, "restore", []);
                                                                      setLineNumber(1746);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5689 = callmethodChecked(var_ctx, "save", []);
                                                                      setLineNumber(1747);    // compilenode string
                                                                      var string5691 = new GraceString(")");
                                                                      // call case 6: other requests
                                                                      var call5694 = callmethodChecked(var_col, "blue", []);
                                                                      var string5696 = new GraceString(", ");
                                                                      // call case 6: other requests
                                                                      var call5699 = callmethodChecked(var_col, "green", []);
                                                                      var string5701 = new GraceString(", ");
                                                                      // call case 6: other requests
                                                                      var call5704 = callmethodChecked(var_col, "red", []);
                                                                      var string5706 = new GraceString("rgb(");
                                                                      var opresult5708 = callmethodChecked(string5706, "++(1)", [1], call5704);
                                                                      var opresult5710 = callmethodChecked(opresult5708, "++(1)", [1], string5701);
                                                                      var opresult5712 = callmethodChecked(opresult5710, "++(1)", [1], call5699);
                                                                      var opresult5714 = callmethodChecked(opresult5712, "++(1)", [1], string5696);
                                                                      var opresult5716 = callmethodChecked(opresult5714, "++(1)", [1], call5694);
                                                                      var opresult5718 = callmethodChecked(opresult5716, "++(1)", [1], string5691);
                                                                      // call case 6: other requests
                                                                      var call5719 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult5718);
                                                                      setLineNumber(1748);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5721 = callmethodChecked(var_ctx, "fill", []);
                                                                      setLineNumber(1749);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5723 = callmethodChecked(var_ctx, "save", []);
                                                                      setLineNumber(1750);    // compilenode member
                                                                      // call case 6: other requests
                                                                      var call5725 = callmethodChecked(var_ctx, "closePath", []);
                                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5725)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method draw(_) does not have " + 
                                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                                      return call5725;
                                                                    };
                                                                    func5613.paramTypes = [];
                                                                    func5613.paramTypes.push([]);
                                                                    func5613.paramCounts = [1];
                                                                    obj5611.methods["draw(1)"] = func5613;
                                                                    func5613.definitionLine = 1734;
                                                                    func5613.definitionModule = "rtobjectdraw";
                                                                    var func5726 = function(argcv) {    // method asString
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      setModuleName("rtobjectdraw");
                                                                      setLineNumber(1757);    // compilenode string
                                                                      var string5727 = new GraceString(" degrees");
                                                                      var string5730 = new GraceString(" degrees to ");
                                                                      var string5733 = new GraceString("from ");
                                                                      var opresult5735 = callmethodChecked(string5733, "++(1)", [1], var_startAngle);
                                                                      var opresult5737 = callmethodChecked(opresult5735, "++(1)", [1], string5730);
                                                                      var opresult5739 = callmethodChecked(opresult5737, "++(1)", [1], var_endAngle);
                                                                      var opresult5741 = callmethodChecked(opresult5739, "++(1)", [1], string5727);
                                                                      setLineNumber(1756);    // compilenode string
                                                                      var string5743 = new GraceString(" going ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5746 = callmethodChecked(this, "color", []);
                                                                      var string5748 = new GraceString(", and color ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5751 = callmethodChecked(this, "width", []);
                                                                      var string5753 = new GraceString(", width ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5756 = callmethodChecked(this, "height", []);
                                                                      var string5758 = new GraceString("with height ");
                                                                      var opresult5760 = callmethodChecked(string5758, "++(1)", [1], call5756);
                                                                      var opresult5762 = callmethodChecked(opresult5760, "++(1)", [1], string5753);
                                                                      var opresult5764 = callmethodChecked(opresult5762, "++(1)", [1], call5751);
                                                                      var opresult5766 = callmethodChecked(opresult5764, "++(1)", [1], string5748);
                                                                      var opresult5768 = callmethodChecked(opresult5766, "++(1)", [1], call5746);
                                                                      var opresult5770 = callmethodChecked(opresult5768, "++(1)", [1], string5743);
                                                                      setLineNumber(1755);    // compilenode string
                                                                      var string5772 = new GraceString(") ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5775 = callmethodChecked(this, "y", []);
                                                                      var string5777 = new GraceString(",");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5780 = callmethodChecked(this, "x", []);
                                                                      var string5782 = new GraceString("FilledArc at (");
                                                                      var opresult5784 = callmethodChecked(string5782, "++(1)", [1], call5780);
                                                                      var opresult5786 = callmethodChecked(opresult5784, "++(1)", [1], string5777);
                                                                      var opresult5788 = callmethodChecked(opresult5786, "++(1)", [1], call5775);
                                                                      var opresult5790 = callmethodChecked(opresult5788, "++(1)", [1], string5772);
                                                                      var opresult5792 = callmethodChecked(opresult5790, "++(1)", [1], opresult5770);
                                                                      var opresult5794 = callmethodChecked(opresult5792, "++(1)", [1], opresult5741);
                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5794)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method asString does not have " + 
                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                      return opresult5794;
                                                                    };
                                                                    func5726.paramCounts = [0];
                                                                    obj5611.methods["asString"] = func5726;
                                                                    func5726.definitionLine = 1754;
                                                                    func5726.definitionModule = "rtobjectdraw";
                                                                    setLineNumber(1730);    // compilenode identifier
                                                                    // call case 6: other requests
                                                                    setLineNumber(0);    // compilenode member
                                                                    // call case 3: self.outer request
                                                                    var call5797 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onSelf = true;
                                                                    var call5798 = callmethodChecked(call5797, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                    obj5611.superobj = call5798;
                                                                    if (call5798.data) obj5611.data = call5798.data;
                                                                    if (call5798.hasOwnProperty('_value'))
                                                                        obj5611._value = call5798._value;
                                                                    setLineNumber(1731);    // compilenode identifier
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5800 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                    superDepth = origSuperDepth;
                                                                  };
                                                                  obj_init_5611.apply(inheritingObject, []);
                                                                  return obj5611;
                                                                  };
                                                                  func5610.paramTypes = [];
                                                                  func5610.paramTypes.push([]);
                                                                  func5610.paramTypes.push([]);
                                                                  func5610.paramTypes.push([type_Number, "startAngle"]);
                                                                  func5610.paramTypes.push([type_Number, "endAngle"]);
                                                                  func5610.paramTypes.push([]);
                                                                  this.methods["filledArcAt(1)size(1)from(1)to(1)on(1)$object(1)"] = func5610;
                                                                setLineNumber(1804);    // compilenode method
                                                                var func5801 = function(argcv) {    // method drawableImageAt(_)size(_)url(_)on(_)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_location__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_dimensions__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  var var_url = arguments[curarg];
                                                                  curarg++;
                                                                  var var_canvas__39__ = arguments[curarg];
                                                                  curarg++;
                                                                  // Start argument checking
                                                                  curarg = 1;
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in drawableImageAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1805);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                              callmethod(var_Point, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1806);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in url (arg list 3), which corresponds to parameter url, does not have " + 
                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  setLineNumber(1807);    // compilenode identifier
                                                                  if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                              callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                  curarg++;
                                                                  // End argument checking
                                                                  setModuleName("rtobjectdraw");
                                                                  setLineNumber(1804);    // compilenode object
                                                                  var obj5802 = Grace_allocObject(null, "drawableImageAt(_)size(_)url(_)on(_)");
                                                                  obj5802.definitionModule = "rtobjectdraw";
                                                                  obj5802.definitionLine = 1804;
                                                                  obj5802.outer = this;
                                                                  var reader_rtobjectdraw_outer5803 = function() {
                                                                    return this.outer;
                                                                  };
                                                                  obj5802.methods["outer"] = reader_rtobjectdraw_outer5803;
                                                                  var obj_init_5802 = function() {
                                                                    var origSuperDepth = superDepth;
                                                                    superDepth = obj5802;
                                                                    var func5804 = function(argcv) {    // method draw(_)
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      var var_ctx = arguments[curarg];
                                                                      curarg++;
                                                                      // Start argument checking
                                                                      curarg = 1;
                                                                      setLineNumber(1821);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                  callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument checking
                                                                      setModuleName("rtobjectdraw");
                                                                      setLineNumber(1822);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5807 = callmethodChecked(this, "theImage", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5809 = callmethodChecked(this, "x", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5811 = callmethodChecked(this, "y", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5813 = callmethodChecked(this, "width", []);
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5815 = callmethodChecked(this, "height", []);
                                                                      // call case 6: other requests
                                                                      var call5816 = callmethodChecked(var_ctx, "drawImage(5)", [5], call5807, call5809, call5811, call5813, call5815);
                                                                      if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5816)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method draw(_) does not have " + 
                                                                                  callmethod(var_Done, "asString", [0])._value + "."));
                                                                      return call5816;
                                                                    };
                                                                    func5804.paramTypes = [];
                                                                    func5804.paramTypes.push([]);
                                                                    func5804.paramCounts = [1];
                                                                    obj5802.methods["draw(1)"] = func5804;
                                                                    func5804.definitionLine = 1821;
                                                                    func5804.definitionModule = "rtobjectdraw";
                                                                    var func5817 = function(argcv) {    // method asString
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      setModuleName("rtobjectdraw");
                                                                      setLineNumber(1829);    // compilenode string
                                                                      var string5818 = new GraceString("");
                                                                      var string5821 = new GraceString("from url ");
                                                                      var opresult5823 = callmethodChecked(string5821, "++(1)", [1], var_url);
                                                                      var opresult5825 = callmethodChecked(opresult5823, "++(1)", [1], string5818);
                                                                      setLineNumber(1828);    // compilenode string
                                                                      var string5827 = new GraceString(", ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5830 = callmethodChecked(this, "width", []);
                                                                      var string5832 = new GraceString(", width ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5835 = callmethodChecked(this, "height", []);
                                                                      var string5837 = new GraceString("with height ");
                                                                      var opresult5839 = callmethodChecked(string5837, "++(1)", [1], call5835);
                                                                      var opresult5841 = callmethodChecked(opresult5839, "++(1)", [1], string5832);
                                                                      var opresult5843 = callmethodChecked(opresult5841, "++(1)", [1], call5830);
                                                                      var opresult5845 = callmethodChecked(opresult5843, "++(1)", [1], string5827);
                                                                      setLineNumber(1827);    // compilenode string
                                                                      var string5847 = new GraceString(") ");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5850 = callmethodChecked(this, "y", []);
                                                                      var string5852 = new GraceString(",");
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5855 = callmethodChecked(this, "x", []);
                                                                      var string5857 = new GraceString("DrawableImage at (");
                                                                      var opresult5859 = callmethodChecked(string5857, "++(1)", [1], call5855);
                                                                      var opresult5861 = callmethodChecked(opresult5859, "++(1)", [1], string5852);
                                                                      var opresult5863 = callmethodChecked(opresult5861, "++(1)", [1], call5850);
                                                                      var opresult5865 = callmethodChecked(opresult5863, "++(1)", [1], string5847);
                                                                      var opresult5867 = callmethodChecked(opresult5865, "++(1)", [1], opresult5845);
                                                                      var opresult5869 = callmethodChecked(opresult5867, "++(1)", [1], opresult5825);
                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5869)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method asString does not have " + 
                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                      return opresult5869;
                                                                    };
                                                                    func5817.paramCounts = [0];
                                                                    obj5802.methods["asString"] = func5817;
                                                                    func5817.definitionLine = 1826;
                                                                    func5817.definitionModule = "rtobjectdraw";
                                                                    setLineNumber(1811);    // compilenode identifier
                                                                    // call case 6: other requests
                                                                    setLineNumber(0);    // compilenode member
                                                                    // call case 3: self.outer request
                                                                    var call5872 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onSelf = true;
                                                                    var call5873 = callmethodChecked(call5872, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                    obj5802.superobj = call5873;
                                                                    if (call5873.data) obj5802.data = call5873.data;
                                                                    if (call5873.hasOwnProperty('_value'))
                                                                        obj5802._value = call5873._value;
                                                                    setLineNumber(1813);    // compilenode string
                                                                    var string5875 = new GraceString("img");
                                                                    // call case 6: other requests
                                                                    var call5876 = callmethodChecked(var_document, "createElement(1)", [1], string5875);
                                                                    obj5802.data["theImage"] = call5876;
                                                                    var reader_rtobjectdraw_theImage5877 = function() {
                                                                      return this.data["theImage"];
                                                                    };
                                                                    obj5802.methods["theImage"] = reader_rtobjectdraw_theImage5877;
                                                                    obj5802.data["theImage"] = call5876;
                                                                    var writer_rtobjectdraw_theImage5877 = function(argcv, o) {
                                                                      this.data["theImage"] = o;
                                                                      return GraceDone;
                                                                    };
                                                                    obj5802.methods["theImage:=(1)"] = writer_rtobjectdraw_theImage5877;
                                                                    reader_rtobjectdraw_theImage5877.confidential = true;
                                                                    writer_rtobjectdraw_theImage5877.confidential = true;
                                                                    obj5802.mutable = true;
                                                                    setLineNumber(1814);    // compilenode identifier
                                                                    // call case 6: other requests
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5880 = callmethodChecked(this, "theImage", []);
                                                                    var call5881 = callmethodChecked(call5880, "src:=(1)", [1], var_url);
                                                                    setLineNumber(1816);    // compilenode string
                                                                    var string5883 = new GraceString("load");
                                                                    var block5884 = new GraceBlock(this, 1816, 1);
                                                                    setLineNumber(1);    // compilenode identifier
                                                                    block5884.real = function(var___95____95__24) {
                                                                      setLineNumber(1817);    // compilenode identifier
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5886 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                      return call5886;
                                                                    };
                                                                    // call case 6: other requests
                                                                    setLineNumber(1816);    // compilenode member
                                                                    // call case 4: self request
                                                                    onSelf = true;
                                                                    var call5888 = callmethodChecked(this, "theImage", []);
                                                                    var call5889 = callmethodChecked(call5888, "addEventListener(2)", [2], string5883, block5884);
                                                                    superDepth = origSuperDepth;
                                                                  };
                                                                  obj_init_5802.apply(obj5802, []);
                                                                  setLineNumber(1804);    // return value
                                                                  if (!Grace_isTrue(callmethod(var_Graphic2D, "match(1)", [1], obj5802)))
                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                          new GraceString("result of method drawableImageAt(_)size(_)url(_)on(_) does not have " + 
                                                                              callmethod(var_Graphic2D, "asString", [0])._value + "."));
                                                                  return obj5802;
                                                                };
                                                                func5801.paramTypes = [];
                                                                func5801.paramTypes.push([]);
                                                                func5801.paramTypes.push([]);
                                                                func5801.paramTypes.push([type_String, "url"]);
                                                                func5801.paramTypes.push([]);
                                                                func5801.paramCounts = [1, 1, 1, 1];
                                                                this.methods["drawableImageAt(1)size(1)url(1)on(1)"] = func5801;
                                                                func5801.definitionLine = 1804;
                                                                func5801.definitionModule = "rtobjectdraw";
                                                                  var func5890 = function(argcv) {    // method drawableImageAt(_)size(_)url(_)on(_)$object(_)
                                                                    var curarg = 1;
                                                                    var var_location__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_dimensions__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_url = arguments[curarg];
                                                                    curarg++;
                                                                    var var_canvas__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var inheritingObject = arguments[curarg++];
                                                                    // Start argument processing
                                                                    curarg = 1;
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in drawableImageAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1805);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in size (arg list 2), which corresponds to parameter dimensions', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1806);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in url (arg list 3), which corresponds to parameter url, does not have " + 
                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1807);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument processing
                                                                    setModuleName("rtobjectdraw");
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var obj5891 = Grace_allocObject(null, "drawableImageAt(1)size(1)url(1)on(1)");
                                                                    obj5891.definitionModule = "rtobjectdraw";
                                                                    obj5891.definitionLine = 1804;
                                                                    var inho5891 = inheritingObject;
                                                                    while (inho5891.superobj) inho5891 = inho5891.superobj;
                                                                    inho5891.superobj = obj5891;
                                                                    obj5891.data = inheritingObject.data;
                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                      obj5891._value = inheritingObject._value;
                                                                    obj5891.outer = this;
                                                                    var reader_rtobjectdraw_outer5892 = function() {
                                                                      return this.outer;
                                                                    };
                                                                    obj5891.methods["outer"] = reader_rtobjectdraw_outer5892;
                                                                    var obj_init_5891 = function() {
                                                                      var origSuperDepth = superDepth;
                                                                      superDepth = obj5891;
                                                                      var func5893 = function(argcv) {    // method draw(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_ctx = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1821);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                    callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1822);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5896 = callmethodChecked(this, "theImage", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5898 = callmethodChecked(this, "x", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5900 = callmethodChecked(this, "y", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5902 = callmethodChecked(this, "width", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5904 = callmethodChecked(this, "height", []);
                                                                        // call case 6: other requests
                                                                        var call5905 = callmethodChecked(var_ctx, "drawImage(5)", [5], call5896, call5898, call5900, call5902, call5904);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5905)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method draw(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5905;
                                                                      };
                                                                      func5893.paramTypes = [];
                                                                      func5893.paramTypes.push([]);
                                                                      func5893.paramCounts = [1];
                                                                      obj5891.methods["draw(1)"] = func5893;
                                                                      func5893.definitionLine = 1821;
                                                                      func5893.definitionModule = "rtobjectdraw";
                                                                      var func5906 = function(argcv) {    // method asString
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1829);    // compilenode string
                                                                        var string5907 = new GraceString("");
                                                                        var string5910 = new GraceString("from url ");
                                                                        var opresult5912 = callmethodChecked(string5910, "++(1)", [1], var_url);
                                                                        var opresult5914 = callmethodChecked(opresult5912, "++(1)", [1], string5907);
                                                                        setLineNumber(1828);    // compilenode string
                                                                        var string5916 = new GraceString(", ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5919 = callmethodChecked(this, "width", []);
                                                                        var string5921 = new GraceString(", width ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5924 = callmethodChecked(this, "height", []);
                                                                        var string5926 = new GraceString("with height ");
                                                                        var opresult5928 = callmethodChecked(string5926, "++(1)", [1], call5924);
                                                                        var opresult5930 = callmethodChecked(opresult5928, "++(1)", [1], string5921);
                                                                        var opresult5932 = callmethodChecked(opresult5930, "++(1)", [1], call5919);
                                                                        var opresult5934 = callmethodChecked(opresult5932, "++(1)", [1], string5916);
                                                                        setLineNumber(1827);    // compilenode string
                                                                        var string5936 = new GraceString(") ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5939 = callmethodChecked(this, "y", []);
                                                                        var string5941 = new GraceString(",");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5944 = callmethodChecked(this, "x", []);
                                                                        var string5946 = new GraceString("DrawableImage at (");
                                                                        var opresult5948 = callmethodChecked(string5946, "++(1)", [1], call5944);
                                                                        var opresult5950 = callmethodChecked(opresult5948, "++(1)", [1], string5941);
                                                                        var opresult5952 = callmethodChecked(opresult5950, "++(1)", [1], call5939);
                                                                        var opresult5954 = callmethodChecked(opresult5952, "++(1)", [1], string5936);
                                                                        var opresult5956 = callmethodChecked(opresult5954, "++(1)", [1], opresult5934);
                                                                        var opresult5958 = callmethodChecked(opresult5956, "++(1)", [1], opresult5914);
                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult5958)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method asString does not have " + 
                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                        return opresult5958;
                                                                      };
                                                                      func5906.paramCounts = [0];
                                                                      obj5891.methods["asString"] = func5906;
                                                                      func5906.definitionLine = 1826;
                                                                      func5906.definitionModule = "rtobjectdraw";
                                                                      setLineNumber(1811);    // compilenode identifier
                                                                      // call case 6: other requests
                                                                      setLineNumber(0);    // compilenode member
                                                                      // call case 3: self.outer request
                                                                      var call5961 = callmethodChecked(superDepth, "outer", [0]);
                                                                      onSelf = true;
                                                                      var call5962 = callmethodChecked(call5961, "resizable2DAt(1)size(1)on(1)$object(1)", [1, 1, 1, 1], var_location__39__, var_dimensions__39__, var_canvas__39__, this);
                                                                      obj5891.superobj = call5962;
                                                                      if (call5962.data) obj5891.data = call5962.data;
                                                                      if (call5962.hasOwnProperty('_value'))
                                                                          obj5891._value = call5962._value;
                                                                      setLineNumber(1813);    // compilenode string
                                                                      var string5964 = new GraceString("img");
                                                                      // call case 6: other requests
                                                                      var call5965 = callmethodChecked(var_document, "createElement(1)", [1], string5964);
                                                                      obj5891.data["theImage"] = call5965;
                                                                      var reader_rtobjectdraw_theImage5966 = function() {
                                                                        return this.data["theImage"];
                                                                      };
                                                                      obj5891.methods["theImage"] = reader_rtobjectdraw_theImage5966;
                                                                      obj5891.data["theImage"] = call5965;
                                                                      var writer_rtobjectdraw_theImage5966 = function(argcv, o) {
                                                                        this.data["theImage"] = o;
                                                                        return GraceDone;
                                                                      };
                                                                      obj5891.methods["theImage:=(1)"] = writer_rtobjectdraw_theImage5966;
                                                                      reader_rtobjectdraw_theImage5966.confidential = true;
                                                                      writer_rtobjectdraw_theImage5966.confidential = true;
                                                                      obj5891.mutable = true;
                                                                      setLineNumber(1814);    // compilenode identifier
                                                                      // call case 6: other requests
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5969 = callmethodChecked(this, "theImage", []);
                                                                      var call5970 = callmethodChecked(call5969, "src:=(1)", [1], var_url);
                                                                      setLineNumber(1816);    // compilenode string
                                                                      var string5972 = new GraceString("load");
                                                                      var block5973 = new GraceBlock(this, 1816, 1);
                                                                      setLineNumber(1);    // compilenode identifier
                                                                      block5973.real = function(var___95____95__24) {
                                                                        setLineNumber(1817);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5975 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                        return call5975;
                                                                      };
                                                                      // call case 6: other requests
                                                                      setLineNumber(1816);    // compilenode member
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call5977 = callmethodChecked(this, "theImage", []);
                                                                      var call5978 = callmethodChecked(call5977, "addEventListener(2)", [2], string5972, block5973);
                                                                      superDepth = origSuperDepth;
                                                                    };
                                                                    obj_init_5891.apply(inheritingObject, []);
                                                                    return obj5891;
                                                                    };
                                                                    func5890.paramTypes = [];
                                                                    func5890.paramTypes.push([]);
                                                                    func5890.paramTypes.push([]);
                                                                    func5890.paramTypes.push([type_String, "url"]);
                                                                    func5890.paramTypes.push([]);
                                                                    this.methods["drawableImageAt(1)size(1)url(1)on(1)$object(1)"] = func5890;
                                                                  setLineNumber(1845);    // compilenode method
                                                                  var func5979 = function(argcv) {    // method lineFrom(_)to(_)on(_)
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    var var_start__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_end__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    var var_canvas__39__ = arguments[curarg];
                                                                    curarg++;
                                                                    // Start argument checking
                                                                    curarg = 1;
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter start', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in to (arg list 2), which corresponds to parameter end', does not have " + 
                                                                                callmethod(var_Point, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    setLineNumber(1846);    // compilenode identifier
                                                                    if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                    curarg++;
                                                                    // End argument checking
                                                                    setModuleName("rtobjectdraw");
                                                                    setLineNumber(1845);    // compilenode object
                                                                    var obj5980 = Grace_allocObject(null, "lineFrom(_)to(_)on(_)");
                                                                    obj5980.definitionModule = "rtobjectdraw";
                                                                    obj5980.definitionLine = 1845;
                                                                    obj5980.outer = this;
                                                                    var reader_rtobjectdraw_outer5981 = function() {
                                                                      return this.outer;
                                                                    };
                                                                    obj5980.methods["outer"] = reader_rtobjectdraw_outer5981;
                                                                    var obj_init_5980 = function() {
                                                                      var origSuperDepth = superDepth;
                                                                      superDepth = obj5980;
                                                                      var func5982 = function(argcv) {    // method start
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1855);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5984 = callmethodChecked(this, "location", []);
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call5984)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method start does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        return call5984;
                                                                      };
                                                                      func5982.paramCounts = [0];
                                                                      obj5980.methods["start"] = func5982;
                                                                      func5982.definitionLine = 1852;
                                                                      func5982.definitionModule = "rtobjectdraw";
                                                                      var func5985 = function(argcv) {    // method end
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1861);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5987 = callmethodChecked(this, "theEnd", []);
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call5987)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method end does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        return call5987;
                                                                      };
                                                                      func5985.paramCounts = [0];
                                                                      obj5980.methods["end"] = func5985;
                                                                      func5985.definitionLine = 1858;
                                                                      func5985.definitionModule = "rtobjectdraw";
                                                                      var func5988 = function(argcv) {    // method start:=(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newStart = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1866);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in start:= (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1869);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5990 = callmethodChecked(this, "location:=(1)", [1], var_newStart);
                                                                        setLineNumber(1870);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5992 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5992)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method start:=(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5992;
                                                                      };
                                                                      func5988.paramTypes = [];
                                                                      func5988.paramTypes.push([]);
                                                                      func5988.paramCounts = [1];
                                                                      obj5980.methods["start:=(1)"] = func5988;
                                                                      func5988.definitionLine = 1866;
                                                                      func5988.definitionModule = "rtobjectdraw";
                                                                      var func5993 = function(argcv) {    // method end:=(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newEnd = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1873);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in end:= (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1876);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5995 = callmethodChecked(this, "theEnd:=(1)", [1], var_newEnd);
                                                                        setLineNumber(1877);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call5997 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call5997)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method end:=(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call5997;
                                                                      };
                                                                      func5993.paramTypes = [];
                                                                      func5993.paramTypes.push([]);
                                                                      func5993.paramCounts = [1];
                                                                      obj5980.methods["end:=(1)"] = func5993;
                                                                      func5993.definitionLine = 1873;
                                                                      func5993.definitionModule = "rtobjectdraw";
                                                                      var func5998 = function(argcv) {    // method setEndPoints(_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newStart = arguments[curarg];
                                                                        curarg++;
                                                                        var var_newEnd = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1880);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in setEndPoints (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in setEndPoints (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1883);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6000 = callmethodChecked(this, "start:=(1)", [1], var_newStart);
                                                                        setLineNumber(1884);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6002 = callmethodChecked(this, "end:=(1)", [1], var_newEnd);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6002)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method setEndPoints(_,_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6002;
                                                                      };
                                                                      func5998.paramTypes = [];
                                                                      func5998.paramTypes.push([]);
                                                                      func5998.paramTypes.push([]);
                                                                      func5998.paramCounts = [2];
                                                                      obj5980.methods["setEndPoints(2)"] = func5998;
                                                                      func5998.definitionLine = 1880;
                                                                      func5998.definitionModule = "rtobjectdraw";
                                                                      var func6003 = function(argcv) {    // method draw(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_ctx = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1888);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                    callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1890);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6005 = callmethodChecked(this, "color", []);
                                                                        var var_col = call6005;
                                                                        setLineNumber(1891);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6007 = callmethodChecked(var_ctx, "save", []);
                                                                        setLineNumber(1892);    // compilenode string
                                                                        var string6009 = new GraceString(")");
                                                                        // call case 6: other requests
                                                                        var call6012 = callmethodChecked(var_col, "blue", []);
                                                                        var string6014 = new GraceString(", ");
                                                                        // call case 6: other requests
                                                                        var call6017 = callmethodChecked(var_col, "green", []);
                                                                        var string6019 = new GraceString(", ");
                                                                        // call case 6: other requests
                                                                        var call6022 = callmethodChecked(var_col, "red", []);
                                                                        var string6024 = new GraceString("rgb(");
                                                                        var opresult6026 = callmethodChecked(string6024, "++(1)", [1], call6022);
                                                                        var opresult6028 = callmethodChecked(opresult6026, "++(1)", [1], string6019);
                                                                        var opresult6030 = callmethodChecked(opresult6028, "++(1)", [1], call6017);
                                                                        var opresult6032 = callmethodChecked(opresult6030, "++(1)", [1], string6014);
                                                                        var opresult6034 = callmethodChecked(opresult6032, "++(1)", [1], call6012);
                                                                        var opresult6036 = callmethodChecked(opresult6034, "++(1)", [1], string6009);
                                                                        // call case 6: other requests
                                                                        var call6037 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult6036);
                                                                        setLineNumber(1893);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6039 = callmethodChecked(var_ctx, "beginPath", []);
                                                                        setLineNumber(1894);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6043 = callmethodChecked(this, "location", []);
                                                                        var call6044 = callmethodChecked(call6043, "x", []);
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6047 = callmethodChecked(this, "location", []);
                                                                        var call6048 = callmethodChecked(call6047, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6049 = callmethodChecked(var_ctx, "moveTo(2)", [2], call6044, call6048);
                                                                        setLineNumber(1895);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6053 = callmethodChecked(this, "theEnd", []);
                                                                        var call6054 = callmethodChecked(call6053, "x", []);
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6057 = callmethodChecked(this, "theEnd", []);
                                                                        var call6058 = callmethodChecked(call6057, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6059 = callmethodChecked(var_ctx, "lineTo(2)", [2], call6054, call6058);
                                                                        setLineNumber(1896);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6061 = callmethodChecked(var_ctx, "stroke", []);
                                                                        setLineNumber(1897);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6063 = callmethodChecked(var_ctx, "restore", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6063)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method draw(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6063;
                                                                      };
                                                                      func6003.paramTypes = [];
                                                                      func6003.paramTypes.push([]);
                                                                      func6003.paramCounts = [1];
                                                                      obj5980.methods["draw(1)"] = func6003;
                                                                      func6003.definitionLine = 1888;
                                                                      func6003.definitionModule = "rtobjectdraw";
                                                                      var func6064 = function(argcv) {    // method moveBy(_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_dx = arguments[curarg];
                                                                        curarg++;
                                                                        var var_dy = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1900);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1903);    // compilenode identifier
                                                                        var opresult6068 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6071 = callmethodChecked(this, "location", []);
                                                                        var opresult6073 = callmethodChecked(call6071, "+(1)", [1], opresult6068);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6074 = callmethodChecked(this, "location:=(1)", [1], opresult6073);
                                                                        setLineNumber(1904);    // compilenode identifier
                                                                        var opresult6078 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6081 = callmethodChecked(this, "theEnd", []);
                                                                        var opresult6083 = callmethodChecked(call6081, "+(1)", [1], opresult6078);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6084 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6083);
                                                                        setLineNumber(1905);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6086 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6086)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method moveBy(_,_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6086;
                                                                      };
                                                                      func6064.paramTypes = [];
                                                                      func6064.paramTypes.push([type_Number, "dx"]);
                                                                      func6064.paramTypes.push([type_Number, "dy"]);
                                                                      func6064.paramCounts = [2];
                                                                      obj5980.methods["moveBy(2)"] = func6064;
                                                                      func6064.definitionLine = 1900;
                                                                      func6064.definitionModule = "rtobjectdraw";
                                                                      var func6087 = function(argcv) {    // method moveTo(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_newLocn = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1908);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1911);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6090 = callmethodChecked(this, "location", []);
                                                                        var diff6093 = callmethodChecked(var_newLocn, "-(1)", [1], call6090);
                                                                        var call6094 = callmethodChecked(diff6093, "x", []);
                                                                        var var_dx = call6094;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dx)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("value of def 'dx' is not of type Number"));
                                                                        setLineNumber(1912);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6097 = callmethodChecked(this, "location", []);
                                                                        var diff6100 = callmethodChecked(var_newLocn, "-(1)", [1], call6097);
                                                                        var call6101 = callmethodChecked(diff6100, "y", []);
                                                                        var var_dy = call6101;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dy)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("value of def 'dy' is not of type Number"));
                                                                        setLineNumber(1913);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6103 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                                        setLineNumber(1914);    // compilenode identifier
                                                                        var opresult6107 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6110 = callmethodChecked(this, "theEnd", []);
                                                                        var opresult6112 = callmethodChecked(call6110, "+(1)", [1], opresult6107);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6113 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6112);
                                                                        setLineNumber(1915);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6115 = callmethodChecked(this, "notifyRedraw", []);
                                                                        if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6115)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method moveTo(_) does not have " + 
                                                                                    callmethod(var_Done, "asString", [0])._value + "."));
                                                                        return call6115;
                                                                      };
                                                                      func6087.paramTypes = [];
                                                                      func6087.paramTypes.push([]);
                                                                      func6087.paramCounts = [1];
                                                                      obj5980.methods["moveTo(1)"] = func6087;
                                                                      func6087.definitionLine = 1908;
                                                                      func6087.definitionModule = "rtobjectdraw";
                                                                      var func6116 = function(argcv) {    // method dist2(_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_v = arguments[curarg];
                                                                        curarg++;
                                                                        var var_w = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1919);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in dist2 (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in dist2 (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1921);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6119 = callmethodChecked(var_w, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6122 = callmethodChecked(var_v, "y", []);
                                                                        var diff6124 = callmethodChecked(call6122, "-(1)", [1], call6119);
                                                                        var opresult6126 = callmethodChecked(diff6124, "^(1)", [1], new GraceNum(2));
                                                                        // call case 6: other requests
                                                                        var call6130 = callmethodChecked(var_w, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6133 = callmethodChecked(var_v, "x", []);
                                                                        var diff6135 = callmethodChecked(call6133, "-(1)", [1], call6130);
                                                                        var opresult6137 = callmethodChecked(diff6135, "^(1)", [1], new GraceNum(2));
                                                                        var opresult6139 = callmethodChecked(opresult6137, "+(1)", [1], opresult6126);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult6139)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method dist2(_,_) does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        return opresult6139;
                                                                      };
                                                                      func6116.paramTypes = [];
                                                                      func6116.paramTypes.push([]);
                                                                      func6116.paramTypes.push([]);
                                                                      func6116.confidential = true;
                                                                      func6116.paramCounts = [2];
                                                                      obj5980.methods["dist2(2)"] = func6116;
                                                                      func6116.definitionLine = 1919;
                                                                      func6116.definitionModule = "rtobjectdraw";
                                                                      var func6140 = function(argcv) {    // method distToSegmentSquared(_,_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_p = arguments[curarg];
                                                                        curarg++;
                                                                        var var_v = arguments[curarg];
                                                                        curarg++;
                                                                        var var_w = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1925);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in distToSegmentSquared (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in distToSegmentSquared (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 3 in distToSegmentSquared (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1929);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6142 = callmethodChecked(this, "dist2(2)", [2], var_v, var_w);
                                                                        var var_l2 = call6142;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_l2)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("initial value of var 'l2' is not of type Number"));
                                                                        var if6143 = GraceDone;
                                                                        setLineNumber(1930);    // compilenode identifier
                                                                        var opresult6146 = callmethodChecked(var_l2, "==(1)", [1], new GraceNum(0));
                                                                        if (Grace_isTrue(opresult6146)) {
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6148 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                          return call6148;
                                                                        }
                                                                        setLineNumber(1931);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6151 = callmethodChecked(var_v, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6154 = callmethodChecked(var_w, "y", []);
                                                                        var diff6156 = callmethodChecked(call6154, "-(1)", [1], call6151);
                                                                        // call case 6: other requests
                                                                        var call6159 = callmethodChecked(var_v, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6162 = callmethodChecked(var_p, "y", []);
                                                                        var diff6164 = callmethodChecked(call6162, "-(1)", [1], call6159);
                                                                        var prod6166 = callmethodChecked(diff6164, "*(1)", [1], diff6156);
                                                                        // call case 6: other requests
                                                                        var call6169 = callmethodChecked(var_v, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6172 = callmethodChecked(var_w, "x", []);
                                                                        var diff6174 = callmethodChecked(call6172, "-(1)", [1], call6169);
                                                                        // call case 6: other requests
                                                                        var call6177 = callmethodChecked(var_v, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6180 = callmethodChecked(var_p, "x", []);
                                                                        var diff6182 = callmethodChecked(call6180, "-(1)", [1], call6177);
                                                                        var prod6184 = callmethodChecked(diff6182, "*(1)", [1], diff6174);
                                                                        var opresult6186 = callmethodChecked(prod6184, "+(1)", [1], prod6166);
                                                                        var quotient6188 = callmethodChecked(opresult6186, "/(1)", [1], var_l2);
                                                                        var var_t = quotient6188;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_t)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("initial value of var 't' is not of type Number"));
                                                                        var if6189 = GraceDone;
                                                                        setLineNumber(1932);    // compilenode identifier
                                                                        var opresult6192 = callmethodChecked(var_t, "<(1)", [1], new GraceNum(0));
                                                                        if (Grace_isTrue(opresult6192)) {
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6194 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                          return call6194;
                                                                        }
                                                                        var if6195 = GraceDone;
                                                                        setLineNumber(1933);    // compilenode identifier
                                                                        var opresult6198 = callmethodChecked(var_t, ">(1)", [1], new GraceNum(1));
                                                                        if (Grace_isTrue(opresult6198)) {
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6200 = callmethodChecked(this, "dist2(2)", [2], var_p, var_w);
                                                                          return call6200;
                                                                        }
                                                                        setLineNumber(1935);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6203 = callmethodChecked(var_v, "y", []);
                                                                        // call case 6: other requests
                                                                        var call6206 = callmethodChecked(var_w, "y", []);
                                                                        var diff6208 = callmethodChecked(call6206, "-(1)", [1], call6203);
                                                                        var prod6211 = callmethodChecked(var_t, "*(1)", [1], diff6208);
                                                                        // call case 6: other requests
                                                                        var call6214 = callmethodChecked(var_v, "y", []);
                                                                        var opresult6216 = callmethodChecked(call6214, "+(1)", [1], prod6211);
                                                                        setLineNumber(1934);    // compilenode member
                                                                        // call case 6: other requests
                                                                        var call6219 = callmethodChecked(var_v, "x", []);
                                                                        // call case 6: other requests
                                                                        var call6222 = callmethodChecked(var_w, "x", []);
                                                                        var diff6224 = callmethodChecked(call6222, "-(1)", [1], call6219);
                                                                        var prod6227 = callmethodChecked(var_t, "*(1)", [1], diff6224);
                                                                        // call case 6: other requests
                                                                        var call6230 = callmethodChecked(var_v, "x", []);
                                                                        var opresult6232 = callmethodChecked(call6230, "+(1)", [1], prod6227);
                                                                        var opresult6234 = callmethodChecked(opresult6232, "@(1)", [1], opresult6216);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6235 = callmethodChecked(this, "dist2(2)", [2], var_p, opresult6234);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6235)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method distToSegmentSquared(_,_,_) does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        return call6235;
                                                                      };
                                                                      func6140.paramTypes = [];
                                                                      func6140.paramTypes.push([]);
                                                                      func6140.paramTypes.push([]);
                                                                      func6140.paramTypes.push([]);
                                                                      func6140.confidential = true;
                                                                      func6140.paramCounts = [3];
                                                                      obj5980.methods["distToSegmentSquared(3)"] = func6140;
                                                                      func6140.definitionLine = 1925;
                                                                      func6140.definitionModule = "rtobjectdraw";
                                                                      var func6236 = function(argcv) {    // method distToSegment(_,_,_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_p = arguments[curarg];
                                                                        curarg++;
                                                                        var var_v = arguments[curarg];
                                                                        curarg++;
                                                                        var var_w = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1938);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in distToSegment (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 2 in distToSegment (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 3 in distToSegment (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1940);    // compilenode member
                                                                        // call case 6: other requests
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6239 = callmethodChecked(this, "distToSegmentSquared(3)", [3], var_p, var_v, var_w);
                                                                        var call6240 = callmethodChecked(call6239, "sqrt", []);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6240)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method distToSegment(_,_,_) does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        return call6240;
                                                                      };
                                                                      func6236.paramTypes = [];
                                                                      func6236.paramTypes.push([]);
                                                                      func6236.paramTypes.push([]);
                                                                      func6236.paramTypes.push([]);
                                                                      func6236.paramCounts = [3];
                                                                      obj5980.methods["distToSegment(3)"] = func6236;
                                                                      func6236.definitionLine = 1938;
                                                                      func6236.definitionModule = "rtobjectdraw";
                                                                      var func6241 = function(argcv) {    // method contains(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_pt = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        setLineNumber(1943);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1947);    // compilenode num
                                                                        var var_tolerance = new GraceNum(2);
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_tolerance)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("value of def 'tolerance' is not of type Number"));
                                                                        setLineNumber(1948);    // compilenode member
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6245 = callmethodChecked(this, "start", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6247 = callmethodChecked(this, "end", []);
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6248 = callmethodChecked(this, "distToSegment(3)", [3], var_pt, call6245, call6247);
                                                                        var opresult6250 = callmethodChecked(call6248, "<(1)", [1], var_tolerance);
                                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult6250)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method contains(_) does not have " + 
                                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                        return opresult6250;
                                                                      };
                                                                      func6241.paramTypes = [];
                                                                      func6241.paramTypes.push([]);
                                                                      func6241.paramCounts = [1];
                                                                      obj5980.methods["contains(1)"] = func6241;
                                                                      func6241.definitionLine = 1943;
                                                                      func6241.definitionModule = "rtobjectdraw";
                                                                      var func6251 = function(argcv) {    // method asString
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1953);    // compilenode string
                                                                        var string6252 = new GraceString("");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6255 = callmethodChecked(this, "color", []);
                                                                        var string6257 = new GraceString(" with color ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6260 = callmethodChecked(this, "end", []);
                                                                        var string6262 = new GraceString(" to ");
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6265 = callmethodChecked(this, "start", []);
                                                                        var string6267 = new GraceString("Line from ");
                                                                        var opresult6269 = callmethodChecked(string6267, "++(1)", [1], call6265);
                                                                        var opresult6271 = callmethodChecked(opresult6269, "++(1)", [1], string6262);
                                                                        var opresult6273 = callmethodChecked(opresult6271, "++(1)", [1], call6260);
                                                                        var opresult6275 = callmethodChecked(opresult6273, "++(1)", [1], string6257);
                                                                        var opresult6277 = callmethodChecked(opresult6275, "++(1)", [1], call6255);
                                                                        var opresult6279 = callmethodChecked(opresult6277, "++(1)", [1], string6252);
                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6279)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method asString does not have " + 
                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                        return opresult6279;
                                                                      };
                                                                      func6251.paramCounts = [0];
                                                                      obj5980.methods["asString"] = func6251;
                                                                      func6251.definitionLine = 1951;
                                                                      func6251.definitionModule = "rtobjectdraw";
                                                                      setLineNumber(1848);    // compilenode identifier
                                                                      // call case 6: other requests
                                                                      setLineNumber(0);    // compilenode member
                                                                      // call case 3: self.outer request
                                                                      var call6282 = callmethodChecked(superDepth, "outer", [0]);
                                                                      onSelf = true;
                                                                      var call6283 = callmethodChecked(call6282, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_start__39__, var_canvas__39__, this);
                                                                      obj5980.superobj = call6283;
                                                                      if (call6283.data) obj5980.data = call6283.data;
                                                                      if (call6283.hasOwnProperty('_value'))
                                                                          obj5980._value = call6283._value;
                                                                      setLineNumber(1850);    // compilenode identifier
                                                                      obj5980.data["theEnd"] = var_end__39__;
                                                                      var reader_rtobjectdraw_theEnd6284 = function() {
                                                                        return this.data["theEnd"];
                                                                      };
                                                                      obj5980.methods["theEnd"] = reader_rtobjectdraw_theEnd6284;
                                                                      obj5980.data["theEnd"] = var_end__39__;
                                                                      var writer_rtobjectdraw_theEnd6284 = function(argcv, o) {
                                                                        this.data["theEnd"] = o;
                                                                        return GraceDone;
                                                                      };
                                                                      obj5980.methods["theEnd:=(1)"] = writer_rtobjectdraw_theEnd6284;
                                                                      reader_rtobjectdraw_theEnd6284.confidential = true;
                                                                      writer_rtobjectdraw_theEnd6284.confidential = true;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_end__39__)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("initial value of var 'theEnd' is not of type Point"));
                                                                      obj5980.mutable = true;
                                                                      setLineNumber(1864);    // compilenode identifier
                                                                      // call case 4: self request
                                                                      onSelf = true;
                                                                      var call6286 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                      superDepth = origSuperDepth;
                                                                    };
                                                                    obj_init_5980.apply(obj5980, []);
                                                                    setLineNumber(1845);    // return value
                                                                    if (!Grace_isTrue(callmethod(var_Line, "match(1)", [1], obj5980)))
                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                            new GraceString("result of method lineFrom(_)to(_)on(_) does not have " + 
                                                                                callmethod(var_Line, "asString", [0])._value + "."));
                                                                    return obj5980;
                                                                  };
                                                                  func5979.paramTypes = [];
                                                                  func5979.paramTypes.push([]);
                                                                  func5979.paramTypes.push([]);
                                                                  func5979.paramTypes.push([]);
                                                                  func5979.paramCounts = [1, 1, 1];
                                                                  this.methods["lineFrom(1)to(1)on(1)"] = func5979;
                                                                  func5979.definitionLine = 1845;
                                                                  func5979.definitionModule = "rtobjectdraw";
                                                                    var func6287 = function(argcv) {    // method lineFrom(_)to(_)on(_)$object(_)
                                                                      var curarg = 1;
                                                                      var var_start__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      var var_end__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      var var_canvas__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      var inheritingObject = arguments[curarg++];
                                                                      // Start argument processing
                                                                      curarg = 1;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter start', does not have " + 
                                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in to (arg list 2), which corresponds to parameter end', does not have " + 
                                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      setLineNumber(1846);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument processing
                                                                      setModuleName("rtobjectdraw");
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var obj6288 = Grace_allocObject(null, "lineFrom(1)to(1)on(1)");
                                                                      obj6288.definitionModule = "rtobjectdraw";
                                                                      obj6288.definitionLine = 1845;
                                                                      var inho6288 = inheritingObject;
                                                                      while (inho6288.superobj) inho6288 = inho6288.superobj;
                                                                      inho6288.superobj = obj6288;
                                                                      obj6288.data = inheritingObject.data;
                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                        obj6288._value = inheritingObject._value;
                                                                      obj6288.outer = this;
                                                                      var reader_rtobjectdraw_outer6289 = function() {
                                                                        return this.outer;
                                                                      };
                                                                      obj6288.methods["outer"] = reader_rtobjectdraw_outer6289;
                                                                      var obj_init_6288 = function() {
                                                                        var origSuperDepth = superDepth;
                                                                        superDepth = obj6288;
                                                                        var func6290 = function(argcv) {    // method start
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1855);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6292 = callmethodChecked(this, "location", []);
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call6292)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method start does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          return call6292;
                                                                        };
                                                                        func6290.paramCounts = [0];
                                                                        obj6288.methods["start"] = func6290;
                                                                        func6290.definitionLine = 1852;
                                                                        func6290.definitionModule = "rtobjectdraw";
                                                                        var func6293 = function(argcv) {    // method end
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1861);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6295 = callmethodChecked(this, "theEnd", []);
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], call6295)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method end does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          return call6295;
                                                                        };
                                                                        func6293.paramCounts = [0];
                                                                        obj6288.methods["end"] = func6293;
                                                                        func6293.definitionLine = 1858;
                                                                        func6293.definitionModule = "rtobjectdraw";
                                                                        var func6296 = function(argcv) {    // method start:=(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newStart = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1866);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in start:= (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1869);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6298 = callmethodChecked(this, "location:=(1)", [1], var_newStart);
                                                                          setLineNumber(1870);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6300 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6300)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method start:=(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6300;
                                                                        };
                                                                        func6296.paramTypes = [];
                                                                        func6296.paramTypes.push([]);
                                                                        func6296.paramCounts = [1];
                                                                        obj6288.methods["start:=(1)"] = func6296;
                                                                        func6296.definitionLine = 1866;
                                                                        func6296.definitionModule = "rtobjectdraw";
                                                                        var func6301 = function(argcv) {    // method end:=(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newEnd = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1873);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in end:= (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1876);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6303 = callmethodChecked(this, "theEnd:=(1)", [1], var_newEnd);
                                                                          setLineNumber(1877);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6305 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6305)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method end:=(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6305;
                                                                        };
                                                                        func6301.paramTypes = [];
                                                                        func6301.paramTypes.push([]);
                                                                        func6301.paramCounts = [1];
                                                                        obj6288.methods["end:=(1)"] = func6301;
                                                                        func6301.definitionLine = 1873;
                                                                        func6301.definitionModule = "rtobjectdraw";
                                                                        var func6306 = function(argcv) {    // method setEndPoints(_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newStart = arguments[curarg];
                                                                          curarg++;
                                                                          var var_newEnd = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1880);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in setEndPoints (arg list 1), which corresponds to parameter newStart, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in setEndPoints (arg list 1), which corresponds to parameter newEnd, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1883);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6308 = callmethodChecked(this, "start:=(1)", [1], var_newStart);
                                                                          setLineNumber(1884);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6310 = callmethodChecked(this, "end:=(1)", [1], var_newEnd);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6310)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method setEndPoints(_,_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6310;
                                                                        };
                                                                        func6306.paramTypes = [];
                                                                        func6306.paramTypes.push([]);
                                                                        func6306.paramTypes.push([]);
                                                                        func6306.paramCounts = [2];
                                                                        obj6288.methods["setEndPoints(2)"] = func6306;
                                                                        func6306.definitionLine = 1880;
                                                                        func6306.definitionModule = "rtobjectdraw";
                                                                        var func6311 = function(argcv) {    // method draw(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_ctx = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1888);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                      callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1890);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6313 = callmethodChecked(this, "color", []);
                                                                          var var_col = call6313;
                                                                          setLineNumber(1891);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6315 = callmethodChecked(var_ctx, "save", []);
                                                                          setLineNumber(1892);    // compilenode string
                                                                          var string6317 = new GraceString(")");
                                                                          // call case 6: other requests
                                                                          var call6320 = callmethodChecked(var_col, "blue", []);
                                                                          var string6322 = new GraceString(", ");
                                                                          // call case 6: other requests
                                                                          var call6325 = callmethodChecked(var_col, "green", []);
                                                                          var string6327 = new GraceString(", ");
                                                                          // call case 6: other requests
                                                                          var call6330 = callmethodChecked(var_col, "red", []);
                                                                          var string6332 = new GraceString("rgb(");
                                                                          var opresult6334 = callmethodChecked(string6332, "++(1)", [1], call6330);
                                                                          var opresult6336 = callmethodChecked(opresult6334, "++(1)", [1], string6327);
                                                                          var opresult6338 = callmethodChecked(opresult6336, "++(1)", [1], call6325);
                                                                          var opresult6340 = callmethodChecked(opresult6338, "++(1)", [1], string6322);
                                                                          var opresult6342 = callmethodChecked(opresult6340, "++(1)", [1], call6320);
                                                                          var opresult6344 = callmethodChecked(opresult6342, "++(1)", [1], string6317);
                                                                          // call case 6: other requests
                                                                          var call6345 = callmethodChecked(var_ctx, "strokeStyle:=(1)", [1], opresult6344);
                                                                          setLineNumber(1893);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6347 = callmethodChecked(var_ctx, "beginPath", []);
                                                                          setLineNumber(1894);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6351 = callmethodChecked(this, "location", []);
                                                                          var call6352 = callmethodChecked(call6351, "x", []);
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6355 = callmethodChecked(this, "location", []);
                                                                          var call6356 = callmethodChecked(call6355, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6357 = callmethodChecked(var_ctx, "moveTo(2)", [2], call6352, call6356);
                                                                          setLineNumber(1895);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6361 = callmethodChecked(this, "theEnd", []);
                                                                          var call6362 = callmethodChecked(call6361, "x", []);
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6365 = callmethodChecked(this, "theEnd", []);
                                                                          var call6366 = callmethodChecked(call6365, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6367 = callmethodChecked(var_ctx, "lineTo(2)", [2], call6362, call6366);
                                                                          setLineNumber(1896);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6369 = callmethodChecked(var_ctx, "stroke", []);
                                                                          setLineNumber(1897);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6371 = callmethodChecked(var_ctx, "restore", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6371)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method draw(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6371;
                                                                        };
                                                                        func6311.paramTypes = [];
                                                                        func6311.paramTypes.push([]);
                                                                        func6311.paramCounts = [1];
                                                                        obj6288.methods["draw(1)"] = func6311;
                                                                        func6311.definitionLine = 1888;
                                                                        func6311.definitionModule = "rtobjectdraw";
                                                                        var func6372 = function(argcv) {    // method moveBy(_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_dx = arguments[curarg];
                                                                          curarg++;
                                                                          var var_dy = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1900);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in moveBy (arg list 1), which corresponds to parameter dx, does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in moveBy (arg list 1), which corresponds to parameter dy, does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1903);    // compilenode identifier
                                                                          var opresult6376 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6379 = callmethodChecked(this, "location", []);
                                                                          var opresult6381 = callmethodChecked(call6379, "+(1)", [1], opresult6376);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6382 = callmethodChecked(this, "location:=(1)", [1], opresult6381);
                                                                          setLineNumber(1904);    // compilenode identifier
                                                                          var opresult6386 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6389 = callmethodChecked(this, "theEnd", []);
                                                                          var opresult6391 = callmethodChecked(call6389, "+(1)", [1], opresult6386);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6392 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6391);
                                                                          setLineNumber(1905);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6394 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6394)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method moveBy(_,_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6394;
                                                                        };
                                                                        func6372.paramTypes = [];
                                                                        func6372.paramTypes.push([type_Number, "dx"]);
                                                                        func6372.paramTypes.push([type_Number, "dy"]);
                                                                        func6372.paramCounts = [2];
                                                                        obj6288.methods["moveBy(2)"] = func6372;
                                                                        func6372.definitionLine = 1900;
                                                                        func6372.definitionModule = "rtobjectdraw";
                                                                        var func6395 = function(argcv) {    // method moveTo(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_newLocn = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1908);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in moveTo (arg list 1), which corresponds to parameter newLocn, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1911);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6398 = callmethodChecked(this, "location", []);
                                                                          var diff6401 = callmethodChecked(var_newLocn, "-(1)", [1], call6398);
                                                                          var call6402 = callmethodChecked(diff6401, "x", []);
                                                                          var var_dx = call6402;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dx)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("value of def 'dx' is not of type Number"));
                                                                          setLineNumber(1912);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6405 = callmethodChecked(this, "location", []);
                                                                          var diff6408 = callmethodChecked(var_newLocn, "-(1)", [1], call6405);
                                                                          var call6409 = callmethodChecked(diff6408, "y", []);
                                                                          var var_dy = call6409;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_dy)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("value of def 'dy' is not of type Number"));
                                                                          setLineNumber(1913);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6411 = callmethodChecked(this, "location:=(1)", [1], var_newLocn);
                                                                          setLineNumber(1914);    // compilenode identifier
                                                                          var opresult6415 = callmethodChecked(var_dx, "@(1)", [1], var_dy);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6418 = callmethodChecked(this, "theEnd", []);
                                                                          var opresult6420 = callmethodChecked(call6418, "+(1)", [1], opresult6415);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6421 = callmethodChecked(this, "theEnd:=(1)", [1], opresult6420);
                                                                          setLineNumber(1915);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6423 = callmethodChecked(this, "notifyRedraw", []);
                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6423)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method moveTo(_) does not have " + 
                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                          return call6423;
                                                                        };
                                                                        func6395.paramTypes = [];
                                                                        func6395.paramTypes.push([]);
                                                                        func6395.paramCounts = [1];
                                                                        obj6288.methods["moveTo(1)"] = func6395;
                                                                        func6395.definitionLine = 1908;
                                                                        func6395.definitionModule = "rtobjectdraw";
                                                                        var func6424 = function(argcv) {    // method dist2(_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_v = arguments[curarg];
                                                                          curarg++;
                                                                          var var_w = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1919);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in dist2 (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in dist2 (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1921);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6427 = callmethodChecked(var_w, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6430 = callmethodChecked(var_v, "y", []);
                                                                          var diff6432 = callmethodChecked(call6430, "-(1)", [1], call6427);
                                                                          var opresult6434 = callmethodChecked(diff6432, "^(1)", [1], new GraceNum(2));
                                                                          // call case 6: other requests
                                                                          var call6438 = callmethodChecked(var_w, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6441 = callmethodChecked(var_v, "x", []);
                                                                          var diff6443 = callmethodChecked(call6441, "-(1)", [1], call6438);
                                                                          var opresult6445 = callmethodChecked(diff6443, "^(1)", [1], new GraceNum(2));
                                                                          var opresult6447 = callmethodChecked(opresult6445, "+(1)", [1], opresult6434);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], opresult6447)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method dist2(_,_) does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          return opresult6447;
                                                                        };
                                                                        func6424.paramTypes = [];
                                                                        func6424.paramTypes.push([]);
                                                                        func6424.paramTypes.push([]);
                                                                        func6424.confidential = true;
                                                                        func6424.paramCounts = [2];
                                                                        obj6288.methods["dist2(2)"] = func6424;
                                                                        func6424.definitionLine = 1919;
                                                                        func6424.definitionModule = "rtobjectdraw";
                                                                        var func6448 = function(argcv) {    // method distToSegmentSquared(_,_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_p = arguments[curarg];
                                                                          curarg++;
                                                                          var var_v = arguments[curarg];
                                                                          curarg++;
                                                                          var var_w = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1925);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in distToSegmentSquared (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in distToSegmentSquared (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 3 in distToSegmentSquared (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1929);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6450 = callmethodChecked(this, "dist2(2)", [2], var_v, var_w);
                                                                          var var_l2 = call6450;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_l2)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'l2' is not of type Number"));
                                                                          var if6451 = GraceDone;
                                                                          setLineNumber(1930);    // compilenode identifier
                                                                          var opresult6454 = callmethodChecked(var_l2, "==(1)", [1], new GraceNum(0));
                                                                          if (Grace_isTrue(opresult6454)) {
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6456 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                            return call6456;
                                                                          }
                                                                          setLineNumber(1931);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6459 = callmethodChecked(var_v, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6462 = callmethodChecked(var_w, "y", []);
                                                                          var diff6464 = callmethodChecked(call6462, "-(1)", [1], call6459);
                                                                          // call case 6: other requests
                                                                          var call6467 = callmethodChecked(var_v, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6470 = callmethodChecked(var_p, "y", []);
                                                                          var diff6472 = callmethodChecked(call6470, "-(1)", [1], call6467);
                                                                          var prod6474 = callmethodChecked(diff6472, "*(1)", [1], diff6464);
                                                                          // call case 6: other requests
                                                                          var call6477 = callmethodChecked(var_v, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6480 = callmethodChecked(var_w, "x", []);
                                                                          var diff6482 = callmethodChecked(call6480, "-(1)", [1], call6477);
                                                                          // call case 6: other requests
                                                                          var call6485 = callmethodChecked(var_v, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6488 = callmethodChecked(var_p, "x", []);
                                                                          var diff6490 = callmethodChecked(call6488, "-(1)", [1], call6485);
                                                                          var prod6492 = callmethodChecked(diff6490, "*(1)", [1], diff6482);
                                                                          var opresult6494 = callmethodChecked(prod6492, "+(1)", [1], prod6474);
                                                                          var quotient6496 = callmethodChecked(opresult6494, "/(1)", [1], var_l2);
                                                                          var var_t = quotient6496;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_t)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 't' is not of type Number"));
                                                                          var if6497 = GraceDone;
                                                                          setLineNumber(1932);    // compilenode identifier
                                                                          var opresult6500 = callmethodChecked(var_t, "<(1)", [1], new GraceNum(0));
                                                                          if (Grace_isTrue(opresult6500)) {
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6502 = callmethodChecked(this, "dist2(2)", [2], var_p, var_v);
                                                                            return call6502;
                                                                          }
                                                                          var if6503 = GraceDone;
                                                                          setLineNumber(1933);    // compilenode identifier
                                                                          var opresult6506 = callmethodChecked(var_t, ">(1)", [1], new GraceNum(1));
                                                                          if (Grace_isTrue(opresult6506)) {
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6508 = callmethodChecked(this, "dist2(2)", [2], var_p, var_w);
                                                                            return call6508;
                                                                          }
                                                                          setLineNumber(1935);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6511 = callmethodChecked(var_v, "y", []);
                                                                          // call case 6: other requests
                                                                          var call6514 = callmethodChecked(var_w, "y", []);
                                                                          var diff6516 = callmethodChecked(call6514, "-(1)", [1], call6511);
                                                                          var prod6519 = callmethodChecked(var_t, "*(1)", [1], diff6516);
                                                                          // call case 6: other requests
                                                                          var call6522 = callmethodChecked(var_v, "y", []);
                                                                          var opresult6524 = callmethodChecked(call6522, "+(1)", [1], prod6519);
                                                                          setLineNumber(1934);    // compilenode member
                                                                          // call case 6: other requests
                                                                          var call6527 = callmethodChecked(var_v, "x", []);
                                                                          // call case 6: other requests
                                                                          var call6530 = callmethodChecked(var_w, "x", []);
                                                                          var diff6532 = callmethodChecked(call6530, "-(1)", [1], call6527);
                                                                          var prod6535 = callmethodChecked(var_t, "*(1)", [1], diff6532);
                                                                          // call case 6: other requests
                                                                          var call6538 = callmethodChecked(var_v, "x", []);
                                                                          var opresult6540 = callmethodChecked(call6538, "+(1)", [1], prod6535);
                                                                          var opresult6542 = callmethodChecked(opresult6540, "@(1)", [1], opresult6524);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6543 = callmethodChecked(this, "dist2(2)", [2], var_p, opresult6542);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6543)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method distToSegmentSquared(_,_,_) does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          return call6543;
                                                                        };
                                                                        func6448.paramTypes = [];
                                                                        func6448.paramTypes.push([]);
                                                                        func6448.paramTypes.push([]);
                                                                        func6448.paramTypes.push([]);
                                                                        func6448.confidential = true;
                                                                        func6448.paramCounts = [3];
                                                                        obj6288.methods["distToSegmentSquared(3)"] = func6448;
                                                                        func6448.definitionLine = 1925;
                                                                        func6448.definitionModule = "rtobjectdraw";
                                                                        var func6544 = function(argcv) {    // method distToSegment(_,_,_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_p = arguments[curarg];
                                                                          curarg++;
                                                                          var var_v = arguments[curarg];
                                                                          curarg++;
                                                                          var var_w = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1938);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in distToSegment (arg list 1), which corresponds to parameter p, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 2 in distToSegment (arg list 1), which corresponds to parameter v, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 3 in distToSegment (arg list 1), which corresponds to parameter w, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1940);    // compilenode member
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6547 = callmethodChecked(this, "distToSegmentSquared(3)", [3], var_p, var_v, var_w);
                                                                          var call6548 = callmethodChecked(call6547, "sqrt", []);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6548)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method distToSegment(_,_,_) does not have " + 
                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                          return call6548;
                                                                        };
                                                                        func6544.paramTypes = [];
                                                                        func6544.paramTypes.push([]);
                                                                        func6544.paramTypes.push([]);
                                                                        func6544.paramTypes.push([]);
                                                                        func6544.paramCounts = [3];
                                                                        obj6288.methods["distToSegment(3)"] = func6544;
                                                                        func6544.definitionLine = 1938;
                                                                        func6544.definitionModule = "rtobjectdraw";
                                                                        var func6549 = function(argcv) {    // method contains(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_pt = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          setLineNumber(1943);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in contains (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1947);    // compilenode num
                                                                          var var_tolerance = new GraceNum(2);
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_tolerance)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("value of def 'tolerance' is not of type Number"));
                                                                          setLineNumber(1948);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6553 = callmethodChecked(this, "start", []);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6555 = callmethodChecked(this, "end", []);
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6556 = callmethodChecked(this, "distToSegment(3)", [3], var_pt, call6553, call6555);
                                                                          var opresult6558 = callmethodChecked(call6556, "<(1)", [1], var_tolerance);
                                                                          if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult6558)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method contains(_) does not have " + 
                                                                                      callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                          return opresult6558;
                                                                        };
                                                                        func6549.paramTypes = [];
                                                                        func6549.paramTypes.push([]);
                                                                        func6549.paramCounts = [1];
                                                                        obj6288.methods["contains(1)"] = func6549;
                                                                        func6549.definitionLine = 1943;
                                                                        func6549.definitionModule = "rtobjectdraw";
                                                                        var func6559 = function(argcv) {    // method asString
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          setModuleName("rtobjectdraw");
                                                                          setLineNumber(1953);    // compilenode string
                                                                          var string6560 = new GraceString("");
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6563 = callmethodChecked(this, "color", []);
                                                                          var string6565 = new GraceString(" with color ");
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6568 = callmethodChecked(this, "end", []);
                                                                          var string6570 = new GraceString(" to ");
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6573 = callmethodChecked(this, "start", []);
                                                                          var string6575 = new GraceString("Line from ");
                                                                          var opresult6577 = callmethodChecked(string6575, "++(1)", [1], call6573);
                                                                          var opresult6579 = callmethodChecked(opresult6577, "++(1)", [1], string6570);
                                                                          var opresult6581 = callmethodChecked(opresult6579, "++(1)", [1], call6568);
                                                                          var opresult6583 = callmethodChecked(opresult6581, "++(1)", [1], string6565);
                                                                          var opresult6585 = callmethodChecked(opresult6583, "++(1)", [1], call6563);
                                                                          var opresult6587 = callmethodChecked(opresult6585, "++(1)", [1], string6560);
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6587)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method asString does not have " + 
                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                          return opresult6587;
                                                                        };
                                                                        func6559.paramCounts = [0];
                                                                        obj6288.methods["asString"] = func6559;
                                                                        func6559.definitionLine = 1951;
                                                                        func6559.definitionModule = "rtobjectdraw";
                                                                        setLineNumber(1848);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        setLineNumber(0);    // compilenode member
                                                                        // call case 3: self.outer request
                                                                        var call6590 = callmethodChecked(superDepth, "outer", [0]);
                                                                        onSelf = true;
                                                                        var call6591 = callmethodChecked(call6590, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_start__39__, var_canvas__39__, this);
                                                                        obj6288.superobj = call6591;
                                                                        if (call6591.data) obj6288.data = call6591.data;
                                                                        if (call6591.hasOwnProperty('_value'))
                                                                            obj6288._value = call6591._value;
                                                                        setLineNumber(1850);    // compilenode identifier
                                                                        obj6288.data["theEnd"] = var_end__39__;
                                                                        var reader_rtobjectdraw_theEnd6592 = function() {
                                                                          return this.data["theEnd"];
                                                                        };
                                                                        obj6288.methods["theEnd"] = reader_rtobjectdraw_theEnd6592;
                                                                        obj6288.data["theEnd"] = var_end__39__;
                                                                        var writer_rtobjectdraw_theEnd6592 = function(argcv, o) {
                                                                          this.data["theEnd"] = o;
                                                                          return GraceDone;
                                                                        };
                                                                        obj6288.methods["theEnd:=(1)"] = writer_rtobjectdraw_theEnd6592;
                                                                        reader_rtobjectdraw_theEnd6592.confidential = true;
                                                                        writer_rtobjectdraw_theEnd6592.confidential = true;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)", [1], var_end__39__)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("initial value of var 'theEnd' is not of type Point"));
                                                                        obj6288.mutable = true;
                                                                        setLineNumber(1864);    // compilenode identifier
                                                                        // call case 4: self request
                                                                        onSelf = true;
                                                                        var call6594 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                        superDepth = origSuperDepth;
                                                                      };
                                                                      obj_init_6288.apply(inheritingObject, []);
                                                                      return obj6288;
                                                                      };
                                                                      func6287.paramTypes = [];
                                                                      func6287.paramTypes.push([]);
                                                                      func6287.paramTypes.push([]);
                                                                      func6287.paramTypes.push([]);
                                                                      this.methods["lineFrom(1)to(1)on(1)$object(1)"] = func6287;
                                                                    setLineNumber(1957);    // compilenode method
                                                                    var func6595 = function(argcv) {    // method lineFrom(_)length(_)direction(_)on(_)
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      var var_pt = arguments[curarg];
                                                                      curarg++;
                                                                      var var_len = arguments[curarg];
                                                                      curarg++;
                                                                      var var_radians = arguments[curarg];
                                                                      curarg++;
                                                                      var var_canvas__39__ = arguments[curarg];
                                                                      curarg++;
                                                                      // Start argument checking
                                                                      curarg = 1;
                                                                      if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                  callmethod(var_Point, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in length (arg list 2), which corresponds to parameter len, does not have " + 
                                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in direction (arg list 3), which corresponds to parameter radians, does not have " + 
                                                                                  callmethod(var_Number, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      setLineNumber(1958);    // compilenode identifier
                                                                      if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                                  callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                      curarg++;
                                                                      // End argument checking
                                                                      setModuleName("rtobjectdraw");
                                                                      setLineNumber(1957);    // compilenode object
                                                                      var obj6596 = Grace_allocObject(null, "lineFrom(_)length(_)direction(_)on(_)");
                                                                      obj6596.definitionModule = "rtobjectdraw";
                                                                      obj6596.definitionLine = 1957;
                                                                      obj6596.outer = this;
                                                                      var reader_rtobjectdraw_outer6597 = function() {
                                                                        return this.outer;
                                                                      };
                                                                      obj6596.methods["outer"] = reader_rtobjectdraw_outer6597;
                                                                      var obj_init_6596 = function() {
                                                                        var origSuperDepth = superDepth;
                                                                        superDepth = obj6596;
                                                                        setLineNumber(1963);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        var call6600 = callmethodChecked(var_math, "sin(1)", [1], var_radians);
                                                                        // call case 6: other requests
                                                                        var call6603 = callmethodChecked(var_len, "prefix-", [0]);
                                                                        var prod6605 = callmethodChecked(call6603, "*(1)", [1], call6600);
                                                                        setLineNumber(1962);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        var call6608 = callmethodChecked(var_math, "cos(1)", [1], var_radians);
                                                                        var prod6611 = callmethodChecked(var_len, "*(1)", [1], call6608);
                                                                        var opresult6613 = callmethodChecked(prod6611, "@(1)", [1], prod6605);
                                                                        var opresult6616 = callmethodChecked(var_pt, "+(1)", [1], opresult6613);
                                                                        setLineNumber(1963);    // compilenode identifier
                                                                        // call case 6: other requests
                                                                        setLineNumber(0);    // compilenode member
                                                                        // call case 3: self.outer request
                                                                        var call6618 = callmethodChecked(superDepth, "outer", [0]);
                                                                        onSelf = true;
                                                                        var call6619 = callmethodChecked(call6618, "lineFrom(1)to(1)on(1)$object(1)", [1, 1, 1, 1], var_pt, opresult6616, var_canvas__39__, this);
                                                                        obj6596.superobj = call6619;
                                                                        if (call6619.data) obj6596.data = call6619.data;
                                                                        if (call6619.hasOwnProperty('_value'))
                                                                            obj6596._value = call6619._value;
                                                                        superDepth = origSuperDepth;
                                                                      };
                                                                      obj_init_6596.apply(obj6596, []);
                                                                      setLineNumber(1957);    // return value
                                                                      if (!Grace_isTrue(callmethod(var_Line, "match(1)", [1], obj6596)))
                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                              new GraceString("result of method lineFrom(_)length(_)direction(_)on(_) does not have " + 
                                                                                  callmethod(var_Line, "asString", [0])._value + "."));
                                                                      return obj6596;
                                                                    };
                                                                    func6595.paramTypes = [];
                                                                    func6595.paramTypes.push([]);
                                                                    func6595.paramTypes.push([type_Number, "len"]);
                                                                    func6595.paramTypes.push([type_Number, "radians"]);
                                                                    func6595.paramTypes.push([]);
                                                                    func6595.paramCounts = [1, 1, 1, 1];
                                                                    this.methods["lineFrom(1)length(1)direction(1)on(1)"] = func6595;
                                                                    func6595.definitionLine = 1957;
                                                                    func6595.definitionModule = "rtobjectdraw";
                                                                      var func6620 = function(argcv) {    // method lineFrom(_)length(_)direction(_)on(_)$object(_)
                                                                        var curarg = 1;
                                                                        var var_pt = arguments[curarg];
                                                                        curarg++;
                                                                        var var_len = arguments[curarg];
                                                                        curarg++;
                                                                        var var_radians = arguments[curarg];
                                                                        curarg++;
                                                                        var var_canvas__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        var inheritingObject = arguments[curarg++];
                                                                        // Start argument processing
                                                                        curarg = 1;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in lineFrom (arg list 1), which corresponds to parameter pt, does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in length (arg list 2), which corresponds to parameter len, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in direction (arg list 3), which corresponds to parameter radians, does not have " + 
                                                                                    callmethod(var_Number, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        setLineNumber(1958);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in on (arg list 4), which corresponds to parameter canvas', does not have " + 
                                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument processing
                                                                        setModuleName("rtobjectdraw");
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var obj6621 = Grace_allocObject(null, "lineFrom(1)length(1)direction(1)on(1)");
                                                                        obj6621.definitionModule = "rtobjectdraw";
                                                                        obj6621.definitionLine = 1957;
                                                                        var inho6621 = inheritingObject;
                                                                        while (inho6621.superobj) inho6621 = inho6621.superobj;
                                                                        inho6621.superobj = obj6621;
                                                                        obj6621.data = inheritingObject.data;
                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                          obj6621._value = inheritingObject._value;
                                                                        obj6621.outer = this;
                                                                        var reader_rtobjectdraw_outer6622 = function() {
                                                                          return this.outer;
                                                                        };
                                                                        obj6621.methods["outer"] = reader_rtobjectdraw_outer6622;
                                                                        var obj_init_6621 = function() {
                                                                          var origSuperDepth = superDepth;
                                                                          superDepth = obj6621;
                                                                          setLineNumber(1963);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          var call6625 = callmethodChecked(var_math, "sin(1)", [1], var_radians);
                                                                          // call case 6: other requests
                                                                          var call6628 = callmethodChecked(var_len, "prefix-", [0]);
                                                                          var prod6630 = callmethodChecked(call6628, "*(1)", [1], call6625);
                                                                          setLineNumber(1962);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          var call6633 = callmethodChecked(var_math, "cos(1)", [1], var_radians);
                                                                          var prod6636 = callmethodChecked(var_len, "*(1)", [1], call6633);
                                                                          var opresult6638 = callmethodChecked(prod6636, "@(1)", [1], prod6630);
                                                                          var opresult6641 = callmethodChecked(var_pt, "+(1)", [1], opresult6638);
                                                                          setLineNumber(1963);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          setLineNumber(0);    // compilenode member
                                                                          // call case 3: self.outer request
                                                                          var call6643 = callmethodChecked(superDepth, "outer", [0]);
                                                                          onSelf = true;
                                                                          var call6644 = callmethodChecked(call6643, "lineFrom(1)to(1)on(1)$object(1)", [1, 1, 1, 1], var_pt, opresult6641, var_canvas__39__, this);
                                                                          obj6621.superobj = call6644;
                                                                          if (call6644.data) obj6621.data = call6644.data;
                                                                          if (call6644.hasOwnProperty('_value'))
                                                                              obj6621._value = call6644._value;
                                                                          superDepth = origSuperDepth;
                                                                        };
                                                                        obj_init_6621.apply(inheritingObject, []);
                                                                        return obj6621;
                                                                        };
                                                                        func6620.paramTypes = [];
                                                                        func6620.paramTypes.push([]);
                                                                        func6620.paramTypes.push([type_Number, "len"]);
                                                                        func6620.paramTypes.push([type_Number, "radians"]);
                                                                        func6620.paramTypes.push([]);
                                                                        this.methods["lineFrom(1)length(1)direction(1)on(1)$object(1)"] = func6620;
                                                                      setLineNumber(1966);    // compilenode method
                                                                      var func6645 = function(argcv) {    // method textAt(_)with(_)on(_)
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        var var_location__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        var var_contents__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        var var_canvas__39__ = arguments[curarg];
                                                                        curarg++;
                                                                        // Start argument checking
                                                                        curarg = 1;
                                                                        if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in textAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                                    callmethod(var_Point, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in with (arg list 2), which corresponds to parameter contents', does not have " + 
                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        setLineNumber(1967);    // compilenode identifier
                                                                        if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                    callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                        curarg++;
                                                                        // End argument checking
                                                                        setModuleName("rtobjectdraw");
                                                                        setLineNumber(1966);    // compilenode object
                                                                        var obj6646 = Grace_allocObject(null, "textAt(_)with(_)on(_)");
                                                                        obj6646.definitionModule = "rtobjectdraw";
                                                                        obj6646.definitionLine = 1966;
                                                                        obj6646.outer = this;
                                                                        var reader_rtobjectdraw_outer6647 = function() {
                                                                          return this.outer;
                                                                        };
                                                                        obj6646.methods["outer"] = reader_rtobjectdraw_outer6647;
                                                                        var obj_init_6646 = function() {
                                                                          var origSuperDepth = superDepth;
                                                                          superDepth = obj6646;
                                                                          var func6648 = function(argcv) {    // method width
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(1977);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6650 = callmethodChecked(this, "wid", []);
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6650)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method width does not have " + 
                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                            return call6650;
                                                                          };
                                                                          func6648.paramCounts = [0];
                                                                          obj6646.methods["width"] = func6648;
                                                                          func6648.definitionLine = 1976;
                                                                          func6648.definitionModule = "rtobjectdraw";
                                                                          var func6651 = function(argcv) {    // method draw(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_ctx = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            setLineNumber(1981);    // compilenode identifier
                                                                            if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                        callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(1982);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6653 = callmethodChecked(this, "color", []);
                                                                            var var_col = call6653;
                                                                            setLineNumber(1983);    // compilenode member
                                                                            // call case 6: other requests
                                                                            var call6655 = callmethodChecked(var_ctx, "save", []);
                                                                            setLineNumber(1984);    // compilenode string
                                                                            var string6657 = new GraceString("pt sans-serif");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6660 = callmethodChecked(this, "fontSize", []);
                                                                            var string6662 = new GraceString("");
                                                                            var opresult6664 = callmethodChecked(string6662, "++(1)", [1], call6660);
                                                                            var opresult6666 = callmethodChecked(opresult6664, "++(1)", [1], string6657);
                                                                            // call case 6: other requests
                                                                            var call6667 = callmethodChecked(var_ctx, "font:=(1)", [1], opresult6666);
                                                                            setLineNumber(1985);    // compilenode string
                                                                            var string6669 = new GraceString(")");
                                                                            // call case 6: other requests
                                                                            var call6672 = callmethodChecked(var_col, "blue", []);
                                                                            var string6674 = new GraceString(", ");
                                                                            // call case 6: other requests
                                                                            var call6677 = callmethodChecked(var_col, "green", []);
                                                                            var string6679 = new GraceString(", ");
                                                                            // call case 6: other requests
                                                                            var call6682 = callmethodChecked(var_col, "red", []);
                                                                            var string6684 = new GraceString("rgb(");
                                                                            var opresult6686 = callmethodChecked(string6684, "++(1)", [1], call6682);
                                                                            var opresult6688 = callmethodChecked(opresult6686, "++(1)", [1], string6679);
                                                                            var opresult6690 = callmethodChecked(opresult6688, "++(1)", [1], call6677);
                                                                            var opresult6692 = callmethodChecked(opresult6690, "++(1)", [1], string6674);
                                                                            var opresult6694 = callmethodChecked(opresult6692, "++(1)", [1], call6672);
                                                                            var opresult6696 = callmethodChecked(opresult6694, "++(1)", [1], string6669);
                                                                            // call case 6: other requests
                                                                            var call6697 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult6696);
                                                                            setLineNumber(1986);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6700 = callmethodChecked(this, "contents", []);
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6703 = callmethodChecked(this, "location", []);
                                                                            var call6704 = callmethodChecked(call6703, "x", []);
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6707 = callmethodChecked(this, "location", []);
                                                                            var call6708 = callmethodChecked(call6707, "y", []);
                                                                            // call case 6: other requests
                                                                            var call6709 = callmethodChecked(var_ctx, "fillText(3)", [3], call6700, call6704, call6708);
                                                                            setLineNumber(1987);    // compilenode member
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6714 = callmethodChecked(this, "theContents", []);
                                                                            // call case 6: other requests
                                                                            var call6715 = callmethodChecked(var_ctx, "measureText(1)", [1], call6714);
                                                                            var call6716 = callmethodChecked(call6715, "width", []);
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6717 = callmethodChecked(this, "wid:=(1)", [1], call6716);
                                                                            setLineNumber(1988);    // compilenode member
                                                                            // call case 6: other requests
                                                                            var call6719 = callmethodChecked(var_ctx, "restore", []);
                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6719)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method draw(_) does not have " + 
                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                            return call6719;
                                                                          };
                                                                          func6651.paramTypes = [];
                                                                          func6651.paramTypes.push([]);
                                                                          func6651.paramCounts = [1];
                                                                          obj6646.methods["draw(1)"] = func6651;
                                                                          func6651.definitionLine = 1981;
                                                                          func6651.definitionModule = "rtobjectdraw";
                                                                          var func6720 = function(argcv) {    // method contents
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(1993);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6722 = callmethodChecked(this, "theContents", []);
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6722)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method contents does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            return call6722;
                                                                          };
                                                                          func6720.paramCounts = [0];
                                                                          obj6646.methods["contents"] = func6720;
                                                                          func6720.definitionLine = 1992;
                                                                          func6720.definitionModule = "rtobjectdraw";
                                                                          var func6723 = function(argcv) {    // method contents:=(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_newContents = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            setLineNumber(1997);    // compilenode identifier
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter newContents, does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(1998);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6725 = callmethodChecked(this, "theContents:=(1)", [1], var_newContents);
                                                                            setLineNumber(1999);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6727 = callmethodChecked(this, "notifyRedraw", []);
                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6727)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method contents:=(_) does not have " + 
                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                            return call6727;
                                                                          };
                                                                          func6723.paramTypes = [];
                                                                          func6723.paramTypes.push([type_String, "newContents"]);
                                                                          func6723.paramCounts = [1];
                                                                          obj6646.methods["contents:=(1)"] = func6723;
                                                                          func6723.definitionLine = 1997;
                                                                          func6723.definitionModule = "rtobjectdraw";
                                                                          var func6728 = function(argcv) {    // method fontSize:=(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_size__39__ = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            setLineNumber(2003);    // compilenode identifier
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in fontSize:= (arg list 1), which corresponds to parameter size', does not have " + 
                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(2004);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6730 = callmethodChecked(this, "fsize:=(1)", [1], var_size__39__);
                                                                            setLineNumber(2005);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6732 = callmethodChecked(this, "notifyRedraw", []);
                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6732)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method fontSize:=(_) does not have " + 
                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                            return call6732;
                                                                          };
                                                                          func6728.paramTypes = [];
                                                                          func6728.paramTypes.push([type_Number, "size'"]);
                                                                          func6728.paramCounts = [1];
                                                                          obj6646.methods["fontSize:=(1)"] = func6728;
                                                                          func6728.definitionLine = 2003;
                                                                          func6728.definitionModule = "rtobjectdraw";
                                                                          var func6733 = function(argcv) {    // method fontSize
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(2010);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6735 = callmethodChecked(this, "fsize", []);
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6735)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method fontSize does not have " + 
                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                            return call6735;
                                                                          };
                                                                          func6733.paramCounts = [0];
                                                                          obj6646.methods["fontSize"] = func6733;
                                                                          func6733.definitionLine = 2009;
                                                                          func6733.definitionModule = "rtobjectdraw";
                                                                          var func6736 = function(argcv) {    // method asString
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            setModuleName("rtobjectdraw");
                                                                            setLineNumber(2015);    // compilenode string
                                                                            var string6737 = new GraceString("");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6740 = callmethodChecked(this, "color", []);
                                                                            var string6742 = new GraceString(" and color ");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6745 = callmethodChecked(this, "contents", []);
                                                                            var string6747 = new GraceString(") with value ");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6750 = callmethodChecked(this, "y", []);
                                                                            var string6752 = new GraceString(",");
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6755 = callmethodChecked(this, "x", []);
                                                                            var string6757 = new GraceString("Text at (");
                                                                            var opresult6759 = callmethodChecked(string6757, "++(1)", [1], call6755);
                                                                            var opresult6761 = callmethodChecked(opresult6759, "++(1)", [1], string6752);
                                                                            var opresult6763 = callmethodChecked(opresult6761, "++(1)", [1], call6750);
                                                                            var opresult6765 = callmethodChecked(opresult6763, "++(1)", [1], string6747);
                                                                            var opresult6767 = callmethodChecked(opresult6765, "++(1)", [1], call6745);
                                                                            var opresult6769 = callmethodChecked(opresult6767, "++(1)", [1], string6742);
                                                                            var opresult6771 = callmethodChecked(opresult6769, "++(1)", [1], call6740);
                                                                            var opresult6773 = callmethodChecked(opresult6771, "++(1)", [1], string6737);
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6773)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method asString does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            return opresult6773;
                                                                          };
                                                                          func6736.paramCounts = [0];
                                                                          obj6646.methods["asString"] = func6736;
                                                                          func6736.definitionLine = 2014;
                                                                          func6736.definitionModule = "rtobjectdraw";
                                                                          setLineNumber(1970);    // compilenode identifier
                                                                          // call case 6: other requests
                                                                          setLineNumber(0);    // compilenode member
                                                                          // call case 3: self.outer request
                                                                          var call6776 = callmethodChecked(superDepth, "outer", [0]);
                                                                          onSelf = true;
                                                                          var call6777 = callmethodChecked(call6776, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                                          obj6646.superobj = call6777;
                                                                          if (call6777.data) obj6646.data = call6777.data;
                                                                          if (call6777.hasOwnProperty('_value'))
                                                                              obj6646._value = call6777._value;
                                                                          setLineNumber(1972);    // compilenode identifier
                                                                          obj6646.data["theContents"] = var_contents__39__;
                                                                          var reader_rtobjectdraw_theContents6778 = function() {
                                                                            return this.data["theContents"];
                                                                          };
                                                                          obj6646.methods["theContents"] = reader_rtobjectdraw_theContents6778;
                                                                          obj6646.data["theContents"] = var_contents__39__;
                                                                          var writer_rtobjectdraw_theContents6778 = function(argcv, o) {
                                                                            this.data["theContents"] = o;
                                                                            return GraceDone;
                                                                          };
                                                                          obj6646.methods["theContents:=(1)"] = writer_rtobjectdraw_theContents6778;
                                                                          reader_rtobjectdraw_theContents6778.confidential = true;
                                                                          writer_rtobjectdraw_theContents6778.confidential = true;
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_contents__39__)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'theContents' is not of type String"));
                                                                          obj6646.mutable = true;
                                                                          setLineNumber(1973);    // compilenode num
                                                                          obj6646.data["fsize"] = new GraceNum(10);
                                                                          var reader_rtobjectdraw_fsize6779 = function() {
                                                                            return this.data["fsize"];
                                                                          };
                                                                          obj6646.methods["fsize"] = reader_rtobjectdraw_fsize6779;
                                                                          obj6646.data["fsize"] = new GraceNum(10);
                                                                          var writer_rtobjectdraw_fsize6779 = function(argcv, o) {
                                                                            this.data["fsize"] = o;
                                                                            return GraceDone;
                                                                          };
                                                                          obj6646.methods["fsize:=(1)"] = writer_rtobjectdraw_fsize6779;
                                                                          writer_rtobjectdraw_fsize6779.confidential = true;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], new GraceNum(10))))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'fsize' is not of type Number"));
                                                                          obj6646.mutable = true;
                                                                          setLineNumber(1974);    // compilenode member
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6782 = callmethodChecked(this, "fsize", []);
                                                                          // call case 6: other requests
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6786 = callmethodChecked(this, "theContents", []);
                                                                          var call6787 = callmethodChecked(call6786, "size", []);
                                                                          var prod6789 = callmethodChecked(call6787, "*(1)", [1], call6782);
                                                                          var quotient6791 = callmethodChecked(prod6789, "/(1)", [1], new GraceNum(2));
                                                                          obj6646.data["wid"] = quotient6791;
                                                                          var reader_rtobjectdraw_wid6792 = function() {
                                                                            return this.data["wid"];
                                                                          };
                                                                          obj6646.methods["wid"] = reader_rtobjectdraw_wid6792;
                                                                          obj6646.data["wid"] = quotient6791;
                                                                          var writer_rtobjectdraw_wid6792 = function(argcv, o) {
                                                                            this.data["wid"] = o;
                                                                            return GraceDone;
                                                                          };
                                                                          obj6646.methods["wid:=(1)"] = writer_rtobjectdraw_wid6792;
                                                                          reader_rtobjectdraw_wid6792.confidential = true;
                                                                          writer_rtobjectdraw_wid6792.confidential = true;
                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], quotient6791)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("initial value of var 'wid' is not of type Number"));
                                                                          obj6646.mutable = true;
                                                                          setLineNumber(2018);    // compilenode identifier
                                                                          // call case 4: self request
                                                                          onSelf = true;
                                                                          var call6794 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                          superDepth = origSuperDepth;
                                                                        };
                                                                        obj_init_6646.apply(obj6646, []);
                                                                        setLineNumber(1966);    // return value
                                                                        if (!Grace_isTrue(callmethod(var_Text, "match(1)", [1], obj6646)))
                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                new GraceString("result of method textAt(_)with(_)on(_) does not have " + 
                                                                                    callmethod(var_Text, "asString", [0])._value + "."));
                                                                        return obj6646;
                                                                      };
                                                                      func6645.paramTypes = [];
                                                                      func6645.paramTypes.push([]);
                                                                      func6645.paramTypes.push([type_String, "contents'"]);
                                                                      func6645.paramTypes.push([]);
                                                                      func6645.paramCounts = [1, 1, 1];
                                                                      this.methods["textAt(1)with(1)on(1)"] = func6645;
                                                                      func6645.definitionLine = 1966;
                                                                      func6645.definitionModule = "rtobjectdraw";
                                                                        var func6795 = function(argcv) {    // method textAt(_)with(_)on(_)$object(_)
                                                                          var curarg = 1;
                                                                          var var_location__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          var var_contents__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          var var_canvas__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          var inheritingObject = arguments[curarg++];
                                                                          // Start argument processing
                                                                          curarg = 1;
                                                                          if (!Grace_isTrue(callmethod(var_Point, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in textAt (arg list 1), which corresponds to parameter location', does not have " + 
                                                                                      callmethod(var_Point, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in with (arg list 2), which corresponds to parameter contents', does not have " + 
                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          setLineNumber(1967);    // compilenode identifier
                                                                          if (!Grace_isTrue(callmethod(var_DrawingCanvas, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in on (arg list 3), which corresponds to parameter canvas', does not have " + 
                                                                                      callmethod(var_DrawingCanvas, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument processing
                                                                          setModuleName("rtobjectdraw");
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var obj6796 = Grace_allocObject(null, "textAt(1)with(1)on(1)");
                                                                          obj6796.definitionModule = "rtobjectdraw";
                                                                          obj6796.definitionLine = 1966;
                                                                          var inho6796 = inheritingObject;
                                                                          while (inho6796.superobj) inho6796 = inho6796.superobj;
                                                                          inho6796.superobj = obj6796;
                                                                          obj6796.data = inheritingObject.data;
                                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                                            obj6796._value = inheritingObject._value;
                                                                          obj6796.outer = this;
                                                                          var reader_rtobjectdraw_outer6797 = function() {
                                                                            return this.outer;
                                                                          };
                                                                          obj6796.methods["outer"] = reader_rtobjectdraw_outer6797;
                                                                          var obj_init_6796 = function() {
                                                                            var origSuperDepth = superDepth;
                                                                            superDepth = obj6796;
                                                                            var func6798 = function(argcv) {    // method width
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(1977);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6800 = callmethodChecked(this, "wid", []);
                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6800)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method width does not have " + 
                                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                                              return call6800;
                                                                            };
                                                                            func6798.paramCounts = [0];
                                                                            obj6796.methods["width"] = func6798;
                                                                            func6798.definitionLine = 1976;
                                                                            func6798.definitionModule = "rtobjectdraw";
                                                                            var func6801 = function(argcv) {    // method draw(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_ctx = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(1981);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in draw (arg list 1), which corresponds to parameter ctx, does not have " + 
                                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(1982);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6803 = callmethodChecked(this, "color", []);
                                                                              var var_col = call6803;
                                                                              setLineNumber(1983);    // compilenode member
                                                                              // call case 6: other requests
                                                                              var call6805 = callmethodChecked(var_ctx, "save", []);
                                                                              setLineNumber(1984);    // compilenode string
                                                                              var string6807 = new GraceString("pt sans-serif");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6810 = callmethodChecked(this, "fontSize", []);
                                                                              var string6812 = new GraceString("");
                                                                              var opresult6814 = callmethodChecked(string6812, "++(1)", [1], call6810);
                                                                              var opresult6816 = callmethodChecked(opresult6814, "++(1)", [1], string6807);
                                                                              // call case 6: other requests
                                                                              var call6817 = callmethodChecked(var_ctx, "font:=(1)", [1], opresult6816);
                                                                              setLineNumber(1985);    // compilenode string
                                                                              var string6819 = new GraceString(")");
                                                                              // call case 6: other requests
                                                                              var call6822 = callmethodChecked(var_col, "blue", []);
                                                                              var string6824 = new GraceString(", ");
                                                                              // call case 6: other requests
                                                                              var call6827 = callmethodChecked(var_col, "green", []);
                                                                              var string6829 = new GraceString(", ");
                                                                              // call case 6: other requests
                                                                              var call6832 = callmethodChecked(var_col, "red", []);
                                                                              var string6834 = new GraceString("rgb(");
                                                                              var opresult6836 = callmethodChecked(string6834, "++(1)", [1], call6832);
                                                                              var opresult6838 = callmethodChecked(opresult6836, "++(1)", [1], string6829);
                                                                              var opresult6840 = callmethodChecked(opresult6838, "++(1)", [1], call6827);
                                                                              var opresult6842 = callmethodChecked(opresult6840, "++(1)", [1], string6824);
                                                                              var opresult6844 = callmethodChecked(opresult6842, "++(1)", [1], call6822);
                                                                              var opresult6846 = callmethodChecked(opresult6844, "++(1)", [1], string6819);
                                                                              // call case 6: other requests
                                                                              var call6847 = callmethodChecked(var_ctx, "fillStyle:=(1)", [1], opresult6846);
                                                                              setLineNumber(1986);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6850 = callmethodChecked(this, "contents", []);
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6853 = callmethodChecked(this, "location", []);
                                                                              var call6854 = callmethodChecked(call6853, "x", []);
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6857 = callmethodChecked(this, "location", []);
                                                                              var call6858 = callmethodChecked(call6857, "y", []);
                                                                              // call case 6: other requests
                                                                              var call6859 = callmethodChecked(var_ctx, "fillText(3)", [3], call6850, call6854, call6858);
                                                                              setLineNumber(1987);    // compilenode member
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6864 = callmethodChecked(this, "theContents", []);
                                                                              // call case 6: other requests
                                                                              var call6865 = callmethodChecked(var_ctx, "measureText(1)", [1], call6864);
                                                                              var call6866 = callmethodChecked(call6865, "width", []);
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6867 = callmethodChecked(this, "wid:=(1)", [1], call6866);
                                                                              setLineNumber(1988);    // compilenode member
                                                                              // call case 6: other requests
                                                                              var call6869 = callmethodChecked(var_ctx, "restore", []);
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6869)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method draw(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return call6869;
                                                                            };
                                                                            func6801.paramTypes = [];
                                                                            func6801.paramTypes.push([]);
                                                                            func6801.paramCounts = [1];
                                                                            obj6796.methods["draw(1)"] = func6801;
                                                                            func6801.definitionLine = 1981;
                                                                            func6801.definitionModule = "rtobjectdraw";
                                                                            var func6870 = function(argcv) {    // method contents
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(1993);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6872 = callmethodChecked(this, "theContents", []);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6872)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return call6872;
                                                                            };
                                                                            func6870.paramCounts = [0];
                                                                            obj6796.methods["contents"] = func6870;
                                                                            func6870.definitionLine = 1992;
                                                                            func6870.definitionModule = "rtobjectdraw";
                                                                            var func6873 = function(argcv) {    // method contents:=(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_newContents = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(1997);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter newContents, does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(1998);    // compilenode identifier
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6875 = callmethodChecked(this, "theContents:=(1)", [1], var_newContents);
                                                                              setLineNumber(1999);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6877 = callmethodChecked(this, "notifyRedraw", []);
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6877)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents:=(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return call6877;
                                                                            };
                                                                            func6873.paramTypes = [];
                                                                            func6873.paramTypes.push([type_String, "newContents"]);
                                                                            func6873.paramCounts = [1];
                                                                            obj6796.methods["contents:=(1)"] = func6873;
                                                                            func6873.definitionLine = 1997;
                                                                            func6873.definitionModule = "rtobjectdraw";
                                                                            var func6878 = function(argcv) {    // method fontSize:=(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_size__39__ = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(2003);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in fontSize:= (arg list 1), which corresponds to parameter size', does not have " + 
                                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(2004);    // compilenode identifier
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6880 = callmethodChecked(this, "fsize:=(1)", [1], var_size__39__);
                                                                              setLineNumber(2005);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6882 = callmethodChecked(this, "notifyRedraw", []);
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call6882)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method fontSize:=(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return call6882;
                                                                            };
                                                                            func6878.paramTypes = [];
                                                                            func6878.paramTypes.push([type_Number, "size'"]);
                                                                            func6878.paramCounts = [1];
                                                                            obj6796.methods["fontSize:=(1)"] = func6878;
                                                                            func6878.definitionLine = 2003;
                                                                            func6878.definitionModule = "rtobjectdraw";
                                                                            var func6883 = function(argcv) {    // method fontSize
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(2010);    // compilenode member
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6885 = callmethodChecked(this, "fsize", []);
                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call6885)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method fontSize does not have " + 
                                                                                          callmethod(var_Number, "asString", [0])._value + "."));
                                                                              return call6885;
                                                                            };
                                                                            func6883.paramCounts = [0];
                                                                            obj6796.methods["fontSize"] = func6883;
                                                                            func6883.definitionLine = 2009;
                                                                            func6883.definitionModule = "rtobjectdraw";
                                                                            var func6886 = function(argcv) {    // method asString
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(2015);    // compilenode string
                                                                              var string6887 = new GraceString("");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6890 = callmethodChecked(this, "color", []);
                                                                              var string6892 = new GraceString(" and color ");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6895 = callmethodChecked(this, "contents", []);
                                                                              var string6897 = new GraceString(") with value ");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6900 = callmethodChecked(this, "y", []);
                                                                              var string6902 = new GraceString(",");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6905 = callmethodChecked(this, "x", []);
                                                                              var string6907 = new GraceString("Text at (");
                                                                              var opresult6909 = callmethodChecked(string6907, "++(1)", [1], call6905);
                                                                              var opresult6911 = callmethodChecked(opresult6909, "++(1)", [1], string6902);
                                                                              var opresult6913 = callmethodChecked(opresult6911, "++(1)", [1], call6900);
                                                                              var opresult6915 = callmethodChecked(opresult6913, "++(1)", [1], string6897);
                                                                              var opresult6917 = callmethodChecked(opresult6915, "++(1)", [1], call6895);
                                                                              var opresult6919 = callmethodChecked(opresult6917, "++(1)", [1], string6892);
                                                                              var opresult6921 = callmethodChecked(opresult6919, "++(1)", [1], call6890);
                                                                              var opresult6923 = callmethodChecked(opresult6921, "++(1)", [1], string6887);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6923)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method asString does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return opresult6923;
                                                                            };
                                                                            func6886.paramCounts = [0];
                                                                            obj6796.methods["asString"] = func6886;
                                                                            func6886.definitionLine = 2014;
                                                                            func6886.definitionModule = "rtobjectdraw";
                                                                            setLineNumber(1970);    // compilenode identifier
                                                                            // call case 6: other requests
                                                                            setLineNumber(0);    // compilenode member
                                                                            // call case 3: self.outer request
                                                                            var call6926 = callmethodChecked(superDepth, "outer", [0]);
                                                                            onSelf = true;
                                                                            var call6927 = callmethodChecked(call6926, "drawableAt(1)on(1)$object(1)", [1, 1, 1], var_location__39__, var_canvas__39__, this);
                                                                            obj6796.superobj = call6927;
                                                                            if (call6927.data) obj6796.data = call6927.data;
                                                                            if (call6927.hasOwnProperty('_value'))
                                                                                obj6796._value = call6927._value;
                                                                            setLineNumber(1972);    // compilenode identifier
                                                                            obj6796.data["theContents"] = var_contents__39__;
                                                                            var reader_rtobjectdraw_theContents6928 = function() {
                                                                              return this.data["theContents"];
                                                                            };
                                                                            obj6796.methods["theContents"] = reader_rtobjectdraw_theContents6928;
                                                                            obj6796.data["theContents"] = var_contents__39__;
                                                                            var writer_rtobjectdraw_theContents6928 = function(argcv, o) {
                                                                              this.data["theContents"] = o;
                                                                              return GraceDone;
                                                                            };
                                                                            obj6796.methods["theContents:=(1)"] = writer_rtobjectdraw_theContents6928;
                                                                            reader_rtobjectdraw_theContents6928.confidential = true;
                                                                            writer_rtobjectdraw_theContents6928.confidential = true;
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], var_contents__39__)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("initial value of var 'theContents' is not of type String"));
                                                                            obj6796.mutable = true;
                                                                            setLineNumber(1973);    // compilenode num
                                                                            obj6796.data["fsize"] = new GraceNum(10);
                                                                            var reader_rtobjectdraw_fsize6929 = function() {
                                                                              return this.data["fsize"];
                                                                            };
                                                                            obj6796.methods["fsize"] = reader_rtobjectdraw_fsize6929;
                                                                            obj6796.data["fsize"] = new GraceNum(10);
                                                                            var writer_rtobjectdraw_fsize6929 = function(argcv, o) {
                                                                              this.data["fsize"] = o;
                                                                              return GraceDone;
                                                                            };
                                                                            obj6796.methods["fsize:=(1)"] = writer_rtobjectdraw_fsize6929;
                                                                            writer_rtobjectdraw_fsize6929.confidential = true;
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], new GraceNum(10))))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("initial value of var 'fsize' is not of type Number"));
                                                                            obj6796.mutable = true;
                                                                            setLineNumber(1974);    // compilenode member
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6932 = callmethodChecked(this, "fsize", []);
                                                                            // call case 6: other requests
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6936 = callmethodChecked(this, "theContents", []);
                                                                            var call6937 = callmethodChecked(call6936, "size", []);
                                                                            var prod6939 = callmethodChecked(call6937, "*(1)", [1], call6932);
                                                                            var quotient6941 = callmethodChecked(prod6939, "/(1)", [1], new GraceNum(2));
                                                                            obj6796.data["wid"] = quotient6941;
                                                                            var reader_rtobjectdraw_wid6942 = function() {
                                                                              return this.data["wid"];
                                                                            };
                                                                            obj6796.methods["wid"] = reader_rtobjectdraw_wid6942;
                                                                            obj6796.data["wid"] = quotient6941;
                                                                            var writer_rtobjectdraw_wid6942 = function(argcv, o) {
                                                                              this.data["wid"] = o;
                                                                              return GraceDone;
                                                                            };
                                                                            obj6796.methods["wid:=(1)"] = writer_rtobjectdraw_wid6942;
                                                                            reader_rtobjectdraw_wid6942.confidential = true;
                                                                            writer_rtobjectdraw_wid6942.confidential = true;
                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], quotient6941)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("initial value of var 'wid' is not of type Number"));
                                                                            obj6796.mutable = true;
                                                                            setLineNumber(2018);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6944 = callmethodChecked(this, "addToCanvas(1)", [1], var_canvas__39__);
                                                                            superDepth = origSuperDepth;
                                                                          };
                                                                          obj_init_6796.apply(inheritingObject, []);
                                                                          return obj6796;
                                                                          };
                                                                          func6795.paramTypes = [];
                                                                          func6795.paramTypes.push([]);
                                                                          func6795.paramTypes.push([type_String, "contents'"]);
                                                                          func6795.paramTypes.push([]);
                                                                          this.methods["textAt(1)with(1)on(1)$object(1)"] = func6795;
                                                                        setLineNumber(2021);    // compilenode method
                                                                        var func6945 = function(argcv) {    // method textBoxWith(_)
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          var var_contents__39__ = arguments[curarg];
                                                                          curarg++;
                                                                          // Start argument checking
                                                                          curarg = 1;
                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("argument 1 in textBoxWith (arg list 1), which corresponds to parameter contents', does not have " + 
                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                          curarg++;
                                                                          // End argument checking
                                                                          setModuleName("rtobjectdraw");
                                                                          var obj6946 = Grace_allocObject(null, "textBoxWith(_)");
                                                                          obj6946.definitionModule = "rtobjectdraw";
                                                                          obj6946.definitionLine = 2021;
                                                                          obj6946.outer = this;
                                                                          var reader_rtobjectdraw_outer6947 = function() {
                                                                            return this.outer;
                                                                          };
                                                                          obj6946.methods["outer"] = reader_rtobjectdraw_outer6947;
                                                                          var obj_init_6946 = function() {
                                                                            var origSuperDepth = superDepth;
                                                                            superDepth = obj6946;
                                                                            var func6948 = function(argcv) {    // method contents
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(2029);    // compilenode member
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6951 = callmethodChecked(this, "element", []);
                                                                              var call6952 = callmethodChecked(call6951, "textContent", []);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6952)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return call6952;
                                                                            };
                                                                            func6948.paramCounts = [0];
                                                                            obj6946.methods["contents"] = func6948;
                                                                            func6948.definitionLine = 2027;
                                                                            func6948.definitionModule = "rtobjectdraw";
                                                                            var func6953 = function(argcv) {    // method contents:=(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_value = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              setLineNumber(2032);    // compilenode identifier
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(2034);    // compilenode identifier
                                                                              // call case 6: other requests
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6956 = callmethodChecked(this, "element", []);
                                                                              var call6957 = callmethodChecked(call6956, "textContent:=(1)", [1], var_value);
                                                                              setLineNumber(2035);    // return value
                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method contents:=(_) does not have " + 
                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                              return var_done;
                                                                            };
                                                                            func6953.paramTypes = [];
                                                                            func6953.paramTypes.push([type_String, "value"]);
                                                                            func6953.paramCounts = [1];
                                                                            obj6946.methods["contents:=(1)"] = func6953;
                                                                            func6953.definitionLine = 2032;
                                                                            func6953.definitionModule = "rtobjectdraw";
                                                                            var func6958 = function(argcv) {    // method asString
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              setModuleName("rtobjectdraw");
                                                                              setLineNumber(2040);    // compilenode string
                                                                              var string6959 = new GraceString("");
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call6962 = callmethodChecked(this, "contents", []);
                                                                              var string6964 = new GraceString("a text box showing ");
                                                                              var opresult6966 = callmethodChecked(string6964, "++(1)", [1], call6962);
                                                                              var opresult6968 = callmethodChecked(opresult6966, "++(1)", [1], string6959);
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6968)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method asString does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              return opresult6968;
                                                                            };
                                                                            func6958.paramCounts = [0];
                                                                            obj6946.methods["asString"] = func6958;
                                                                            func6958.definitionLine = 2039;
                                                                            func6958.definitionModule = "rtobjectdraw";
                                                                            setLineNumber(2025);    // compilenode string
                                                                            var string6970 = new GraceString("span");
                                                                            setLineNumber(0);    // compilenode identifier
                                                                            // call case 6: other requests
                                                                            // call case 3: self.outer request
                                                                            var call6972 = callmethodChecked(superDepth, "outer", [0]);
                                                                            onSelf = true;
                                                                            var call6973 = callmethodChecked(call6972, "componentOfElementType(1)$object(1)", [1, 1], string6970, this);
                                                                            obj6946.superobj = call6973;
                                                                            if (call6973.data) obj6946.data = call6973.data;
                                                                            if (call6973.hasOwnProperty('_value'))
                                                                                obj6946._value = call6973._value;
                                                                            setLineNumber(2043);    // compilenode identifier
                                                                            // call case 4: self request
                                                                            onSelf = true;
                                                                            var call6975 = callmethodChecked(this, "contents:=(1)", [1], var_contents__39__);
                                                                            superDepth = origSuperDepth;
                                                                          };
                                                                          obj_init_6946.apply(obj6946, []);
                                                                          setLineNumber(2021);    // return value
                                                                          if (!Grace_isTrue(callmethod(var_TextBox, "match(1)", [1], obj6946)))
                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                  new GraceString("result of method textBoxWith(_) does not have " + 
                                                                                      callmethod(var_TextBox, "asString", [0])._value + "."));
                                                                          return obj6946;
                                                                        };
                                                                        func6945.paramTypes = [];
                                                                        func6945.paramTypes.push([type_String, "contents'"]);
                                                                        func6945.paramCounts = [1];
                                                                        this.methods["textBoxWith(1)"] = func6945;
                                                                        func6945.definitionLine = 2021;
                                                                        func6945.definitionModule = "rtobjectdraw";
                                                                          var func6976 = function(argcv) {    // method textBoxWith(_)$object(_)
                                                                            var curarg = 1;
                                                                            var var_contents__39__ = arguments[curarg];
                                                                            curarg++;
                                                                            var inheritingObject = arguments[curarg++];
                                                                            // Start argument processing
                                                                            curarg = 1;
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in textBoxWith (arg list 1), which corresponds to parameter contents', does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument processing
                                                                            setModuleName("rtobjectdraw");
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var obj6977 = Grace_allocObject(null, "textBoxWith(1)");
                                                                            obj6977.definitionModule = "rtobjectdraw";
                                                                            obj6977.definitionLine = 2021;
                                                                            var inho6977 = inheritingObject;
                                                                            while (inho6977.superobj) inho6977 = inho6977.superobj;
                                                                            inho6977.superobj = obj6977;
                                                                            obj6977.data = inheritingObject.data;
                                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                                              obj6977._value = inheritingObject._value;
                                                                            obj6977.outer = this;
                                                                            var reader_rtobjectdraw_outer6978 = function() {
                                                                              return this.outer;
                                                                            };
                                                                            obj6977.methods["outer"] = reader_rtobjectdraw_outer6978;
                                                                            var obj_init_6977 = function() {
                                                                              var origSuperDepth = superDepth;
                                                                              superDepth = obj6977;
                                                                              var func6979 = function(argcv) {    // method contents
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("rtobjectdraw");
                                                                                setLineNumber(2029);    // compilenode member
                                                                                // call case 6: other requests
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call6982 = callmethodChecked(this, "element", []);
                                                                                var call6983 = callmethodChecked(call6982, "textContent", []);
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call6983)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method contents does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                return call6983;
                                                                              };
                                                                              func6979.paramCounts = [0];
                                                                              obj6977.methods["contents"] = func6979;
                                                                              func6979.definitionLine = 2027;
                                                                              func6979.definitionModule = "rtobjectdraw";
                                                                              var func6984 = function(argcv) {    // method contents:=(_)
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                var var_value = arguments[curarg];
                                                                                curarg++;
                                                                                // Start argument checking
                                                                                curarg = 1;
                                                                                setLineNumber(2032);    // compilenode identifier
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("argument 1 in contents:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                curarg++;
                                                                                // End argument checking
                                                                                setModuleName("rtobjectdraw");
                                                                                setLineNumber(2034);    // compilenode identifier
                                                                                // call case 6: other requests
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call6987 = callmethodChecked(this, "element", []);
                                                                                var call6988 = callmethodChecked(call6987, "textContent:=(1)", [1], var_value);
                                                                                setLineNumber(2035);    // return value
                                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], var_done)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method contents:=(_) does not have " + 
                                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                                return var_done;
                                                                              };
                                                                              func6984.paramTypes = [];
                                                                              func6984.paramTypes.push([type_String, "value"]);
                                                                              func6984.paramCounts = [1];
                                                                              obj6977.methods["contents:=(1)"] = func6984;
                                                                              func6984.definitionLine = 2032;
                                                                              func6984.definitionModule = "rtobjectdraw";
                                                                              var func6989 = function(argcv) {    // method asString
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("rtobjectdraw");
                                                                                setLineNumber(2040);    // compilenode string
                                                                                var string6990 = new GraceString("");
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call6993 = callmethodChecked(this, "contents", []);
                                                                                var string6995 = new GraceString("a text box showing ");
                                                                                var opresult6997 = callmethodChecked(string6995, "++(1)", [1], call6993);
                                                                                var opresult6999 = callmethodChecked(opresult6997, "++(1)", [1], string6990);
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult6999)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method asString does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                return opresult6999;
                                                                              };
                                                                              func6989.paramCounts = [0];
                                                                              obj6977.methods["asString"] = func6989;
                                                                              func6989.definitionLine = 2039;
                                                                              func6989.definitionModule = "rtobjectdraw";
                                                                              setLineNumber(2025);    // compilenode string
                                                                              var string7001 = new GraceString("span");
                                                                              setLineNumber(0);    // compilenode identifier
                                                                              // call case 6: other requests
                                                                              // call case 3: self.outer request
                                                                              var call7003 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onSelf = true;
                                                                              var call7004 = callmethodChecked(call7003, "componentOfElementType(1)$object(1)", [1, 1], string7001, this);
                                                                              obj6977.superobj = call7004;
                                                                              if (call7004.data) obj6977.data = call7004.data;
                                                                              if (call7004.hasOwnProperty('_value'))
                                                                                  obj6977._value = call7004._value;
                                                                              setLineNumber(2043);    // compilenode identifier
                                                                              // call case 4: self request
                                                                              onSelf = true;
                                                                              var call7006 = callmethodChecked(this, "contents:=(1)", [1], var_contents__39__);
                                                                              superDepth = origSuperDepth;
                                                                            };
                                                                            obj_init_6977.apply(inheritingObject, []);
                                                                            return obj6977;
                                                                            };
                                                                            func6976.paramTypes = [];
                                                                            func6976.paramTypes.push([type_String, "contents'"]);
                                                                            this.methods["textBoxWith(1)$object(1)"] = func6976;
                                                                          setLineNumber(2046);    // compilenode method
                                                                          var func7007 = function(argcv) {    // method buttonLabeled(_)
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            var var_label__39__ = arguments[curarg];
                                                                            curarg++;
                                                                            // Start argument checking
                                                                            curarg = 1;
                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("argument 1 in buttonLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                            curarg++;
                                                                            // End argument checking
                                                                            setModuleName("rtobjectdraw");
                                                                            var obj7008 = Grace_allocObject(null, "buttonLabeled(_)");
                                                                            obj7008.definitionModule = "rtobjectdraw";
                                                                            obj7008.definitionLine = 2046;
                                                                            obj7008.outer = this;
                                                                            var reader_rtobjectdraw_outer7009 = function() {
                                                                              return this.outer;
                                                                            };
                                                                            obj7008.methods["outer"] = reader_rtobjectdraw_outer7009;
                                                                            var obj_init_7008 = function() {
                                                                              var origSuperDepth = superDepth;
                                                                              superDepth = obj7008;
                                                                              var func7010 = function(argcv) {    // method asString
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("rtobjectdraw");
                                                                                setLineNumber(2051);    // compilenode string
                                                                                var string7011 = new GraceString("");
                                                                                // call case 4: self request
                                                                                onSelf = true;
                                                                                var call7014 = callmethodChecked(this, "label", []);
                                                                                var string7016 = new GraceString("a button labeled: ");
                                                                                var opresult7018 = callmethodChecked(string7016, "++(1)", [1], call7014);
                                                                                var opresult7020 = callmethodChecked(opresult7018, "++(1)", [1], string7011);
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7020)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method asString does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                return opresult7020;
                                                                              };
                                                                              func7010.paramCounts = [0];
                                                                              obj7008.methods["asString"] = func7010;
                                                                              func7010.definitionLine = 2050;
                                                                              func7010.definitionModule = "rtobjectdraw";
                                                                              setLineNumber(2048);    // compilenode string
                                                                              var string7022 = new GraceString("button");
                                                                              // call case 6: other requests
                                                                              setLineNumber(0);    // compilenode member
                                                                              // call case 3: self.outer request
                                                                              var call7024 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onSelf = true;
                                                                              var call7025 = callmethodChecked(call7024, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7022, var_label__39__, this);
                                                                              obj7008.superobj = call7025;
                                                                              if (call7025.data) obj7008.data = call7025.data;
                                                                              if (call7025.hasOwnProperty('_value'))
                                                                                  obj7008._value = call7025._value;
                                                                              superDepth = origSuperDepth;
                                                                            };
                                                                            obj_init_7008.apply(obj7008, []);
                                                                            setLineNumber(2046);    // return value
                                                                            if (!Grace_isTrue(callmethod(var_Button, "match(1)", [1], obj7008)))
                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                    new GraceString("result of method buttonLabeled(_) does not have " + 
                                                                                        callmethod(var_Button, "asString", [0])._value + "."));
                                                                            return obj7008;
                                                                          };
                                                                          func7007.paramTypes = [];
                                                                          func7007.paramTypes.push([type_String, "label'"]);
                                                                          func7007.paramCounts = [1];
                                                                          this.methods["buttonLabeled(1)"] = func7007;
                                                                          func7007.definitionLine = 2046;
                                                                          func7007.definitionModule = "rtobjectdraw";
                                                                            var func7026 = function(argcv) {    // method buttonLabeled(_)$object(_)
                                                                              var curarg = 1;
                                                                              var var_label__39__ = arguments[curarg];
                                                                              curarg++;
                                                                              var inheritingObject = arguments[curarg++];
                                                                              // Start argument processing
                                                                              curarg = 1;
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in buttonLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument processing
                                                                              setModuleName("rtobjectdraw");
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var obj7027 = Grace_allocObject(null, "buttonLabeled(1)");
                                                                              obj7027.definitionModule = "rtobjectdraw";
                                                                              obj7027.definitionLine = 2046;
                                                                              var inho7027 = inheritingObject;
                                                                              while (inho7027.superobj) inho7027 = inho7027.superobj;
                                                                              inho7027.superobj = obj7027;
                                                                              obj7027.data = inheritingObject.data;
                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                obj7027._value = inheritingObject._value;
                                                                              obj7027.outer = this;
                                                                              var reader_rtobjectdraw_outer7028 = function() {
                                                                                return this.outer;
                                                                              };
                                                                              obj7027.methods["outer"] = reader_rtobjectdraw_outer7028;
                                                                              var obj_init_7027 = function() {
                                                                                var origSuperDepth = superDepth;
                                                                                superDepth = obj7027;
                                                                                var func7029 = function(argcv) {    // method asString
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  setModuleName("rtobjectdraw");
                                                                                  setLineNumber(2051);    // compilenode string
                                                                                  var string7030 = new GraceString("");
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7033 = callmethodChecked(this, "label", []);
                                                                                  var string7035 = new GraceString("a button labeled: ");
                                                                                  var opresult7037 = callmethodChecked(string7035, "++(1)", [1], call7033);
                                                                                  var opresult7039 = callmethodChecked(opresult7037, "++(1)", [1], string7030);
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7039)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method asString does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  return opresult7039;
                                                                                };
                                                                                func7029.paramCounts = [0];
                                                                                obj7027.methods["asString"] = func7029;
                                                                                func7029.definitionLine = 2050;
                                                                                func7029.definitionModule = "rtobjectdraw";
                                                                                setLineNumber(2048);    // compilenode string
                                                                                var string7041 = new GraceString("button");
                                                                                // call case 6: other requests
                                                                                setLineNumber(0);    // compilenode member
                                                                                // call case 3: self.outer request
                                                                                var call7043 = callmethodChecked(superDepth, "outer", [0]);
                                                                                onSelf = true;
                                                                                var call7044 = callmethodChecked(call7043, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7041, var_label__39__, this);
                                                                                obj7027.superobj = call7044;
                                                                                if (call7044.data) obj7027.data = call7044.data;
                                                                                if (call7044.hasOwnProperty('_value'))
                                                                                    obj7027._value = call7044._value;
                                                                                superDepth = origSuperDepth;
                                                                              };
                                                                              obj_init_7027.apply(inheritingObject, []);
                                                                              return obj7027;
                                                                              };
                                                                              func7026.paramTypes = [];
                                                                              func7026.paramTypes.push([type_String, "label'"]);
                                                                              this.methods["buttonLabeled(1)$object(1)"] = func7026;
                                                                            setLineNumber(2068);    // compilenode method
                                                                            var func7045 = function(argcv) {    // method textFieldLabeled(_)
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              var var_label__39__ = arguments[curarg];
                                                                              curarg++;
                                                                              // Start argument checking
                                                                              curarg = 1;
                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("argument 1 in textFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                              curarg++;
                                                                              // End argument checking
                                                                              setModuleName("rtobjectdraw");
                                                                              var obj7046 = Grace_allocObject(null, "textFieldLabeled(_)");
                                                                              obj7046.definitionModule = "rtobjectdraw";
                                                                              obj7046.definitionLine = 2068;
                                                                              obj7046.outer = this;
                                                                              var reader_rtobjectdraw_outer7047 = function() {
                                                                                return this.outer;
                                                                              };
                                                                              obj7046.methods["outer"] = reader_rtobjectdraw_outer7047;
                                                                              var obj_init_7046 = function() {
                                                                                var origSuperDepth = superDepth;
                                                                                superDepth = obj7046;
                                                                                var func7048 = function(argcv) {    // method text
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  setModuleName("rtobjectdraw");
                                                                                  setLineNumber(2075);    // compilenode member
                                                                                  // call case 6: other requests
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7051 = callmethodChecked(this, "element", []);
                                                                                  var call7052 = callmethodChecked(call7051, "value", []);
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7052)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method text does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  return call7052;
                                                                                };
                                                                                func7048.paramCounts = [0];
                                                                                obj7046.methods["text"] = func7048;
                                                                                func7048.definitionLine = 2073;
                                                                                func7048.definitionModule = "rtobjectdraw";
                                                                                var func7053 = function(argcv) {    // method text:=(_)
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  var var_value = arguments[curarg];
                                                                                  curarg++;
                                                                                  // Start argument checking
                                                                                  curarg = 1;
                                                                                  setLineNumber(2078);    // compilenode identifier
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("argument 1 in text:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  curarg++;
                                                                                  // End argument checking
                                                                                  setModuleName("rtobjectdraw");
                                                                                  setLineNumber(2080);    // compilenode identifier
                                                                                  // call case 6: other requests
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7056 = callmethodChecked(this, "element", []);
                                                                                  var call7057 = callmethodChecked(call7056, "value:=(1)", [1], var_value);
                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7057)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method text:=(_) does not have " + 
                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                  return call7057;
                                                                                };
                                                                                func7053.paramTypes = [];
                                                                                func7053.paramTypes.push([type_String, "value"]);
                                                                                func7053.paramCounts = [1];
                                                                                obj7046.methods["text:=(1)"] = func7053;
                                                                                func7053.definitionLine = 2078;
                                                                                func7053.definitionModule = "rtobjectdraw";
                                                                                var func7058 = function(argcv) {    // method asString
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  setModuleName("rtobjectdraw");
                                                                                  var if7059 = GraceDone;
                                                                                  setLineNumber(2085);    // compilenode string
                                                                                  var string7060 = new GraceString("");
                                                                                  // call case 4: self request
                                                                                  onSelf = true;
                                                                                  var call7063 = callmethodChecked(this, "label", []);
                                                                                  var opresult7065 = callmethodChecked(call7063, "==(1)", [1], string7060);
                                                                                  if (Grace_isTrue(opresult7065)) {
                                                                                    setLineNumber(2086);    // compilenode string
                                                                                    var string7066 = new GraceString("");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7069 = callmethodChecked(this, "text", []);
                                                                                    var string7071 = new GraceString("a text field with ");
                                                                                    var opresult7073 = callmethodChecked(string7071, "++(1)", [1], call7069);
                                                                                    var opresult7075 = callmethodChecked(opresult7073, "++(1)", [1], string7066);
                                                                                    if7059 = opresult7075;
                                                                                  } else {
                                                                                    setLineNumber(2088);    // compilenode string
                                                                                    var string7076 = new GraceString("");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7079 = callmethodChecked(this, "text", []);
                                                                                    var string7081 = new GraceString(" with ");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7084 = callmethodChecked(this, "label", []);
                                                                                    var string7086 = new GraceString("a text field labeled: ");
                                                                                    var opresult7088 = callmethodChecked(string7086, "++(1)", [1], call7084);
                                                                                    var opresult7090 = callmethodChecked(opresult7088, "++(1)", [1], string7081);
                                                                                    var opresult7092 = callmethodChecked(opresult7090, "++(1)", [1], call7079);
                                                                                    var opresult7094 = callmethodChecked(opresult7092, "++(1)", [1], string7076);
                                                                                    if7059 = opresult7094;
                                                                                  }
                                                                                  setLineNumber(2085);    // return value
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7059)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method asString does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  return if7059;
                                                                                };
                                                                                func7058.paramCounts = [0];
                                                                                obj7046.methods["asString"] = func7058;
                                                                                func7058.definitionLine = 2084;
                                                                                func7058.definitionModule = "rtobjectdraw";
                                                                                setLineNumber(2071);    // compilenode string
                                                                                var string7096 = new GraceString("text");
                                                                                // call case 6: other requests
                                                                                setLineNumber(0);    // compilenode member
                                                                                // call case 3: self.outer request
                                                                                var call7098 = callmethodChecked(superDepth, "outer", [0]);
                                                                                onSelf = true;
                                                                                var call7099 = callmethodChecked(call7098, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7096, var_label__39__, this);
                                                                                obj7046.superobj = call7099;
                                                                                if (call7099.data) obj7046.data = call7099.data;
                                                                                if (call7099.hasOwnProperty('_value'))
                                                                                    obj7046._value = call7099._value;
                                                                                superDepth = origSuperDepth;
                                                                              };
                                                                              obj_init_7046.apply(obj7046, []);
                                                                              setLineNumber(2068);    // return value
                                                                              if (!Grace_isTrue(callmethod(var_TextField, "match(1)", [1], obj7046)))
                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                      new GraceString("result of method textFieldLabeled(_) does not have " + 
                                                                                          callmethod(var_TextField, "asString", [0])._value + "."));
                                                                              return obj7046;
                                                                            };
                                                                            func7045.paramTypes = [];
                                                                            func7045.paramTypes.push([type_String, "label'"]);
                                                                            func7045.paramCounts = [1];
                                                                            this.methods["textFieldLabeled(1)"] = func7045;
                                                                            func7045.definitionLine = 2068;
                                                                            func7045.definitionModule = "rtobjectdraw";
                                                                              var func7100 = function(argcv) {    // method textFieldLabeled(_)$object(_)
                                                                                var curarg = 1;
                                                                                var var_label__39__ = arguments[curarg];
                                                                                curarg++;
                                                                                var inheritingObject = arguments[curarg++];
                                                                                // Start argument processing
                                                                                curarg = 1;
                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("argument 1 in textFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                curarg++;
                                                                                // End argument processing
                                                                                setModuleName("rtobjectdraw");
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var obj7101 = Grace_allocObject(null, "textFieldLabeled(1)");
                                                                                obj7101.definitionModule = "rtobjectdraw";
                                                                                obj7101.definitionLine = 2068;
                                                                                var inho7101 = inheritingObject;
                                                                                while (inho7101.superobj) inho7101 = inho7101.superobj;
                                                                                inho7101.superobj = obj7101;
                                                                                obj7101.data = inheritingObject.data;
                                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                                  obj7101._value = inheritingObject._value;
                                                                                obj7101.outer = this;
                                                                                var reader_rtobjectdraw_outer7102 = function() {
                                                                                  return this.outer;
                                                                                };
                                                                                obj7101.methods["outer"] = reader_rtobjectdraw_outer7102;
                                                                                var obj_init_7101 = function() {
                                                                                  var origSuperDepth = superDepth;
                                                                                  superDepth = obj7101;
                                                                                  var func7103 = function(argcv) {    // method text
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    setModuleName("rtobjectdraw");
                                                                                    setLineNumber(2075);    // compilenode member
                                                                                    // call case 6: other requests
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7106 = callmethodChecked(this, "element", []);
                                                                                    var call7107 = callmethodChecked(call7106, "value", []);
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7107)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method text does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    return call7107;
                                                                                  };
                                                                                  func7103.paramCounts = [0];
                                                                                  obj7101.methods["text"] = func7103;
                                                                                  func7103.definitionLine = 2073;
                                                                                  func7103.definitionModule = "rtobjectdraw";
                                                                                  var func7108 = function(argcv) {    // method text:=(_)
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    var var_value = arguments[curarg];
                                                                                    curarg++;
                                                                                    // Start argument checking
                                                                                    curarg = 1;
                                                                                    setLineNumber(2078);    // compilenode identifier
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("argument 1 in text:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    curarg++;
                                                                                    // End argument checking
                                                                                    setModuleName("rtobjectdraw");
                                                                                    setLineNumber(2080);    // compilenode identifier
                                                                                    // call case 6: other requests
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7111 = callmethodChecked(this, "element", []);
                                                                                    var call7112 = callmethodChecked(call7111, "value:=(1)", [1], var_value);
                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7112)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method text:=(_) does not have " + 
                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                    return call7112;
                                                                                  };
                                                                                  func7108.paramTypes = [];
                                                                                  func7108.paramTypes.push([type_String, "value"]);
                                                                                  func7108.paramCounts = [1];
                                                                                  obj7101.methods["text:=(1)"] = func7108;
                                                                                  func7108.definitionLine = 2078;
                                                                                  func7108.definitionModule = "rtobjectdraw";
                                                                                  var func7113 = function(argcv) {    // method asString
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    setModuleName("rtobjectdraw");
                                                                                    var if7114 = GraceDone;
                                                                                    setLineNumber(2085);    // compilenode string
                                                                                    var string7115 = new GraceString("");
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7118 = callmethodChecked(this, "label", []);
                                                                                    var opresult7120 = callmethodChecked(call7118, "==(1)", [1], string7115);
                                                                                    if (Grace_isTrue(opresult7120)) {
                                                                                      setLineNumber(2086);    // compilenode string
                                                                                      var string7121 = new GraceString("");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7124 = callmethodChecked(this, "text", []);
                                                                                      var string7126 = new GraceString("a text field with ");
                                                                                      var opresult7128 = callmethodChecked(string7126, "++(1)", [1], call7124);
                                                                                      var opresult7130 = callmethodChecked(opresult7128, "++(1)", [1], string7121);
                                                                                      if7114 = opresult7130;
                                                                                    } else {
                                                                                      setLineNumber(2088);    // compilenode string
                                                                                      var string7131 = new GraceString("");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7134 = callmethodChecked(this, "text", []);
                                                                                      var string7136 = new GraceString(" with ");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7139 = callmethodChecked(this, "label", []);
                                                                                      var string7141 = new GraceString("a text field labeled: ");
                                                                                      var opresult7143 = callmethodChecked(string7141, "++(1)", [1], call7139);
                                                                                      var opresult7145 = callmethodChecked(opresult7143, "++(1)", [1], string7136);
                                                                                      var opresult7147 = callmethodChecked(opresult7145, "++(1)", [1], call7134);
                                                                                      var opresult7149 = callmethodChecked(opresult7147, "++(1)", [1], string7131);
                                                                                      if7114 = opresult7149;
                                                                                    }
                                                                                    setLineNumber(2085);    // return value
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7114)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method asString does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    return if7114;
                                                                                  };
                                                                                  func7113.paramCounts = [0];
                                                                                  obj7101.methods["asString"] = func7113;
                                                                                  func7113.definitionLine = 2084;
                                                                                  func7113.definitionModule = "rtobjectdraw";
                                                                                  setLineNumber(2071);    // compilenode string
                                                                                  var string7151 = new GraceString("text");
                                                                                  // call case 6: other requests
                                                                                  setLineNumber(0);    // compilenode member
                                                                                  // call case 3: self.outer request
                                                                                  var call7153 = callmethodChecked(superDepth, "outer", [0]);
                                                                                  onSelf = true;
                                                                                  var call7154 = callmethodChecked(call7153, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7151, var_label__39__, this);
                                                                                  obj7101.superobj = call7154;
                                                                                  if (call7154.data) obj7101.data = call7154.data;
                                                                                  if (call7154.hasOwnProperty('_value'))
                                                                                      obj7101._value = call7154._value;
                                                                                  superDepth = origSuperDepth;
                                                                                };
                                                                                obj_init_7101.apply(inheritingObject, []);
                                                                                return obj7101;
                                                                                };
                                                                                func7100.paramTypes = [];
                                                                                func7100.paramTypes.push([type_String, "label'"]);
                                                                                this.methods["textFieldLabeled(1)$object(1)"] = func7100;
                                                                              setLineNumber(2093);    // compilenode method
                                                                              var func7155 = function(argcv) {    // method textFieldUnlabeled
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                setModuleName("rtobjectdraw");
                                                                                var obj7156 = Grace_allocObject(null, "textFieldUnlabeled");
                                                                                obj7156.definitionModule = "rtobjectdraw";
                                                                                obj7156.definitionLine = 2093;
                                                                                obj7156.outer = this;
                                                                                var reader_rtobjectdraw_outer7157 = function() {
                                                                                  return this.outer;
                                                                                };
                                                                                obj7156.methods["outer"] = reader_rtobjectdraw_outer7157;
                                                                                var obj_init_7156 = function() {
                                                                                  var origSuperDepth = superDepth;
                                                                                  superDepth = obj7156;
                                                                                  setLineNumber(2096);    // compilenode string
                                                                                  var string7159 = new GraceString("");
                                                                                  setLineNumber(0);    // compilenode identifier
                                                                                  // call case 6: other requests
                                                                                  // call case 3: self.outer request
                                                                                  var call7161 = callmethodChecked(superDepth, "outer", [0]);
                                                                                  onSelf = true;
                                                                                  var call7162 = callmethodChecked(call7161, "textFieldLabeled(1)$object(1)", [1, 1], string7159, this);
                                                                                  obj7156.superobj = call7162;
                                                                                  if (call7162.data) obj7156.data = call7162.data;
                                                                                  if (call7162.hasOwnProperty('_value'))
                                                                                      obj7156._value = call7162._value;
                                                                                  superDepth = origSuperDepth;
                                                                                };
                                                                                obj_init_7156.apply(obj7156, []);
                                                                                setLineNumber(2093);    // return value
                                                                                if (!Grace_isTrue(callmethod(var_TextField, "match(1)", [1], obj7156)))
                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                        new GraceString("result of method textFieldUnlabeled does not have " + 
                                                                                            callmethod(var_TextField, "asString", [0])._value + "."));
                                                                                return obj7156;
                                                                              };
                                                                              func7155.paramCounts = [0];
                                                                              this.methods["textFieldUnlabeled"] = func7155;
                                                                              func7155.definitionLine = 2093;
                                                                              func7155.definitionModule = "rtobjectdraw";
                                                                                var func7163 = function(argcv) {    // method textFieldUnlabeled$object(_)
                                                                                  var curarg = 1;
                                                                                  var inheritingObject = arguments[curarg++];
                                                                                  // Start argument processing
                                                                                  curarg = 1;
                                                                                  // End argument processing
                                                                                  setModuleName("rtobjectdraw");
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var obj7164 = Grace_allocObject(null, "textFieldUnlabeled");
                                                                                  obj7164.definitionModule = "rtobjectdraw";
                                                                                  obj7164.definitionLine = 2093;
                                                                                  var inho7164 = inheritingObject;
                                                                                  while (inho7164.superobj) inho7164 = inho7164.superobj;
                                                                                  inho7164.superobj = obj7164;
                                                                                  obj7164.data = inheritingObject.data;
                                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                                    obj7164._value = inheritingObject._value;
                                                                                  obj7164.outer = this;
                                                                                  var reader_rtobjectdraw_outer7165 = function() {
                                                                                    return this.outer;
                                                                                  };
                                                                                  obj7164.methods["outer"] = reader_rtobjectdraw_outer7165;
                                                                                  var obj_init_7164 = function() {
                                                                                    var origSuperDepth = superDepth;
                                                                                    superDepth = obj7164;
                                                                                    setLineNumber(2096);    // compilenode string
                                                                                    var string7167 = new GraceString("");
                                                                                    setLineNumber(0);    // compilenode identifier
                                                                                    // call case 6: other requests
                                                                                    // call case 3: self.outer request
                                                                                    var call7169 = callmethodChecked(superDepth, "outer", [0]);
                                                                                    onSelf = true;
                                                                                    var call7170 = callmethodChecked(call7169, "textFieldLabeled(1)$object(1)", [1, 1], string7167, this);
                                                                                    obj7164.superobj = call7170;
                                                                                    if (call7170.data) obj7164.data = call7170.data;
                                                                                    if (call7170.hasOwnProperty('_value'))
                                                                                        obj7164._value = call7170._value;
                                                                                    superDepth = origSuperDepth;
                                                                                  };
                                                                                  obj_init_7164.apply(inheritingObject, []);
                                                                                  return obj7164;
                                                                                  };
                                                                                  this.methods["textFieldUnlabeled$object(1)"] = func7163;
                                                                                setLineNumber(2100);    // compilenode method
                                                                                var func7171 = function(argcv) {    // method passwordFieldLabeled(_)
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  var var_lab = arguments[curarg];
                                                                                  curarg++;
                                                                                  // Start argument checking
                                                                                  curarg = 1;
                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("argument 1 in passwordFieldLabeled (arg list 1), which corresponds to parameter lab, does not have " + 
                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                  curarg++;
                                                                                  // End argument checking
                                                                                  setModuleName("rtobjectdraw");
                                                                                  var obj7172 = Grace_allocObject(null, "passwordFieldLabeled(_)");
                                                                                  obj7172.definitionModule = "rtobjectdraw";
                                                                                  obj7172.definitionLine = 2100;
                                                                                  obj7172.outer = this;
                                                                                  var reader_rtobjectdraw_outer7173 = function() {
                                                                                    return this.outer;
                                                                                  };
                                                                                  obj7172.methods["outer"] = reader_rtobjectdraw_outer7173;
                                                                                  var obj_init_7172 = function() {
                                                                                    var origSuperDepth = superDepth;
                                                                                    superDepth = obj7172;
                                                                                    var func7174 = function(argcv) {    // method asString
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var curarg = 1;
                                                                                      setModuleName("rtobjectdraw");
                                                                                      var if7175 = GraceDone;
                                                                                      setLineNumber(2109);    // compilenode string
                                                                                      var string7176 = new GraceString("");
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7179 = callmethodChecked(this, "label", []);
                                                                                      var opresult7181 = callmethodChecked(call7179, "==(1)", [1], string7176);
                                                                                      if (Grace_isTrue(opresult7181)) {
                                                                                        setLineNumber(2110);    // compilenode string
                                                                                        var string7182 = new GraceString("a password field");
                                                                                        if7175 = string7182;
                                                                                      } else {
                                                                                        setLineNumber(2112);    // compilenode string
                                                                                        var string7183 = new GraceString("");
                                                                                        // call case 4: self request
                                                                                        onSelf = true;
                                                                                        var call7186 = callmethodChecked(this, "label", []);
                                                                                        var string7188 = new GraceString("a password field labeled: ");
                                                                                        var opresult7190 = callmethodChecked(string7188, "++(1)", [1], call7186);
                                                                                        var opresult7192 = callmethodChecked(opresult7190, "++(1)", [1], string7183);
                                                                                        if7175 = opresult7192;
                                                                                      }
                                                                                      setLineNumber(2109);    // return value
                                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7175)))
                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                              new GraceString("result of method asString does not have " + 
                                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                                      return if7175;
                                                                                    };
                                                                                    func7174.paramCounts = [0];
                                                                                    obj7172.methods["asString"] = func7174;
                                                                                    func7174.definitionLine = 2107;
                                                                                    func7174.definitionModule = "rtobjectdraw";
                                                                                    setLineNumber(2103);    // compilenode identifier
                                                                                    // call case 6: other requests
                                                                                    setLineNumber(0);    // compilenode member
                                                                                    // call case 3: self.outer request
                                                                                    var call7195 = callmethodChecked(superDepth, "outer", [0]);
                                                                                    onSelf = true;
                                                                                    var call7196 = callmethodChecked(call7195, "textFieldLabeled(1)$object(1)", [1, 1], var_lab, this);
                                                                                    obj7172.superobj = call7196;
                                                                                    if (call7196.data) obj7172.data = call7196.data;
                                                                                    if (call7196.hasOwnProperty('_value'))
                                                                                        obj7172._value = call7196._value;
                                                                                    setLineNumber(2105);    // compilenode string
                                                                                    var string7198 = new GraceString("type");
                                                                                    var string7199 = new GraceString("password");
                                                                                    // call case 6: other requests
                                                                                    // call case 4: self request
                                                                                    onSelf = true;
                                                                                    var call7201 = callmethodChecked(this, "element", []);
                                                                                    var call7202 = callmethodChecked(call7201, "setAttribute(2)", [2], string7198, string7199);
                                                                                    superDepth = origSuperDepth;
                                                                                  };
                                                                                  obj_init_7172.apply(obj7172, []);
                                                                                  setLineNumber(2100);    // return value
                                                                                  if (!Grace_isTrue(callmethod(var_Input, "match(1)", [1], obj7172)))
                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                          new GraceString("result of method passwordFieldLabeled(_) does not have " + 
                                                                                              callmethod(var_Input, "asString", [0])._value + "."));
                                                                                  return obj7172;
                                                                                };
                                                                                func7171.paramTypes = [];
                                                                                func7171.paramTypes.push([type_String, "lab"]);
                                                                                func7171.paramCounts = [1];
                                                                                this.methods["passwordFieldLabeled(1)"] = func7171;
                                                                                func7171.definitionLine = 2100;
                                                                                func7171.definitionModule = "rtobjectdraw";
                                                                                  var func7203 = function(argcv) {    // method passwordFieldLabeled(_)$object(_)
                                                                                    var curarg = 1;
                                                                                    var var_lab = arguments[curarg];
                                                                                    curarg++;
                                                                                    var inheritingObject = arguments[curarg++];
                                                                                    // Start argument processing
                                                                                    curarg = 1;
                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("argument 1 in passwordFieldLabeled (arg list 1), which corresponds to parameter lab, does not have " + 
                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                    curarg++;
                                                                                    // End argument processing
                                                                                    setModuleName("rtobjectdraw");
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var obj7204 = Grace_allocObject(null, "passwordFieldLabeled(1)");
                                                                                    obj7204.definitionModule = "rtobjectdraw";
                                                                                    obj7204.definitionLine = 2100;
                                                                                    var inho7204 = inheritingObject;
                                                                                    while (inho7204.superobj) inho7204 = inho7204.superobj;
                                                                                    inho7204.superobj = obj7204;
                                                                                    obj7204.data = inheritingObject.data;
                                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                                      obj7204._value = inheritingObject._value;
                                                                                    obj7204.outer = this;
                                                                                    var reader_rtobjectdraw_outer7205 = function() {
                                                                                      return this.outer;
                                                                                    };
                                                                                    obj7204.methods["outer"] = reader_rtobjectdraw_outer7205;
                                                                                    var obj_init_7204 = function() {
                                                                                      var origSuperDepth = superDepth;
                                                                                      superDepth = obj7204;
                                                                                      var func7206 = function(argcv) {    // method asString
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var curarg = 1;
                                                                                        setModuleName("rtobjectdraw");
                                                                                        var if7207 = GraceDone;
                                                                                        setLineNumber(2109);    // compilenode string
                                                                                        var string7208 = new GraceString("");
                                                                                        // call case 4: self request
                                                                                        onSelf = true;
                                                                                        var call7211 = callmethodChecked(this, "label", []);
                                                                                        var opresult7213 = callmethodChecked(call7211, "==(1)", [1], string7208);
                                                                                        if (Grace_isTrue(opresult7213)) {
                                                                                          setLineNumber(2110);    // compilenode string
                                                                                          var string7214 = new GraceString("a password field");
                                                                                          if7207 = string7214;
                                                                                        } else {
                                                                                          setLineNumber(2112);    // compilenode string
                                                                                          var string7215 = new GraceString("");
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7218 = callmethodChecked(this, "label", []);
                                                                                          var string7220 = new GraceString("a password field labeled: ");
                                                                                          var opresult7222 = callmethodChecked(string7220, "++(1)", [1], call7218);
                                                                                          var opresult7224 = callmethodChecked(opresult7222, "++(1)", [1], string7215);
                                                                                          if7207 = opresult7224;
                                                                                        }
                                                                                        setLineNumber(2109);    // return value
                                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7207)))
                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                new GraceString("result of method asString does not have " + 
                                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                                        return if7207;
                                                                                      };
                                                                                      func7206.paramCounts = [0];
                                                                                      obj7204.methods["asString"] = func7206;
                                                                                      func7206.definitionLine = 2107;
                                                                                      func7206.definitionModule = "rtobjectdraw";
                                                                                      setLineNumber(2103);    // compilenode identifier
                                                                                      // call case 6: other requests
                                                                                      setLineNumber(0);    // compilenode member
                                                                                      // call case 3: self.outer request
                                                                                      var call7227 = callmethodChecked(superDepth, "outer", [0]);
                                                                                      onSelf = true;
                                                                                      var call7228 = callmethodChecked(call7227, "textFieldLabeled(1)$object(1)", [1, 1], var_lab, this);
                                                                                      obj7204.superobj = call7228;
                                                                                      if (call7228.data) obj7204.data = call7228.data;
                                                                                      if (call7228.hasOwnProperty('_value'))
                                                                                          obj7204._value = call7228._value;
                                                                                      setLineNumber(2105);    // compilenode string
                                                                                      var string7230 = new GraceString("type");
                                                                                      var string7231 = new GraceString("password");
                                                                                      // call case 6: other requests
                                                                                      // call case 4: self request
                                                                                      onSelf = true;
                                                                                      var call7233 = callmethodChecked(this, "element", []);
                                                                                      var call7234 = callmethodChecked(call7233, "setAttribute(2)", [2], string7230, string7231);
                                                                                      superDepth = origSuperDepth;
                                                                                    };
                                                                                    obj_init_7204.apply(inheritingObject, []);
                                                                                    return obj7204;
                                                                                    };
                                                                                    func7203.paramTypes = [];
                                                                                    func7203.paramTypes.push([type_String, "lab"]);
                                                                                    this.methods["passwordFieldLabeled(1)$object(1)"] = func7203;
                                                                                  setLineNumber(2118);    // compilenode method
                                                                                  var func7235 = function(argcv) {    // method passwordFieldUnlabeled
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    setModuleName("rtobjectdraw");
                                                                                    var obj7236 = Grace_allocObject(null, "passwordFieldUnlabeled");
                                                                                    obj7236.definitionModule = "rtobjectdraw";
                                                                                    obj7236.definitionLine = 2118;
                                                                                    obj7236.outer = this;
                                                                                    var reader_rtobjectdraw_outer7237 = function() {
                                                                                      return this.outer;
                                                                                    };
                                                                                    obj7236.methods["outer"] = reader_rtobjectdraw_outer7237;
                                                                                    var obj_init_7236 = function() {
                                                                                      var origSuperDepth = superDepth;
                                                                                      superDepth = obj7236;
                                                                                      setLineNumber(2119);    // compilenode string
                                                                                      var string7239 = new GraceString("");
                                                                                      setLineNumber(0);    // compilenode identifier
                                                                                      // call case 6: other requests
                                                                                      // call case 3: self.outer request
                                                                                      var call7241 = callmethodChecked(superDepth, "outer", [0]);
                                                                                      onSelf = true;
                                                                                      var call7242 = callmethodChecked(call7241, "passwordFieldLabeled(1)$object(1)", [1, 1], string7239, this);
                                                                                      obj7236.superobj = call7242;
                                                                                      if (call7242.data) obj7236.data = call7242.data;
                                                                                      if (call7242.hasOwnProperty('_value'))
                                                                                          obj7236._value = call7242._value;
                                                                                      superDepth = origSuperDepth;
                                                                                    };
                                                                                    obj_init_7236.apply(obj7236, []);
                                                                                    setLineNumber(2118);    // return value
                                                                                    if (!Grace_isTrue(callmethod(var_TextField, "match(1)", [1], obj7236)))
                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                            new GraceString("result of method passwordFieldUnlabeled does not have " + 
                                                                                                callmethod(var_TextField, "asString", [0])._value + "."));
                                                                                    return obj7236;
                                                                                  };
                                                                                  func7235.paramCounts = [0];
                                                                                  this.methods["passwordFieldUnlabeled"] = func7235;
                                                                                  func7235.definitionLine = 2118;
                                                                                  func7235.definitionModule = "rtobjectdraw";
                                                                                    var func7243 = function(argcv) {    // method passwordFieldUnlabeled$object(_)
                                                                                      var curarg = 1;
                                                                                      var inheritingObject = arguments[curarg++];
                                                                                      // Start argument processing
                                                                                      curarg = 1;
                                                                                      // End argument processing
                                                                                      setModuleName("rtobjectdraw");
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var obj7244 = Grace_allocObject(null, "passwordFieldUnlabeled");
                                                                                      obj7244.definitionModule = "rtobjectdraw";
                                                                                      obj7244.definitionLine = 2118;
                                                                                      var inho7244 = inheritingObject;
                                                                                      while (inho7244.superobj) inho7244 = inho7244.superobj;
                                                                                      inho7244.superobj = obj7244;
                                                                                      obj7244.data = inheritingObject.data;
                                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                                        obj7244._value = inheritingObject._value;
                                                                                      obj7244.outer = this;
                                                                                      var reader_rtobjectdraw_outer7245 = function() {
                                                                                        return this.outer;
                                                                                      };
                                                                                      obj7244.methods["outer"] = reader_rtobjectdraw_outer7245;
                                                                                      var obj_init_7244 = function() {
                                                                                        var origSuperDepth = superDepth;
                                                                                        superDepth = obj7244;
                                                                                        setLineNumber(2119);    // compilenode string
                                                                                        var string7247 = new GraceString("");
                                                                                        setLineNumber(0);    // compilenode identifier
                                                                                        // call case 6: other requests
                                                                                        // call case 3: self.outer request
                                                                                        var call7249 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onSelf = true;
                                                                                        var call7250 = callmethodChecked(call7249, "passwordFieldLabeled(1)$object(1)", [1, 1], string7247, this);
                                                                                        obj7244.superobj = call7250;
                                                                                        if (call7250.data) obj7244.data = call7250.data;
                                                                                        if (call7250.hasOwnProperty('_value'))
                                                                                            obj7244._value = call7250._value;
                                                                                        superDepth = origSuperDepth;
                                                                                      };
                                                                                      obj_init_7244.apply(inheritingObject, []);
                                                                                      return obj7244;
                                                                                      };
                                                                                      this.methods["passwordFieldUnlabeled$object(1)"] = func7243;
                                                                                    setLineNumber(2122);    // compilenode method
                                                                                    var func7251 = function(argcv) {    // method numberFieldLabeled(_)
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var curarg = 1;
                                                                                      var var_label__39__ = arguments[curarg];
                                                                                      curarg++;
                                                                                      // Start argument checking
                                                                                      curarg = 1;
                                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                              new GraceString("argument 1 in numberFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                                      curarg++;
                                                                                      // End argument checking
                                                                                      setModuleName("rtobjectdraw");
                                                                                      var obj7252 = Grace_allocObject(null, "numberFieldLabeled(_)");
                                                                                      obj7252.definitionModule = "rtobjectdraw";
                                                                                      obj7252.definitionLine = 2122;
                                                                                      obj7252.outer = this;
                                                                                      var reader_rtobjectdraw_outer7253 = function() {
                                                                                        return this.outer;
                                                                                      };
                                                                                      obj7252.methods["outer"] = reader_rtobjectdraw_outer7253;
                                                                                      var obj_init_7252 = function() {
                                                                                        var origSuperDepth = superDepth;
                                                                                        superDepth = obj7252;
                                                                                        var func7254 = function(argcv) {    // method number
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          setModuleName("rtobjectdraw");
                                                                                          setLineNumber(2129);    // compilenode member
                                                                                          // call case 6: other requests
                                                                                          // call case 6: other requests
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7258 = callmethodChecked(this, "element", []);
                                                                                          var call7259 = callmethodChecked(call7258, "value", []);
                                                                                          var call7260 = callmethodChecked(call7259, "asNumber", []);
                                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7260)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method number does not have " + 
                                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                                          return call7260;
                                                                                        };
                                                                                        func7254.paramCounts = [0];
                                                                                        obj7252.methods["number"] = func7254;
                                                                                        func7254.definitionLine = 2128;
                                                                                        func7254.definitionModule = "rtobjectdraw";
                                                                                        var func7261 = function(argcv) {    // method number:=(_)
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          var var_value = arguments[curarg];
                                                                                          curarg++;
                                                                                          // Start argument checking
                                                                                          curarg = 1;
                                                                                          setLineNumber(2133);    // compilenode identifier
                                                                                          if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("argument 1 in number:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                      callmethod(var_Number, "asString", [0])._value + "."));
                                                                                          curarg++;
                                                                                          // End argument checking
                                                                                          setModuleName("rtobjectdraw");
                                                                                          setLineNumber(2134);    // compilenode identifier
                                                                                          // call case 6: other requests
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7264 = callmethodChecked(this, "element", []);
                                                                                          var call7265 = callmethodChecked(call7264, "value:=(1)", [1], var_value);
                                                                                          if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7265)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method number:=(_) does not have " + 
                                                                                                      callmethod(var_Done, "asString", [0])._value + "."));
                                                                                          return call7265;
                                                                                        };
                                                                                        func7261.paramTypes = [];
                                                                                        func7261.paramTypes.push([type_Number, "value"]);
                                                                                        func7261.paramCounts = [1];
                                                                                        obj7252.methods["number:=(1)"] = func7261;
                                                                                        func7261.definitionLine = 2133;
                                                                                        func7261.definitionModule = "rtobjectdraw";
                                                                                        var func7266 = function(argcv) {    // method asString
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          setModuleName("rtobjectdraw");
                                                                                          var if7267 = GraceDone;
                                                                                          setLineNumber(2139);    // compilenode string
                                                                                          var string7268 = new GraceString("");
                                                                                          // call case 4: self request
                                                                                          onSelf = true;
                                                                                          var call7271 = callmethodChecked(this, "label", []);
                                                                                          var opresult7273 = callmethodChecked(call7271, "==(1)", [1], string7268);
                                                                                          if (Grace_isTrue(opresult7273)) {
                                                                                            setLineNumber(2140);    // compilenode string
                                                                                            var string7274 = new GraceString("");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7277 = callmethodChecked(this, "number", []);
                                                                                            var string7279 = new GraceString("a number field holding ");
                                                                                            var opresult7281 = callmethodChecked(string7279, "++(1)", [1], call7277);
                                                                                            var opresult7283 = callmethodChecked(opresult7281, "++(1)", [1], string7274);
                                                                                            if7267 = opresult7283;
                                                                                          } else {
                                                                                            setLineNumber(2142);    // compilenode string
                                                                                            var string7284 = new GraceString("");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7287 = callmethodChecked(this, "number", []);
                                                                                            var string7289 = new GraceString(" holding ");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7292 = callmethodChecked(this, "label", []);
                                                                                            var string7294 = new GraceString("a number field labeled: ");
                                                                                            var opresult7296 = callmethodChecked(string7294, "++(1)", [1], call7292);
                                                                                            var opresult7298 = callmethodChecked(opresult7296, "++(1)", [1], string7289);
                                                                                            var opresult7300 = callmethodChecked(opresult7298, "++(1)", [1], call7287);
                                                                                            var opresult7302 = callmethodChecked(opresult7300, "++(1)", [1], string7284);
                                                                                            if7267 = opresult7302;
                                                                                          }
                                                                                          setLineNumber(2139);    // return value
                                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7267)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method asString does not have " + 
                                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                                          return if7267;
                                                                                        };
                                                                                        func7266.paramCounts = [0];
                                                                                        obj7252.methods["asString"] = func7266;
                                                                                        func7266.definitionLine = 2138;
                                                                                        func7266.definitionModule = "rtobjectdraw";
                                                                                        setLineNumber(2125);    // compilenode string
                                                                                        var string7304 = new GraceString("number");
                                                                                        // call case 6: other requests
                                                                                        setLineNumber(0);    // compilenode member
                                                                                        // call case 3: self.outer request
                                                                                        var call7306 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onSelf = true;
                                                                                        var call7307 = callmethodChecked(call7306, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7304, var_label__39__, this);
                                                                                        obj7252.superobj = call7307;
                                                                                        if (call7307.data) obj7252.data = call7307.data;
                                                                                        if (call7307.hasOwnProperty('_value'))
                                                                                            obj7252._value = call7307._value;
                                                                                        superDepth = origSuperDepth;
                                                                                      };
                                                                                      obj_init_7252.apply(obj7252, []);
                                                                                      setLineNumber(2122);    // return value
                                                                                      if (!Grace_isTrue(callmethod(var_NumberField, "match(1)", [1], obj7252)))
                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                              new GraceString("result of method numberFieldLabeled(_) does not have " + 
                                                                                                  callmethod(var_NumberField, "asString", [0])._value + "."));
                                                                                      return obj7252;
                                                                                    };
                                                                                    func7251.paramTypes = [];
                                                                                    func7251.paramTypes.push([type_String, "label'"]);
                                                                                    func7251.paramCounts = [1];
                                                                                    this.methods["numberFieldLabeled(1)"] = func7251;
                                                                                    func7251.definitionLine = 2122;
                                                                                    func7251.definitionModule = "rtobjectdraw";
                                                                                      var func7308 = function(argcv) {    // method numberFieldLabeled(_)$object(_)
                                                                                        var curarg = 1;
                                                                                        var var_label__39__ = arguments[curarg];
                                                                                        curarg++;
                                                                                        var inheritingObject = arguments[curarg++];
                                                                                        // Start argument processing
                                                                                        curarg = 1;
                                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                new GraceString("argument 1 in numberFieldLabeled (arg list 1), which corresponds to parameter label', does not have " + 
                                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                                        curarg++;
                                                                                        // End argument processing
                                                                                        setModuleName("rtobjectdraw");
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var obj7309 = Grace_allocObject(null, "numberFieldLabeled(1)");
                                                                                        obj7309.definitionModule = "rtobjectdraw";
                                                                                        obj7309.definitionLine = 2122;
                                                                                        var inho7309 = inheritingObject;
                                                                                        while (inho7309.superobj) inho7309 = inho7309.superobj;
                                                                                        inho7309.superobj = obj7309;
                                                                                        obj7309.data = inheritingObject.data;
                                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                                          obj7309._value = inheritingObject._value;
                                                                                        obj7309.outer = this;
                                                                                        var reader_rtobjectdraw_outer7310 = function() {
                                                                                          return this.outer;
                                                                                        };
                                                                                        obj7309.methods["outer"] = reader_rtobjectdraw_outer7310;
                                                                                        var obj_init_7309 = function() {
                                                                                          var origSuperDepth = superDepth;
                                                                                          superDepth = obj7309;
                                                                                          var func7311 = function(argcv) {    // method number
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            setModuleName("rtobjectdraw");
                                                                                            setLineNumber(2129);    // compilenode member
                                                                                            // call case 6: other requests
                                                                                            // call case 6: other requests
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7315 = callmethodChecked(this, "element", []);
                                                                                            var call7316 = callmethodChecked(call7315, "value", []);
                                                                                            var call7317 = callmethodChecked(call7316, "asNumber", []);
                                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7317)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method number does not have " + 
                                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                                            return call7317;
                                                                                          };
                                                                                          func7311.paramCounts = [0];
                                                                                          obj7309.methods["number"] = func7311;
                                                                                          func7311.definitionLine = 2128;
                                                                                          func7311.definitionModule = "rtobjectdraw";
                                                                                          var func7318 = function(argcv) {    // method number:=(_)
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            var var_value = arguments[curarg];
                                                                                            curarg++;
                                                                                            // Start argument checking
                                                                                            curarg = 1;
                                                                                            setLineNumber(2133);    // compilenode identifier
                                                                                            if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in number:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                        callmethod(var_Number, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            // End argument checking
                                                                                            setModuleName("rtobjectdraw");
                                                                                            setLineNumber(2134);    // compilenode identifier
                                                                                            // call case 6: other requests
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7321 = callmethodChecked(this, "element", []);
                                                                                            var call7322 = callmethodChecked(call7321, "value:=(1)", [1], var_value);
                                                                                            if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7322)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method number:=(_) does not have " + 
                                                                                                        callmethod(var_Done, "asString", [0])._value + "."));
                                                                                            return call7322;
                                                                                          };
                                                                                          func7318.paramTypes = [];
                                                                                          func7318.paramTypes.push([type_Number, "value"]);
                                                                                          func7318.paramCounts = [1];
                                                                                          obj7309.methods["number:=(1)"] = func7318;
                                                                                          func7318.definitionLine = 2133;
                                                                                          func7318.definitionModule = "rtobjectdraw";
                                                                                          var func7323 = function(argcv) {    // method asString
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            setModuleName("rtobjectdraw");
                                                                                            var if7324 = GraceDone;
                                                                                            setLineNumber(2139);    // compilenode string
                                                                                            var string7325 = new GraceString("");
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7328 = callmethodChecked(this, "label", []);
                                                                                            var opresult7330 = callmethodChecked(call7328, "==(1)", [1], string7325);
                                                                                            if (Grace_isTrue(opresult7330)) {
                                                                                              setLineNumber(2140);    // compilenode string
                                                                                              var string7331 = new GraceString("");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7334 = callmethodChecked(this, "number", []);
                                                                                              var string7336 = new GraceString("a number field holding ");
                                                                                              var opresult7338 = callmethodChecked(string7336, "++(1)", [1], call7334);
                                                                                              var opresult7340 = callmethodChecked(opresult7338, "++(1)", [1], string7331);
                                                                                              if7324 = opresult7340;
                                                                                            } else {
                                                                                              setLineNumber(2142);    // compilenode string
                                                                                              var string7341 = new GraceString("");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7344 = callmethodChecked(this, "number", []);
                                                                                              var string7346 = new GraceString(" holding ");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7349 = callmethodChecked(this, "label", []);
                                                                                              var string7351 = new GraceString("a number field labeled: ");
                                                                                              var opresult7353 = callmethodChecked(string7351, "++(1)", [1], call7349);
                                                                                              var opresult7355 = callmethodChecked(opresult7353, "++(1)", [1], string7346);
                                                                                              var opresult7357 = callmethodChecked(opresult7355, "++(1)", [1], call7344);
                                                                                              var opresult7359 = callmethodChecked(opresult7357, "++(1)", [1], string7341);
                                                                                              if7324 = opresult7359;
                                                                                            }
                                                                                            setLineNumber(2139);    // return value
                                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7324)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method asString does not have " + 
                                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                                            return if7324;
                                                                                          };
                                                                                          func7323.paramCounts = [0];
                                                                                          obj7309.methods["asString"] = func7323;
                                                                                          func7323.definitionLine = 2138;
                                                                                          func7323.definitionModule = "rtobjectdraw";
                                                                                          setLineNumber(2125);    // compilenode string
                                                                                          var string7361 = new GraceString("number");
                                                                                          // call case 6: other requests
                                                                                          setLineNumber(0);    // compilenode member
                                                                                          // call case 3: self.outer request
                                                                                          var call7363 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onSelf = true;
                                                                                          var call7364 = callmethodChecked(call7363, "fieldOfType(1)labeled(1)$object(1)", [1, 1, 1], string7361, var_label__39__, this);
                                                                                          obj7309.superobj = call7364;
                                                                                          if (call7364.data) obj7309.data = call7364.data;
                                                                                          if (call7364.hasOwnProperty('_value'))
                                                                                              obj7309._value = call7364._value;
                                                                                          superDepth = origSuperDepth;
                                                                                        };
                                                                                        obj_init_7309.apply(inheritingObject, []);
                                                                                        return obj7309;
                                                                                        };
                                                                                        func7308.paramTypes = [];
                                                                                        func7308.paramTypes.push([type_String, "label'"]);
                                                                                        this.methods["numberFieldLabeled(1)$object(1)"] = func7308;
                                                                                      setLineNumber(2147);    // compilenode method
                                                                                      var func7365 = function(argcv) {    // method numberFieldUnlabeled
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var curarg = 1;
                                                                                        setModuleName("rtobjectdraw");
                                                                                        var obj7366 = Grace_allocObject(null, "numberFieldUnlabeled");
                                                                                        obj7366.definitionModule = "rtobjectdraw";
                                                                                        obj7366.definitionLine = 2147;
                                                                                        obj7366.outer = this;
                                                                                        var reader_rtobjectdraw_outer7367 = function() {
                                                                                          return this.outer;
                                                                                        };
                                                                                        obj7366.methods["outer"] = reader_rtobjectdraw_outer7367;
                                                                                        var obj_init_7366 = function() {
                                                                                          var origSuperDepth = superDepth;
                                                                                          superDepth = obj7366;
                                                                                          setLineNumber(2149);    // compilenode string
                                                                                          var string7369 = new GraceString("");
                                                                                          setLineNumber(0);    // compilenode identifier
                                                                                          // call case 6: other requests
                                                                                          // call case 3: self.outer request
                                                                                          var call7371 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onSelf = true;
                                                                                          var call7372 = callmethodChecked(call7371, "numberFieldLabeled(1)$object(1)", [1, 1], string7369, this);
                                                                                          obj7366.superobj = call7372;
                                                                                          if (call7372.data) obj7366.data = call7372.data;
                                                                                          if (call7372.hasOwnProperty('_value'))
                                                                                              obj7366._value = call7372._value;
                                                                                          superDepth = origSuperDepth;
                                                                                        };
                                                                                        obj_init_7366.apply(obj7366, []);
                                                                                        setLineNumber(2147);    // return value
                                                                                        if (!Grace_isTrue(callmethod(var_NumberField, "match(1)", [1], obj7366)))
                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                new GraceString("result of method numberFieldUnlabeled does not have " + 
                                                                                                    callmethod(var_NumberField, "asString", [0])._value + "."));
                                                                                        return obj7366;
                                                                                      };
                                                                                      func7365.paramCounts = [0];
                                                                                      this.methods["numberFieldUnlabeled"] = func7365;
                                                                                      func7365.definitionLine = 2147;
                                                                                      func7365.definitionModule = "rtobjectdraw";
                                                                                        var func7373 = function(argcv) {    // method numberFieldUnlabeled$object(_)
                                                                                          var curarg = 1;
                                                                                          var inheritingObject = arguments[curarg++];
                                                                                          // Start argument processing
                                                                                          curarg = 1;
                                                                                          // End argument processing
                                                                                          setModuleName("rtobjectdraw");
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var obj7374 = Grace_allocObject(null, "numberFieldUnlabeled");
                                                                                          obj7374.definitionModule = "rtobjectdraw";
                                                                                          obj7374.definitionLine = 2147;
                                                                                          var inho7374 = inheritingObject;
                                                                                          while (inho7374.superobj) inho7374 = inho7374.superobj;
                                                                                          inho7374.superobj = obj7374;
                                                                                          obj7374.data = inheritingObject.data;
                                                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                                                            obj7374._value = inheritingObject._value;
                                                                                          obj7374.outer = this;
                                                                                          var reader_rtobjectdraw_outer7375 = function() {
                                                                                            return this.outer;
                                                                                          };
                                                                                          obj7374.methods["outer"] = reader_rtobjectdraw_outer7375;
                                                                                          var obj_init_7374 = function() {
                                                                                            var origSuperDepth = superDepth;
                                                                                            superDepth = obj7374;
                                                                                            setLineNumber(2149);    // compilenode string
                                                                                            var string7377 = new GraceString("");
                                                                                            setLineNumber(0);    // compilenode identifier
                                                                                            // call case 6: other requests
                                                                                            // call case 3: self.outer request
                                                                                            var call7379 = callmethodChecked(superDepth, "outer", [0]);
                                                                                            onSelf = true;
                                                                                            var call7380 = callmethodChecked(call7379, "numberFieldLabeled(1)$object(1)", [1, 1], string7377, this);
                                                                                            obj7374.superobj = call7380;
                                                                                            if (call7380.data) obj7374.data = call7380.data;
                                                                                            if (call7380.hasOwnProperty('_value'))
                                                                                                obj7374._value = call7380._value;
                                                                                            superDepth = origSuperDepth;
                                                                                          };
                                                                                          obj_init_7374.apply(inheritingObject, []);
                                                                                          return obj7374;
                                                                                          };
                                                                                          this.methods["numberFieldUnlabeled$object(1)"] = func7373;
                                                                                        setLineNumber(2162);    // compilenode method
                                                                                        var func7381 = function(argcv) {    // method menuWithOptions(_)labeled(_)
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          var var_options = arguments[curarg];
                                                                                          curarg++;
                                                                                          var var_label__39__ = arguments[curarg];
                                                                                          curarg++;
                                                                                          // Start argument checking
                                                                                          curarg = 1;
                                                                                          if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                      callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                          curarg++;
                                                                                          if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                                                                      callmethod(var_String, "asString", [0])._value + "."));
                                                                                          curarg++;
                                                                                          // End argument checking
                                                                                          setModuleName("rtobjectdraw");
                                                                                          var obj7382 = Grace_allocObject(null, "menuWithOptions(_)labeled(_)");
                                                                                          obj7382.definitionModule = "rtobjectdraw";
                                                                                          obj7382.definitionLine = 2162;
                                                                                          obj7382.outer = this;
                                                                                          var reader_rtobjectdraw_outer7383 = function() {
                                                                                            return this.outer;
                                                                                          };
                                                                                          obj7382.methods["outer"] = reader_rtobjectdraw_outer7383;
                                                                                          var obj_init_7382 = function() {
                                                                                            var origSuperDepth = superDepth;
                                                                                            superDepth = obj7382;
                                                                                            var func7384 = function(argcv) {    // method init
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("rtobjectdraw");
                                                                                              setLineNumber(2169);    // compilenode string
                                                                                              var string7387 = new GraceString("option");
                                                                                              // call case 6: other requests
                                                                                              var call7388 = callmethodChecked(var_document, "createElement(1)", [1], string7387);
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7389 = callmethodChecked(this, "labeler:=(1)", [1], call7388);
                                                                                              setLineNumber(2170);    // compilenode string
                                                                                              var string7391 = new GraceString("");
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7393 = callmethodChecked(this, "labeler", []);
                                                                                              var call7394 = callmethodChecked(call7393, "value:=(1)", [1], string7391);
                                                                                              return call7394;
                                                                                            };
                                                                                            func7384.confidential = true;
                                                                                            func7384.paramCounts = [0];
                                                                                            obj7382.methods["init"] = func7384;
                                                                                            func7384.definitionLine = 2168;
                                                                                            func7384.definitionModule = "rtobjectdraw";
                                                                                            var func7395 = function(argcv) {    // method labelElement
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("rtobjectdraw");
                                                                                              setLineNumber(2174);    // compilenode member
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7397 = callmethodChecked(this, "labeler", []);
                                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call7397)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method labelElement does not have " + 
                                                                                                          callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                                              return call7397;
                                                                                            };
                                                                                            func7395.paramCounts = [0];
                                                                                            obj7382.methods["labelElement"] = func7395;
                                                                                            func7395.definitionLine = 2173;
                                                                                            func7395.definitionModule = "rtobjectdraw";
                                                                                            var func7398 = function(argcv) {    // method selected
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("rtobjectdraw");
                                                                                              setLineNumber(2188);    // compilenode member
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7401 = callmethodChecked(this, "element", []);
                                                                                              var call7402 = callmethodChecked(call7401, "value", []);
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7402)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method selected does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              return call7402;
                                                                                            };
                                                                                            func7398.paramCounts = [0];
                                                                                            obj7382.methods["selected"] = func7398;
                                                                                            func7398.definitionLine = 2187;
                                                                                            func7398.definitionModule = "rtobjectdraw";
                                                                                            var func7403 = function(argcv) {    // method selected:=(_)
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              var var_value = arguments[curarg];
                                                                                              curarg++;
                                                                                              // Start argument checking
                                                                                              curarg = 1;
                                                                                              setLineNumber(2192);    // compilenode identifier
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("argument 1 in selected:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              curarg++;
                                                                                              // End argument checking
                                                                                              setModuleName("rtobjectdraw");
                                                                                              setLineNumber(2193);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7406 = callmethodChecked(this, "element", []);
                                                                                              var call7407 = callmethodChecked(call7406, "value:=(1)", [1], var_value);
                                                                                              if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7407)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method selected:=(_) does not have " + 
                                                                                                          callmethod(var_Done, "asString", [0])._value + "."));
                                                                                              return call7407;
                                                                                            };
                                                                                            func7403.paramTypes = [];
                                                                                            func7403.paramTypes.push([type_String, "value"]);
                                                                                            func7403.paramCounts = [1];
                                                                                            obj7382.methods["selected:=(1)"] = func7403;
                                                                                            func7403.definitionLine = 2192;
                                                                                            func7403.definitionModule = "rtobjectdraw";
                                                                                            var func7408 = function(argcv) {    // method asString
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              setModuleName("rtobjectdraw");
                                                                                              var if7409 = GraceDone;
                                                                                              setLineNumber(2198);    // compilenode string
                                                                                              var string7410 = new GraceString("");
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7413 = callmethodChecked(this, "label", []);
                                                                                              var opresult7415 = callmethodChecked(call7413, "==(1)", [1], string7410);
                                                                                              if (Grace_isTrue(opresult7415)) {
                                                                                                setLineNumber(2199);    // compilenode string
                                                                                                var string7416 = new GraceString("a pop-up menu");
                                                                                                if7409 = string7416;
                                                                                              } else {
                                                                                                setLineNumber(2201);    // compilenode string
                                                                                                var string7417 = new GraceString("");
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7420 = callmethodChecked(this, "label", []);
                                                                                                var string7422 = new GraceString("a pop-up menu labeled: ");
                                                                                                var opresult7424 = callmethodChecked(string7422, "++(1)", [1], call7420);
                                                                                                var opresult7426 = callmethodChecked(opresult7424, "++(1)", [1], string7417);
                                                                                                if7409 = opresult7426;
                                                                                              }
                                                                                              setLineNumber(2198);    // return value
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7409)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method asString does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              return if7409;
                                                                                            };
                                                                                            func7408.paramCounts = [0];
                                                                                            obj7382.methods["asString"] = func7408;
                                                                                            func7408.definitionLine = 2197;
                                                                                            func7408.definitionModule = "rtobjectdraw";
                                                                                            setLineNumber(2166);    // compilenode string
                                                                                            var string7428 = new GraceString("select");
                                                                                            // call case 6: other requests
                                                                                            setLineNumber(0);    // compilenode member
                                                                                            // call case 3: self.outer request
                                                                                            var call7430 = callmethodChecked(superDepth, "outer", [0]);
                                                                                            onSelf = true;
                                                                                            var call7431 = callmethodChecked(call7430, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7428, var_label__39__, this);
                                                                                            obj7382.superobj = call7431;
                                                                                            if (call7431.data) obj7382.data = call7431.data;
                                                                                            if (call7431.hasOwnProperty('_value'))
                                                                                                obj7382._value = call7431._value;
                                                                                            setLineNumber(2177);    // compilenode member
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7434 = callmethodChecked(this, "labeler", []);
                                                                                            // call case 6: other requests
                                                                                            // call case 4: self request
                                                                                            onSelf = true;
                                                                                            var call7436 = callmethodChecked(this, "element", []);
                                                                                            var call7437 = callmethodChecked(call7436, "appendChild(1)", [1], call7434);
                                                                                            setLineNumber(2179);    // compilenode block
                                                                                            var block7439 = new GraceBlock(this, 2179, 1);
                                                                                            setLineNumber(0);    // compilenode string
                                                                                            var string7442 = new GraceString("name");
                                                                                            // call case 6: other requests
                                                                                            // call case 5: prelude request
                                                                                            var call7444 = callmethodChecked(var_prelude, "VariablePattern", []);
                                                                                            var call7445 = callmethodChecked(call7444, "new(1)", [1], string7442);
                                                                                            setLineNumber(2179);    // compilenode identifier
                                                                                            // call case 6: other requests
                                                                                            setLineNumber(0);    // compilenode member
                                                                                            // call case 5: prelude request
                                                                                            var call7447 = callmethodChecked(var_prelude, "AndPattern", []);
                                                                                            var call7448 = callmethodChecked(call7447, "new(2)", [2], call7445, var_String);
                                                                                            block7439.pattern = call7448;
                                                                                            setLineNumber(2179);    // compilenode identifier
                                                                                            block7439.paramTypes = [var_String];
                                                                                            block7439.real = function(var_name) {
                                                                                              setLineNumber(2180);    // compilenode string
                                                                                              var string7450 = new GraceString("option");
                                                                                              // call case 6: other requests
                                                                                              var call7451 = callmethodChecked(var_document, "createElement(1)", [1], string7450);
                                                                                              var var_anOption = call7451;
                                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], var_anOption)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'anOption' is not of type Foreign"));
                                                                                              setLineNumber(2181);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              var call7453 = callmethodChecked(var_anOption, "value:=(1)", [1], var_name);
                                                                                              setLineNumber(2182);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              var call7455 = callmethodChecked(var_anOption, "textContent:=(1)", [1], var_name);
                                                                                              setLineNumber(2183);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7458 = callmethodChecked(this, "element", []);
                                                                                              var call7459 = callmethodChecked(call7458, "appendChild(1)", [1], var_anOption);
                                                                                              return call7459;
                                                                                            };
                                                                                            // call case 5: prelude request
                                                                                            var call7460 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], var_options, block7439);
                                                                                            superDepth = origSuperDepth;
                                                                                          };
                                                                                          obj_init_7382.apply(obj7382, []);
                                                                                          setLineNumber(2162);    // return value
                                                                                          if (!Grace_isTrue(callmethod(var_Choice, "match(1)", [1], obj7382)))
                                                                                              throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                  new GraceString("result of method menuWithOptions(_)labeled(_) does not have " + 
                                                                                                      callmethod(var_Choice, "asString", [0])._value + "."));
                                                                                          return obj7382;
                                                                                        };
                                                                                        func7381.paramTypes = [];
                                                                                        func7381.paramTypes.push([]);
                                                                                        func7381.paramTypes.push([type_String, "label'"]);
                                                                                        func7381.confidential = true;
                                                                                        func7381.paramCounts = [1, 1];
                                                                                        this.methods["menuWithOptions(1)labeled(1)"] = func7381;
                                                                                        func7381.definitionLine = 2162;
                                                                                        func7381.definitionModule = "rtobjectdraw";
                                                                                          var func7461 = function(argcv) {    // method menuWithOptions(_)labeled(_)$object(_)
                                                                                            var curarg = 1;
                                                                                            var var_options = arguments[curarg];
                                                                                            curarg++;
                                                                                            var var_label__39__ = arguments[curarg];
                                                                                            curarg++;
                                                                                            var inheritingObject = arguments[curarg++];
                                                                                            // Start argument processing
                                                                                            curarg = 1;
                                                                                            if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                        callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in labeled (arg list 2), which corresponds to parameter label', does not have " + 
                                                                                                        callmethod(var_String, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            // End argument processing
                                                                                            setModuleName("rtobjectdraw");
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var obj7462 = Grace_allocObject(null, "menuWithOptions(1)labeled(1)");
                                                                                            obj7462.definitionModule = "rtobjectdraw";
                                                                                            obj7462.definitionLine = 2162;
                                                                                            var inho7462 = inheritingObject;
                                                                                            while (inho7462.superobj) inho7462 = inho7462.superobj;
                                                                                            inho7462.superobj = obj7462;
                                                                                            obj7462.data = inheritingObject.data;
                                                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                                                              obj7462._value = inheritingObject._value;
                                                                                            obj7462.outer = this;
                                                                                            var reader_rtobjectdraw_outer7463 = function() {
                                                                                              return this.outer;
                                                                                            };
                                                                                            obj7462.methods["outer"] = reader_rtobjectdraw_outer7463;
                                                                                            var obj_init_7462 = function() {
                                                                                              var origSuperDepth = superDepth;
                                                                                              superDepth = obj7462;
                                                                                              var func7464 = function(argcv) {    // method init
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                setLineNumber(2169);    // compilenode string
                                                                                                var string7467 = new GraceString("option");
                                                                                                // call case 6: other requests
                                                                                                var call7468 = callmethodChecked(var_document, "createElement(1)", [1], string7467);
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7469 = callmethodChecked(this, "labeler:=(1)", [1], call7468);
                                                                                                setLineNumber(2170);    // compilenode string
                                                                                                var string7471 = new GraceString("");
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7473 = callmethodChecked(this, "labeler", []);
                                                                                                var call7474 = callmethodChecked(call7473, "value:=(1)", [1], string7471);
                                                                                                return call7474;
                                                                                              };
                                                                                              func7464.confidential = true;
                                                                                              func7464.paramCounts = [0];
                                                                                              obj7462.methods["init"] = func7464;
                                                                                              func7464.definitionLine = 2168;
                                                                                              func7464.definitionModule = "rtobjectdraw";
                                                                                              var func7475 = function(argcv) {    // method labelElement
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                setLineNumber(2174);    // compilenode member
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7477 = callmethodChecked(this, "labeler", []);
                                                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], call7477)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method labelElement does not have " + 
                                                                                                            callmethod(var_Foreign, "asString", [0])._value + "."));
                                                                                                return call7477;
                                                                                              };
                                                                                              func7475.paramCounts = [0];
                                                                                              obj7462.methods["labelElement"] = func7475;
                                                                                              func7475.definitionLine = 2173;
                                                                                              func7475.definitionModule = "rtobjectdraw";
                                                                                              var func7478 = function(argcv) {    // method selected
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                setLineNumber(2188);    // compilenode member
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7481 = callmethodChecked(this, "element", []);
                                                                                                var call7482 = callmethodChecked(call7481, "value", []);
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7482)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method selected does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                return call7482;
                                                                                              };
                                                                                              func7478.paramCounts = [0];
                                                                                              obj7462.methods["selected"] = func7478;
                                                                                              func7478.definitionLine = 2187;
                                                                                              func7478.definitionModule = "rtobjectdraw";
                                                                                              var func7483 = function(argcv) {    // method selected:=(_)
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                var var_value = arguments[curarg];
                                                                                                curarg++;
                                                                                                // Start argument checking
                                                                                                curarg = 1;
                                                                                                setLineNumber(2192);    // compilenode identifier
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("argument 1 in selected:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                curarg++;
                                                                                                // End argument checking
                                                                                                setModuleName("rtobjectdraw");
                                                                                                setLineNumber(2193);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7486 = callmethodChecked(this, "element", []);
                                                                                                var call7487 = callmethodChecked(call7486, "value:=(1)", [1], var_value);
                                                                                                if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7487)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method selected:=(_) does not have " + 
                                                                                                            callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                return call7487;
                                                                                              };
                                                                                              func7483.paramTypes = [];
                                                                                              func7483.paramTypes.push([type_String, "value"]);
                                                                                              func7483.paramCounts = [1];
                                                                                              obj7462.methods["selected:=(1)"] = func7483;
                                                                                              func7483.definitionLine = 2192;
                                                                                              func7483.definitionModule = "rtobjectdraw";
                                                                                              var func7488 = function(argcv) {    // method asString
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                var if7489 = GraceDone;
                                                                                                setLineNumber(2198);    // compilenode string
                                                                                                var string7490 = new GraceString("");
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7493 = callmethodChecked(this, "label", []);
                                                                                                var opresult7495 = callmethodChecked(call7493, "==(1)", [1], string7490);
                                                                                                if (Grace_isTrue(opresult7495)) {
                                                                                                  setLineNumber(2199);    // compilenode string
                                                                                                  var string7496 = new GraceString("a pop-up menu");
                                                                                                  if7489 = string7496;
                                                                                                } else {
                                                                                                  setLineNumber(2201);    // compilenode string
                                                                                                  var string7497 = new GraceString("");
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7500 = callmethodChecked(this, "label", []);
                                                                                                  var string7502 = new GraceString("a pop-up menu labeled: ");
                                                                                                  var opresult7504 = callmethodChecked(string7502, "++(1)", [1], call7500);
                                                                                                  var opresult7506 = callmethodChecked(opresult7504, "++(1)", [1], string7497);
                                                                                                  if7489 = opresult7506;
                                                                                                }
                                                                                                setLineNumber(2198);    // return value
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], if7489)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("result of method asString does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                return if7489;
                                                                                              };
                                                                                              func7488.paramCounts = [0];
                                                                                              obj7462.methods["asString"] = func7488;
                                                                                              func7488.definitionLine = 2197;
                                                                                              func7488.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(2166);    // compilenode string
                                                                                              var string7508 = new GraceString("select");
                                                                                              // call case 6: other requests
                                                                                              setLineNumber(0);    // compilenode member
                                                                                              // call case 3: self.outer request
                                                                                              var call7510 = callmethodChecked(superDepth, "outer", [0]);
                                                                                              onSelf = true;
                                                                                              var call7511 = callmethodChecked(call7510, "labeledWidgetOfElementType(1)labeled(1)$object(1)", [1, 1, 1], string7508, var_label__39__, this);
                                                                                              obj7462.superobj = call7511;
                                                                                              if (call7511.data) obj7462.data = call7511.data;
                                                                                              if (call7511.hasOwnProperty('_value'))
                                                                                                  obj7462._value = call7511._value;
                                                                                              setLineNumber(2177);    // compilenode member
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7514 = callmethodChecked(this, "labeler", []);
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7516 = callmethodChecked(this, "element", []);
                                                                                              var call7517 = callmethodChecked(call7516, "appendChild(1)", [1], call7514);
                                                                                              setLineNumber(2179);    // compilenode block
                                                                                              var block7519 = new GraceBlock(this, 2179, 1);
                                                                                              setLineNumber(0);    // compilenode string
                                                                                              var string7522 = new GraceString("name");
                                                                                              // call case 6: other requests
                                                                                              // call case 5: prelude request
                                                                                              var call7524 = callmethodChecked(var_prelude, "VariablePattern", []);
                                                                                              var call7525 = callmethodChecked(call7524, "new(1)", [1], string7522);
                                                                                              setLineNumber(2179);    // compilenode identifier
                                                                                              // call case 6: other requests
                                                                                              setLineNumber(0);    // compilenode member
                                                                                              // call case 5: prelude request
                                                                                              var call7527 = callmethodChecked(var_prelude, "AndPattern", []);
                                                                                              var call7528 = callmethodChecked(call7527, "new(2)", [2], call7525, var_String);
                                                                                              block7519.pattern = call7528;
                                                                                              setLineNumber(2179);    // compilenode identifier
                                                                                              block7519.paramTypes = [var_String];
                                                                                              block7519.real = function(var_name) {
                                                                                                setLineNumber(2180);    // compilenode string
                                                                                                var string7530 = new GraceString("option");
                                                                                                // call case 6: other requests
                                                                                                var call7531 = callmethodChecked(var_document, "createElement(1)", [1], string7530);
                                                                                                var var_anOption = call7531;
                                                                                                if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], var_anOption)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("value of def 'anOption' is not of type Foreign"));
                                                                                                setLineNumber(2181);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                var call7533 = callmethodChecked(var_anOption, "value:=(1)", [1], var_name);
                                                                                                setLineNumber(2182);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                var call7535 = callmethodChecked(var_anOption, "textContent:=(1)", [1], var_name);
                                                                                                setLineNumber(2183);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7538 = callmethodChecked(this, "element", []);
                                                                                                var call7539 = callmethodChecked(call7538, "appendChild(1)", [1], var_anOption);
                                                                                                return call7539;
                                                                                              };
                                                                                              // call case 5: prelude request
                                                                                              var call7540 = callmethodChecked(var_prelude, "for(1)do(1)", [1, 1], var_options, block7519);
                                                                                              superDepth = origSuperDepth;
                                                                                            };
                                                                                            obj_init_7462.apply(inheritingObject, []);
                                                                                            return obj7462;
                                                                                            };
                                                                                            func7461.paramTypes = [];
                                                                                            func7461.paramTypes.push([]);
                                                                                            func7461.paramTypes.push([type_String, "label'"]);
                                                                                            func7461.confidential = true;
                                                                                            this.methods["menuWithOptions(1)labeled(1)$object(1)"] = func7461;
                                                                                          setLineNumber(2206);    // compilenode method
                                                                                          var func7541 = function(argcv) {    // method menuWithOptions(_)
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            var var_options = arguments[curarg];
                                                                                            curarg++;
                                                                                            // Start argument checking
                                                                                            curarg = 1;
                                                                                            if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                        callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                            curarg++;
                                                                                            // End argument checking
                                                                                            setModuleName("rtobjectdraw");
                                                                                            var obj7542 = Grace_allocObject(null, "menuWithOptions(_)");
                                                                                            obj7542.definitionModule = "rtobjectdraw";
                                                                                            obj7542.definitionLine = 2206;
                                                                                            obj7542.outer = this;
                                                                                            var reader_rtobjectdraw_outer7543 = function() {
                                                                                              return this.outer;
                                                                                            };
                                                                                            obj7542.methods["outer"] = reader_rtobjectdraw_outer7543;
                                                                                            var obj_init_7542 = function() {
                                                                                              var origSuperDepth = superDepth;
                                                                                              superDepth = obj7542;
                                                                                              setLineNumber(2209);    // compilenode string
                                                                                              var string7545 = new GraceString("");
                                                                                              // call case 6: other requests
                                                                                              setLineNumber(0);    // compilenode member
                                                                                              // call case 3: self.outer request
                                                                                              var call7547 = callmethodChecked(superDepth, "outer", [0]);
                                                                                              onSelf = true;
                                                                                              var call7548 = callmethodChecked(call7547, "menuWithOptions(1)labeled(1)$object(1)", [1, 1, 1], var_options, string7545, this);
                                                                                              obj7542.superobj = call7548;
                                                                                              if (call7548.data) obj7542.data = call7548.data;
                                                                                              if (call7548.hasOwnProperty('_value'))
                                                                                                  obj7542._value = call7548._value;
                                                                                              setLineNumber(2210);    // compilenode member
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7551 = callmethodChecked(this, "labelElement", []);
                                                                                              // call case 6: other requests
                                                                                              // call case 4: self request
                                                                                              onSelf = true;
                                                                                              var call7553 = callmethodChecked(this, "element", []);
                                                                                              var call7554 = callmethodChecked(call7553, "removeChild(1)", [1], call7551);
                                                                                              superDepth = origSuperDepth;
                                                                                            };
                                                                                            obj_init_7542.apply(obj7542, []);
                                                                                            setLineNumber(2206);    // return value
                                                                                            if (!Grace_isTrue(callmethod(var_Choice, "match(1)", [1], obj7542)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("result of method menuWithOptions(_) does not have " + 
                                                                                                        callmethod(var_Choice, "asString", [0])._value + "."));
                                                                                            return obj7542;
                                                                                          };
                                                                                          func7541.paramCounts = [1];
                                                                                          this.methods["menuWithOptions(1)"] = func7541;
                                                                                          func7541.definitionLine = 2206;
                                                                                          func7541.definitionModule = "rtobjectdraw";
                                                                                            var func7555 = function(argcv) {    // method menuWithOptions(_)$object(_)
                                                                                              var curarg = 1;
                                                                                              var var_options = arguments[curarg];
                                                                                              curarg++;
                                                                                              var inheritingObject = arguments[curarg++];
                                                                                              // Start argument processing
                                                                                              curarg = 1;
                                                                                              if (!Grace_isTrue(callmethod(var_Iterable, "match(1)",  [1], arguments[curarg])))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("argument 1 in menuWithOptions (arg list 1), which corresponds to parameter options, does not have " + 
                                                                                                          callmethod(var_Iterable, "asString", [0])._value + "."));
                                                                                              curarg++;
                                                                                              // End argument processing
                                                                                              setModuleName("rtobjectdraw");
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var obj7556 = Grace_allocObject(null, "menuWithOptions(1)");
                                                                                              obj7556.definitionModule = "rtobjectdraw";
                                                                                              obj7556.definitionLine = 2206;
                                                                                              var inho7556 = inheritingObject;
                                                                                              while (inho7556.superobj) inho7556 = inho7556.superobj;
                                                                                              inho7556.superobj = obj7556;
                                                                                              obj7556.data = inheritingObject.data;
                                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                                obj7556._value = inheritingObject._value;
                                                                                              obj7556.outer = this;
                                                                                              var reader_rtobjectdraw_outer7557 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj7556.methods["outer"] = reader_rtobjectdraw_outer7557;
                                                                                              var obj_init_7556 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj7556;
                                                                                                setLineNumber(2209);    // compilenode string
                                                                                                var string7559 = new GraceString("");
                                                                                                // call case 6: other requests
                                                                                                setLineNumber(0);    // compilenode member
                                                                                                // call case 3: self.outer request
                                                                                                var call7561 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                onSelf = true;
                                                                                                var call7562 = callmethodChecked(call7561, "menuWithOptions(1)labeled(1)$object(1)", [1, 1, 1], var_options, string7559, this);
                                                                                                obj7556.superobj = call7562;
                                                                                                if (call7562.data) obj7556.data = call7562.data;
                                                                                                if (call7562.hasOwnProperty('_value'))
                                                                                                    obj7556._value = call7562._value;
                                                                                                setLineNumber(2210);    // compilenode member
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7565 = callmethodChecked(this, "labelElement", []);
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7567 = callmethodChecked(this, "element", []);
                                                                                                var call7568 = callmethodChecked(call7567, "removeChild(1)", [1], call7565);
                                                                                                superDepth = origSuperDepth;
                                                                                              };
                                                                                              obj_init_7556.apply(inheritingObject, []);
                                                                                              return obj7556;
                                                                                              };
                                                                                              this.methods["menuWithOptions(1)$object(1)"] = func7555;
                                                                                            setLineNumber(2228);    // compilenode method
                                                                                            var func7569 = function(argcv) {    // method audioUrl(_)
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              var var_source__39__ = arguments[curarg];
                                                                                              curarg++;
                                                                                              // Start argument checking
                                                                                              curarg = 1;
                                                                                              if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("argument 1 in audioUrl (arg list 1), which corresponds to parameter source', does not have " + 
                                                                                                          callmethod(var_String, "asString", [0])._value + "."));
                                                                                              curarg++;
                                                                                              // End argument checking
                                                                                              setModuleName("rtobjectdraw");
                                                                                              var obj7570 = Grace_allocObject(GraceObject, "audioUrl(_)");
                                                                                              obj7570.definitionModule = "rtobjectdraw";
                                                                                              obj7570.definitionLine = 2228;
                                                                                              obj7570.outer = this;
                                                                                              var reader_rtobjectdraw_outer7571 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj7570.methods["outer"] = reader_rtobjectdraw_outer7571;
                                                                                              var obj_init_7570 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj7570;
                                                                                                var func7572 = function(argcv) {    // method source
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2240);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7575 = callmethodChecked(this, "element", []);
                                                                                                  var call7576 = callmethodChecked(call7575, "src", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7576)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method source does not have " + 
                                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                                  return call7576;
                                                                                                };
                                                                                                func7572.paramCounts = [0];
                                                                                                obj7570.methods["source"] = func7572;
                                                                                                func7572.definitionLine = 2239;
                                                                                                func7572.definitionModule = "rtobjectdraw";
                                                                                                var func7577 = function(argcv) {    // method source:=(_)
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  var var_value = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  // Start argument checking
                                                                                                  curarg = 1;
                                                                                                  setLineNumber(2244);    // compilenode identifier
                                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in source:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  // End argument checking
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2245);    // compilenode identifier
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7580 = callmethodChecked(this, "element", []);
                                                                                                  var call7581 = callmethodChecked(call7580, "src:=(1)", [1], var_value);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7581)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method source:=(_) does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7581;
                                                                                                };
                                                                                                func7577.paramTypes = [];
                                                                                                func7577.paramTypes.push([type_String, "value"]);
                                                                                                func7577.paramCounts = [1];
                                                                                                obj7570.methods["source:=(1)"] = func7577;
                                                                                                func7577.definitionLine = 2244;
                                                                                                func7577.definitionModule = "rtobjectdraw";
                                                                                                var func7582 = function(argcv) {    // method play
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2250);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7585 = callmethodChecked(this, "element", []);
                                                                                                  var call7586 = callmethodChecked(call7585, "play", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7586)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method play does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7586;
                                                                                                };
                                                                                                func7582.paramCounts = [0];
                                                                                                obj7570.methods["play"] = func7582;
                                                                                                func7582.definitionLine = 2249;
                                                                                                func7582.definitionModule = "rtobjectdraw";
                                                                                                var func7587 = function(argcv) {    // method pause
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2255);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7590 = callmethodChecked(this, "element", []);
                                                                                                  var call7591 = callmethodChecked(call7590, "pause", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7591)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method pause does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7591;
                                                                                                };
                                                                                                func7587.paramCounts = [0];
                                                                                                obj7570.methods["pause"] = func7587;
                                                                                                func7587.definitionLine = 2254;
                                                                                                func7587.definitionModule = "rtobjectdraw";
                                                                                                var func7592 = function(argcv) {    // method isLooping
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2260);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7595 = callmethodChecked(this, "element", []);
                                                                                                  var call7596 = callmethodChecked(call7595, "loop", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7596)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method isLooping does not have " + 
                                                                                                              callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                  return call7596;
                                                                                                };
                                                                                                func7592.paramCounts = [0];
                                                                                                obj7570.methods["isLooping"] = func7592;
                                                                                                func7592.definitionLine = 2259;
                                                                                                func7592.definitionModule = "rtobjectdraw";
                                                                                                var func7597 = function(argcv) {    // method looping:=(_)
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  var var_value = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  // Start argument checking
                                                                                                  curarg = 1;
                                                                                                  setLineNumber(2264);    // compilenode identifier
                                                                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in looping:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                              callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  // End argument checking
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2265);    // compilenode identifier
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7600 = callmethodChecked(this, "element", []);
                                                                                                  var call7601 = callmethodChecked(call7600, "loop:=(1)", [1], var_value);
                                                                                                  if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7601)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method looping:=(_) does not have " + 
                                                                                                              callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                  return call7601;
                                                                                                };
                                                                                                func7597.paramTypes = [];
                                                                                                func7597.paramTypes.push([type_Boolean, "value"]);
                                                                                                func7597.paramCounts = [1];
                                                                                                obj7570.methods["looping:=(1)"] = func7597;
                                                                                                func7597.definitionLine = 2264;
                                                                                                func7597.definitionModule = "rtobjectdraw";
                                                                                                var func7602 = function(argcv) {    // method isEnded
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2270);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7605 = callmethodChecked(this, "element", []);
                                                                                                  var call7606 = callmethodChecked(call7605, "ended", []);
                                                                                                  if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7606)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method isEnded does not have " + 
                                                                                                              callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                  return call7606;
                                                                                                };
                                                                                                func7602.paramCounts = [0];
                                                                                                obj7570.methods["isEnded"] = func7602;
                                                                                                func7602.definitionLine = 2269;
                                                                                                func7602.definitionModule = "rtobjectdraw";
                                                                                                var func7607 = function(argcv) {    // method asString
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  setLineNumber(2275);    // compilenode string
                                                                                                  var string7608 = new GraceString("");
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7611 = callmethodChecked(this, "source", []);
                                                                                                  var string7613 = new GraceString("audio from ");
                                                                                                  var opresult7615 = callmethodChecked(string7613, "++(1)", [1], call7611);
                                                                                                  var opresult7617 = callmethodChecked(opresult7615, "++(1)", [1], string7608);
                                                                                                  if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7617)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method asString does not have " + 
                                                                                                              callmethod(var_String, "asString", [0])._value + "."));
                                                                                                  return opresult7617;
                                                                                                };
                                                                                                func7607.paramCounts = [0];
                                                                                                obj7570.methods["asString"] = func7607;
                                                                                                func7607.definitionLine = 2274;
                                                                                                func7607.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(2230);    // compilenode string
                                                                                                var string7619 = new GraceString("audio");
                                                                                                // call case 6: other requests
                                                                                                var call7620 = callmethodChecked(var_document, "createElement(1)", [1], string7619);
                                                                                                obj7570.data["element"] = call7620;
                                                                                                var reader_rtobjectdraw_element7621 = function() {
                                                                                                  return this.data["element"];
                                                                                                };
                                                                                                reader_rtobjectdraw_element7621.def = true;
                                                                                                reader_rtobjectdraw_element7621.confidential = true;
                                                                                                obj7570.methods["element"] = reader_rtobjectdraw_element7621;
                                                                                                setLineNumber(2232);    // compilenode identifier
                                                                                                // call case 6: other requests
                                                                                                // call case 4: self request
                                                                                                onSelf = true;
                                                                                                var call7624 = callmethodChecked(this, "element", []);
                                                                                                var call7625 = callmethodChecked(call7624, "src:=(1)", [1], var_source__39__);
                                                                                                var if7626 = GraceDone;
                                                                                                setLineNumber(2234);    // compilenode member
                                                                                                // call case 6: other requests
                                                                                                var call7629 = callmethodChecked(var_dom, "window", []);
                                                                                                var string7630 = new GraceString("graceRegisterAudio");
                                                                                                // call case 6: other requests
                                                                                                var call7631 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call7629, string7630);
                                                                                                if (Grace_isTrue(call7631)) {
                                                                                                  setLineNumber(2235);    // compilenode member
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7634 = callmethodChecked(this, "element", []);
                                                                                                  // call case 6: other requests
                                                                                                  // call case 6: other requests
                                                                                                  var call7636 = callmethodChecked(var_dom, "window", []);
                                                                                                  var call7637 = callmethodChecked(call7636, "graceRegisterAudio(1)", [1], call7634);
                                                                                                  if7626 = call7637;
                                                                                                }
                                                                                                superDepth = origSuperDepth;
                                                                                              };
                                                                                              obj_init_7570.apply(obj7570, []);
                                                                                              setLineNumber(2228);    // return value
                                                                                              if (!Grace_isTrue(callmethod(var_Audio, "match(1)", [1], obj7570)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("result of method audioUrl(_) does not have " + 
                                                                                                          callmethod(var_Audio, "asString", [0])._value + "."));
                                                                                              return obj7570;
                                                                                            };
                                                                                            func7569.paramTypes = [];
                                                                                            func7569.paramTypes.push([type_String, "source'"]);
                                                                                            func7569.paramCounts = [1];
                                                                                            this.methods["audioUrl(1)"] = func7569;
                                                                                            func7569.definitionLine = 2228;
                                                                                            func7569.definitionModule = "rtobjectdraw";
                                                                                              var func7638 = function(argcv) {    // method audioUrl(_)$object(_)
                                                                                                var curarg = 1;
                                                                                                var var_source__39__ = arguments[curarg];
                                                                                                curarg++;
                                                                                                var inheritingObject = arguments[curarg++];
                                                                                                // Start argument processing
                                                                                                curarg = 1;
                                                                                                if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("argument 1 in audioUrl (arg list 1), which corresponds to parameter source', does not have " + 
                                                                                                            callmethod(var_String, "asString", [0])._value + "."));
                                                                                                curarg++;
                                                                                                // End argument processing
                                                                                                setModuleName("rtobjectdraw");
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var obj7639 = Grace_allocObject(GraceObject, "audioUrl(1)");
                                                                                                obj7639.definitionModule = "rtobjectdraw";
                                                                                                obj7639.definitionLine = 2228;
                                                                                                var inho7639 = inheritingObject;
                                                                                                while (inho7639.superobj) inho7639 = inho7639.superobj;
                                                                                                inho7639.superobj = obj7639;
                                                                                                obj7639.data = inheritingObject.data;
                                                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                                                  obj7639._value = inheritingObject._value;
                                                                                                obj7639.outer = this;
                                                                                                var reader_rtobjectdraw_outer7640 = function() {
                                                                                                  return this.outer;
                                                                                                };
                                                                                                obj7639.methods["outer"] = reader_rtobjectdraw_outer7640;
                                                                                                var obj_init_7639 = function() {
                                                                                                  var origSuperDepth = superDepth;
                                                                                                  superDepth = obj7639;
                                                                                                  var func7641 = function(argcv) {    // method source
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2240);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7644 = callmethodChecked(this, "element", []);
                                                                                                    var call7645 = callmethodChecked(call7644, "src", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], call7645)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method source does not have " + 
                                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                                    return call7645;
                                                                                                  };
                                                                                                  func7641.paramCounts = [0];
                                                                                                  obj7639.methods["source"] = func7641;
                                                                                                  func7641.definitionLine = 2239;
                                                                                                  func7641.definitionModule = "rtobjectdraw";
                                                                                                  var func7646 = function(argcv) {    // method source:=(_)
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    var var_value = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    // Start argument checking
                                                                                                    curarg = 1;
                                                                                                    setLineNumber(2244);    // compilenode identifier
                                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in source:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    // End argument checking
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2245);    // compilenode identifier
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7649 = callmethodChecked(this, "element", []);
                                                                                                    var call7650 = callmethodChecked(call7649, "src:=(1)", [1], var_value);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7650)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method source:=(_) does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7650;
                                                                                                  };
                                                                                                  func7646.paramTypes = [];
                                                                                                  func7646.paramTypes.push([type_String, "value"]);
                                                                                                  func7646.paramCounts = [1];
                                                                                                  obj7639.methods["source:=(1)"] = func7646;
                                                                                                  func7646.definitionLine = 2244;
                                                                                                  func7646.definitionModule = "rtobjectdraw";
                                                                                                  var func7651 = function(argcv) {    // method play
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2250);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7654 = callmethodChecked(this, "element", []);
                                                                                                    var call7655 = callmethodChecked(call7654, "play", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7655)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method play does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7655;
                                                                                                  };
                                                                                                  func7651.paramCounts = [0];
                                                                                                  obj7639.methods["play"] = func7651;
                                                                                                  func7651.definitionLine = 2249;
                                                                                                  func7651.definitionModule = "rtobjectdraw";
                                                                                                  var func7656 = function(argcv) {    // method pause
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2255);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7659 = callmethodChecked(this, "element", []);
                                                                                                    var call7660 = callmethodChecked(call7659, "pause", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7660)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method pause does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7660;
                                                                                                  };
                                                                                                  func7656.paramCounts = [0];
                                                                                                  obj7639.methods["pause"] = func7656;
                                                                                                  func7656.definitionLine = 2254;
                                                                                                  func7656.definitionModule = "rtobjectdraw";
                                                                                                  var func7661 = function(argcv) {    // method isLooping
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2260);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7664 = callmethodChecked(this, "element", []);
                                                                                                    var call7665 = callmethodChecked(call7664, "loop", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7665)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method isLooping does not have " + 
                                                                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                    return call7665;
                                                                                                  };
                                                                                                  func7661.paramCounts = [0];
                                                                                                  obj7639.methods["isLooping"] = func7661;
                                                                                                  func7661.definitionLine = 2259;
                                                                                                  func7661.definitionModule = "rtobjectdraw";
                                                                                                  var func7666 = function(argcv) {    // method looping:=(_)
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    var var_value = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    // Start argument checking
                                                                                                    curarg = 1;
                                                                                                    setLineNumber(2264);    // compilenode identifier
                                                                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in looping:= (arg list 1), which corresponds to parameter value, does not have " + 
                                                                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    // End argument checking
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2265);    // compilenode identifier
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7669 = callmethodChecked(this, "element", []);
                                                                                                    var call7670 = callmethodChecked(call7669, "loop:=(1)", [1], var_value);
                                                                                                    if (!Grace_isTrue(callmethod(var_Done, "match(1)", [1], call7670)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method looping:=(_) does not have " + 
                                                                                                                callmethod(var_Done, "asString", [0])._value + "."));
                                                                                                    return call7670;
                                                                                                  };
                                                                                                  func7666.paramTypes = [];
                                                                                                  func7666.paramTypes.push([type_Boolean, "value"]);
                                                                                                  func7666.paramCounts = [1];
                                                                                                  obj7639.methods["looping:=(1)"] = func7666;
                                                                                                  func7666.definitionLine = 2264;
                                                                                                  func7666.definitionModule = "rtobjectdraw";
                                                                                                  var func7671 = function(argcv) {    // method isEnded
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2270);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7674 = callmethodChecked(this, "element", []);
                                                                                                    var call7675 = callmethodChecked(call7674, "ended", []);
                                                                                                    if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], call7675)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method isEnded does not have " + 
                                                                                                                callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                    return call7675;
                                                                                                  };
                                                                                                  func7671.paramCounts = [0];
                                                                                                  obj7639.methods["isEnded"] = func7671;
                                                                                                  func7671.definitionLine = 2269;
                                                                                                  func7671.definitionModule = "rtobjectdraw";
                                                                                                  var func7676 = function(argcv) {    // method asString
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(2275);    // compilenode string
                                                                                                    var string7677 = new GraceString("");
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7680 = callmethodChecked(this, "source", []);
                                                                                                    var string7682 = new GraceString("audio from ");
                                                                                                    var opresult7684 = callmethodChecked(string7682, "++(1)", [1], call7680);
                                                                                                    var opresult7686 = callmethodChecked(opresult7684, "++(1)", [1], string7677);
                                                                                                    if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7686)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method asString does not have " + 
                                                                                                                callmethod(var_String, "asString", [0])._value + "."));
                                                                                                    return opresult7686;
                                                                                                  };
                                                                                                  func7676.paramCounts = [0];
                                                                                                  obj7639.methods["asString"] = func7676;
                                                                                                  func7676.definitionLine = 2274;
                                                                                                  func7676.definitionModule = "rtobjectdraw";
                                                                                                  setLineNumber(2230);    // compilenode string
                                                                                                  var string7688 = new GraceString("audio");
                                                                                                  // call case 6: other requests
                                                                                                  var call7689 = callmethodChecked(var_document, "createElement(1)", [1], string7688);
                                                                                                  obj7639.data["element"] = call7689;
                                                                                                  var reader_rtobjectdraw_element7690 = function() {
                                                                                                    return this.data["element"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_element7690.def = true;
                                                                                                  reader_rtobjectdraw_element7690.confidential = true;
                                                                                                  obj7639.methods["element"] = reader_rtobjectdraw_element7690;
                                                                                                  setLineNumber(2232);    // compilenode identifier
                                                                                                  // call case 6: other requests
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call7693 = callmethodChecked(this, "element", []);
                                                                                                  var call7694 = callmethodChecked(call7693, "src:=(1)", [1], var_source__39__);
                                                                                                  var if7695 = GraceDone;
                                                                                                  setLineNumber(2234);    // compilenode member
                                                                                                  // call case 6: other requests
                                                                                                  var call7698 = callmethodChecked(var_dom, "window", []);
                                                                                                  var string7699 = new GraceString("graceRegisterAudio");
                                                                                                  // call case 6: other requests
                                                                                                  var call7700 = callmethodChecked(var_dom, "doesObject(1)haveProperty(1)", [1, 1], call7698, string7699);
                                                                                                  if (Grace_isTrue(call7700)) {
                                                                                                    setLineNumber(2235);    // compilenode member
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call7703 = callmethodChecked(this, "element", []);
                                                                                                    // call case 6: other requests
                                                                                                    // call case 6: other requests
                                                                                                    var call7705 = callmethodChecked(var_dom, "window", []);
                                                                                                    var call7706 = callmethodChecked(call7705, "graceRegisterAudio(1)", [1], call7703);
                                                                                                    if7695 = call7706;
                                                                                                  }
                                                                                                  superDepth = origSuperDepth;
                                                                                                };
                                                                                                obj_init_7639.apply(inheritingObject, []);
                                                                                                return obj7639;
                                                                                                };
                                                                                                func7638.paramTypes = [];
                                                                                                func7638.paramTypes.push([type_String, "source'"]);
                                                                                                this.methods["audioUrl(1)$object(1)"] = func7638;
                                                                                              setLineNumber(3);    // compilenode typedec
                                                                                              // Type decl Point
                                                                                              // call case 6: other requests
                                                                                              var call7709 = callmethodChecked(var___95__prelude, "Point", []);
                                                                                              var var_Point = call7709;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7710 = function(argcv) {    // method Point
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Point is a simple accessor - elide try ... catch
                                                                                                setLineNumber(3);    // compilenode identifier
                                                                                                return var_Point;
                                                                                              };
                                                                                              func7710.paramCounts = [0];
                                                                                              this.methods["Point"] = func7710;
                                                                                              func7710.definitionLine = 1;
                                                                                              func7710.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(4);    // compilenode typedec
                                                                                              // Type decl Iterable
                                                                                              // call case 6: other requests
                                                                                              var call7713 = callmethodChecked(var___95__prelude, "Iterable", []);
                                                                                              var var_Iterable = call7713;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7714 = function(argcv) {    // method Iterable
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Iterable is a simple accessor - elide try ... catch
                                                                                                setLineNumber(4);    // compilenode identifier
                                                                                                return var_Iterable;
                                                                                              };
                                                                                              func7714.paramCounts = [0];
                                                                                              this.methods["Iterable"] = func7714;
                                                                                              func7714.definitionLine = 1;
                                                                                              func7714.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(15);    // compilenode num
                                                                                              var var_frameRate = new GraceNum(30);
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7715 = function(argcv) {    // method frameRate
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // frameRate is a simple accessor - elide try ... catch
                                                                                                setLineNumber(15);    // compilenode identifier
                                                                                                return var_frameRate;
                                                                                              };
                                                                                              func7715.paramCounts = [0];
                                                                                              this.methods["frameRate"] = func7715;
                                                                                              func7715.definitionLine = 1;
                                                                                              func7715.definitionModule = "rtobjectdraw";
                                                                                              this.methods["frameRate"].debug = "def";
                                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_frameRate)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'frameRate' is not of type Number"));
                                                                                              setLineNumber(28);    // compilenode member
                                                                                              // call case 5: prelude request
                                                                                              var call7717 = callmethodChecked(var_prelude, "\u03c0", []);
                                                                                              var var_pi = call7717;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7718 = function(argcv) {    // method pi
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // pi is a simple accessor - elide try ... catch
                                                                                                setLineNumber(28);    // compilenode identifier
                                                                                                return var_pi;
                                                                                              };
                                                                                              func7718.paramCounts = [0];
                                                                                              this.methods["pi"] = func7718;
                                                                                              func7718.definitionLine = 1;
                                                                                              func7718.definitionModule = "rtobjectdraw";
                                                                                              this.methods["pi"].debug = "def";
                                                                                              if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_pi)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'pi' is not of type Number"));
                                                                                              setLineNumber(30);    // compilenode typedec
                                                                                              // Type decl Foreign
                                                                                              var var_Foreign = var_Unknown;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7720 = function(argcv) {    // method Foreign
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Foreign is a simple accessor - elide try ... catch
                                                                                                setLineNumber(30);    // compilenode identifier
                                                                                                return var_Foreign;
                                                                                              };
                                                                                              func7720.paramCounts = [0];
                                                                                              this.methods["Foreign"] = func7720;
                                                                                              func7720.definitionLine = 1;
                                                                                              func7720.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(32);    // compilenode member
                                                                                              // call case 6: other requests
                                                                                              var call7722 = callmethodChecked(var_dom, "document", []);
                                                                                              var var_document = call7722;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7723 = function(argcv) {    // method document
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // document is a simple accessor - elide try ... catch
                                                                                                setLineNumber(32);    // compilenode identifier
                                                                                                return var_document;
                                                                                              };
                                                                                              func7723.paramCounts = [0];
                                                                                              this.methods["document"] = func7723;
                                                                                              func7723.definitionLine = 1;
                                                                                              func7723.definitionModule = "rtobjectdraw";
                                                                                              this.methods["document"].debug = "def";
                                                                                              if (!Grace_isTrue(callmethod(var_Foreign, "match(1)", [1], var_document)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'document' is not of type Foreign"));
                                                                                              setLineNumber(36);    // compilenode typedec
                                                                                              // Type decl Function
                                                                                              // call case 5: prelude request
                                                                                              var call7726 = callmethodChecked(var_prelude, "Block1", []);
                                                                                              var var_Function = call7726;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7727 = function(argcv) {    // method Function
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Function is a simple accessor - elide try ... catch
                                                                                                setLineNumber(36);    // compilenode identifier
                                                                                                return var_Function;
                                                                                              };
                                                                                              func7727.paramCounts = [0];
                                                                                              this.methods["Function"] = func7727;
                                                                                              func7727.definitionLine = 1;
                                                                                              func7727.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(40);    // compilenode typedec
                                                                                              // Type decl Function2
                                                                                              // call case 5: prelude request
                                                                                              var call7730 = callmethodChecked(var_prelude, "Block2", []);
                                                                                              var var_Function2 = call7730;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7731 = function(argcv) {    // method Function2
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Function2 is a simple accessor - elide try ... catch
                                                                                                setLineNumber(40);    // compilenode identifier
                                                                                                return var_Function2;
                                                                                              };
                                                                                              func7731.paramCounts = [0];
                                                                                              this.methods["Function2"] = func7731;
                                                                                              func7731.definitionLine = 1;
                                                                                              func7731.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(43);    // compilenode typedec
                                                                                              // Type decl Procedure
                                                                                              // call case 5: prelude request
                                                                                              var call7734 = callmethodChecked(var_prelude, "Block1", []);
                                                                                              var var_Procedure = call7734;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7735 = function(argcv) {    // method Procedure
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Procedure is a simple accessor - elide try ... catch
                                                                                                setLineNumber(43);    // compilenode identifier
                                                                                                return var_Procedure;
                                                                                              };
                                                                                              func7735.paramCounts = [0];
                                                                                              this.methods["Procedure"] = func7735;
                                                                                              func7735.definitionLine = 1;
                                                                                              func7735.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(48);    // compilenode typedec
                                                                                              // Type decl Component
                                                                                              //   Type literal 
                                                                                              var type7737 = new GraceType("Component");
                                                                                              type7737.typeMethods.push("element");
                                                                                              type7737.typeMethods.push("width");
                                                                                              type7737.typeMethods.push("height");
                                                                                              type7737.typeMethods.push("size");
                                                                                              type7737.typeMethods.push("onMouseClickDo(1)");
                                                                                              type7737.typeMethods.push("onMousePressDo(1)");
                                                                                              type7737.typeMethods.push("onMouseReleaseDo(1)");
                                                                                              type7737.typeMethods.push("onMouseMoveDo(1)");
                                                                                              type7737.typeMethods.push("onMouseDragDo(1)");
                                                                                              type7737.typeMethods.push("onMouseEnterDo(1)");
                                                                                              type7737.typeMethods.push("onMouseExitDo(1)");
                                                                                              type7737.typeMethods.push("onKeyTypeDo(1)");
                                                                                              type7737.typeMethods.push("onKeyPressDo(1)");
                                                                                              type7737.typeMethods.push("onKeyReleaseDo(1)");
                                                                                              type7737.typeMethods.push("isFlexible");
                                                                                              type7737.typeMethods.push("flexible:=(1)");
                                                                                              var var_Component = type7737;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7738 = function(argcv) {    // method Component
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Component is a simple accessor - elide try ... catch
                                                                                                setLineNumber(48);    // compilenode identifier
                                                                                                return var_Component;
                                                                                              };
                                                                                              func7738.paramCounts = [0];
                                                                                              this.methods["Component"] = func7738;
                                                                                              func7738.definitionLine = 1;
                                                                                              func7738.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(105);    // compilenode typedec
                                                                                              // Type decl Container
                                                                                              //   Type literal 
                                                                                              var type7740 = new GraceType("\u2039anon\u203a");
                                                                                              type7740.typeMethods.push("size");
                                                                                              type7740.typeMethods.push("at(1)");
                                                                                              type7740.typeMethods.push("at(1)put(1)");
                                                                                              type7740.typeMethods.push("append(1)");
                                                                                              type7740.typeMethods.push("prepend(1)");
                                                                                              type7740.typeMethods.push("do(1)");
                                                                                              type7740.typeMethods.push("arrangeHorizontal");
                                                                                              type7740.typeMethods.push("arrangeVertical");
                                                                                              var opresult7743 = callmethodChecked(var_Component, "&(1)", [1], type7740);
                                                                                              var var_Container = opresult7743;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7744 = function(argcv) {    // method Container
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Container is a simple accessor - elide try ... catch
                                                                                                setLineNumber(105);    // compilenode identifier
                                                                                                return var_Container;
                                                                                              };
                                                                                              func7744.paramCounts = [0];
                                                                                              this.methods["Container"] = func7744;
                                                                                              func7744.definitionLine = 1;
                                                                                              func7744.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(136);    // compilenode typedec
                                                                                              // Type decl Application
                                                                                              //   Type literal 
                                                                                              var type7746 = new GraceType("\u2039anon\u203a");
                                                                                              type7746.typeMethods.push("windowTitle");
                                                                                              type7746.typeMethods.push("windowTitle:=(1)");
                                                                                              type7746.typeMethods.push("startApplication");
                                                                                              type7746.typeMethods.push("stopApplication");
                                                                                              var opresult7749 = callmethodChecked(var_Container, "&(1)", [1], type7746);
                                                                                              var var_Application = opresult7749;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7750 = function(argcv) {    // method Application
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Application is a simple accessor - elide try ... catch
                                                                                                setLineNumber(136);    // compilenode identifier
                                                                                                return var_Application;
                                                                                              };
                                                                                              func7750.paramCounts = [0];
                                                                                              this.methods["Application"] = func7750;
                                                                                              func7750.definitionLine = 1;
                                                                                              func7750.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(152);    // compilenode typedec
                                                                                              // Type decl Graphic
                                                                                              //   Type literal 
                                                                                              var type7752 = new GraceType("Graphic");
                                                                                              type7752.typeMethods.push("location");
                                                                                              type7752.typeMethods.push("x");
                                                                                              type7752.typeMethods.push("y");
                                                                                              type7752.typeMethods.push("addToCanvas(1)");
                                                                                              type7752.typeMethods.push("removeFromCanvas");
                                                                                              type7752.typeMethods.push("isVisible");
                                                                                              type7752.typeMethods.push("visible:=(1)");
                                                                                              type7752.typeMethods.push("moveTo(1)");
                                                                                              type7752.typeMethods.push("moveBy(2)");
                                                                                              type7752.typeMethods.push("contains(1)");
                                                                                              type7752.typeMethods.push("overlaps(1)");
                                                                                              type7752.typeMethods.push("color:=(1)");
                                                                                              type7752.typeMethods.push("color");
                                                                                              type7752.typeMethods.push("sendForward");
                                                                                              type7752.typeMethods.push("sendBackward");
                                                                                              type7752.typeMethods.push("sendToFront");
                                                                                              type7752.typeMethods.push("sendToBack");
                                                                                              var var_Graphic = type7752;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7753 = function(argcv) {    // method Graphic
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Graphic is a simple accessor - elide try ... catch
                                                                                                setLineNumber(152);    // compilenode identifier
                                                                                                return var_Graphic;
                                                                                              };
                                                                                              func7753.paramCounts = [0];
                                                                                              this.methods["Graphic"] = func7753;
                                                                                              func7753.definitionLine = 1;
                                                                                              func7753.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(210);    // compilenode typedec
                                                                                              // Type decl DrawingCanvas
                                                                                              //   Type literal 
                                                                                              var type7755 = new GraceType("\u2039anon\u203a");
                                                                                              type7755.typeMethods.push("startDrawing");
                                                                                              type7755.typeMethods.push("add(1)");
                                                                                              type7755.typeMethods.push("remove(1)");
                                                                                              type7755.typeMethods.push("notifyRedraw");
                                                                                              type7755.typeMethods.push("clear");
                                                                                              type7755.typeMethods.push("sendToFront(1)");
                                                                                              type7755.typeMethods.push("sendToBack(1)");
                                                                                              type7755.typeMethods.push("sendForward(1)");
                                                                                              type7755.typeMethods.push("sendBackward(1)");
                                                                                              type7755.typeMethods.push("width");
                                                                                              type7755.typeMethods.push("height");
                                                                                              type7755.typeMethods.push("size");
                                                                                              var opresult7758 = callmethodChecked(var_Component, "&(1)", [1], type7755);
                                                                                              var var_DrawingCanvas = opresult7758;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7759 = function(argcv) {    // method DrawingCanvas
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // DrawingCanvas is a simple accessor - elide try ... catch
                                                                                                setLineNumber(210);    // compilenode identifier
                                                                                                return var_DrawingCanvas;
                                                                                              };
                                                                                              func7759.paramCounts = [0];
                                                                                              this.methods["DrawingCanvas"] = func7759;
                                                                                              func7759.definitionLine = 1;
                                                                                              func7759.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(247);    // compilenode typedec
                                                                                              // Type decl GraphicApplication
                                                                                              //   Type literal 
                                                                                              var type7761 = new GraceType("\u2039anon\u203a");
                                                                                              type7761.typeMethods.push("canvas");
                                                                                              type7761.typeMethods.push("onMouseClick(1)");
                                                                                              type7761.typeMethods.push("onMousePress(1)");
                                                                                              type7761.typeMethods.push("onMouseRelease(1)");
                                                                                              type7761.typeMethods.push("onMouseMove(1)");
                                                                                              type7761.typeMethods.push("onMouseDrag(1)");
                                                                                              type7761.typeMethods.push("onMouseEnter(1)");
                                                                                              type7761.typeMethods.push("onMouseExit(1)");
                                                                                              type7761.typeMethods.push("startGraphics");
                                                                                              var opresult7764 = callmethodChecked(var_Application, "&(1)", [1], type7761);
                                                                                              var var_GraphicApplication = opresult7764;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7765 = function(argcv) {    // method GraphicApplication
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // GraphicApplication is a simple accessor - elide try ... catch
                                                                                                setLineNumber(247);    // compilenode identifier
                                                                                                return var_GraphicApplication;
                                                                                              };
                                                                                              func7765.paramCounts = [0];
                                                                                              this.methods["GraphicApplication"] = func7765;
                                                                                              func7765.definitionLine = 1;
                                                                                              func7765.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(280);    // compilenode typedec
                                                                                              // Type decl Graphic2D
                                                                                              //   Type literal 
                                                                                              var type7767 = new GraceType("\u2039anon\u203a");
                                                                                              type7767.typeMethods.push("width");
                                                                                              type7767.typeMethods.push("height");
                                                                                              type7767.typeMethods.push("size");
                                                                                              type7767.typeMethods.push("size:=(1)");
                                                                                              type7767.typeMethods.push("width:=(1)");
                                                                                              type7767.typeMethods.push("height:=(1)");
                                                                                              var opresult7770 = callmethodChecked(var_Graphic, "&(1)", [1], type7767);
                                                                                              var var_Graphic2D = opresult7770;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7771 = function(argcv) {    // method Graphic2D
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Graphic2D is a simple accessor - elide try ... catch
                                                                                                setLineNumber(280);    // compilenode identifier
                                                                                                return var_Graphic2D;
                                                                                              };
                                                                                              func7771.paramCounts = [0];
                                                                                              this.methods["Graphic2D"] = func7771;
                                                                                              func7771.definitionLine = 1;
                                                                                              func7771.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(294);    // compilenode typedec
                                                                                              // Type decl Line
                                                                                              //   Type literal 
                                                                                              var type7773 = new GraceType("\u2039anon\u203a");
                                                                                              type7773.typeMethods.push("start");
                                                                                              type7773.typeMethods.push("end");
                                                                                              type7773.typeMethods.push("start:=(1)");
                                                                                              type7773.typeMethods.push("end:=(1)");
                                                                                              type7773.typeMethods.push("setEndPoints(2)");
                                                                                              var opresult7776 = callmethodChecked(var_Graphic, "&(1)", [1], type7773);
                                                                                              var var_Line = opresult7776;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7777 = function(argcv) {    // method Line
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Line is a simple accessor - elide try ... catch
                                                                                                setLineNumber(294);    // compilenode identifier
                                                                                                return var_Line;
                                                                                              };
                                                                                              func7777.paramCounts = [0];
                                                                                              this.methods["Line"] = func7777;
                                                                                              func7777.definitionLine = 1;
                                                                                              func7777.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(306);    // compilenode typedec
                                                                                              // Type decl Text
                                                                                              //   Type literal 
                                                                                              var type7779 = new GraceType("\u2039anon\u203a");
                                                                                              type7779.typeMethods.push("contents");
                                                                                              type7779.typeMethods.push("contents:=(1)");
                                                                                              type7779.typeMethods.push("width");
                                                                                              type7779.typeMethods.push("fontSize");
                                                                                              type7779.typeMethods.push("fontSize:=(1)");
                                                                                              var opresult7782 = callmethodChecked(var_Graphic, "&(1)", [1], type7779);
                                                                                              var var_Text = opresult7782;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7783 = function(argcv) {    // method Text
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Text is a simple accessor - elide try ... catch
                                                                                                setLineNumber(306);    // compilenode identifier
                                                                                                return var_Text;
                                                                                              };
                                                                                              func7783.paramCounts = [0];
                                                                                              this.methods["Text"] = func7783;
                                                                                              func7783.definitionLine = 1;
                                                                                              func7783.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(326);    // compilenode typedec
                                                                                              // Type decl TextBox
                                                                                              //   Type literal 
                                                                                              var type7785 = new GraceType("\u2039anon\u203a");
                                                                                              type7785.typeMethods.push("contents");
                                                                                              type7785.typeMethods.push("contents:=(1)");
                                                                                              var opresult7788 = callmethodChecked(var_Component, "&(1)", [1], type7785);
                                                                                              var var_TextBox = opresult7788;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7789 = function(argcv) {    // method TextBox
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // TextBox is a simple accessor - elide try ... catch
                                                                                                setLineNumber(326);    // compilenode identifier
                                                                                                return var_TextBox;
                                                                                              };
                                                                                              func7789.paramCounts = [0];
                                                                                              this.methods["TextBox"] = func7789;
                                                                                              func7789.definitionLine = 1;
                                                                                              func7789.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(335);    // compilenode typedec
                                                                                              // Type decl Labeled
                                                                                              //   Type literal 
                                                                                              var type7791 = new GraceType("\u2039anon\u203a");
                                                                                              type7791.typeMethods.push("label");
                                                                                              type7791.typeMethods.push("label:=(1)");
                                                                                              var opresult7794 = callmethodChecked(var_Component, "&(1)", [1], type7791);
                                                                                              var var_Labeled = opresult7794;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7795 = function(argcv) {    // method Labeled
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Labeled is a simple accessor - elide try ... catch
                                                                                                setLineNumber(335);    // compilenode identifier
                                                                                                return var_Labeled;
                                                                                              };
                                                                                              func7795.paramCounts = [0];
                                                                                              this.methods["Labeled"] = func7795;
                                                                                              func7795.definitionLine = 1;
                                                                                              func7795.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(344);    // compilenode typedec
                                                                                              // Type decl Button
                                                                                              var var_Button = var_Labeled;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7797 = function(argcv) {    // method Button
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Button is a simple accessor - elide try ... catch
                                                                                                setLineNumber(344);    // compilenode identifier
                                                                                                return var_Button;
                                                                                              };
                                                                                              func7797.paramCounts = [0];
                                                                                              this.methods["Button"] = func7797;
                                                                                              func7797.definitionLine = 1;
                                                                                              func7797.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(347);    // compilenode typedec
                                                                                              // Type decl Input
                                                                                              //   Type literal 
                                                                                              var type7799 = new GraceType("\u2039anon\u203a");
                                                                                              type7799.typeMethods.push("onFocusDo(1)");
                                                                                              type7799.typeMethods.push("onBlurDo(1)");
                                                                                              type7799.typeMethods.push("onChangeDo(1)");
                                                                                              var opresult7802 = callmethodChecked(var_Labeled, "&(1)", [1], type7799);
                                                                                              var var_Input = opresult7802;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7803 = function(argcv) {    // method Input
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Input is a simple accessor - elide try ... catch
                                                                                                setLineNumber(347);    // compilenode identifier
                                                                                                return var_Input;
                                                                                              };
                                                                                              func7803.paramCounts = [0];
                                                                                              this.methods["Input"] = func7803;
                                                                                              func7803.definitionLine = 1;
                                                                                              func7803.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(361);    // compilenode typedec
                                                                                              // Type decl TextField
                                                                                              //   Type literal 
                                                                                              var type7805 = new GraceType("\u2039anon\u203a");
                                                                                              type7805.typeMethods.push("text");
                                                                                              type7805.typeMethods.push("text:=(1)");
                                                                                              var opresult7808 = callmethodChecked(var_Input, "&(1)", [1], type7805);
                                                                                              var var_TextField = opresult7808;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7809 = function(argcv) {    // method TextField
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // TextField is a simple accessor - elide try ... catch
                                                                                                setLineNumber(361);    // compilenode identifier
                                                                                                return var_TextField;
                                                                                              };
                                                                                              func7809.paramCounts = [0];
                                                                                              this.methods["TextField"] = func7809;
                                                                                              func7809.definitionLine = 1;
                                                                                              func7809.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(370);    // compilenode typedec
                                                                                              // Type decl NumberField
                                                                                              //   Type literal 
                                                                                              var type7811 = new GraceType("\u2039anon\u203a");
                                                                                              type7811.typeMethods.push("number");
                                                                                              type7811.typeMethods.push("number:=(1)");
                                                                                              var opresult7814 = callmethodChecked(var_Input, "&(1)", [1], type7811);
                                                                                              var var_NumberField = opresult7814;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7815 = function(argcv) {    // method NumberField
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // NumberField is a simple accessor - elide try ... catch
                                                                                                setLineNumber(370);    // compilenode identifier
                                                                                                return var_NumberField;
                                                                                              };
                                                                                              func7815.paramCounts = [0];
                                                                                              this.methods["NumberField"] = func7815;
                                                                                              func7815.definitionLine = 1;
                                                                                              func7815.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(379);    // compilenode typedec
                                                                                              // Type decl Choice
                                                                                              //   Type literal 
                                                                                              var type7817 = new GraceType("\u2039anon\u203a");
                                                                                              type7817.typeMethods.push("selected");
                                                                                              type7817.typeMethods.push("selected:=(1)");
                                                                                              var opresult7820 = callmethodChecked(var_Input, "&(1)", [1], type7817);
                                                                                              var var_Choice = opresult7820;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7821 = function(argcv) {    // method Choice
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Choice is a simple accessor - elide try ... catch
                                                                                                setLineNumber(379);    // compilenode identifier
                                                                                                return var_Choice;
                                                                                              };
                                                                                              func7821.paramCounts = [0];
                                                                                              this.methods["Choice"] = func7821;
                                                                                              func7821.definitionLine = 1;
                                                                                              func7821.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(388);    // compilenode typedec
                                                                                              // Type decl Color
                                                                                              //   Type literal 
                                                                                              var type7823 = new GraceType("Color");
                                                                                              type7823.typeMethods.push("red");
                                                                                              type7823.typeMethods.push("green");
                                                                                              type7823.typeMethods.push("blue");
                                                                                              var var_Color = type7823;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7824 = function(argcv) {    // method Color
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // Color is a simple accessor - elide try ... catch
                                                                                                setLineNumber(388);    // compilenode identifier
                                                                                                return var_Color;
                                                                                              };
                                                                                              func7824.paramCounts = [0];
                                                                                              this.methods["Color"] = func7824;
                                                                                              func7824.definitionLine = 1;
                                                                                              func7824.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(394);    // compilenode typedec
                                                                                              // Type decl ColorFactory
                                                                                              //   Type literal 
                                                                                              var type7826 = new GraceType("ColorFactory");
                                                                                              type7826.typeMethods.push("r(1)g(1)b(1)");
                                                                                              type7826.typeMethods.push("random");
                                                                                              type7826.typeMethods.push("white");
                                                                                              type7826.typeMethods.push("black");
                                                                                              type7826.typeMethods.push("green");
                                                                                              type7826.typeMethods.push("red");
                                                                                              type7826.typeMethods.push("gray");
                                                                                              type7826.typeMethods.push("blue");
                                                                                              type7826.typeMethods.push("cyan");
                                                                                              type7826.typeMethods.push("magenta");
                                                                                              type7826.typeMethods.push("yellow");
                                                                                              type7826.typeMethods.push("neutral");
                                                                                              var var_ColorFactory = type7826;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7827 = function(argcv) {    // method ColorFactory
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // ColorFactory is a simple accessor - elide try ... catch
                                                                                                setLineNumber(394);    // compilenode identifier
                                                                                                return var_ColorFactory;
                                                                                              };
                                                                                              func7827.paramCounts = [0];
                                                                                              this.methods["ColorFactory"] = func7827;
                                                                                              func7827.definitionLine = 1;
                                                                                              func7827.definitionModule = "rtobjectdraw";
                                                                                              setLineNumber(412);    // compilenode string
                                                                                              var string7829 = new GraceString("ColorOutOfRange");
                                                                                              // call case 6: other requests
                                                                                              // call case 5: prelude request
                                                                                              var call7831 = callmethodChecked(var_prelude, "ProgrammingError", []);
                                                                                              var call7832 = callmethodChecked(call7831, "refine(1)", [1], string7829);
                                                                                              var var_ColorOutOfRange = call7832;
                                                                                              setLineNumber(1);    // compilenode method
                                                                                              var func7833 = function(argcv) {    // method ColorOutOfRange
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                setModuleName("rtobjectdraw");
                                                                                                // ColorOutOfRange is a simple accessor - elide try ... catch
                                                                                                setLineNumber(411);    // compilenode identifier
                                                                                                return var_ColorOutOfRange;
                                                                                              };
                                                                                              func7833.paramCounts = [0];
                                                                                              this.methods["ColorOutOfRange"] = func7833;
                                                                                              func7833.definitionLine = 1;
                                                                                              func7833.definitionModule = "rtobjectdraw";
                                                                                              this.methods["ColorOutOfRange"].debug = "def";
                                                                                              // call case 5: prelude request
                                                                                              var call7835 = callmethodChecked(var_prelude, "ExceptionKind", []);
                                                                                              if (!Grace_isTrue(callmethod(call7835, "match(1)", [1], var_ColorOutOfRange)))
                                                                                                throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                    new GraceString("value of def 'ColorOutOfRange' is not of type prelude.ExceptionKind"));
                                                                                              setLineNumber(415);    // compilenode object
                                                                                              var obj7836 = Grace_allocObject(GraceObject, "color");
                                                                                              obj7836.definitionModule = "rtobjectdraw";
                                                                                              obj7836.definitionLine = 415;
                                                                                              obj7836.outer = this;
                                                                                              var reader_rtobjectdraw_outer7837 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj7836.methods["outer"] = reader_rtobjectdraw_outer7837;
                                                                                              var obj_init_7836 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj7836;
                                                                                                var func7838 = function(argcv) {    // method r(_)g(_)b(_)
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  var var_r__39__ = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  var var_g__39__ = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  var var_b__39__ = arguments[curarg];
                                                                                                  curarg++;
                                                                                                  // Start argument checking
                                                                                                  curarg = 1;
                                                                                                  setLineNumber(416);    // compilenode identifier
                                                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in r (arg list 1), which corresponds to parameter r', does not have " + 
                                                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in g (arg list 2), which corresponds to parameter g', does not have " + 
                                                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("argument 1 in b (arg list 3), which corresponds to parameter b', does not have " + 
                                                                                                              callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                  curarg++;
                                                                                                  // End argument checking
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  var obj7839 = Grace_allocObject(GraceObject, "color.r(_)g(_)b(_)");
                                                                                                  obj7839.definitionModule = "rtobjectdraw";
                                                                                                  obj7839.definitionLine = 416;
                                                                                                  obj7839.outer = this;
                                                                                                  var reader_rtobjectdraw_outer7840 = function() {
                                                                                                    return this.outer;
                                                                                                  };
                                                                                                  obj7839.methods["outer"] = reader_rtobjectdraw_outer7840;
                                                                                                  var obj_init_7839 = function() {
                                                                                                    var origSuperDepth = superDepth;
                                                                                                    superDepth = obj7839;
                                                                                                    var func7841 = function(argcv) {    // method ==(_)
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      var var_c = arguments[curarg];
                                                                                                      curarg++;
                                                                                                      // Start argument checking
                                                                                                      curarg = 1;
                                                                                                      setLineNumber(434);    // compilenode identifier
                                                                                                      if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                              new GraceString("argument 1 in == (arg list 1), which corresponds to parameter c, does not have " + 
                                                                                                                  callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                      curarg++;
                                                                                                      // End argument checking
                                                                                                      setModuleName("rtobjectdraw");
                                                                                                      setLineNumber(435);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call7843 = callmethodChecked(var_c, "blue", []);
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7846 = callmethodChecked(this, "blue", []);
                                                                                                      var opresult7848 = callmethodChecked(call7846, "==(1)", [1], call7843);
                                                                                                      // call case 6: other requests
                                                                                                      var call7851 = callmethodChecked(var_c, "green", []);
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7854 = callmethodChecked(this, "green", []);
                                                                                                      var opresult7856 = callmethodChecked(call7854, "==(1)", [1], call7851);
                                                                                                      // call case 6: other requests
                                                                                                      var call7859 = callmethodChecked(var_c, "red", []);
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7862 = callmethodChecked(this, "red", []);
                                                                                                      var opresult7864 = callmethodChecked(call7862, "==(1)", [1], call7859);
                                                                                                      var opresult7866 = callmethodChecked(opresult7864, "&&(1)", [1], opresult7856);
                                                                                                      var opresult7868 = callmethodChecked(opresult7866, "&&(1)", [1], opresult7848);
                                                                                                      if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult7868)))
                                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                              new GraceString("result of method ==(_) does not have " + 
                                                                                                                  callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                      return opresult7868;
                                                                                                    };
                                                                                                    func7841.paramTypes = [];
                                                                                                    func7841.paramTypes.push([]);
                                                                                                    func7841.paramCounts = [1];
                                                                                                    obj7839.methods["==(1)"] = func7841;
                                                                                                    func7841.definitionLine = 434;
                                                                                                    func7841.definitionModule = "rtobjectdraw";
                                                                                                    var func7869 = function(argcv) {    // method asString
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      setModuleName("rtobjectdraw");
                                                                                                      setLineNumber(439);    // compilenode string
                                                                                                      var string7870 = new GraceString(")");
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7873 = callmethodChecked(this, "blue", []);
                                                                                                      var string7875 = new GraceString(", ");
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7878 = callmethodChecked(this, "green", []);
                                                                                                      var string7880 = new GraceString(", ");
                                                                                                      // call case 4: self request
                                                                                                      onSelf = true;
                                                                                                      var call7883 = callmethodChecked(this, "red", []);
                                                                                                      var string7885 = new GraceString("color w/ rgb(");
                                                                                                      var opresult7887 = callmethodChecked(string7885, "++(1)", [1], call7883);
                                                                                                      var opresult7889 = callmethodChecked(opresult7887, "++(1)", [1], string7880);
                                                                                                      var opresult7891 = callmethodChecked(opresult7889, "++(1)", [1], call7878);
                                                                                                      var opresult7893 = callmethodChecked(opresult7891, "++(1)", [1], string7875);
                                                                                                      var opresult7895 = callmethodChecked(opresult7893, "++(1)", [1], call7873);
                                                                                                      var opresult7897 = callmethodChecked(opresult7895, "++(1)", [1], string7870);
                                                                                                      if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult7897)))
                                                                                                          throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                              new GraceString("result of method asString does not have " + 
                                                                                                                  callmethod(var_String, "asString", [0])._value + "."));
                                                                                                      return opresult7897;
                                                                                                    };
                                                                                                    func7869.paramCounts = [0];
                                                                                                    obj7839.methods["asString"] = func7869;
                                                                                                    func7869.definitionLine = 438;
                                                                                                    func7869.definitionModule = "rtobjectdraw";
                                                                                                    var if7898 = GraceDone;
                                                                                                    setLineNumber(418);    // compilenode identifier
                                                                                                    var opresult7901 = callmethodChecked(var_r__39__, ">(1)", [1], new GraceNum(255));
                                                                                                    var opresult7905 = callmethodChecked(var_r__39__, "<(1)", [1], new GraceNum(0));
                                                                                                    var opresult7907 = callmethodChecked(opresult7905, "||(1)", [1], opresult7901);
                                                                                                    if (Grace_isTrue(opresult7907)) {
                                                                                                      setLineNumber(419);    // compilenode string
                                                                                                      var string7909 = new GraceString(" out of bounds 0..255");
                                                                                                      var string7912 = new GraceString("red index ");
                                                                                                      var opresult7914 = callmethodChecked(string7912, "++(1)", [1], var_r__39__);
                                                                                                      var opresult7916 = callmethodChecked(opresult7914, "++(1)", [1], string7909);
                                                                                                      // call case 6: other requests
                                                                                                      var call7917 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult7916);
                                                                                                      if7898 = call7917;
                                                                                                    }
                                                                                                    var if7918 = GraceDone;
                                                                                                    setLineNumber(422);    // compilenode identifier
                                                                                                    var opresult7921 = callmethodChecked(var_g__39__, ">(1)", [1], new GraceNum(255));
                                                                                                    var opresult7925 = callmethodChecked(var_g__39__, "<(1)", [1], new GraceNum(0));
                                                                                                    var opresult7927 = callmethodChecked(opresult7925, "||(1)", [1], opresult7921);
                                                                                                    if (Grace_isTrue(opresult7927)) {
                                                                                                      setLineNumber(423);    // compilenode string
                                                                                                      var string7929 = new GraceString(" out of bounds 0..255");
                                                                                                      var string7932 = new GraceString("green index ");
                                                                                                      var opresult7934 = callmethodChecked(string7932, "++(1)", [1], var_g__39__);
                                                                                                      var opresult7936 = callmethodChecked(opresult7934, "++(1)", [1], string7929);
                                                                                                      // call case 6: other requests
                                                                                                      var call7937 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult7936);
                                                                                                      if7918 = call7937;
                                                                                                    }
                                                                                                    var if7938 = GraceDone;
                                                                                                    setLineNumber(426);    // compilenode identifier
                                                                                                    var opresult7941 = callmethodChecked(var_b__39__, ">(1)", [1], new GraceNum(255));
                                                                                                    var opresult7945 = callmethodChecked(var_b__39__, "<(1)", [1], new GraceNum(0));
                                                                                                    var opresult7947 = callmethodChecked(opresult7945, "||(1)", [1], opresult7941);
                                                                                                    if (Grace_isTrue(opresult7947)) {
                                                                                                      setLineNumber(427);    // compilenode string
                                                                                                      var string7949 = new GraceString(" out of bounds 0..255");
                                                                                                      var string7952 = new GraceString("blue index ");
                                                                                                      var opresult7954 = callmethodChecked(string7952, "++(1)", [1], var_b__39__);
                                                                                                      var opresult7956 = callmethodChecked(opresult7954, "++(1)", [1], string7949);
                                                                                                      // call case 6: other requests
                                                                                                      var call7957 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult7956);
                                                                                                      if7938 = call7957;
                                                                                                    }
                                                                                                    setLineNumber(430);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    var call7959 = callmethodChecked(var_r__39__, "truncated", []);
                                                                                                    obj7839.data["red"] = call7959;
                                                                                                    var reader_rtobjectdraw_red7960 = function() {
                                                                                                      return this.data["red"];
                                                                                                    };
                                                                                                    reader_rtobjectdraw_red7960.def = true;
                                                                                                    obj7839.methods["red"] = reader_rtobjectdraw_red7960;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7959)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("value of def 'red' is not of type Number"));
                                                                                                    setLineNumber(431);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    var call7962 = callmethodChecked(var_g__39__, "truncated", []);
                                                                                                    obj7839.data["green"] = call7962;
                                                                                                    var reader_rtobjectdraw_green7963 = function() {
                                                                                                      return this.data["green"];
                                                                                                    };
                                                                                                    reader_rtobjectdraw_green7963.def = true;
                                                                                                    obj7839.methods["green"] = reader_rtobjectdraw_green7963;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7962)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("value of def 'green' is not of type Number"));
                                                                                                    setLineNumber(432);    // compilenode member
                                                                                                    // call case 6: other requests
                                                                                                    var call7965 = callmethodChecked(var_b__39__, "truncated", []);
                                                                                                    obj7839.data["blue"] = call7965;
                                                                                                    var reader_rtobjectdraw_blue7966 = function() {
                                                                                                      return this.data["blue"];
                                                                                                    };
                                                                                                    reader_rtobjectdraw_blue7966.def = true;
                                                                                                    obj7839.methods["blue"] = reader_rtobjectdraw_blue7966;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call7965)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("value of def 'blue' is not of type Number"));
                                                                                                    superDepth = origSuperDepth;
                                                                                                  };
                                                                                                  obj_init_7839.apply(obj7839, []);
                                                                                                  setLineNumber(416);    // return value
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], obj7839)))
                                                                                                      throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                          new GraceString("result of method r(_)g(_)b(_) does not have " + 
                                                                                                              callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                  return obj7839;
                                                                                                };
                                                                                                func7838.paramTypes = [];
                                                                                                func7838.paramTypes.push([type_Number, "r'"]);
                                                                                                func7838.paramTypes.push([type_Number, "g'"]);
                                                                                                func7838.paramTypes.push([type_Number, "b'"]);
                                                                                                func7838.paramCounts = [1, 1, 1];
                                                                                                obj7836.methods["r(1)g(1)b(1)"] = func7838;
                                                                                                func7838.definitionLine = 416;
                                                                                                func7838.definitionModule = "rtobjectdraw";
                                                                                                  var func7967 = function(argcv) {    // method r(_)g(_)b(_)$object(_)
                                                                                                    var curarg = 1;
                                                                                                    var var_r__39__ = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    var var_g__39__ = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    var var_b__39__ = arguments[curarg];
                                                                                                    curarg++;
                                                                                                    var inheritingObject = arguments[curarg++];
                                                                                                    // Start argument processing
                                                                                                    curarg = 1;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in r (arg list 1), which corresponds to parameter r', does not have " + 
                                                                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in g (arg list 2), which corresponds to parameter g', does not have " + 
                                                                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    if (!Grace_isTrue(callmethod(var_Number, "match(1)",  [1], arguments[curarg])))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("argument 1 in b (arg list 3), which corresponds to parameter b', does not have " + 
                                                                                                                callmethod(var_Number, "asString", [0])._value + "."));
                                                                                                    curarg++;
                                                                                                    // End argument processing
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var obj7968 = Grace_allocObject(GraceObject, "r(1)g(1)b(1)");
                                                                                                    obj7968.definitionModule = "rtobjectdraw";
                                                                                                    obj7968.definitionLine = 416;
                                                                                                    var inho7968 = inheritingObject;
                                                                                                    while (inho7968.superobj) inho7968 = inho7968.superobj;
                                                                                                    inho7968.superobj = obj7968;
                                                                                                    obj7968.data = inheritingObject.data;
                                                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                                                      obj7968._value = inheritingObject._value;
                                                                                                    obj7968.outer = this;
                                                                                                    var reader_rtobjectdraw_outer7969 = function() {
                                                                                                      return this.outer;
                                                                                                    };
                                                                                                    obj7968.methods["outer"] = reader_rtobjectdraw_outer7969;
                                                                                                    var obj_init_7968 = function() {
                                                                                                      var origSuperDepth = superDepth;
                                                                                                      superDepth = obj7968;
                                                                                                      var func7970 = function(argcv) {    // method ==(_)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_c = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        // Start argument checking
                                                                                                        curarg = 1;
                                                                                                        setLineNumber(434);    // compilenode identifier
                                                                                                        if (!Grace_isTrue(callmethod(var_Color, "match(1)",  [1], arguments[curarg])))
                                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                                new GraceString("argument 1 in == (arg list 1), which corresponds to parameter c, does not have " + 
                                                                                                                    callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                        curarg++;
                                                                                                        // End argument checking
                                                                                                        setModuleName("rtobjectdraw");
                                                                                                        setLineNumber(435);    // compilenode member
                                                                                                        // call case 6: other requests
                                                                                                        var call7972 = callmethodChecked(var_c, "blue", []);
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7975 = callmethodChecked(this, "blue", []);
                                                                                                        var opresult7977 = callmethodChecked(call7975, "==(1)", [1], call7972);
                                                                                                        // call case 6: other requests
                                                                                                        var call7980 = callmethodChecked(var_c, "green", []);
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7983 = callmethodChecked(this, "green", []);
                                                                                                        var opresult7985 = callmethodChecked(call7983, "==(1)", [1], call7980);
                                                                                                        // call case 6: other requests
                                                                                                        var call7988 = callmethodChecked(var_c, "red", []);
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call7991 = callmethodChecked(this, "red", []);
                                                                                                        var opresult7993 = callmethodChecked(call7991, "==(1)", [1], call7988);
                                                                                                        var opresult7995 = callmethodChecked(opresult7993, "&&(1)", [1], opresult7985);
                                                                                                        var opresult7997 = callmethodChecked(opresult7995, "&&(1)", [1], opresult7977);
                                                                                                        if (!Grace_isTrue(callmethod(var_Boolean, "match(1)", [1], opresult7997)))
                                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                                new GraceString("result of method ==(_) does not have " + 
                                                                                                                    callmethod(var_Boolean, "asString", [0])._value + "."));
                                                                                                        return opresult7997;
                                                                                                      };
                                                                                                      func7970.paramTypes = [];
                                                                                                      func7970.paramTypes.push([]);
                                                                                                      func7970.paramCounts = [1];
                                                                                                      obj7968.methods["==(1)"] = func7970;
                                                                                                      func7970.definitionLine = 434;
                                                                                                      func7970.definitionModule = "rtobjectdraw";
                                                                                                      var func7998 = function(argcv) {    // method asString
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        setModuleName("rtobjectdraw");
                                                                                                        setLineNumber(439);    // compilenode string
                                                                                                        var string7999 = new GraceString(")");
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call8002 = callmethodChecked(this, "blue", []);
                                                                                                        var string8004 = new GraceString(", ");
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call8007 = callmethodChecked(this, "green", []);
                                                                                                        var string8009 = new GraceString(", ");
                                                                                                        // call case 4: self request
                                                                                                        onSelf = true;
                                                                                                        var call8012 = callmethodChecked(this, "red", []);
                                                                                                        var string8014 = new GraceString("color w/ rgb(");
                                                                                                        var opresult8016 = callmethodChecked(string8014, "++(1)", [1], call8012);
                                                                                                        var opresult8018 = callmethodChecked(opresult8016, "++(1)", [1], string8009);
                                                                                                        var opresult8020 = callmethodChecked(opresult8018, "++(1)", [1], call8007);
                                                                                                        var opresult8022 = callmethodChecked(opresult8020, "++(1)", [1], string8004);
                                                                                                        var opresult8024 = callmethodChecked(opresult8022, "++(1)", [1], call8002);
                                                                                                        var opresult8026 = callmethodChecked(opresult8024, "++(1)", [1], string7999);
                                                                                                        if (!Grace_isTrue(callmethod(var_String, "match(1)", [1], opresult8026)))
                                                                                                            throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                                new GraceString("result of method asString does not have " + 
                                                                                                                    callmethod(var_String, "asString", [0])._value + "."));
                                                                                                        return opresult8026;
                                                                                                      };
                                                                                                      func7998.paramCounts = [0];
                                                                                                      obj7968.methods["asString"] = func7998;
                                                                                                      func7998.definitionLine = 438;
                                                                                                      func7998.definitionModule = "rtobjectdraw";
                                                                                                      var if8027 = GraceDone;
                                                                                                      setLineNumber(418);    // compilenode identifier
                                                                                                      var opresult8030 = callmethodChecked(var_r__39__, ">(1)", [1], new GraceNum(255));
                                                                                                      var opresult8034 = callmethodChecked(var_r__39__, "<(1)", [1], new GraceNum(0));
                                                                                                      var opresult8036 = callmethodChecked(opresult8034, "||(1)", [1], opresult8030);
                                                                                                      if (Grace_isTrue(opresult8036)) {
                                                                                                        setLineNumber(419);    // compilenode string
                                                                                                        var string8038 = new GraceString(" out of bounds 0..255");
                                                                                                        var string8041 = new GraceString("red index ");
                                                                                                        var opresult8043 = callmethodChecked(string8041, "++(1)", [1], var_r__39__);
                                                                                                        var opresult8045 = callmethodChecked(opresult8043, "++(1)", [1], string8038);
                                                                                                        // call case 6: other requests
                                                                                                        var call8046 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult8045);
                                                                                                        if8027 = call8046;
                                                                                                      }
                                                                                                      var if8047 = GraceDone;
                                                                                                      setLineNumber(422);    // compilenode identifier
                                                                                                      var opresult8050 = callmethodChecked(var_g__39__, ">(1)", [1], new GraceNum(255));
                                                                                                      var opresult8054 = callmethodChecked(var_g__39__, "<(1)", [1], new GraceNum(0));
                                                                                                      var opresult8056 = callmethodChecked(opresult8054, "||(1)", [1], opresult8050);
                                                                                                      if (Grace_isTrue(opresult8056)) {
                                                                                                        setLineNumber(423);    // compilenode string
                                                                                                        var string8058 = new GraceString(" out of bounds 0..255");
                                                                                                        var string8061 = new GraceString("green index ");
                                                                                                        var opresult8063 = callmethodChecked(string8061, "++(1)", [1], var_g__39__);
                                                                                                        var opresult8065 = callmethodChecked(opresult8063, "++(1)", [1], string8058);
                                                                                                        // call case 6: other requests
                                                                                                        var call8066 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult8065);
                                                                                                        if8047 = call8066;
                                                                                                      }
                                                                                                      var if8067 = GraceDone;
                                                                                                      setLineNumber(426);    // compilenode identifier
                                                                                                      var opresult8070 = callmethodChecked(var_b__39__, ">(1)", [1], new GraceNum(255));
                                                                                                      var opresult8074 = callmethodChecked(var_b__39__, "<(1)", [1], new GraceNum(0));
                                                                                                      var opresult8076 = callmethodChecked(opresult8074, "||(1)", [1], opresult8070);
                                                                                                      if (Grace_isTrue(opresult8076)) {
                                                                                                        setLineNumber(427);    // compilenode string
                                                                                                        var string8078 = new GraceString(" out of bounds 0..255");
                                                                                                        var string8081 = new GraceString("blue index ");
                                                                                                        var opresult8083 = callmethodChecked(string8081, "++(1)", [1], var_b__39__);
                                                                                                        var opresult8085 = callmethodChecked(opresult8083, "++(1)", [1], string8078);
                                                                                                        // call case 6: other requests
                                                                                                        var call8086 = callmethodChecked(var_ColorOutOfRange, "raise(1)", [1], opresult8085);
                                                                                                        if8067 = call8086;
                                                                                                      }
                                                                                                      setLineNumber(430);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call8088 = callmethodChecked(var_r__39__, "truncated", []);
                                                                                                      obj7968.data["red"] = call8088;
                                                                                                      var reader_rtobjectdraw_red8089 = function() {
                                                                                                        return this.data["red"];
                                                                                                      };
                                                                                                      reader_rtobjectdraw_red8089.def = true;
                                                                                                      obj7968.methods["red"] = reader_rtobjectdraw_red8089;
                                                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call8088)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("value of def 'red' is not of type Number"));
                                                                                                      setLineNumber(431);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call8091 = callmethodChecked(var_g__39__, "truncated", []);
                                                                                                      obj7968.data["green"] = call8091;
                                                                                                      var reader_rtobjectdraw_green8092 = function() {
                                                                                                        return this.data["green"];
                                                                                                      };
                                                                                                      reader_rtobjectdraw_green8092.def = true;
                                                                                                      obj7968.methods["green"] = reader_rtobjectdraw_green8092;
                                                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call8091)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("value of def 'green' is not of type Number"));
                                                                                                      setLineNumber(432);    // compilenode member
                                                                                                      // call case 6: other requests
                                                                                                      var call8094 = callmethodChecked(var_b__39__, "truncated", []);
                                                                                                      obj7968.data["blue"] = call8094;
                                                                                                      var reader_rtobjectdraw_blue8095 = function() {
                                                                                                        return this.data["blue"];
                                                                                                      };
                                                                                                      reader_rtobjectdraw_blue8095.def = true;
                                                                                                      obj7968.methods["blue"] = reader_rtobjectdraw_blue8095;
                                                                                                      if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], call8094)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("value of def 'blue' is not of type Number"));
                                                                                                      superDepth = origSuperDepth;
                                                                                                    };
                                                                                                    obj_init_7968.apply(inheritingObject, []);
                                                                                                    return obj7968;
                                                                                                    };
                                                                                                    func7967.paramTypes = [];
                                                                                                    func7967.paramTypes.push([type_Number, "r'"]);
                                                                                                    func7967.paramTypes.push([type_Number, "g'"]);
                                                                                                    func7967.paramTypes.push([type_Number, "b'"]);
                                                                                                    obj7836.methods["r(1)g(1)b(1)$object(1)"] = func7967;
                                                                                                  var func8096 = function(argcv) {    // method random
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    setModuleName("rtobjectdraw");
                                                                                                    setLineNumber(445);    // compilenode num
                                                                                                    // call case 6: other requests
                                                                                                    setLineNumber(416);    // compilenode member
                                                                                                    // call case 3: self.outer request
                                                                                                    var call8100 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onSelf = true;
                                                                                                    var call8101 = callmethodChecked(call8100, "randomIntFrom(1)to(1)", [1, 1], new GraceNum(0), new GraceNum(255));
                                                                                                    setLineNumber(446);    // compilenode num
                                                                                                    // call case 6: other requests
                                                                                                    setLineNumber(416);    // compilenode member
                                                                                                    // call case 3: self.outer request
                                                                                                    var call8104 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onSelf = true;
                                                                                                    var call8105 = callmethodChecked(call8104, "randomIntFrom(1)to(1)", [1, 1], new GraceNum(0), new GraceNum(255));
                                                                                                    setLineNumber(447);    // compilenode num
                                                                                                    // call case 6: other requests
                                                                                                    setLineNumber(416);    // compilenode member
                                                                                                    // call case 3: self.outer request
                                                                                                    var call8108 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onSelf = true;
                                                                                                    var call8109 = callmethodChecked(call8108, "randomIntFrom(1)to(1)", [1, 1], new GraceNum(0), new GraceNum(255));
                                                                                                    // call case 4: self request
                                                                                                    onSelf = true;
                                                                                                    var call8110 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], call8101, call8105, call8109);
                                                                                                    setLineNumber(445);    // return value
                                                                                                    if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8110)))
                                                                                                        throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                            new GraceString("result of method random does not have " + 
                                                                                                                callmethod(var_Color, "asString", [0])._value + "."));
                                                                                                    return call8110;
                                                                                                  };
                                                                                                  func8096.paramCounts = [0];
                                                                                                  obj7836.methods["random"] = func8096;
                                                                                                  func8096.definitionLine = 443;
                                                                                                  func8096.definitionModule = "rtobjectdraw";
                                                                                                  setLineNumber(450);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8112 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(255), new GraceNum(255));
                                                                                                  obj7836.data["white"] = call8112;
                                                                                                  var reader_rtobjectdraw_white8113 = function() {
                                                                                                    return this.data["white"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_white8113.def = true;
                                                                                                  obj7836.methods["white"] = reader_rtobjectdraw_white8113;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8112)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'white' is not of type Color"));
                                                                                                  setLineNumber(451);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8115 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(0), new GraceNum(0));
                                                                                                  obj7836.data["black"] = call8115;
                                                                                                  var reader_rtobjectdraw_black8116 = function() {
                                                                                                    return this.data["black"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_black8116.def = true;
                                                                                                  obj7836.methods["black"] = reader_rtobjectdraw_black8116;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8115)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'black' is not of type Color"));
                                                                                                  setLineNumber(452);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8118 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(255), new GraceNum(0));
                                                                                                  obj7836.data["green"] = call8118;
                                                                                                  var reader_rtobjectdraw_green8119 = function() {
                                                                                                    return this.data["green"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_green8119.def = true;
                                                                                                  obj7836.methods["green"] = reader_rtobjectdraw_green8119;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8118)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'green' is not of type Color"));
                                                                                                  setLineNumber(453);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8121 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(0), new GraceNum(0));
                                                                                                  obj7836.data["red"] = call8121;
                                                                                                  var reader_rtobjectdraw_red8122 = function() {
                                                                                                    return this.data["red"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_red8122.def = true;
                                                                                                  obj7836.methods["red"] = reader_rtobjectdraw_red8122;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8121)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'red' is not of type Color"));
                                                                                                  setLineNumber(454);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8124 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(60), new GraceNum(60), new GraceNum(60));
                                                                                                  obj7836.data["gray"] = call8124;
                                                                                                  var reader_rtobjectdraw_gray8125 = function() {
                                                                                                    return this.data["gray"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_gray8125.def = true;
                                                                                                  obj7836.methods["gray"] = reader_rtobjectdraw_gray8125;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8124)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'gray' is not of type Color"));
                                                                                                  setLineNumber(455);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8127 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(0), new GraceNum(255));
                                                                                                  obj7836.data["blue"] = call8127;
                                                                                                  var reader_rtobjectdraw_blue8128 = function() {
                                                                                                    return this.data["blue"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_blue8128.def = true;
                                                                                                  obj7836.methods["blue"] = reader_rtobjectdraw_blue8128;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8127)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'blue' is not of type Color"));
                                                                                                  setLineNumber(456);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8130 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(255), new GraceNum(255));
                                                                                                  obj7836.data["cyan"] = call8130;
                                                                                                  var reader_rtobjectdraw_cyan8131 = function() {
                                                                                                    return this.data["cyan"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_cyan8131.def = true;
                                                                                                  obj7836.methods["cyan"] = reader_rtobjectdraw_cyan8131;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8130)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'cyan' is not of type Color"));
                                                                                                  setLineNumber(457);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8133 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(0), new GraceNum(255));
                                                                                                  obj7836.data["magenta"] = call8133;
                                                                                                  var reader_rtobjectdraw_magenta8134 = function() {
                                                                                                    return this.data["magenta"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_magenta8134.def = true;
                                                                                                  obj7836.methods["magenta"] = reader_rtobjectdraw_magenta8134;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8133)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'magenta' is not of type Color"));
                                                                                                  setLineNumber(458);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8136 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(255), new GraceNum(255), new GraceNum(0));
                                                                                                  obj7836.data["yellow"] = call8136;
                                                                                                  var reader_rtobjectdraw_yellow8137 = function() {
                                                                                                    return this.data["yellow"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_yellow8137.def = true;
                                                                                                  obj7836.methods["yellow"] = reader_rtobjectdraw_yellow8137;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8136)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'yellow' is not of type Color"));
                                                                                                  setLineNumber(459);    // compilenode num
                                                                                                  // call case 4: self request
                                                                                                  onSelf = true;
                                                                                                  var call8139 = callmethodChecked(this, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(220), new GraceNum(220), new GraceNum(220));
                                                                                                  obj7836.data["neutral"] = call8139;
                                                                                                  var reader_rtobjectdraw_neutral8140 = function() {
                                                                                                    return this.data["neutral"];
                                                                                                  };
                                                                                                  reader_rtobjectdraw_neutral8140.def = true;
                                                                                                  obj7836.methods["neutral"] = reader_rtobjectdraw_neutral8140;
                                                                                                  if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], call8139)))
                                                                                                    throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                        new GraceString("value of def 'neutral' is not of type Color"));
                                                                                                  superDepth = origSuperDepth;
                                                                                                };
                                                                                                obj_init_7836.apply(obj7836, []);
                                                                                                var var_color = obj7836;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8141 = function(argcv) {    // method color
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // color is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(415);    // compilenode identifier
                                                                                                  return var_color;
                                                                                                };
                                                                                                func8141.paramCounts = [0];
                                                                                                this.methods["color"] = func8141;
                                                                                                func8141.definitionLine = 1;
                                                                                                func8141.definitionModule = "rtobjectdraw";
                                                                                                this.methods["color"].debug = "def";
                                                                                                setLineNumber(464);    // compilenode num
                                                                                                // call case 6: other requests
                                                                                                var call8143 = callmethodChecked(var_color, "r(1)g(1)b(1)", [1, 1, 1], new GraceNum(0), new GraceNum(0), new GraceNum(0));
                                                                                                var var_black = call8143;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8144 = function(argcv) {    // method black
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // black is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(464);    // compilenode identifier
                                                                                                  return var_black;
                                                                                                };
                                                                                                func8144.paramCounts = [0];
                                                                                                this.methods["black"] = func8144;
                                                                                                func8144.definitionLine = 1;
                                                                                                func8144.definitionModule = "rtobjectdraw";
                                                                                                this.methods["black"].debug = "def";
                                                                                                if (!Grace_isTrue(callmethod(var_Color, "match(1)", [1], var_black)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("value of def 'black' is not of type Color"));
                                                                                                setLineNumber(480);    // compilenode typedec
                                                                                                // Type decl Event
                                                                                                //   Type literal 
                                                                                                var type8146 = new GraceType("Event");
                                                                                                type8146.typeMethods.push("source");
                                                                                                var var_Event = type8146;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8147 = function(argcv) {    // method Event
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // Event is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(480);    // compilenode identifier
                                                                                                  return var_Event;
                                                                                                };
                                                                                                func8147.paramCounts = [0];
                                                                                                this.methods["Event"] = func8147;
                                                                                                func8147.definitionLine = 1;
                                                                                                func8147.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(485);    // compilenode typedec
                                                                                                // Type decl MouseEvent
                                                                                                //   Type literal 
                                                                                                var type8149 = new GraceType("\u2039anon\u203a");
                                                                                                type8149.typeMethods.push("at");
                                                                                                var opresult8152 = callmethodChecked(var_Event, "&(1)", [1], type8149);
                                                                                                var var_MouseEvent = opresult8152;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8153 = function(argcv) {    // method MouseEvent
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // MouseEvent is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(485);    // compilenode identifier
                                                                                                  return var_MouseEvent;
                                                                                                };
                                                                                                func8153.paramCounts = [0];
                                                                                                this.methods["MouseEvent"] = func8153;
                                                                                                func8153.definitionLine = 1;
                                                                                                func8153.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(490);    // compilenode typedec
                                                                                                // Type decl KeyEvent
                                                                                                //   Type literal 
                                                                                                var type8155 = new GraceType("\u2039anon\u203a");
                                                                                                type8155.typeMethods.push("code");
                                                                                                var opresult8158 = callmethodChecked(var_Event, "&(1)", [1], type8155);
                                                                                                var var_KeyEvent = opresult8158;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8159 = function(argcv) {    // method KeyEvent
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // KeyEvent is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(490);    // compilenode identifier
                                                                                                  return var_KeyEvent;
                                                                                                };
                                                                                                func8159.paramCounts = [0];
                                                                                                this.methods["KeyEvent"] = func8159;
                                                                                                func8159.definitionLine = 1;
                                                                                                func8159.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(497);    // compilenode typedec
                                                                                                // Type decl Response
                                                                                                var var_Response = var_Procedure;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8161 = function(argcv) {    // method Response
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // Response is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(497);    // compilenode identifier
                                                                                                  return var_Response;
                                                                                                };
                                                                                                func8161.paramCounts = [0];
                                                                                                this.methods["Response"] = func8161;
                                                                                                func8161.definitionLine = 1;
                                                                                                func8161.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(500);    // compilenode typedec
                                                                                                // Type decl MouseResponse
                                                                                                var var_MouseResponse = var_Procedure;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8163 = function(argcv) {    // method MouseResponse
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // MouseResponse is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(500);    // compilenode identifier
                                                                                                  return var_MouseResponse;
                                                                                                };
                                                                                                func8163.paramCounts = [0];
                                                                                                this.methods["MouseResponse"] = func8163;
                                                                                                func8163.definitionLine = 1;
                                                                                                func8163.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(503);    // compilenode typedec
                                                                                                // Type decl KeyResponse
                                                                                                var var_KeyResponse = var_Procedure;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8165 = function(argcv) {    // method KeyResponse
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // KeyResponse is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(503);    // compilenode identifier
                                                                                                  return var_KeyResponse;
                                                                                                };
                                                                                                func8165.paramCounts = [0];
                                                                                                this.methods["KeyResponse"] = func8165;
                                                                                                func8165.definitionLine = 1;
                                                                                                func8165.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(545);    // compilenode typedec
                                                                                                // Type decl ComponentFactory
                                                                                                //   Type literal 
                                                                                                var type8167 = new GraceType("ComponentFactory");
                                                                                                type8167.typeMethods.push("fromElement(1)");
                                                                                                type8167.typeMethods.push("ofElementType(1)");
                                                                                                var var_ComponentFactory = type8167;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8168 = function(argcv) {    // method ComponentFactory
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // ComponentFactory is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(545);    // compilenode identifier
                                                                                                  return var_ComponentFactory;
                                                                                                };
                                                                                                func8168.paramCounts = [0];
                                                                                                this.methods["ComponentFactory"] = func8168;
                                                                                                func8168.definitionLine = 1;
                                                                                                func8168.definitionModule = "rtobjectdraw";
                                                                                                setLineNumber(555);    // compilenode num
                                                                                                var var_maxClickTime = new GraceNum(200);
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8169 = function(argcv) {    // method maxClickTime
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // maxClickTime is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(555);    // compilenode identifier
                                                                                                  return var_maxClickTime;
                                                                                                };
                                                                                                func8169.paramCounts = [0];
                                                                                                this.methods["maxClickTime"] = func8169;
                                                                                                func8169.definitionLine = 1;
                                                                                                func8169.definitionModule = "rtobjectdraw";
                                                                                                this.methods["maxClickTime"].debug = "def";
                                                                                                if (!Grace_isTrue(callmethod(var_Number, "match(1)", [1], var_maxClickTime)))
                                                                                                  throw new GraceExceptionPacket(TypeErrorObject,
                                                                                                      new GraceString("value of def 'maxClickTime' is not of type Number"));
                                                                                                setLineNumber(2215);    // compilenode typedec
                                                                                                // Type decl Audio
                                                                                                //   Type literal 
                                                                                                var type8171 = new GraceType("Audio");
                                                                                                type8171.typeMethods.push("source");
                                                                                                type8171.typeMethods.push("source:=(1)");
                                                                                                type8171.typeMethods.push("play");
                                                                                                type8171.typeMethods.push("pause");
                                                                                                type8171.typeMethods.push("isLooping");
                                                                                                type8171.typeMethods.push("looping:=(1)");
                                                                                                type8171.typeMethods.push("isEnded");
                                                                                                var var_Audio = type8171;
                                                                                                setLineNumber(1);    // compilenode method
                                                                                                var func8172 = function(argcv) {    // method Audio
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  setModuleName("rtobjectdraw");
                                                                                                  // Audio is a simple accessor - elide try ... catch
                                                                                                  setLineNumber(2215);    // compilenode identifier
                                                                                                  return var_Audio;
                                                                                                };
                                                                                                func8172.paramCounts = [0];
                                                                                                this.methods["Audio"] = func8172;
                                                                                                func8172.definitionLine = 1;
                                                                                                func8172.definitionModule = "rtobjectdraw";
                                                                                                return this;
                                                                                              }
                                                                                              gracecode_rtobjectdraw.imports = ['dom', 'math', 'modules/requireTypes'];
                                                                                              if (typeof gctCache !== "undefined")
                                                                                                gctCache['rtobjectdraw'] = "classes:\n color\nconfidential:\n eventLogKind(1)response(1)\n menuWithOptions(1)labeled(1)\nconstructors-of:color:\n r(1)g(1)b(1)\nfresh-methods:\n applicationTitle(1)size(1)\n audioUrl(1)\n buttonLabeled(1)\n componentFromElement(1)\n componentOfElementType(1)\n containerFromElement(1)\n containerOfElementType(1)\n containerSize(2)\n drawable2DAt(1)size(1)on(1)\n drawableAt(1)on(1)\n drawableImageAt(1)size(1)url(1)on(1)\n drawingCanvasSize(1)\n emptyContainer\n eventLogKind(1)response(1)\n eventSource(1)\n fieldOfType(1)labeled(1)\n filledArcAt(1)size(1)from(1)to(1)on(1)\n filledOvalAt(1)size(1)on(1)\n filledRectAt(1)size(1)on(1)\n framedArcAt(1)size(1)from(1)to(1)on(1)\n framedOvalAt(1)size(1)on(1)\n framedRectAt(1)size(1)on(1)\n graphicApplicationSize(1)\n inputFromElement(1)\n inputOfElementType(1)\n inputOfType(1)\n keyEventSource(1)event(1)\n labeledWidgetFromElement(1)\n labeledWidgetOfElementType(1)\n labeledWidgetOfElementType(1)labeled(1)\n lineFrom(1)length(1)direction(1)on(1)\n lineFrom(1)to(1)on(1)\n menuWithOptions(1)\n menuWithOptions(1)labeled(1)\n mouseEventSource(1)event(1)\n numberFieldLabeled(1)\n numberFieldUnlabeled\n passwordFieldLabeled(1)\n passwordFieldUnlabeled\n resizable2DAt(1)size(1)on(1)\n textAt(1)with(1)on(1)\n textBoxWith(1)\n textFieldLabeled(1)\n textFieldUnlabeled\nfresh:applicationTitle(1)size(1):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n events\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isHorizontal\n isMe(1)\n isOpened\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouse(1)do(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n startApplication\n stopApplication\n theHeight\n theTitle\n theWidth\n theWindow\n width\n windowTitle\n windowTitle:=(1)\n \u2260(1)\nfresh:audioUrl(1):\n asString\n element\n isEnded\n isLooping\n looping:=(1)\n pause\n play\n source\n source:=(1)\nfresh:buttonLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:componentFromElement(1):\n asString\n element\n flexible:=(1)\n height\n isFlexible\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\nfresh:componentOfElementType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:containerFromElement(1):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:containerOfElementType(1):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:containerSize(2):\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:drawable2DAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n x\n y\n \u2260(1)\nfresh:drawableAt(1)on(1):\n ==(1)\n addToCanvas(1)\n asString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n theColor\n theFrameColor\n visible:=(1)\n x\n y\nfresh:drawableImageAt(1)size(1)url(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theImage\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:drawingCanvasSize(1):\n ::(1)\n add(1)\n asDebugString\n asString\n basicAsString\n clear\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n notifyRedraw\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n printObjects\n redraw\n remove(1)\n sendBackward(1)\n sendForward(1)\n sendToBack(1)\n sendToFront(1)\n size\n startDrawing\n theContext\n theGraphics\n width\n \u2260(1)\nfresh:emptyContainer:\n ::(1)\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n children\n do(1)\n element\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n width\n \u2260(1)\nfresh:eventLogKind(1)response(1):\n kind\n response\nfresh:eventSource(1):\n asString\n source\nfresh:fieldOfType(1)labeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:filledArcAt(1)size(1)from(1)to(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:filledOvalAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:filledRectAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:framedArcAt(1)size(1)from(1)to(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:framedOvalAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:framedRectAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:graphicApplicationSize(1):\n ::(1)\n after\n append(1)\n arrangeHorizontal\n arrangeVertical\n asDebugString\n asString\n at(1)\n at(1)put(1)\n basicAsString\n before\n canvas\n children\n do(1)\n element\n events\n flex\n flexible:=(1)\n fold(1)startingWith(1)\n height\n isEmpty\n isFlexible\n isHorizontal\n isMe(1)\n isOpened\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouse(1)do(1)\n onMouseClick(1)\n onMouseClickDo(1)\n onMouseDrag(1)\n onMouseDragDo(1)\n onMouseEnter(1)\n onMouseEnterDo(1)\n onMouseExit(1)\n onMouseExitDo(1)\n onMouseMove(1)\n onMouseMoveDo(1)\n onMousePress(1)\n onMousePressDo(1)\n onMouseRelease(1)\n onMouseReleaseDo(1)\n prepend(1)\n size\n startApplication\n startGraphics\n stopApplication\n theHeight\n theTitle\n theWidth\n theWindow\n width\n windowTitle\n windowTitle:=(1)\n \u2260(1)\nfresh:inputFromElement(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:inputOfElementType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:inputOfType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:keyEventSource(1)event(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n code\n isMe(1)\n source\n \u2260(1)\nfresh:labeledWidgetFromElement(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:labeledWidgetOfElementType(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:labeledWidgetOfElementType(1)labeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:lineFrom(1)length(1)direction(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n dist2(2)\n distToSegment(3)\n distToSegmentSquared(3)\n draw(1)\n end\n end:=(1)\n frameColor\n frameColor:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n setEndPoints(2)\n start\n start:=(1)\n theColor\n theEnd\n theFrameColor\n visible:=(1)\n x\n y\n \u2260(1)\nfresh:lineFrom(1)to(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n dist2(2)\n distToSegment(3)\n distToSegmentSquared(3)\n draw(1)\n end\n end:=(1)\n frameColor\n frameColor:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n setEndPoints(2)\n start\n start:=(1)\n theColor\n theEnd\n theFrameColor\n visible:=(1)\n x\n y\n \u2260(1)\nfresh:menuWithOptions(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n selected\n selected:=(1)\n size\n width\n \u2260(1)\nfresh:menuWithOptions(1)labeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n init\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n labelElement\n labeler\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n selected\n selected:=(1)\n size\n width\n \u2260(1)\nfresh:mouseEventSource(1)event(1):\n ::(1)\n asDebugString\n asString\n at\n basicAsString\n isMe(1)\n source\n \u2260(1)\nfresh:numberFieldLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n number\n number:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:numberFieldUnlabeled:\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n number\n number:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:passwordFieldLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nfresh:passwordFieldUnlabeled:\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nfresh:resizable2DAt(1)size(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n draw(1)\n frameColor\n frameColor:=(1)\n height\n height:=(1)\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n size\n size:=(1)\n theColor\n theFrameColor\n theHeight\n theWidth\n visible:=(1)\n width\n width:=(1)\n x\n y\n \u2260(1)\nfresh:textAt(1)with(1)on(1):\n ::(1)\n ==(1)\n addToCanvas(1)\n asDebugString\n asString\n basicAsString\n canvas\n color\n color:=(1)\n contains(1)\n contents\n contents:=(1)\n draw(1)\n fontSize\n fontSize:=(1)\n frameColor\n frameColor:=(1)\n fsize\n isMe(1)\n isVisible\n location\n moveBy(2)\n moveTo(1)\n notifyRedraw\n overlaps(1)\n removeFromCanvas\n sendBackward\n sendForward\n sendToBack\n sendToFront\n theColor\n theContents\n theFrameColor\n visible:=(1)\n wid\n width\n x\n y\n \u2260(1)\nfresh:textBoxWith(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n contents\n contents:=(1)\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n width\n \u2260(1)\nfresh:textFieldLabeled(1):\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nfresh:textFieldUnlabeled:\n ::(1)\n asDebugString\n asString\n basicAsString\n element\n flexible:=(1)\n height\n isFlexible\n isMe(1)\n keyEventSource(1)event(1)\n label\n label:=(1)\n on(1)do(1)\n on(1)withKeyDo(1)\n on(1)withPointDo(1)\n onBlurDo(1)\n onChangeDo(1)\n onFocusDo(1)\n onKeyPressDo(1)\n onKeyReleaseDo(1)\n onKeyTypeDo(1)\n onMouseClickDo(1)\n onMouseDragDo(1)\n onMouseEnterDo(1)\n onMouseExitDo(1)\n onMouseMoveDo(1)\n onMousePressDo(1)\n onMouseReleaseDo(1)\n size\n text\n text:=(1)\n width\n \u2260(1)\nmethods-of:color.r(1)g(1)b(1):\n ==(1)\n asString\n blue\n green\n red\nmethodtypes-of:Application:\n & 3\n & Container\n 3 startApplication -> Done\n 3 stopApplication -> Done\n 3 windowTitle -> String\n 3 windowTitle:=(value : String) -> Done\nmethodtypes-of:Audio:\n 16 isEnded -> Boolean\n 16 isLooping -> Boolean\n 16 looping:=(value : Boolean) -> Done\n 16 pause -> Done\n 16 play -> Done\n 16 source -> String\n 16 source:=(value : String) -> Done\nmethodtypes-of:Button:\nmethodtypes-of:Choice:\n & 14\n & Input\n 14 selected -> String\n 14 selected:=(value : String) -> Done\nmethodtypes-of:Color:\n 14 blue -> Number\n 14 green -> Number\n 14 red -> Number\nmethodtypes-of:ColorFactory:\n 14 black -> Color\n 14 blue -> Color\n 14 cyan -> Color\n 14 gray -> Color\n 14 green -> Color\n 14 magenta -> Color\n 14 neutral -> Color\n 14 r(r' : Number)g(g' : Number)b(b' : Number) -> Color\n 14 random -> Color\n 14 red -> Color\n 14 white -> Color\n 14 yellow -> Color\nmethodtypes-of:Component:\n 1 element -> Done\n 1 flexible:=(value : Boolean) -> Done\n 1 height -> Number\n 1 isFlexible -> Boolean\n 1 onKeyPressDo(f : KeyResponse) -> Done\n 1 onKeyReleaseDo(f : KeyResponse) -> Done\n 1 onKeyTypeDo(f : KeyResponse) -> Done\n 1 onMouseClickDo(f : MouseResponse) -> Done\n 1 onMouseDragDo(f : MouseResponse) -> Done\n 1 onMouseEnterDo(f : MouseResponse) -> Done\n 1 onMouseExitDo(f : MouseResponse) -> Done\n 1 onMouseMoveDo(f : MouseResponse) -> Done\n 1 onMousePressDo(f : MouseResponse) -> Done\n 1 onMouseReleaseDo(f : MouseResponse) -> Done\n 1 size -> Point\n 1 width -> Number\nmethodtypes-of:ComponentFactory<T>:\n 16 fromElement(element : Unknown) -> T\n 16 ofElementType(tagName : String) -> T\nmethodtypes-of:Container:\n & 2\n & Component\n 2 append(component : Component) -> Done\n 2 arrangeHorizontal -> Done\n 2 arrangeVertical -> Done\n 2 at(index : Number) -> Component\n 2 at(index : Number)put(component : Component) -> Done\n 2 do(f : Procedure<Component>) -> Done\n 2 prepend(component : Component) -> Done\n 2 size -> Number\nmethodtypes-of:DrawingCanvas:\n & 4\n & Component\n 4 add(d : Graphic) -> Done\n 4 clear -> Done\n 4 height -> Number\n 4 notifyRedraw -> Done\n 4 remove(d : Graphic) -> Done\n 4 sendBackward(d : Graphic) -> Done\n 4 sendForward(d : Graphic) -> Done\n 4 sendToBack(d : Graphic) -> Done\n 4 sendToFront(d : Graphic) -> Done\n 4 size -> Point\n 4 startDrawing -> Done\n 4 width -> Number\nmethodtypes-of:Event:\n 14 source -> Component\nmethodtypes-of:Foreign:\nmethodtypes-of:Function2<T, U, R>:\nmethodtypes-of:Function<T, R>:\nmethodtypes-of:Graphic:\n 3 addToCanvas(canvas : DrawingCanvas) -> Done\n 3 color -> Color\n 3 color:=(c : Color) -> Done\n 3 contains(location : Point) -> Boolean\n 3 isVisible -> Boolean\n 3 location -> Point\n 3 moveBy(dx : Number, dy : Number) -> Done\n 3 moveTo(location : Point) -> Done\n 3 overlaps(graphic : Graphic2D) -> Boolean\n 3 removeFromCanvas -> Done\n 3 sendBackward -> Done\n 3 sendForward -> Done\n 3 sendToBack -> Done\n 3 sendToFront -> Done\n 3 visible:=(value : Boolean) -> Done\n 3 x -> Number\n 3 y -> Number\nmethodtypes-of:Graphic2D:\n & 6\n & Graphic\n 6 height -> Number\n 6 height:=(height : Number) -> Done\n 6 size -> Point\n 6 size:=(dimensions : Point) -> Done\n 6 width -> Number\n 6 width:=(width : Number) -> Done\nmethodtypes-of:GraphicApplication:\n & 5\n & Application\n 5 canvas -> DrawingCanvas\n 5 onMouseClick(mouse : Point) -> Done\n 5 onMouseDrag(mouse : Point) -> Done\n 5 onMouseEnter(mouse : Point) -> Done\n 5 onMouseExit(mouse : Point) -> Done\n 5 onMouseMove(mouse : Point) -> Done\n 5 onMousePress(mouse : Point) -> Done\n 5 onMouseRelease(mouse : Point) -> Done\n 5 startGraphics -> Done\nmethodtypes-of:Input:\n & 11\n & Labeled\n 11 onBlurDo(f : Response) -> Done\n 11 onChangeDo(f : Response) -> Done\n 11 onFocusDo(f : Response) -> Done\nmethodtypes-of:Iterable:\nmethodtypes-of:KeyEvent:\n & 16\n & Event\n 16 code -> Number\nmethodtypes-of:KeyResponse:\nmethodtypes-of:Labeled:\n & 10\n & Component\n 10 label -> String\n 10 label:=(value : String) -> Done\nmethodtypes-of:Line:\n & 7\n & Graphic\n 7 end -> Point\n 7 end:=(end' : Point) -> Done\n 7 setEndPoints(start' : Point, end' : Point) -> Done\n 7 start -> Point\n 7 start:=(start' : Point) -> Done\nmethodtypes-of:MouseEvent:\n & 15\n & Event\n 15 at -> Point\nmethodtypes-of:MouseResponse:\nmethodtypes-of:NumberField:\n & 13\n & Input\n 13 number -> Number\n 13 number:=(value : Number) -> Done\nmethodtypes-of:Point:\nmethodtypes-of:Procedure<T>:\nmethodtypes-of:Response:\nmethodtypes-of:Text:\n & 8\n & Graphic\n 8 contents -> String\n 8 contents:=(s : String) -> Done\n 8 fontSize -> Number\n 8 fontSize:=(size : Number) -> Done\n 8 width -> Number\nmethodtypes-of:TextBox:\n & 9\n & Component\n 9 contents -> String\n 9 contents:=(value : String) -> Done\nmethodtypes-of:TextField:\n & 12\n & Input\n 12 text -> String\n 12 text:=(value : String) -> Done\nmodules:\n ast\n dom\n identifierKinds\n math\n requireTypes\n util\npath:\n rtobjectdraw\npublic:\n AndPattern\n Application\n Audio\n BaseType\n BasicPattern\n Binding\n BindingPattern\n Block0\n Block1\n Block2\n Block3\n BoundsError\n Button\n Choice\n Cmd\n Collection\n Color\n ColorFactory\n ColorOutOfRange\n Component\n ComponentFactory\n ConcurrentModification\n Container\n Dictionary\n DrawingCanvas\n Enumerable\n Event\n ExceptionKind\n Expandable\n Extractable\n FailedMatch\n Foreign\n Fun\n Fun2\n Fun3\n Function\n Function2\n Graphic\n Graphic2D\n GraphicApplication\n Input\n Iterable\n Iterable\n Iterator\n IteratorExhausted\n KeyEvent\n KeyResponse\n Labeled\n Line\n List\n MatchAndDestructuringPattern\n MatchResult\n MouseEvent\n MouseResponse\n NoSuchObject\n NumberField\n OrPattern\n Pattern\n Point\n Point\n Proc\n Proc2\n Proc3\n Procedure\n RequestError\n Response\n Sequence\n Set\n Singleton\n SubobjectResponsibility\n SuccessfulMatch\n Text\n TextBox\n TextField\n TypeIntersection\n TypeSubtraction\n TypeUnion\n TypeVariant\n UninitializedVariable\n VariablePattern\n WildcardPattern\n abstract\n alwaysEqual\n applicationTitle(1)size(1)\n audioUrl(1)\n binding\n black\n buttonLabeled(1)\n checker(1)\n collection\n collections\n color\n componentFromElement(1)\n componentOfElementType(1)\n containerFromElement(1)\n containerOfElementType(1)\n containerSize(2)\n dictionary(1)\n do(1)while(1)\n drawable2DAt(1)size(1)on(1)\n drawableAt(1)on(1)\n drawableImageAt(1)size(1)url(1)on(1)\n drawingCanvasSize(1)\n emptyContainer\n emptyDictionary\n emptyList\n emptySequence\n emptySet\n enumerable\n eventSource(1)\n fieldOfType(1)labeled(1)\n filledArcAt(1)size(1)from(1)to(1)on(1)\n filledOvalAt(1)size(1)on(1)\n filledRectAt(1)size(1)on(1)\n for(1)and(1)do(1)\n framedArcAt(1)size(1)from(1)to(1)on(1)\n framedOvalAt(1)size(1)on(1)\n framedRectAt(1)size(1)on(1)\n graphicApplicationSize(1)\n indexable\n inputFromElement(1)\n inputOfElementType(1)\n inputOfType(1)\n keyEventSource(1)event(1)\n labeledWidgetFromElement(1)\n labeledWidgetOfElementType(1)\n labeledWidgetOfElementType(1)labeled(1)\n lineFrom(1)length(1)direction(1)on(1)\n lineFrom(1)to(1)on(1)\n list(1)\n max(2)\n menuWithOptions(1)\n methods\n min(2)\n mouseEventSource(1)event(1)\n numberFieldLabeled(1)\n numberFieldUnlabeled\n passwordFieldLabeled(1)\n passwordFieldUnlabeled\n pi\n point2Dx(1)y(1)\n randomIntFrom(1)to(1)\n randomNumberFrom(1)to(1)\n range\n repeat(1)times(1)\n required\n resizable2DAt(1)size(1)on(1)\n sequence(1)\n set(1)\n textAt(1)with(1)on(1)\n textBoxWith(1)\n textFieldLabeled(1)\n textFieldUnlabeled\n valueOf(1)\ntypes:\n Application\n Audio\n Button\n Choice\n Color\n ColorFactory\n Component\n ComponentFactory\n Container\n DrawingCanvas\n Event\n Foreign\n Function\n Function2\n Graphic\n Graphic2D\n GraphicApplication\n Input\n Iterable\n KeyEvent\n KeyResponse\n Labeled\n Line\n MouseEvent\n MouseResponse\n NumberField\n Point\n Procedure\n Response\n Text\n TextBox\n TextField\n";
                                                                                              if (typeof originalSourceLines !== "undefined") {
                                                                                                originalSourceLines["rtobjectdraw"] = [
                                                                                                  "#pragma ExtendedLineups",
                                                                                                  "inherit _prelude.methods",
                                                                                                  "type Point = _prelude.Point",
                                                                                                  "type Iterable = _prelude.Iterable",
                                                                                                  "",
                                                                                                  "import \"dom\" as dom",
                                                                                                  "import \"math\" as math",
                                                                                                  "import \"modules/requireTypes\" as rt",
                                                                                                  "method checker(ast) { rt.checker(ast) }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// ** Helpers ***************************************************",
                                                                                                  "",
                                                                                                  "// The frame rate of the drawing.",
                                                                                                  "def frameRate: Number = 30",
                                                                                                  "",
                                                                                                  "// A random number from m to n, inclusive.",
                                                                                                  "method randomNumberFrom (m: Number) to (n: Number) -> Number {",
                                                                                                  "    ((n - m) * math.random) + m",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A random integer from m to n, inclusive.",
                                                                                                  "method randomIntFrom (m: Number) to (n: Number) -> Number {",
                                                                                                  "    (((n - m + 1) * math.random).truncated % (n - m + 1)) + m",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A rough approximation of the value of pi.",
                                                                                                  "def pi: Number is public = π",
                                                                                                  "",
                                                                                                  "type Foreign = Unknown",
                                                                                                  "",
                                                                                                  "def document: Foreign = dom.document",
                                                                                                  "",
                                                                                                  "// Types of blocks representing functions taking an argument of type T",
                                                                                                  "// and returning a value of type R",
                                                                                                  "type Function<T, R> = prelude.Block1<T,R>",
                                                                                                  "",
                                                                                                  "// Types of blocks representing functions taking two arguments of type T and U",
                                                                                                  "// and returning a value of type R",
                                                                                                  "type Function2<T, U, R> = prelude.Block2<T, U, R>",
                                                                                                  "",
                                                                                                  "// Type of block taking argument of type T and returning Done",
                                                                                                  "type Procedure<T> = prelude.Block1<T,Done>",
                                                                                                  "",
                                                                                                  "// ** Types ********************************************************************",
                                                                                                  "",
                                                                                                  "// The super-type of all components in a GUI.",
                                                                                                  "type Component = {",
                                                                                                  "",
                                                                                                  "    // The underlying DOM element of the component.",
                                                                                                  "    element",
                                                                                                  "",
                                                                                                  "    // The width of this component.",
                                                                                                  "    width -> Number",
                                                                                                  "",
                                                                                                  "    // The height of this component.",
                                                                                                  "    height -> Number",
                                                                                                  "",
                                                                                                  "    // The size (width, height) of this component",
                                                                                                  "    size -> Point",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse click (press and release) in this component with the",
                                                                                                  "    // given event.",
                                                                                                  "    onMouseClickDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse press in this component with the response f.",
                                                                                                  "    onMousePressDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse release in this component with the response f.",
                                                                                                  "    onMouseReleaseDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse move in this component with the response f.",
                                                                                                  "    onMouseMoveDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse drag (move during press) in this component with the",
                                                                                                  "    // response f.",
                                                                                                  "    onMouseDragDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse entering this component with the response f.",
                                                                                                  "    onMouseEnterDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse exiting this component with the response f.",
                                                                                                  "    onMouseExitDo (f: MouseResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a key type (press and release) in this component with the response f.",
                                                                                                  "    onKeyTypeDo (f: KeyResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a key press in this component with the response f.",
                                                                                                  "    onKeyPressDo (f: KeyResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a key release in this component with the response f.",
                                                                                                  "    onKeyReleaseDo (f: KeyResponse) -> Done",
                                                                                                  "",
                                                                                                  "    // Whether this component will dynamically fill up any empty space in the",
                                                                                                  "    // direction of its parent container.",
                                                                                                  "    isFlexible -> Boolean",
                                                                                                  "",
                                                                                                  "    // Set whether this component will dynamically fill up any empty space in the",
                                                                                                  "    // direction of its parent container.",
                                                                                                  "    flexible := (value: Boolean) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// The type of components that contain other components.",
                                                                                                  "type Container = Component & type {",
                                                                                                  "",
                                                                                                  "    // The number of components inside this container.",
                                                                                                  "    size -> Number",
                                                                                                  "",
                                                                                                  "    // Retrieve the component at the given index.",
                                                                                                  "    at (index: Number) -> Component",
                                                                                                  "",
                                                                                                  "    // Put the given component at the given index.",
                                                                                                  "    at (index: Number) put(component: Component) -> Done",
                                                                                                  "",
                                                                                                  "    // Add a component to the end of the container.",
                                                                                                  "    append (component: Component) -> Done",
                                                                                                  "",
                                                                                                  "    // Add a component to the start of the container.",
                                                                                                  "    prepend (component: Component) -> Done",
                                                                                                  "",
                                                                                                  "    // Perform an action for every component inside this container.",
                                                                                                  "    do (f: Procedure[[Component]]) -> Done",
                                                                                                  "",
                                                                                                  "    // Arrange the contents of this container along the horizontal axis.",
                                                                                                  "    // Components which exceed the width of the container will wrap around.",
                                                                                                  "    arrangeHorizontal -> Done",
                                                                                                  "",
                                                                                                  "    // Arrange the contents of this container along the vertical axis.",
                                                                                                  "    // Components which exceed the height of the container will wrap around.",
                                                                                                  "    arrangeVertical -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A standalone window which contains other components.",
                                                                                                  "type Application = Container & type {",
                                                                                                  "",
                                                                                                  "    // The title of the application window.",
                                                                                                  "    windowTitle -> String",
                                                                                                  "",
                                                                                                  "    // Set the title of the application window.",
                                                                                                  "    windowTitle:= (value: String) -> Done",
                                                                                                  "",
                                                                                                  "    // Create window with listeners for mouse enter and exit actions",
                                                                                                  "    startApplication -> Done",
                                                                                                  "",
                                                                                                  "    // Close the window",
                                                                                                  "    stopApplication -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Objects that can be drawn on a canvas and moved around.",
                                                                                                  "type Graphic = {",
                                                                                                  "",
                                                                                                  "    // The location of this object from the top-left corner of the screen.",
                                                                                                  "    location -> Point",
                                                                                                  "",
                                                                                                  "    // The horizontal location of this object from the top-left corner of the",
                                                                                                  "    // screen.",
                                                                                                  "    x -> Number",
                                                                                                  "",
                                                                                                  "    // The vertical location of this object from the top-left corner of the",
                                                                                                  "    // screen.",
                                                                                                  "    y -> Number",
                                                                                                  "",
                                                                                                  "    // Add this object to the given canvas.",
                                                                                                  "    addToCanvas (canvas: DrawingCanvas) -> Done",
                                                                                                  "",
                                                                                                  "    // Remove this object from its canvas.",
                                                                                                  "    removeFromCanvas -> Done",
                                                                                                  "",
                                                                                                  "    // Whether this object is currently set to be visible on the canvas.",
                                                                                                  "    isVisible -> Boolean",
                                                                                                  "",
                                                                                                  "    // Set whether this object is currently visible on the canvas.",
                                                                                                  "    visible:= (value: Boolean) -> Done",
                                                                                                  "",
                                                                                                  "    // Move this object to the given point on the canvas.",
                                                                                                  "    moveTo(location: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Move this object by the given distances on the canvas.",
                                                                                                  "    moveBy(dx: Number, dy: Number) -> Done",
                                                                                                  "",
                                                                                                  "    // Whether the given location is inside this object.",
                                                                                                  "    contains(location: Point) -> Boolean",
                                                                                                  "",
                                                                                                  "    // Whether any point in the given graphic is inside this object.",
                                                                                                  "    overlaps(graphic: Graphic2D) -> Boolean",
                                                                                                  "",
                                                                                                  "    // set the color of this object to c",
                                                                                                  "    color := (c: Color)->Done",
                                                                                                  "",
                                                                                                  "    // return the color of this object",
                                                                                                  "    color -> Color",
                                                                                                  "",
                                                                                                  "    // Send this object up one layer on the screen",
                                                                                                  "    sendForward -> Done",
                                                                                                  "",
                                                                                                  "    // send this object down one layer on the screen",
                                                                                                  "    sendBackward -> Done",
                                                                                                  "",
                                                                                                  "    // send this object to the top layer on the screen",
                                                                                                  "    sendToFront -> Done",
                                                                                                  "",
                                                                                                  "    // send this object to the bottom layer on the screen",
                                                                                                  "    sendToBack -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// DrawingCanvas holding graphic objects",
                                                                                                  "type DrawingCanvas = Component & type {",
                                                                                                  "",
                                                                                                  "    // redraws the canvas and its contents regularly as needed",
                                                                                                  "    startDrawing -> Done",
                                                                                                  "",
                                                                                                  "    // add d to canvas",
                                                                                                  "    add (d: Graphic)->Done",
                                                                                                  "",
                                                                                                  "    // remove d from canvas",
                                                                                                  "    remove (d: Graphic)->Done",
                                                                                                  "",
                                                                                                  "    // Inform canvas that it needs to be redrawn",
                                                                                                  "    notifyRedraw -> Done",
                                                                                                  "",
                                                                                                  "    // clear the canvas",
                                                                                                  "    clear -> Done",
                                                                                                  "",
                                                                                                  "    // Send d to top layer of graphics",
                                                                                                  "    sendToFront (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // send d to bottom layer of graphics",
                                                                                                  "    sendToBack (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // send d up one layer in graphics",
                                                                                                  "    sendForward (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // send d down one layer in graphics",
                                                                                                  "    sendBackward (d: Graphic) -> Done",
                                                                                                  "",
                                                                                                  "    // return the current dimensions of the canvas",
                                                                                                  "    width -> Number",
                                                                                                  "    height -> Number",
                                                                                                  "    size -> Point",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type of object that runs a graphical application that draws",
                                                                                                  "// objects on a canvas included in the window and responds to mouse actions",
                                                                                                  "type GraphicApplication = Application & type {",
                                                                                                  "    // canvas holds graphic objects on screen",
                                                                                                  "    canvas -> DrawingCanvas",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse click (press and release) in the canvas at the given",
                                                                                                  "    // point.",
                                                                                                  "    onMouseClick (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse press in the canvas at the given point.",
                                                                                                  "    onMousePress (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse release in the canvas at the given point.",
                                                                                                  "    onMouseRelease (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse move in the canvas at the given point.",
                                                                                                  "    onMouseMove (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse drag (move during press) in the canvas at the given",
                                                                                                  "    // point.",
                                                                                                  "    onMouseDrag (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse entering the canvas at the given point.",
                                                                                                  "    onMouseEnter (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to a mouse exiting the canvas at the given point.",
                                                                                                  "    onMouseExit (mouse: Point) -> Done",
                                                                                                  "",
                                                                                                  "    // must be invoked to create window and its contents as well as prepare the",
                                                                                                  "    // window to handle mouse events",
                                                                                                  "    startGraphics -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Two-dimensional objects that can also be resized",
                                                                                                  "type Graphic2D = Graphic & type {",
                                                                                                  "",
                                                                                                  "    // dimensions of object",
                                                                                                  "    width -> Number",
                                                                                                  "    height -> Number",
                                                                                                  "    size -> Point",
                                                                                                  "",
                                                                                                  "    // Change dimensions of object",
                                                                                                  "    size := (dimensions: Point) -> Done",
                                                                                                  "    width := (width: Number) -> Done",
                                                                                                  "    height := (height: Number) -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// One-dimensional objects",
                                                                                                  "type Line = Graphic & type {",
                                                                                                  "    // start and end of line",
                                                                                                  "    start -> Point",
                                                                                                  "    end -> Point",
                                                                                                  "",
                                                                                                  "    // set start and end of line",
                                                                                                  "    start := (start': Point) -> Done",
                                                                                                  "    end := (end': Point) -> Done",
                                                                                                  "    setEndPoints (start': Point, end': Point) -> Done",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Text that can be drawn on a canvas.",
                                                                                                  "type Text = Graphic & type {",
                                                                                                  "",
                                                                                                  "    // return the contents displayed in the item",
                                                                                                  "    contents -> String",
                                                                                                  "",
                                                                                                  "    // reset the contents displayed to be s",
                                                                                                  "    contents := (s: String) -> Done",
                                                                                                  "",
                                                                                                  "    // return width of text item (currently inaccurate)",
                                                                                                  "    width -> Number",
                                                                                                  "",
                                                                                                  "    // return size of the font used to display the contents",
                                                                                                  "    fontSize -> Number",
                                                                                                  "",
                                                                                                  "    // Set the size of the font used to display the contents",
                                                                                                  "    fontSize := (size: Number) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component of window that holds text",
                                                                                                  "type TextBox = Component & type {",
                                                                                                  "",
                                                                                                  "    // The text contents of the box.",
                                                                                                  "    contents -> String",
                                                                                                  "    contents:= (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component of window that holds text",
                                                                                                  "type Labeled = Component & type {",
                                                                                                  "",
                                                                                                  "    // The label name.",
                                                                                                  "    label -> String",
                                                                                                  "    label:= (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// type of button component in window",
                                                                                                  "type Button = Labeled",
                                                                                                  "",
                                                                                                  "// Component that can take input and respond to an event",
                                                                                                  "type Input = Labeled & type {",
                                                                                                  "",
                                                                                                  "    // Respond to this input gaining focus with the given event.",
                                                                                                  "    onFocusDo(f: Response) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to this input losing focus with the given event.",
                                                                                                  "    onBlurDo(f: Response) -> Done",
                                                                                                  "",
                                                                                                  "    // Respond to this input having its value changed.",
                                                                                                  "    onChangeDo(f: Response) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component in window taking user text input",
                                                                                                  "type TextField = Input & type {",
                                                                                                  "",
                                                                                                  "    // The contents of the text field.",
                                                                                                  "    text -> String",
                                                                                                  "    text := (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Component in window taking user numeric input",
                                                                                                  "type NumberField = Input & type {",
                                                                                                  "",
                                                                                                  "    // The contents of the number field.",
                                                                                                  "    number -> Number",
                                                                                                  "    number := (value: Number) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type for pop-up menus",
                                                                                                  "type Choice = Input & type {",
                                                                                                  "",
                                                                                                  "    // The currently selected option.",
                                                                                                  "    selected -> String",
                                                                                                  "    selected := (value: String) -> Done",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// ** Colors *******************************************************************",
                                                                                                  "type Color = {",
                                                                                                  "    red -> Number     // The red component of the color.",
                                                                                                  "    green -> Number   // The green component of the color.",
                                                                                                  "    blue -> Number    // The blue component of the color.",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "type ColorFactory = {",
                                                                                                  "    r (r': Number) g (g': Number) b (b': Number) -> Color",
                                                                                                  "    random -> Color",
                                                                                                  "    white -> Color",
                                                                                                  "    black -> Color",
                                                                                                  "    green -> Color",
                                                                                                  "    red -> Color",
                                                                                                  "    gray -> Color",
                                                                                                  "    blue -> Color",
                                                                                                  "    cyan -> Color",
                                                                                                  "    magenta -> Color",
                                                                                                  "    yellow -> Color",
                                                                                                  "    neutral -> Color",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Exception that may be thrown if the r, b, or g components",
                                                                                                  "// are not between 0 and 255 (inclusive)",
                                                                                                  "def ColorOutOfRange: prelude.ExceptionKind is public =",
                                                                                                  "    prelude.ProgrammingError.refine \"ColorOutOfRange\"",
                                                                                                  "",
                                                                                                  "// Simple color class",
                                                                                                  "def color is public = object {",
                                                                                                  "    class r (r': Number) g (g': Number) b (b': Number) -> Color {",
                                                                                                  "        // Creates a color with rgb coordinates r', g', and b'",
                                                                                                  "        if ((r' < 0) || (r' > 255)) then {",
                                                                                                  "            ColorOutOfRange.raise \"red index {r'} out of bounds 0..255\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        if ((g' < 0) || (g' > 255)) then {",
                                                                                                  "            ColorOutOfRange.raise \"green index {g'} out of bounds 0..255\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        if ((b' < 0) || (b' > 255)) then {",
                                                                                                  "            ColorOutOfRange.raise \"blue index {b'} out of bounds 0..255\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        def red:Number is public = r'.truncated",
                                                                                                  "        def green:Number is public = g'.truncated",
                                                                                                  "        def blue:Number is public = b'.truncated",
                                                                                                  "",
                                                                                                  "        method == (c: Color) -> Boolean {",
                                                                                                  "             (red == c.red) && (green == c.green) && (blue == c.blue)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"color w/ rgb({red}, {green}, {blue})\"",
                                                                                                  "        }",
                                                                                                  "    }",
                                                                                                  "",
                                                                                                  "    method random -> Color {",
                                                                                                  "        // Produce a random color.",
                                                                                                  "        r (randomIntFrom (0) to (255))",
                                                                                                  "            g (randomIntFrom (0) to (255))",
                                                                                                  "            b (randomIntFrom (0) to (255))",
                                                                                                  "    }",
                                                                                                  "",
                                                                                                  "    def white:Color is public = r (255) g (255) b (255)",
                                                                                                  "    def black:Color is public = r (0) g (0) b (0)",
                                                                                                  "    def green:Color is public = r (0) g (255) b (0)",
                                                                                                  "    def red:Color is public = r (255) g (0) b (0)",
                                                                                                  "    def gray:Color is public = r (60) g (60) b (60)",
                                                                                                  "    def blue:Color is public = r (0) g (0) b (255)",
                                                                                                  "    def cyan:Color is public = r (0) g (255) b (255)",
                                                                                                  "    def magenta:Color is public = r (255) g (0) b (255)",
                                                                                                  "    def yellow:Color is public = r (255) g (255) b (0)",
                                                                                                  "    def neutral:Color is public = r (220) g (220) b (220)",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "//// Predefined colors.  Deprecated: use color.white, etc.",
                                                                                                  "//def white:Color is public = color.r (255) g (255) b (255)",
                                                                                                  "def black:Color is public = color.r (0) g (0) b (0)",
                                                                                                  "//def green:Color is public = color.r (0) g (255) b (0)",
                                                                                                  "//def red:Color is public = color.r (255) g (0) b (0)",
                                                                                                  "//def gray:Color is public = color.r (60) g (60) b (60)",
                                                                                                  "//def blue:Color is public = color.r (0) g (0) b (255)",
                                                                                                  "//def cyan:Color is public = color.r (0) g (255) b (255)",
                                                                                                  "//def magenta:Color is public = color.r (255) g (0) b (255)",
                                                                                                  "//def yellow:Color is public = color.r (255) g (255) b (0)",
                                                                                                  "//def neutral:Color is public = color.r (220) g (220) b (220)",
                                                                                                  "",
                                                                                                  "// A random color.  Deprecated: use color.random",
                                                                                                  "//method randomColor -> Color { color.random }",
                                                                                                  "",
                                                                                                  "// ** Events *******************************************************************",
                                                                                                  "",
                                                                                                  "// Generic event containing source of the event.",
                                                                                                  "type Event = {",
                                                                                                  "    source -> Component",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Mouse event containing mouse location when event generated",
                                                                                                  "type MouseEvent = Event & type {",
                                                                                                  "    at -> Point",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type of an event associated with a key press",
                                                                                                  "type KeyEvent = Event & type {",
                                                                                                  "    //character -> String",
                                                                                                  "    code -> Number",
                                                                                                  "    //modifiers -> Modifiers",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// type of an action taking an Event as a paramter",
                                                                                                  "type Response = Procedure[[Event]]",
                                                                                                  "",
                                                                                                  "// type of an action taking a MouseEvent as a parameter",
                                                                                                  "type MouseResponse = Procedure[[MouseEvent]]",
                                                                                                  "",
                                                                                                  "// type of an action taking a KeyEvent as a parameter",
                                                                                                  "type KeyResponse = Procedure[[KeyEvent]]",
                                                                                                  "",
                                                                                                  "class eventSource (source':Component) -> Event {",
                                                                                                  "    // Creates an event generated by source'",
                                                                                                  "",
                                                                                                  "    def source: Component is public = source'",
                                                                                                  "",
                                                                                                  "    method asString -> String {",
                                                                                                  "        \"Event on {source}\"",
                                                                                                  "    }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class mouseEventSource (source':Component) event (event':Foreign) -> MouseEvent {",
                                                                                                  "    // Creates a mouseEvent with the mouse location from event'",
                                                                                                  "",
                                                                                                  "    inherit eventSource (source')",
                                                                                                  "    def at: Point is public = (event'.pageX - source.element.offsetLeft) @",
                                                                                                  "        (event'.pageY - source.element.offsetTop)",
                                                                                                  "",
                                                                                                  "    // String representation of the mouse event",
                                                                                                  "    method asString -> String {",
                                                                                                  "        \"Mouse event on {source} at {at}\"",
                                                                                                  "    }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class keyEventSource (source':Component) event(event':Foreign) -> KeyEvent {",
                                                                                                  "    // Creates an event with the key-code from event'",
                                                                                                  "    inherit eventSource(source')",
                                                                                                  "    def code: Number is public = event'.which",
                                                                                                  "    //def character is public = dom.window.String.fromCharCode(event'.which)",
                                                                                                  "",
                                                                                                  "    // String representation of the key event",
                                                                                                  "    method asString -> String {",
                                                                                                  "        \"Event on {source} for key-code {code}\"",
                                                                                                  "    }",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// ** Internal factories *******************************************************",
                                                                                                  "",
                                                                                                  "// where T <: Component",
                                                                                                  "type ComponentFactory[[T]] = {",
                                                                                                  "",
                                                                                                  "    // Build a component around an existing element.",
                                                                                                  "    fromElement (element) -> T",
                                                                                                  "",
                                                                                                  "    // Build a component around a new element of the given tag name.",
                                                                                                  "    ofElementType (tagName: String) -> T",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "def maxClickTime: Number = 200",
                                                                                                  "// The maximum number of milliseconds for which the mouse-button can be held",
                                                                                                  "// down in order for the event to be registered as a click.",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class componentFromElement (element') -> Component {",
                                                                                                  "        def element is public = element'",
                                                                                                  "",
                                                                                                  "        // width of component",
                                                                                                  "        method width -> Number {",
                                                                                                  "            element.width",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // height of component",
                                                                                                  "        method height -> Number {",
                                                                                                  "            element.height",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // dimensions of component",
                                                                                                  "        method size -> Point {",
                                                                                                  "            print \"component is {element}\"",
                                                                                                  "            element.width @ element.height",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // assocate action f with event' on component",
                                                                                                  "        method on(event': String)",
                                                                                                  "              do(f: Procedure[[Foreign]]) -> Done is confidential {",
                                                                                                  "            element.addEventListener(event', f)",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method on (kind: String)",
                                                                                                  "              withPointDo (f:MouseResponse) -> Done is confidential {",
                                                                                                  "            // associate response f with mouse event of kind",
                                                                                                  "            on (kind) do { event' ->",
                                                                                                  "                f.apply (mouseEventSource (self) event (event'))",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method onMouseClickDo (f:MouseResponse) -> Done {",
                                                                                                  "            // associates action f with mouse click",
                                                                                                  "            var lastDown: Foreign",
                                                                                                  "",
                                                                                                  "            on \"mousedown\" do {event': Foreign ->",
                                                                                                  "                lastDown:= event'.timeStamp",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            on \"click\" do {event': Foreign ->",
                                                                                                  "                if ((event'.timeStamp - lastDown) <= maxClickTime) then {",
                                                                                                  "                    f.apply (mouseEventSource(self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse press event",
                                                                                                  "        method onMousePressDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mousedown\" withPointDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse release event",
                                                                                                  "        method onMouseReleaseDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseup\" withPointDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse move event",
                                                                                                  "        method onMouseMoveDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mousemove\" do { event' ->",
                                                                                                  "                if (if (dom.doesObject (event') haveProperty (\"buttons\")) then {",
                                                                                                  "                    event'.buttons == 0",
                                                                                                  "                } else {",
                                                                                                  "                    event'.which == 0",
                                                                                                  "                }) then {",
                                                                                                  "                    f.apply(mouseEventSource (self) event (event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse drag event",
                                                                                                  "        method onMouseDragDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mousemove\" do { event' ->",
                                                                                                  "                if (if (dom.doesObject (event') haveProperty (\"buttons\")) then {",
                                                                                                  "                    event'.buttons == 1",
                                                                                                  "                } else {",
                                                                                                  "                    event'.which == 1",
                                                                                                  "                }) then {",
                                                                                                  "                    f.apply(mouseEventSource (self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse enter (of window) event",
                                                                                                  "        method onMouseEnterDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseover\" do { event' ->",
                                                                                                  "                def from = event'.relatedTarget",
                                                                                                  "                if ((dom.noObject == from) || {!element.contains(from)}) then {",
                                                                                                  "                    f.apply (mouseEventSource (self) event (event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to mouse exit event",
                                                                                                  "        method onMouseExitDo (f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseout\" do {event' ->",
                                                                                                  "                def to = event'.relatedTarget",
                                                                                                  "",
                                                                                                  "                if ((dom.noObject == to) || {!element.contains (to)}) then {",
                                                                                                  "                    f.apply (mouseEventSource (self) event (event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        class keyEventSource (source':Component) event(event':Foreign) -> KeyEvent {",
                                                                                                  "            // Creates an event with the key-code from event'",
                                                                                                  "            inherit eventSource(source')",
                                                                                                  "            def code: Number is public = event'.which",
                                                                                                  "            //def character is public = dom.window.String.fromCharCode(event'.which)",
                                                                                                  "",
                                                                                                  "            // String representation of the key event",
                                                                                                  "            method asString -> String {",
                                                                                                  "                \"Event on {source} for key-code {code}\"",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to key event of kind",
                                                                                                  "        method on (kind: String)",
                                                                                                  "              withKeyDo (f: KeyResponse) -> Done is confidential {",
                                                                                                  "            on (kind) do {event' ->",
                                                                                                  "                f.apply (keyEventSource (self) event (event'))",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to key press event",
                                                                                                  "        method onKeyPressDo(f: KeyResponse) -> Done {",
                                                                                                  "            on \"keydown\" withKeyDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f to key release event",
                                                                                                  "        method onKeyReleaseDo (f: KeyResponse) -> Done {",
                                                                                                  "            on \"keyup\" withKeyDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate action f tokey type (press & release) event",
                                                                                                  "        method onKeyTypeDo (f: KeyResponse) -> Done {",
                                                                                                  "            on \"keypress\" withKeyDo (f)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Does component have some flex in size",
                                                                                                  "        method isFlexible -> Boolean {",
                                                                                                  "            element.style.flexGrow.asNumber > 0",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Set whether component is flexibile",
                                                                                                  "        method flexible:= (value: Boolean) -> Done {",
                                                                                                  "            element.style.flexGrow := if (value) then {",
                                                                                                  "                1",
                                                                                                  "            } else {",
                                                                                                  "                0",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of component",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a component\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class componentOfElementType (tagName:String) -> Component {",
                                                                                                  "        // Creates a component with type tagName",
                                                                                                  "",
                                                                                                  "        inherit componentFromElement (document.createElement (tagName))",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class containerOfElementType (tagName: String) -> Component {",
                                                                                                  "        inherit containerFromElement (document.createElement (tagName))",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create a new Component from element'",
                                                                                                  "class containerFromElement (element') -> Container {",
                                                                                                  "        inherit componentFromElement (element')",
                                                                                                  "",
                                                                                                  "        def children = []",
                                                                                                  "",
                                                                                                  "        // Number of children",
                                                                                                  "        method size -> Number {",
                                                                                                  "            children.size",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Is it empty?",
                                                                                                  "        method isEmpty -> Boolean {",
                                                                                                  "            size == 0",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Subcomponent at position index",
                                                                                                  "        method at (index: Number) -> Component {",
                                                                                                  "            if ((index < 1) || (index > size)) then {",
                                                                                                  "                collections.BoundsError.raiseForIndex (index)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            children.at (index)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Replace subcomponent at index by aComponent",
                                                                                                  "        method at (index: Number) put (aComponent: Component) -> Done {",
                                                                                                  "            if ((index < 1) || (index > (size + 1))) then {",
                                                                                                  "                BoundsError.raiseForIndex (index)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            if (index == (size + 1)) then {",
                                                                                                  "                element.appendChild (aComponent.element)",
                                                                                                  "            } else {",
                                                                                                  "                element.insertBefore (aComponent.element, children.at (index).element)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            children.at (index) put (aComponent)",
                                                                                                  "",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add aComponent after all existing components in the container",
                                                                                                  "        method append (aComponent: Component) -> Done {",
                                                                                                  "            element.appendChild (aComponent.element)",
                                                                                                  "",
                                                                                                  "            children.push (aComponent)",
                                                                                                  "",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add aComponent before all existing components in the container",
                                                                                                  "        method prepend (aComponent: Component) -> Done {",
                                                                                                  "            if (isEmpty) then {",
                                                                                                  "                element.appendChild (aComponent.element)",
                                                                                                  "            } else {",
                                                                                                  "                element.insertBefore (aComponent.element, element.firstChild)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            children.unshift (aComponent)",
                                                                                                  "",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Apply f to all children of container.",
                                                                                                  "        method do (f: Procedure[[Component]]) -> Done {",
                                                                                                  "            for (children) do {aComponent: Component ->",
                                                                                                  "                f.apply(aComponent)",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Generalize binary function f to apply to all children of container.",
                                                                                                  "        // Value if no children is initial",
                                                                                                  "        method fold[[T]](f: Function2[[T, Component, T]])",
                                                                                                  "              startingWith (initial: T) -> T {",
                                                                                                  "            var value: T:= initial",
                                                                                                  "",
                                                                                                  "            for (children) do {aComponent: Component ->",
                                                                                                  "                value:= f.apply (value, aComponent)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Make container more flexible",
                                                                                                  "        method flex -> Done is confidential {",
                                                                                                  "            element.style.display := \"inline-flex\"",
                                                                                                  "            element.style.justifyContent := \"center\"",
                                                                                                  "            element.style.flexFlow := \"row wrap\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Arrange elements in rows",
                                                                                                  "        method arrangeHorizontal -> Done {",
                                                                                                  "            flex",
                                                                                                  "            element.style.flexDirection:= \"row\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Arrange elements in columns",
                                                                                                  "        method arrangeVertical -> Done {",
                                                                                                  "            flex",
                                                                                                  "            element.style.flexDirection := \"column\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // return description of container",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"container: with {size} children\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create an empty container ready to add in row",
                                                                                                  "class emptyContainer -> Container {",
                                                                                                  "        inherit containerOfElementType (\"div\")",
                                                                                                  "",
                                                                                                  "        self.arrangeHorizontal",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Set empty container with given width' and height'",
                                                                                                  "class containerSize (width': Number, height': Number) -> Container {",
                                                                                                  "        inherit emptyContainer",
                                                                                                  "",
                                                                                                  "        self.element.style.width:= \"{width'}px\"",
                                                                                                  "        self.element.style.height:= \"{height'}px\"",
                                                                                                  "        self.element.style.overflow:= \"auto\"",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// A factory building components that take input",
                                                                                                  "class inputFromElement (element') -> Input {",
                                                                                                  "        inherit componentFromElement(element')",
                                                                                                  "",
                                                                                                  "        // Respond with action f to this input gaining focus with the given event.",
                                                                                                  "        method onFocusDo (f: Response) -> Done {",
                                                                                                  "            element.addEventListener (\"focus\", { _ ->",
                                                                                                  "                f.apply (eventSource (self))",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond with action f to this input losing focus with the given event.",
                                                                                                  "        method onBlurDo (f: Response) -> Done {",
                                                                                                  "            element.addEventListener(\"blur\", { _ ->",
                                                                                                  "                f.apply(eventSource(self))",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond with action f to this input having its value changed.",
                                                                                                  "        method onChangeDo (f: Response) -> Done {",
                                                                                                  "            element.addEventListener (\"change\", { _ ->",
                                                                                                  "                f.apply(eventSource(self))",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // return description of component",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"an input\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create component of type elementType to handle input",
                                                                                                  "class inputOfElementType(elementType: String) -> Input {",
                                                                                                  "        inherit inputFromElement (document.createElement (elementType))",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Create component of type inputType to handle input",
                                                                                                  "class inputOfType (inputType: String) -> Input {",
                                                                                                  "        inherit inputOfElementType(\"input\")",
                                                                                                  "",
                                                                                                  "        self.element.setAttribute (\"type\", inputType)",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class labeledWidgetFromElement (element') -> Labeled {",
                                                                                                  "        // create labeled input from element'",
                                                                                                  "",
                                                                                                  "        inherit inputFromElement (element')",
                                                                                                  "",
                                                                                                  "        var labeler:Foreign  // debug -- work around for selectBox",
                                                                                                  "",
                                                                                                  "        method labelElement -> Foreign is confidential {",
                                                                                                  "            self.element",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method label -> String {",
                                                                                                  "            // answers the Text of the label",
                                                                                                  "            labelElement.textContent",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method label:= (value: String) -> Done {",
                                                                                                  "            // sets the label to value",
                                                                                                  "            labelElement.textContent:= value",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            // a human-readable description of this object",
                                                                                                  "            \"an input labeled: {label}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class labeledWidgetOfElementType (elementType:String) -> Labeled {",
                                                                                                  "        // creates labeled input a new document of elementType",
                                                                                                  "",
                                                                                                  "        inherit labeledWidgetFromElement (document.createElement (elementType))",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class labeledWidgetOfElementType (elementType: String)",
                                                                                                  "          labeled(newLabel: String) -> Labeled {",
                                                                                                  "        // Create labeled element from elementType with newLabel",
                                                                                                  "",
                                                                                                  "        inherit labeledWidgetOfElementType(elementType)",
                                                                                                  "",
                                                                                                  "        // method to help get initialization code right in choice elements",
                                                                                                  "        method init -> Done is confidential {}",
                                                                                                  "        init",
                                                                                                  "",
                                                                                                  "        self.label := newLabel",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class fieldOfType(inputType: String) labeled(label': String) -> Input {",
                                                                                                  "        // Create input field of type inputType showing label'",
                                                                                                  "",
                                                                                                  "        inherit inputOfType(inputType)",
                                                                                                  "",
                                                                                                  "        // label on the field",
                                                                                                  "        method label -> String {",
                                                                                                  "            self.element.placeholder",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // reset the label on the field",
                                                                                                  "        method label:= (value: String) -> Done {",
                                                                                                  "            self.element.placeholder:= value",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representing the labeled field (including label)",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a field labeled: {label}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        label:= label'",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "// ** External factories *******************************************************",
                                                                                                  "",
                                                                                                  "// Log entry to keep take of response to an event",
                                                                                                  "class eventLogKind(kind': String)",
                                                                                                  "      response(response': Procedure) is confidential {",
                                                                                                  "    def kind: String is public = kind'",
                                                                                                  "    def response: Procedure is public = response'",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class applicationTitle(initialTitle: String)",
                                                                                                  "          size (dimensions': Point) -> Application {",
                                                                                                  "        // Create an application with window titled initialTitle and",
                                                                                                  "        // size dimensions'",
                                                                                                  "",
                                                                                                  "        inherit containerFromElement(document.createDocumentFragment)",
                                                                                                  "",
                                                                                                  "        var isOpened: Boolean:= false  // whether window is visible",
                                                                                                  "        var theWindow: Foreign",
                                                                                                  "",
                                                                                                  "        var theTitle: String:= initialTitle",
                                                                                                  "        var theWidth: Number:= dimensions'.x",
                                                                                                  "        var theHeight: Number:= dimensions'.y",
                                                                                                  "",
                                                                                                  "        def events = []",
                                                                                                  "",
                                                                                                  "        method element -> Foreign {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.document.body",
                                                                                                  "            } else {",
                                                                                                  "                super.element",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether new items are added to window from left to right or top to bottom",
                                                                                                  "        var isHorizontal: Boolean:= true",
                                                                                                  "",
                                                                                                  "        // Arrange the contents of this container along the horizontal axis.",
                                                                                                  "        // Components which exceed the width of the container will wrap around.",
                                                                                                  "        method arrangeHorizontal -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                super.arrangeHorizontal",
                                                                                                  "            } else {",
                                                                                                  "                isHorizontal:= true",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Arrange the contents of this container along the vertical axis.",
                                                                                                  "        // Components which exceed the height of the container will wrap around.",
                                                                                                  "        method arrangeVertical -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                super.arrangeVertical",
                                                                                                  "            } else {",
                                                                                                  "                isHorizontal:= false",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Associate response with event kind",
                                                                                                  "        method on (kind: String)",
                                                                                                  "              do (response: Procedure[[Event]]) -> Done is confidential {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.addEventListener (kind, response)",
                                                                                                  "            } else {",
                                                                                                  "                events.push (eventLogKind (kind) response (response))",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The title of the application window.",
                                                                                                  "        method windowTitle -> String {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.title",
                                                                                                  "            } else {",
                                                                                                  "                theTitle",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Set the title of the application window.",
                                                                                                  "        method windowTitle:= (value: String) -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.title:= value",
                                                                                                  "            } else {",
                                                                                                  "                theTitle:= value",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The current width of the window",
                                                                                                  "        method width -> Number {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.width",
                                                                                                  "            } else {",
                                                                                                  "                theWidth",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // the current height of the window",
                                                                                                  "        method height -> Number {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.height",
                                                                                                  "            } else {",
                                                                                                  "                theHeight",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The enter/exit events need to be redefined to account for the body element",
                                                                                                  "        // not necessarily accounting for all of the space in the window. If we only",
                                                                                                  "        // consider cases where relatedTarget is null, then it represents only enter",
                                                                                                  "        // and exit of the whole window.",
                                                                                                  "",
                                                                                                  "        // Respond to a mouse entering this window with the response f.",
                                                                                                  "        method onMouseEnterDo(f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseover\" do { event' ->",
                                                                                                  "                def from = event'.relatedTarget",
                                                                                                  "",
                                                                                                  "                if (dom.noObject == from) then {",
                                                                                                  "                    f.apply(mouseEventSource(self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond to a mouse exiting this window with the response f.",
                                                                                                  "        method onMouseExitDo(f: MouseResponse) -> Done {",
                                                                                                  "            on \"mouseout\" do { event' ->",
                                                                                                  "                def to = event'.relatedTarget",
                                                                                                  "",
                                                                                                  "                if (dom.noObject == to) then {",
                                                                                                  "                    f.apply(mouseEventSource(self) event(event'))",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Respond to mouse action of kind with response bl",
                                                                                                  "        method onMouse (kind: String) do (bl: MouseResponse) -> Done is confidential {",
                                                                                                  "            theWindow.addEventListener(kind, {evt ->",
                                                                                                  "                bl.apply(evt.pageX @ evt.pageY)",
                                                                                                  "            })",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Create window with listeners for mouse enter and exit actions",
                                                                                                  "        method startApplication -> Done {",
                                                                                                  "            if (!isOpened) then {",
                                                                                                  "                theWindow:= dom.window.open(\"\", \"\", \"width={theWidth},height={theHeight}\")",
                                                                                                  "                theWindow.document.title:= theTitle",
                                                                                                  "                theWindow.document.body.appendChild(element)",
                                                                                                  "",
                                                                                                  "                if (dom.doesObject(dom.window) haveProperty(\"graceRegisterWindow\")) then {",
                                                                                                  "                    dom.window.graceRegisterWindow(theWindow)",
                                                                                                  "                }",
                                                                                                  "",
                                                                                                  "                isOpened:= true",
                                                                                                  "",
                                                                                                  "                element.style.width:= \"100%\"",
                                                                                                  "                element.style.margin:= \"0px\"",
                                                                                                  "",
                                                                                                  "                if (isHorizontal) then {",
                                                                                                  "                    arrangeHorizontal",
                                                                                                  "                } else {",
                                                                                                  "                    arrangeVertical",
                                                                                                  "                }",
                                                                                                  "",
                                                                                                  "                for (events) do { anEvent ->",
                                                                                                  "                    on(anEvent.kind) do(anEvent.response)",
                                                                                                  "                }",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Close the window",
                                                                                                  "        method stopApplication  -> Done {",
                                                                                                  "            if (isOpened) then {",
                                                                                                  "                theWindow.close",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representing the application",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"application titled {windowTitle}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class drawingCanvasSize (dimensions': Point) -> DrawingCanvas {",
                                                                                                  "        // class representing a window panel that manages graphics on screen",
                                                                                                  "        // The window containing the canvas has dimensions width' x height'",
                                                                                                  "",
                                                                                                  "        inherit componentFromElement(document.createElement(\"canvas\"))",
                                                                                                  "",
                                                                                                  "        element.width:= dimensions'.x",
                                                                                                  "        element.height:= dimensions'.y",
                                                                                                  "        element.style.alignSelf:= \"center\"",
                                                                                                  "",
                                                                                                  "        def theContext: Foreign = element.getContext(\"2d\")",
                                                                                                  "        theContext.lineWidth:= 2",
                                                                                                  "",
                                                                                                  "        // Current width of the canvas",
                                                                                                  "        method width -> Number {",
                                                                                                  "            element.width",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Current height of the canvas",
                                                                                                  "        method height -> Number {",
                                                                                                  "            element.height",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method size -> Point {element.width @ element.height}",
                                                                                                  "",
                                                                                                  "        // list of all objects on canvas (hidden or not)",
                                                                                                  "        var theGraphics:= [ ] // emptyList",
                                                                                                  "",
                                                                                                  "        var redraw: Boolean:= false",
                                                                                                  "",
                                                                                                  "        // Inform canvas that it needs to be redrawn",
                                                                                                  "        method notifyRedraw -> Done {",
                                                                                                  "            redraw:= true",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // redraws the canvas and its contents regularly as needed",
                                                                                                  "        method startDrawing -> Done {",
                                                                                                  "            element.ownerDocument.defaultView.setInterval ({",
                                                                                                  "                if (redraw) then {",
                                                                                                  "                    dom.draw (theContext, theGraphics, width, height)",
                                                                                                  "                }",
                                                                                                  "            }, 1000 / frameRate)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // remove all items from canvas",
                                                                                                  "        method clear -> Done {",
                                                                                                  "            theGraphics:= []",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add new item d to canvas",
                                                                                                  "        method add (d:Graphic) -> Done {",
                                                                                                  "            theGraphics.push(d)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // remove aGraphic from items on canvas",
                                                                                                  "        method remove (aGraphic: Graphic) -> Done {",
                                                                                                  "            if (theGraphics.contains(aGraphic)) then {",
                                                                                                  "                theGraphics.remove (aGraphic)",
                                                                                                  "                notifyRedraw",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d to front/top layer of canvas",
                                                                                                  "        method sendToFront (aGraphic: Graphic) -> Done {",
                                                                                                  "            theGraphics.remove (aGraphic)",
                                                                                                  "            theGraphics.push (aGraphic)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d to back/bottom layer of canvas",
                                                                                                  "        method sendToBack (aGraphic: Graphic) -> Done {",
                                                                                                  "            theGraphics.remove (aGraphic)",
                                                                                                  "            theGraphics.unshift (aGraphic)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d one layer higher on canvas",
                                                                                                  "        method sendForward (aGraphic: Graphic) -> Done {",
                                                                                                  "            def theIndex = theGraphics.indexOf (aGraphic)",
                                                                                                  "",
                                                                                                  "            if (theIndex != theGraphics.size) then {",
                                                                                                  "                theGraphics.remove (aGraphic)",
                                                                                                  "                theGraphics.at (theIndex + 1) add (aGraphic)",
                                                                                                  "                notifyRedraw",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send item d one layer lower on canvas",
                                                                                                  "        method sendBackward (aGraphic: Graphic)->Done {",
                                                                                                  "            def theIndex = theGraphics.indexOf(aGraphic)",
                                                                                                  "",
                                                                                                  "            if (theIndex != 1) then {",
                                                                                                  "                theGraphics.remove (aGraphic)",
                                                                                                  "                theGraphics.at (theIndex - 1) add (aGraphic)",
                                                                                                  "                notifyRedraw",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // debug method to print all objects on canvas",
                                                                                                  "        method printObjects -> Done {",
                                                                                                  "            for (theGraphics) do { aGraphic ->",
                                                                                                  "                print (aGraphic)",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of canvas",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"canvas: with {theGraphics.size} objects\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class graphicApplicationSize (theDimension':Point) -> GraphicApplication {",
                                                                                                  "        // Create window with dimensions theDimension', with canvas",
                                                                                                  "        // installed, and that responds to mouse actions",
                                                                                                  "",
                                                                                                  "        inherit applicationTitle (\"Simple graphics\") size (theDimension')",
                                                                                                  "",
                                                                                                  "        def canvas: DrawingCanvas is public = drawingCanvasSize (theDimension')",
                                                                                                  "",
                                                                                                  "        children.push (canvas)",
                                                                                                  "",
                                                                                                  "        def before: Container = emptyContainer",
                                                                                                  "        def after: Container = emptyContainer",
                                                                                                  "",
                                                                                                  "        arrangeVertical",
                                                                                                  "        element.appendChild (before.element)",
                                                                                                  "        element.appendChild (canvas.element)",
                                                                                                  "        element.appendChild (after.element)",
                                                                                                  "",
                                                                                                  "        // Add a component to the top of the window.",
                                                                                                  "        method prepend (aComponent: Component) -> Done {",
                                                                                                  "            before.prepend (aComponent)",
                                                                                                  "            children.unshift (aComponent)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add a component to the bottom of the window.",
                                                                                                  "        method append (aComponent: Component) -> Done {",
                                                                                                  "            after.append (aComponent)",
                                                                                                  "            children.push (aComponent)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The following methods are defind to be called in response to mouse",
                                                                                                  "        // actions.  They will be overridden in subclasses to provide appropriate",
                                                                                                  "        // behavior, as now they do nothing!",
                                                                                                  "        // Method to handle mouse click at pt",
                                                                                                  "        method onMouseClick (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse press at pt",
                                                                                                  "        method onMousePress (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse release at pt",
                                                                                                  "        method onMouseRelease (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse move at pt",
                                                                                                  "        method onMouseMove (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse drag at pt",
                                                                                                  "        method onMouseDrag (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse enter of canvas at pt",
                                                                                                  "        method onMouseEnter (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Method to handle mouse exit of canvas at pt",
                                                                                                  "        method onMouseExit (pt: Point) -> Done {}",
                                                                                                  "",
                                                                                                  "        // Create window and its contents as well as prepare the",
                                                                                                  "        // window to handle mouse events",
                                                                                                  "        method startGraphics -> Done {",
                                                                                                  "            def parentElement = document.createElement (\"div\")",
                                                                                                  "            parentElement.className := \"height-calculator\"",
                                                                                                  "            parentElement.style.width := \"{theDimension'.x}px\"",
                                                                                                  "            parentElement.appendChild (element.cloneNode (true))",
                                                                                                  "            document.body.appendChild (parentElement)",
                                                                                                  "            theHeight:= parentElement.offsetHeight",
                                                                                                  "            document.body.removeChild (parentElement)",
                                                                                                  "",
                                                                                                  "            startApplication",
                                                                                                  "            canvas.startDrawing",
                                                                                                  "",
                                                                                                  "            theWindow.document.documentElement.style.overflow := \"hidden\"",
                                                                                                  "",
                                                                                                  "            canvas.onMouseClickDo { event' ->",
                                                                                                  "                onMouseClick (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMousePressDo { event' ->",
                                                                                                  "                onMousePress (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseReleaseDo { event' ->",
                                                                                                  "                onMouseRelease (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseMoveDo { event' ->",
                                                                                                  "                onMouseMove (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseDragDo { event' ->",
                                                                                                  "                onMouseDrag (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseEnterDo { event' ->",
                                                                                                  "                onMouseEnter (event'.at)",
                                                                                                  "            }",
                                                                                                  "",
                                                                                                  "            canvas.onMouseExitDo { event' ->",
                                                                                                  "                onMouseExit (event'.at)",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"graphic application of {canvas}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class drawableAt (location':Point) on (canvas':DrawingCanvas) -> Graphic {",
                                                                                                  "        // abstract superclass for drawable objects (of type Graphic)",
                                                                                                  "",
                                                                                                  "        // location of object on screen",
                                                                                                  "        var location: Point is readable:= location'",
                                                                                                  "",
                                                                                                  "        // x coordinate of object",
                                                                                                  "        method x -> Number {",
                                                                                                  "            location.x",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // y coordinate of object",
                                                                                                  "        method y -> Number {",
                                                                                                  "            location.y",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method == (other) {",
                                                                                                  "            // Object identity.",
                                                                                                  "            // This doesn't seem right to apb, but it's what the rest of the code assumes.",
                                                                                                  "            self.isMe(other)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // The canvas this object is part of",
                                                                                                  "        var canvas: DrawingCanvas := canvas'",
                                                                                                  "",
                                                                                                  "        // the color of this object",
                                                                                                  "        var theColor: Color:= black",
                                                                                                  "",
                                                                                                  "        method color -> Color {theColor}",
                                                                                                  "",
                                                                                                  "        method color:= (newColor: Color) -> Done {",
                                                                                                  "            theColor:= newColor",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        var theFrameColor: Color := black",
                                                                                                  "",
                                                                                                  "        method frameColor -> Color { theFrameColor }",
                                                                                                  "        method frameColor := (newfColor:Color) -> Done {",
                                                                                                  "            theFrameColor:= newfColor",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Determine if object is shown on screen",
                                                                                                  "        var isVisible: Boolean is readable := true",
                                                                                                  "",
                                                                                                  "        // Set whether object is visible or hidden",
                                                                                                  "        method visible := (b:Boolean) -> Done {",
                                                                                                  "            isVisible := b",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Add this object to canvas c",
                                                                                                  "        method addToCanvas (c: DrawingCanvas) -> Done {",
                                                                                                  "            removeFromCanvas",
                                                                                                  "            canvas := c",
                                                                                                  "            c.add (self)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Remove this object from its canvas",
                                                                                                  "        method removeFromCanvas -> Done {",
                                                                                                  "            canvas.remove (self)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // move this object to newLocn",
                                                                                                  "        method moveTo (newLocn: Point) -> Done{",
                                                                                                  "            location := newLocn",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // move this object dx to the right and dy down",
                                                                                                  "        method moveBy (dx: Number, dy: Number) -> Done {",
                                                                                                  "            location := location + (dx @ dy)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Determine whether this object contains the point at locn",
                                                                                                  "        method contains (locn: Point) -> Boolean {",
                                                                                                  "            SubobjectResponsibility.raise \"contains not implemented for {self}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Determine whether this object overlaps otherObject",
                                                                                                  "        method overlaps (otherObject: Graphic2D) -> Boolean {",
                                                                                                  "            SubobjectResponsibility.raise \"overlaps not implemented for {self}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Send this object up one layer on the screen",
                                                                                                  "        method sendForward -> Done {",
                                                                                                  "            canvas.sendForward (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send this object down one layer on the screen",
                                                                                                  "        method sendBackward -> Done {",
                                                                                                  "            canvas.sendBackward (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send this object to the top layer on the screen",
                                                                                                  "        method sendToFront -> Done {",
                                                                                                  "            canvas.sendToFront (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // send this object to the bottom layer on the screen",
                                                                                                  "        method sendToBack -> Done {",
                                                                                                  "            canvas.sendToBack (self)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Tell the canvas that the screen needs to be repainted",
                                                                                                  "        method notifyRedraw -> Done is confidential {",
                                                                                                  "            canvas.notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Draw this object on the applet !! confidential",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            SubobjectResponsibility.raise \"draw not implemented for {self}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return a string representation of the object",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"Graphic object\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class drawable2DAt (location': Point)",
                                                                                                  "          size (dimension': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // abstract class for two-dimensional objects",
                                                                                                  "",
                                                                                                  "        inherit drawableAt (location') on (canvas')",
                                                                                                  "        var theWidth: Number:= dimension'.x",
                                                                                                  "",
                                                                                                  "        // Width of the object",
                                                                                                  "        method width -> Number {theWidth}",
                                                                                                  "        var theHeight: Number:= dimension'.y",
                                                                                                  "",
                                                                                                  "        // Height of the object",
                                                                                                  "        method height -> Number {theHeight}",
                                                                                                  "",
                                                                                                  "        method size -> Point {theWidth @ theHeight}",
                                                                                                  "",
                                                                                                  "        // whether the object contains locn",
                                                                                                  "        // Only checks whether is in the bounding box of the object!!",
                                                                                                  "        method contains(locn:Point)->Boolean{",
                                                                                                  "            (x <= locn.x) && (locn.x <= (x + width))",
                                                                                                  "                  && (y <= locn.y) && (locn.y <= (y + height))",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether bounding box of object overlaps bounding box of other",
                                                                                                  "        method overlaps (other:Graphic2D) -> Boolean {",
                                                                                                  "            def itemleft = other.x",
                                                                                                  "            def itemright = other.x + other.width",
                                                                                                  "            def itemtop = other.y",
                                                                                                  "            def itembottom = other.y + other.height",
                                                                                                  "            def disjoint: Boolean = ((x + width) < itemleft) || (itemright < x)",
                                                                                                  "                  || ((y + height) < itemtop) || (itembottom < y)",
                                                                                                  "            !disjoint",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the object",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"drawable2D object at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class resizable2DAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // abstract class for 2 dimensional objects that can be resized.",
                                                                                                  "",
                                                                                                  "        inherit drawable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        // Reset width of object to w",
                                                                                                  "        method width:= (w: Number) -> Done {",
                                                                                                  "            theWidth := w",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset height of object to h",
                                                                                                  "        method height := (h: Number) -> Done {",
                                                                                                  "            theHeight := h",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset size of object to w x h",
                                                                                                  "        method size:= (dimensions: Point) -> Done {",
                                                                                                  "            width := dimensions.x",
                                                                                                  "            height := dimensions.y",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of object",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"Resizable2D object at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class framedRectAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate framed rectangle at (x',y') with size dimensions'",
                                                                                                  "        // created on canvas'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw the framed rectangle on the canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.strokeRect (x, y, width, height)",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return description of framed rectangle",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FramedRect at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class filledRectAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "",
                                                                                                  "        // class to generate filled rectangle at (x', y') with size width' x height'",
                                                                                                  "        // created on canvas'",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw filled rectangle on the canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fillRect (x, y, width, height)",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the filled rectangle",
                                                                                                  "        method asString -> String {",
                                                                                                  "            print \"called asString with {x},{y}\"",
                                                                                                  "            \"FilledRect at ({x}, {y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class framedOvalAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate framed oval at (x',y') with size width' x height'",
                                                                                                  "        // created on canvas'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // draw framed oval on canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            ctx.arc (0, 0, 1, 0, 2 * pi)",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle := \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.stroke",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of oval",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FramedOval at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class filledOvalAt (location': Point) size (dimensions': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate filled oval at (x',y') with size width' x height'",
                                                                                                  "        // created on canvas'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw filled oval on canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            ctx.arc (0, 0, 1, 0, 2*pi)",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fill",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // string representation of oval",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FilledOval at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class framedArcAt (location': Point) size (dimensions': Point)",
                                                                                                  "          from (startAngle: Number) to (endAngle: Number)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate framed arc at (x',y') with size width' x height'",
                                                                                                  "        // from startAngle radians to endAngle radians created on canvas'",
                                                                                                  "        // Note that angle 0 is in direction of positive x axis and increases in",
                                                                                                  "        // angles go clockwise.",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw framed arc",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            if (startAngle <= endAngle) then {",
                                                                                                  "                ctx.arc (0, 0, 1, (startAngle * pi) / 180, (endAngle * pi) / 180)",
                                                                                                  "            } else {",
                                                                                                  "                ctx.arc (0, 0, 1, (endAngle * pi) / 180, (startAngle * pi) / 180)",
                                                                                                  "            }",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.stroke",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representation of framed arc",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FramedArc at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color} going \"++",
                                                                                                  "                  \"from {startAngle} degrees to {endAngle} degrees\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class filledArcAt (location': Point) size (dimensions': Point)",
                                                                                                  "          from (startAngle: Number) to (endAngle: Number)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // class to generate filled arc at (x',y') with size width' x height'",
                                                                                                  "        // from startAngle degrees to endAngle degrees created on canvas'",
                                                                                                  "        // Note that angle 0 is in direction of positive x axis and increases in",
                                                                                                  "        // angles go clockwise.",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        // Draw filled arc on canvas",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.translate (x + width / 2, y + height / 2)",
                                                                                                  "            ctx.scale (width / 2, height / 2)",
                                                                                                  "            if (startAngle <= endAngle) then {",
                                                                                                  "                ctx.arc (0, 0, 1, (startAngle * pi) / 180, (endAngle * pi) / 180)",
                                                                                                  "            } else {",
                                                                                                  "                ctx.arc (0, 0, 1, (endAngle * pi) / 180, (startAngle * pi) / 180)",
                                                                                                  "            }",
                                                                                                  "            ctx.restore",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fill",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.closePath",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representation of filled arc",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"FilledArc at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, and color {self.color} going \"++",
                                                                                                  "                  \"from {startAngle} degrees to {endAngle} degrees\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "//type DrawableImageFactory = {",
                                                                                                  "    // type of factory for creating images on canvas",
                                                                                                  "",
                                                                                                  "    //at(location: Point) size (width: Number, height: Number)",
                                                                                                  "          //file(fileName: String) on (canvas: DrawingCanvas) -> Graphic2D",
                                                                                                  "",
                                                                                                  "  //  at (location: Point) dimensions (width: Number, height: Number)",
                                                                                                  "    //      url (url: String) on (canvas: DrawingCanvas) -> Graphic2D",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "//def drawableImage: DrawableImageFactory is public = object {",
                                                                                                  "",
                                                                                                  "//  class at(location': Point)   // doesn't work - can't find image?",
                                                                                                  "//      dimensions(width': Number, height': Number)",
                                                                                                  "//      file(fileName: String)",
                                                                                                  "//      on(canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "//    // class to generate an image on canvas' at location' with size width' x height'",
                                                                                                  "//    // The image is taken from the file fileName and must be in \"png\" format.",
                                                                                                  "//",
                                                                                                  "//    inherit resizable2D.at(location')dimensions(width',height')on(canvas')",
                                                                                                  "//",
                                                                                                  "//    if (!dom.window.graceHasFile(fileName)) then {",
                                                                                                  "//      NoSuchFile.raise \"The file '{fileName}' could not be found\"",
                                                                                                  "//    }",
                                                                                                  "//",
                                                                                                  "//    def theImage = dom.document.createElement(\"img\")",
                                                                                                  "//    theImage.src:= dom.window.graceReadFile(fileName)",
                                                                                                  "//",
                                                                                                  "//    method draw(ctx: Foreign) -> Done {",
                                                                                                  "//      ctx.drawImage(theImage, x, y, width, height)",
                                                                                                  "//    }",
                                                                                                  "//",
                                                                                                  "//    method asString -> String {",
                                                                                                  "//      \"DrawableImage at ({x},{y}) \"++",
                                                                                                  "//           \"with height {height}, width {width}, \"++",
                                                                                                  "//           \"from file {fileName}\"",
                                                                                                  "//    }",
                                                                                                  "//",
                                                                                                  "//    addToCanvas(canvas')",
                                                                                                  "//  }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class drawableImageAt (location': Point)",
                                                                                                  "          size (dimensions': Point)",
                                                                                                  "          url (url: String)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Graphic2D {",
                                                                                                  "        // Creates image from url and places on",
                                                                                                  "        // canvas' at location' with size width' x height'",
                                                                                                  "",
                                                                                                  "        inherit resizable2DAt (location') size (dimensions') on (canvas')",
                                                                                                  "",
                                                                                                  "        var theImage:= document.createElement(\"img\")",
                                                                                                  "        theImage.src:= url",
                                                                                                  "",
                                                                                                  "        theImage.addEventListener(\"load\", { _ ->",
                                                                                                  "            addToCanvas(canvas')",
                                                                                                  "        })",
                                                                                                  "",
                                                                                                  "        // draw the image",
                                                                                                  "        method draw(ctx: Foreign) -> Done {",
                                                                                                  "            ctx.drawImage(theImage, x, y, width, height)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of image",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"DrawableImage at ({x},{y}) \"++",
                                                                                                  "                  \"with height {height}, width {width}, \"++",
                                                                                                  "                  \"from url {url}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "// Type of factory for creating line segments",
                                                                                                  "//type LineFactory = {",
                                                                                                  "//",
                                                                                                  "//    from (start:Point) to (end:Point) on (canvas: DrawingCanvas) -> Line",
                                                                                                  "//    // Creates a line from start to end on canvas",
                                                                                                  "//",
                                                                                                  "//    from (pt:Point) length (len:Number) direction (radians:Number)",
                                                                                                  "//          on (canvas:DrawingCanvas) -> Line",
                                                                                                  "//    // Creates a line from pt, of length len, in direction radians, on canvas",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class lineFrom (start': Point) to (end': Point)",
                                                                                                  "          on (canvas': DrawingCanvas) -> Line {",
                                                                                                  "        // Create a line from start' to end' on canvas'",
                                                                                                  "        inherit drawableAt (start') on (canvas')",
                                                                                                  "",
                                                                                                  "        var theEnd: Point:= end'",
                                                                                                  "",
                                                                                                  "        method start -> Point {",
                                                                                                  "            // position of start of line",
                                                                                                  "",
                                                                                                  "            location",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method end -> Point {",
                                                                                                  "            // position of end of line",
                                                                                                  "",
                                                                                                  "            theEnd",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        addToCanvas (canvas')",
                                                                                                  "",
                                                                                                  "        method start := (newStart: Point) -> Done {",
                                                                                                  "            // set start of line",
                                                                                                  "",
                                                                                                  "            location := newStart",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method end := (newEnd: Point) -> Done {",
                                                                                                  "            // Set end of line",
                                                                                                  "",
                                                                                                  "            theEnd := newEnd",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method setEndPoints (newStart: Point,newEnd: Point) -> Done {",
                                                                                                  "            // Set start and end of line",
                                                                                                  "",
                                                                                                  "            start := newStart",
                                                                                                  "            end := newEnd",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "        method draw (ctx: Foreign) -> Done {",
                                                                                                  "            // Draw the line on the canvas",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.strokeStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.beginPath",
                                                                                                  "            ctx.moveTo (location.x, location.y)",
                                                                                                  "            ctx.lineTo (theEnd.x, theEnd.y)",
                                                                                                  "            ctx.stroke",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method moveBy (dx: Number, dy: Number) -> Done {",
                                                                                                  "            // Moves the line by (dx, dy)",
                                                                                                  "",
                                                                                                  "            location := location + (dx @ dy)  //.translate(dx,dy)",
                                                                                                  "            theEnd:= theEnd + (dx @ dy) //.translate(dx,dy)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method moveTo (newLocn:Point) -> Done {",
                                                                                                  "            // Moves this object to newLocn",
                                                                                                  "",
                                                                                                  "            def dx: Number = (newLocn - location).x",
                                                                                                  "            def dy: Number = (newLocn - location).y",
                                                                                                  "            location := newLocn",
                                                                                                  "            theEnd := theEnd + (dx @ dy)",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "        method dist2 (v: Point, w: Point) -> Number is confidential {",
                                                                                                  "            // answers the square of the distance between v and w",
                                                                                                  "            ((v.x - w.x) ^ 2) + ((v.y - w.y) ^ 2)",
                                                                                                  "",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method distToSegmentSquared (p: Point, v: Point, w: Point) -> Number",
                                                                                                  "              is confidential {",
                                                                                                  "            // returns the square of the distance between p and the line through v and w",
                                                                                                  "",
                                                                                                  "            var l2: Number:= dist2 (v, w)",
                                                                                                  "            if (l2 == 0) then {return dist2 (p, v)}",
                                                                                                  "            var t: Number:= ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2",
                                                                                                  "            if (t < 0) then {return dist2 (p, v)}",
                                                                                                  "            if (t > 1) then {return dist2 (p, w)}",
                                                                                                  "            dist2 (p, ( (v.x + t * (w.x - v.x)) @",
                                                                                                  "                  (v.y + t * (w.y - v.y) )))",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method distToSegment (p: Point, v: Point, w: Point) -> Number {",
                                                                                                  "            // Return the distance from p to the line through v and w",
                                                                                                  "            distToSegmentSquared (p, v, w).sqrt",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method contains(pt:Point) -> Boolean {",
                                                                                                  "            // Answers whether the line contains pt.  Returns true if pt is within",
                                                                                                  "            // 2 pixels of the line",
                                                                                                  "",
                                                                                                  "            def tolerance: Number = 2",
                                                                                                  "            distToSegment(pt,start,end) < tolerance",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            // Answers a string representation of this line",
                                                                                                  "            \"Line from {start} to {end} with color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class lineFrom (pt: Point) length (len: Number) direction (radians: Number)",
                                                                                                  "          on (canvas':DrawingCanvas) -> Line {",
                                                                                                  "        // Creates a line from pt that has length len, and in direction radians on canvas'",
                                                                                                  "",
                                                                                                  "      //  def endpt = pt + ((len * math.cos (radians)) @ (-len * math.sin (radians)))",
                                                                                                  "        inherit lineFrom (pt) to (pt + ((len * math.cos (radians)) @",
                                                                                                  "                                        (-len * math.sin (radians)))) on (canvas')",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class textAt (location': Point) with (contents': String)",
                                                                                                  "          on(canvas': DrawingCanvas) -> Text {",
                                                                                                  "        // class to generate text at location' on canvas' initially showing",
                                                                                                  "        // contents'",
                                                                                                  "        inherit drawableAt (location') on (canvas')",
                                                                                                  "",
                                                                                                  "        var theContents: String:= contents'",
                                                                                                  "        var fsize: Number is readable:= 10",
                                                                                                  "        var wid: Number := theContents.size * fsize / 2",
                                                                                                  "        // Return approximation of the width of the text",
                                                                                                  "        method width -> Number {",
                                                                                                  "            wid",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Draw the text",
                                                                                                  "        method draw(ctx: Foreign) -> Done {",
                                                                                                  "            def col = self.color",
                                                                                                  "            ctx.save",
                                                                                                  "            ctx.font:= \"{fontSize}pt sans-serif\"",
                                                                                                  "            ctx.fillStyle:= \"rgb({col.red}, {col.green}, {col.blue})\"",
                                                                                                  "            ctx.fillText (contents, location.x, location.y)",
                                                                                                  "            wid := ctx.measureText(theContents).width",
                                                                                                  "            ctx.restore",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return the string held in the text item (i.e., its contents)",
                                                                                                  "        method contents -> String {",
                                                                                                  "            theContents",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset the contents to newContents",
                                                                                                  "        method contents := (newContents: String) -> Done {",
                                                                                                  "            theContents := newContents",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset the font size to size'",
                                                                                                  "        method fontSize := (size': Number) -> Done {",
                                                                                                  "            fsize := size'",
                                                                                                  "            notifyRedraw",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return the size of the font",
                                                                                                  "        method fontSize -> Number {",
                                                                                                  "            fsize",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the text item",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"Text at ({x},{y}) with value {contents} and color {self.color}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        addToCanvas(canvas')",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class textBoxWith (contents': String) -> TextBox {",
                                                                                                  "        // Create a component in window that holds the string contents'",
                                                                                                  "        // It cannot respond to user actions",
                                                                                                  "",
                                                                                                  "        inherit componentOfElementType (\"span\")",
                                                                                                  "",
                                                                                                  "        method contents -> String {",
                                                                                                  "            // Return string contents of the text box",
                                                                                                  "            self.element.textContent",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method contents:= (value: String) -> Done {",
                                                                                                  "            // Reset the contents of the text box to value",
                                                                                                  "            self.element.textContent:= value",
                                                                                                  "            done",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Text representation of the text box",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a text box showing {contents}\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        contents:= contents'",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class buttonLabeled (label': String) -> Button {",
                                                                                                  "        // Creates a button with label'",
                                                                                                  "        inherit labeledWidgetOfElementType (\"button\") labeled (label')",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"a button labeled: {self.label}\"",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "//type FieldFactory = {",
                                                                                                  "//    // Type of object that generates text fields",
                                                                                                  "//    // Text fields can respond to user actions",
                                                                                                  "//",
                                                                                                  "//    labeled (label: String) -> Input",
                                                                                                  "//    // Generates text field with initial contents given by label",
                                                                                                  "//",
                                                                                                  "//    unlabeled -> Input",
                                                                                                  "//    // Generates text field with no initial contents",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class textFieldLabeled (label':String) -> TextField {",
                                                                                                  "        // Generates a text field with label'",
                                                                                                  "",
                                                                                                  "        inherit fieldOfType (\"text\") labeled (label')",
                                                                                                  "",
                                                                                                  "        method text -> String {",
                                                                                                  "            // answer the text",
                                                                                                  "            self.element.value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method text:= (value: String) -> Done {",
                                                                                                  "            // Updates the text",
                                                                                                  "            self.element.value:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the text field",
                                                                                                  "        method asString -> String {",
                                                                                                  "            if (self.label == \"\") then {",
                                                                                                  "                \"a text field with {text}\"",
                                                                                                  "            } else {",
                                                                                                  "                \"a text field labeled: {self.label} with {text}\"",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class textFieldUnlabeled -> TextField {",
                                                                                                  "        // Generates a text field without initial contents",
                                                                                                  "",
                                                                                                  "        inherit textFieldLabeled \"\"",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class passwordFieldLabeled (lab: String) -> Input {",
                                                                                                  "        // Generates password field with initial contents lab",
                                                                                                  "",
                                                                                                  "        inherit textFieldLabeled (lab)",
                                                                                                  "",
                                                                                                  "        self.element.setAttribute (\"type\", \"password\")",
                                                                                                  "",
                                                                                                  "        method asString -> String {",
                                                                                                  "            // Return string representation of password field",
                                                                                                  "            if (self.label == \"\") then {",
                                                                                                  "                \"a password field\"",
                                                                                                  "            } else {",
                                                                                                  "                \"a password field labeled: {self.label}\"",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "    // Generate an unlabeled password field",
                                                                                                  "class passwordFieldUnlabeled -> TextField {",
                                                                                                  "        inherit passwordFieldLabeled \"\"",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class numberFieldLabeled (label': String) -> NumberField {",
                                                                                                  "        // Generates a number field with initial contents label'",
                                                                                                  "",
                                                                                                  "        inherit fieldOfType(\"number\") labeled (label')",
                                                                                                  "",
                                                                                                  "        // Return the number in the field",
                                                                                                  "        method number -> Number {",
                                                                                                  "            self.element.value.asNumber",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // update the number in the field",
                                                                                                  "        method number:= (value: Number) -> Done {",
                                                                                                  "            self.element.value:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return description of the number field",
                                                                                                  "        method asString -> String {",
                                                                                                  "            if (self.label == \"\") then {",
                                                                                                  "                \"a number field holding {number}\"",
                                                                                                  "            } else {",
                                                                                                  "                \"a number field labeled: {self.label} holding {number}\"",
                                                                                                  "            }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class numberFieldUnlabeled -> NumberField {",
                                                                                                  "        // Creates an unlabeled number field",
                                                                                                  "        inherit numberFieldLabeled \"\"",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "//type ChoiceFactory = {",
                                                                                                  "//    // Type of factory to generate choice boxes (pop-up menus)",
                                                                                                  "//",
                                                                                                  "//    optionsFrom (options: Iterable[[String]]) -> Choice",
                                                                                                  "//    // Creates choice box with items from options;",
                                                                                                  "//    // initially shows first item in options",
                                                                                                  "//}",
                                                                                                  "",
                                                                                                  "class menuWithOptions(options:Iterable[[String]]) labeled (label':String)",
                                                                                                  "          -> Choice is confidential {",
                                                                                                  "        // Creates choice box with list of items from options; initially shows label'",
                                                                                                  "",
                                                                                                  "        inherit labeledWidgetOfElementType(\"select\") labeled(label')",
                                                                                                  "//        def labeler:Foreign",
                                                                                                  "        method init is override, confidential {",
                                                                                                  "            self.labeler := document.createElement(\"option\")",
                                                                                                  "            labeler.value:= \"\"",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        method labelElement -> Foreign {",
                                                                                                  "                labeler",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        self.element.appendChild(labeler)",
                                                                                                  "",
                                                                                                  "        for (options) do { name: String ->",
                                                                                                  "                def anOption: Foreign = document.createElement(\"option\")",
                                                                                                  "                anOption.value:= name",
                                                                                                  "                anOption.textContent:= name",
                                                                                                  "                self.element.appendChild(anOption)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return selected item in menu",
                                                                                                  "        method selected -> String {",
                                                                                                  "                self.element.value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Sets selected item in menu to value",
                                                                                                  "        method selected:= (value: String) -> Done {",
                                                                                                  "                self.element.value:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Return string representation of the menu",
                                                                                                  "        method asString -> String {",
                                                                                                  "                if (self.label == \"\") then {",
                                                                                                  "                    \"a pop-up menu\"",
                                                                                                  "                } else {",
                                                                                                  "                    \"a pop-up menu labeled: {self.label}\"",
                                                                                                  "                }",
                                                                                                  "        }",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "class menuWithOptions (options: Iterable[[String]]) -> Choice {",
                                                                                                  "        // Creates choice box with list of items from options",
                                                                                                  "        // Initially shows first item in options",
                                                                                                  "        inherit menuWithOptions (options) labeled \"\"",
                                                                                                  "        self.element.removeChild (self.labelElement)",
                                                                                                  "",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "type Audio = {",
                                                                                                  "    // An audio file that can be played",
                                                                                                  "",
                                                                                                  "    source -> String        // The source URL of the audio.",
                                                                                                  "    source:= (value: String) -> Done",
                                                                                                  "    play -> Done            // Play the audio.",
                                                                                                  "    pause -> Done           // Pause playing the audio.",
                                                                                                  "    isLooping -> Boolean    // does the audio loop back to the start?",
                                                                                                  "    looping:= (value: Boolean) -> Done  // determine whether the audio will loop",
                                                                                                  "    isEnded -> Boolean      // whether the audio has finished",
                                                                                                  "}",
                                                                                                  "",
                                                                                                  "",
                                                                                                  "class audioUrl(source': String) -> Audio {",
                                                                                                  "        // Creates an audio file from source', which is a web URL",
                                                                                                  "        def element = document.createElement(\"audio\")",
                                                                                                  "",
                                                                                                  "        element.src:= source'",
                                                                                                  "",
                                                                                                  "        if (dom.doesObject(dom.window) haveProperty(\"graceRegisterAudio\")) then {",
                                                                                                  "            dom.window.graceRegisterAudio(element)",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // URL of the audio file",
                                                                                                  "        method source -> String {",
                                                                                                  "            element.src",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Reset the source URL of the audio file",
                                                                                                  "        method source:= (value: String) -> Done {",
                                                                                                  "            element.src:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Play the audio.",
                                                                                                  "        method play -> Done {",
                                                                                                  "            element.play",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Pause the audio.",
                                                                                                  "        method pause -> Done {",
                                                                                                  "            element.pause",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether the audio will loop back to the start when it ends.",
                                                                                                  "        method isLooping -> Boolean {",
                                                                                                  "                  element.loop",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Set whether audio loops back to start when it end",
                                                                                                  "        method looping:= (value: Boolean) -> Done {",
                                                                                                  "            element.loop:= value",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // Whether the audio has finished playing.",
                                                                                                  "        method isEnded -> Boolean {",
                                                                                                  "            element.ended",
                                                                                                  "        }",
                                                                                                  "",
                                                                                                  "        // String representation of audio file",
                                                                                                  "        method asString -> String {",
                                                                                                  "            \"audio from {source}\"",
                                                                                                  "        }",
                                                                                                  "}" ];
                                                                                              }
                                                                                              if (typeof global !== "undefined")
                                                                                                global.gracecode_rtobjectdraw = gracecode_rtobjectdraw;
                                                                                              if (typeof window !== "undefined")
                                                                                                window.gracecode_rtobjectdraw = gracecode_rtobjectdraw;
